<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>til on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/til/</link>
    <description>Recent content in til on Nicola Iarocci</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Nov 2023 07:05:25 +0100</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use XmlWriter along with StringWriter to properly serialize a UTF-8 string</title>
      <link>https://nicolaiarocci.com/how-to-use-xmlwriter-along-with-stringwriter-to-properly-serialize-a-utf-8-string/</link>
      <pubDate>Thu, 09 Nov 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-use-xmlwriter-along-with-stringwriter-to-properly-serialize-a-utf-8-string/</guid>
      <description>Today, I (re)learned how to serialize an XML to a UTF-8 string. Like all the other times I did this, I got backstabbed by StringWriter, which only supports UTF-16. A simple code snippet like this:
await using var sw = new StringWriter(); await using var w = XmlWriter.Create(sw, new() { Async = true }); ... await w.FlushAsync(); return sw.ToString(); Will emit this output:
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-16&amp;#34;?&amp;gt;&amp;lt;... There&amp;rsquo;s nothing inherently wrong with UTF-16, but XML is usually UTF-8, so one must do something about it.</description>
    </item>
    <item>
      <title>LINQ DistinctBy on a property for .NET Standard and older .NET versions</title>
      <link>https://nicolaiarocci.com/linq-distinctby-on-a-property-for-dotnet-standard-and-old-dotnet-versions/</link>
      <pubDate>Wed, 25 Oct 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/linq-distinctby-on-a-property-for-dotnet-standard-and-old-dotnet-versions/</guid>
      <description>Today I learned how to implement a custom Enumerable.DistinctBy extension method that returns distinct elements from a sequence according to a specified key selector function.
.NET 6 and its successors have the method built in within LINQ, but I needed it in a .NET Standard 2.0 class library, so I was out of luck. My implementation is simple, not different from others I found online, and should also work fine with old .</description>
    </item>
    <item>
      <title>rsync with a different user</title>
      <link>https://nicolaiarocci.com/rsync-with-a-different-user/</link>
      <pubDate>Wed, 23 Aug 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/rsync-with-a-different-user/</guid>
      <description>Today I learned how to rsync with a user different than the one connected to the remote. Why would one want to do such a thing? The data I need to download from that server is owned by &amp;lsquo;backup,&amp;rsquo; a different, service-only user. I wanted to avoid going the change-permissions slippery route and allow my user direct access to the data.
Looking at the rsync documentation, I learned about the nifty --rsync-path=PROGRAM option:</description>
    </item>
    <item>
      <title>Homebrew and .NET 8 Preview don&#39;t like each other</title>
      <link>https://nicolaiarocci.com/homebrew-and-dotnet-8-preview-dont-like-each-other/</link>
      <pubDate>Tue, 13 Jun 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/homebrew-and-dotnet-8-preview-dont-like-each-other/</guid>
      <description>Today I learned that .NET 8 Preview could play better with Homebrew (or vice-versa). I&amp;rsquo;m working on a C# 12 presentation for our local developer meetup, and for that, I wanted .NET 8 Preview to run side by side with version 7 on my Mac. As version 7 was initially installed with Homebrew, I also wanted to install version 8 Preview with Homebrew, but that recipe was unavailable. Not perfectly happy with that, I fell back to the stand-alone installer, expecting problems.</description>
    </item>
    <item>
      <title>Python `decimal.getcontext` does not work with bpython</title>
      <link>https://nicolaiarocci.com/python-decimal.getcontext-does-not-work-with-bpython/</link>
      <pubDate>Tue, 06 Jun 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/python-decimal.getcontext-does-not-work-with-bpython/</guid>
      <description>I have been working on a side project for which I&amp;rsquo;m using bpython, a &amp;ldquo;fancy interface to the Python interpreter.&amp;rdquo; If you use the Python REPL often, you should check it out. It offers unique features like in-line syntax highlighting, readline-like autocomplete, a &amp;ldquo;rewind&amp;rdquo; function to pop the last line of code from memory, auto-indentation and more.
Anyway, today I found a bug in bpython, and that&amp;rsquo;s that Python&amp;rsquo;s decimal.getcontext() does not work with it.</description>
    </item>
    <item>
      <title>macOS networkQuality tool</title>
      <link>https://nicolaiarocci.com/macos-networkquality-tool/</link>
      <pubDate>Mon, 15 May 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/macos-networkquality-tool/</guid>
      <description>Today I learned about a precious little macOS command line tool, networkQuality.
The networkQuality tool is a built-in tool released in macOS Monterey that can help diagnose network issues and measure network performance.
Usage:
networkQuality -v Example output:
==== SUMMARY ==== Uplink capacity: 44.448 Mbps (Accuracy: High) Downlink capacity: 162.135 Mbps (Accuracy: High) Responsiveness: Low (73 RPM) (Accuracy: High) Idle Latency: 50.125 milliseconds (Accuracy: High) Interface: en0 Uplink bytes transferred: 69.</description>
    </item>
    <item>
      <title>The real cost of interruption</title>
      <link>https://nicolaiarocci.com/the-real-cost-of-interruption/</link>
      <pubDate>Fri, 07 Apr 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/the-real-cost-of-interruption/</guid>
      <description>I&amp;rsquo;m just back from reading Programmer Interrupted: The Real Cost of Interruption and Context Switching, an interesting short piece in which I learned about at least two new things.
First, The Parable of the Two Watchmakers, introduced by Nobel Prize winner Herbert Simon, describes the complex relationship between sub-systems and their larger wholes. In the context of the article, it helps explain, even for non-programmers, the cost of an interruption. It also hints at a possible mitigation technique:</description>
    </item>
    <item>
      <title>Hand dryers</title>
      <link>https://nicolaiarocci.com/hand-dryers/</link>
      <pubDate>Tue, 28 Feb 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/hand-dryers/</guid>
      <description>via
Subscribe to the newsletter, the RSS feed, or follow me on Mastodon</description>
    </item>
    <item>
      <title>Awesome psql tips</title>
      <link>https://nicolaiarocci.com/awesome-psql-tips/</link>
      <pubDate>Thu, 23 Feb 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/awesome-psql-tips/</guid>
      <description>Today I learned about psql-tips.org by LÃ¦titia Avrot, an excellent repository of psql (the CLI tool, not the database itself) tips. I like how one randomized tip is playfully served on the home page while the complete list is always at hand.
Subscribe to the newsletter, the RSS feed, or follow me on Mastodon</description>
    </item>
    <item>
      <title>Making the latest C# language features available in older .NET versions</title>
      <link>https://nicolaiarocci.com/making-the-latest-csharp-language-features-available-in-older-dotnet-versions/</link>
      <pubDate>Sat, 04 Feb 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/making-the-latest-csharp-language-features-available-in-older-dotnet-versions/</guid>
      <description>In a C# library I&amp;rsquo;ve been working on, I wanted to use C# 9.0&amp;rsquo;s init keyword. Quoting the documentation:
The init keyword defines an accessor method in a property or indexer. An init-only setter assigns a value to the property or the indexer element only during object construction. This enforces immutability so that once the object is initialized, it can&amp;rsquo;t be changed again.
Consider the following class:
public class Person { public string FirstName { get; init; } } You can initialize it like this:</description>
    </item>
    <item>
      <title>On implementing the ASP.NET Core 7 rate-limiting middleware</title>
      <link>https://nicolaiarocci.com/on-implementing-the-asp.net-core-7-rate-limiting-middleware/</link>
      <pubDate>Fri, 23 Dec 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/on-implementing-the-asp.net-core-7-rate-limiting-middleware/</guid>
      <description>Today, my last self-assigned duty before the Christmas break was to migrate our in-house rate-limiting implementation (based on the AspNetCoreRateLimiting third-party package) to the new, shiny rate-limiting middleware introduced by ASP.NET Core 7. While the process was relatively straightforward, I stumbled upon a few quirks I want to annotate here.
Our use case is simple. We use what the ASP.NET Core 7 documentation defines as a &amp;ldquo;fixed window limiter.&amp;rdquo; It uses a specified time window to limit requests.</description>
    </item>
    <item>
      <title>Brazilian Ju-Jitsu and me</title>
      <link>https://nicolaiarocci.com/brazilian-ju-jitsu-and-me/</link>
      <pubDate>Thu, 27 Oct 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/brazilian-ju-jitsu-and-me/</guid>
      <description>I attended my first BJJ class a little more than a month ago. Going into it, I was hesitant. After many years doing what most people today call calisthenics, I wanted to try something new and challenging. But would it be appropriate for me to get into martial arts at the age of fifty-two? When I discovered that we have a branch of the renowned Roger Gracie Academy here in my hometown, I thought it was time to find out.</description>
    </item>
    <item>
      <title>How to avoid unwanted calls on iPhone</title>
      <link>https://nicolaiarocci.com/how-to-avoid-unwanted-calls-on-iphone/</link>
      <pubDate>Thu, 20 Oct 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-avoid-unwanted-calls-on-iphone/</guid>
      <description>Oh, joy. After many years with an iPhone, today I learned how to stop spam calls with a single, not-really-super-secret move.
Settings &amp;gt; Phone &amp;gt; Silence Unknown Callers That&amp;rsquo;s it. Unknown callers now go straight to my recent calls list for me to (eventually) review. Most importantly, the phone doesn&amp;rsquo;t ring.
I initially had True Caller installed and enabled, which worked for a while. Spammers use throw-away numbers anyway, so it&amp;rsquo;s super-hard for tools like that to keep track.</description>
    </item>
    <item>
      <title>The Docker Event Monitor</title>
      <link>https://nicolaiarocci.com/the-docker-event-monitor/</link>
      <pubDate>Thu, 08 Sep 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/the-docker-event-monitor/</guid>
      <description>How to get alerted when a docker container goes down, or (many) other things happen to it</description>
    </item>
    <item>
      <title>How to copy a file&#39;s path in macOS Finder</title>
      <link>https://nicolaiarocci.com/how-to-copy-a-files-path-in-macos-finder/</link>
      <pubDate>Mon, 04 Apr 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-copy-a-files-path-in-macos-finder/</guid>
      <description>No matter how long I&amp;rsquo;ve possessed a Mac and how hard I try, there will always be a helpful keyboard shortcut hidden somewhere that I don&amp;rsquo;t know about.
Today I learned about holding the Option key while clicking on the Copy command in Finder. It activates the super-useful (and super-secret) &amp;ldquo;copy as pathname&amp;rdquo; feature.
I spotted this trick on Jamie Smith&amp;rsquo;s website, where other handy shortcuts (and the pretty gif above) reside.</description>
    </item>
    <item>
      <title>The curious origins of Bluetooth&#39;s name</title>
      <link>https://nicolaiarocci.com/the-curious-origins-of-bluetooths-name/</link>
      <pubDate>Wed, 09 Feb 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/the-curious-origins-of-bluetooths-name/</guid>
      <description>When Giulia came home from school today, she was anxious to tell me what she learned about a Viking King and his legacy. She told me the story of King Harald Gormsson, who ruled Denmark and Norway from c. 958 to c. 986. Harald is mainly known for introducing Christianity to Denmark and consolidating his rule over most Jutland and Zealand. However, what sparked my interest is that Harald was nicknamed &amp;ldquo;Bluetooth&amp;rdquo;, and, in 1997, the Bluetooth wireless specification design was named after him.</description>
    </item>
    <item>
      <title>Automatic deletion of older records in Postgres</title>
      <link>https://nicolaiarocci.com/automatic-deletion-of-older-records-in-postgres/</link>
      <pubDate>Sun, 16 Jan 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/automatic-deletion-of-older-records-in-postgres/</guid>
      <description>We have a Postgres cluster with a database for each user. Each database has a table that records events, and we want this table to only record the last 15 days.
If we were on MongoDB, we could use a capped collection, but we are in Postgres, which does not have equivalent functionality. In Postgres, you have to make do with something homemade. My first idea was to install a cron job in the system.</description>
    </item>
    <item>
      <title>Migrating a Windows 10 VM to Windows 11 in Parallels Desktop: a story of TPM chips and BIOS upgrades</title>
      <link>https://nicolaiarocci.com/migrating-a-windows-10-vm-to-windows-11-in-parallels-desktop-a-story-of-tpm-chips-and-bios-upgrades/</link>
      <pubDate>Sat, 11 Dec 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/migrating-a-windows-10-vm-to-windows-11-in-parallels-desktop-a-story-of-tpm-chips-and-bios-upgrades/</guid>
      <description>This weekend assignment was to upgrade a couple of old Windows 10 VMs to Windows 11 in Parallels Desktop 17. I couldn&amp;rsquo;t do that right away because Windows Update was complaining about the lack of the TPM chip. A little research revealed that TPM chips only work on UEFI BIOS. To check which BIOS version was being used in my VMs, I used the msinfo32 (System Information) application. It showed the BIOS to be of &amp;ldquo;Legacy&amp;rdquo; type.</description>
    </item>
    <item>
      <title>How to automatically pull and deploy updated Docker images</title>
      <link>https://nicolaiarocci.com/how-to-automatically-pull-and-deploy-updated-docker-images/</link>
      <pubDate>Sun, 21 Nov 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-automatically-pull-and-deploy-updated-docker-images/</guid>
      <description>We want our test and production stacks to be automatically updated every time something new is pushed to the test or release branch. CI builds the docker image on successful test runs, then stores it in our private registry. But how do you automatically pull and deploy those updated images?
I looked into the Watchtower project, which is interesting. You add Watchtower to the stack, and it will diligently check for new versions of the images used by the containers in the stack, pulling, building and deploying as needed while the stack is up and running.</description>
    </item>
    <item>
      <title>Learn in public</title>
      <link>https://nicolaiarocci.com/learn-in-public/</link>
      <pubDate>Tue, 16 Nov 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/learn-in-public/</guid>
      <description>Today I searched the internet for something, and the first result I got from @duckduckgo was a note I wrote months ago to my future self; how meta is that.
Learn in public, it gives superpowers1. Also, in recent years, adopting POSSE was the best thing I did for my personal development.
Subscribe to the [newsletter][nl], the [RSS feed][rss], or follow @[nicolaiarocci][tw] on Twitter
I should do better. Post more TILs, for example.</description>
    </item>
    <item>
      <title>The American Style of quotation mark punctuation makes no sense</title>
      <link>https://nicolaiarocci.com/the-american-style-of-quotation-mark-punctuation-makes-no-sense/</link>
      <pubDate>Thu, 16 Sep 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/the-american-style-of-quotation-mark-punctuation-makes-no-sense/</guid>
      <description>Years ago, I translated an essay by Terry Windling, On Tolkien and Fairie-Stories, from American English to Italian. I remember arguing with the author about her use of periods in quotations. Each quotation would end with a period before the closing mark. I was puzzled. We don&amp;rsquo;t do that in Italy. More importantly, I read many English texts where the period was left outside the quotation itself. She insisted that her style was correct1.</description>
    </item>
    <item>
      <title>How to read Windows-1252 encoded files with .NETCore and .NET5&#43;</title>
      <link>https://nicolaiarocci.com/how-to-read-windows-1252-encoded-files-with-.netcore-and-.net5-/</link>
      <pubDate>Fri, 27 Aug 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-read-windows-1252-encoded-files-with-.netcore-and-.net5-/</guid>
      <description>Another day, another lesson learned: modern .NET does not support the Windows-1252 encoding out of the box. Today my colleague was happily porting a legacy NET4+ app to NET6. As usual, the port was super-easy; it would compile and run just fine, so he was surprised when the app crashed reading a few specific XML files. That&amp;rsquo;s when I was called in. A closer inspection revealed a pattern: all those crashing files were Windows 1252-encoded (the rest, a vast majority, were UTF-8.</description>
    </item>
    <item>
      <title>How to restore a single Postgres database from a pg_dumpall dump</title>
      <link>https://nicolaiarocci.com/how-to-restore-a-single-postgres-database-from-a-pg_dumpall-dump/</link>
      <pubDate>Wed, 25 Aug 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-restore-a-single-postgres-database-from-a-pg_dumpall-dump/</guid>
      <description>Today I learned how to restore a single Postgres database from a global dump generated with pg_dumpall. Now, pg_dumpall is handy when you want to back up an entire Postgres cluster. It will dump all databases and global objects in a single text file. In contrast, pg_dump, the go-to tool for Postgres backups, offers more control but only works with a single database and doesn&amp;rsquo;t dump global objects, such as the roles/users linked to the database.</description>
    </item>
    <item>
      <title>How to remove a file from Git history</title>
      <link>https://nicolaiarocci.com/how-to-remove-a-file-from-git-history/</link>
      <pubDate>Fri, 30 Jul 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-remove-a-file-from-git-history/</guid>
      <description>Today I learned how to remove a file from a git repository while also cleaning it from the history. When you delete it with git rm or git rm --cached, tracks remain in the commit history (the reflog). That might not be a big deal, but if the file has sensitive contents that you want to disappear from version control entirely, then you also want it cleaned from the reflog. That&amp;rsquo;s when git filter-branch comes to the rescue.</description>
    </item>
    <item>
      <title>Yet Another Reason to Use DuckDuckGo</title>
      <link>https://nicolaiarocci.com/yet-another-reason-to-use-duckduckgo/</link>
      <pubDate>Fri, 16 Jul 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/yet-another-reason-to-use-duckduckgo/</guid>
      <description>I couldn&amp;rsquo;t recall a [tmux][5] command, so I quickly reached for my trusted default search engine DuckDuckGo. I typed &amp;ldquo;tmux cheat sheet&amp;rdquo; because, well, once I found an excellent one which I wanted to summon again. To my surprise, the [search result][1] included an in-page cheat sheetâa good one too.
It isn&amp;rsquo;t the first time that DuckDuckGo surprises me like that. Need a new GUID? [Search for it][2].
Need a quick QR code?</description>
    </item>
    <item>
      <title>Custom default values for not existing dictionary items (and a lesson learned)</title>
      <link>https://nicolaiarocci.com/custom-default-values-for-not-existing-dictionary-items-and-a-lesson-learned/</link>
      <pubDate>Fri, 11 Jun 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/custom-default-values-for-not-existing-dictionary-items-and-a-lesson-learned/</guid>
      <description>When dealing with dictionaries, a typical problem is when an operation attempts to retrieve an element using a key that does not exist in the dictionary. In .NET, a KeyNotFoundException is raised, and that&amp;rsquo;s the desired behaviour in most circumstances. Sometimes, however, you know that your program will frequently try to retrieve keys that do not exist. In such cases, it is more efficient to use the TryGetValue method:
This method returns the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter is returned (source)</description>
    </item>
    <item>
      <title>dotnet SmtpClient should not be used</title>
      <link>https://nicolaiarocci.com/dotnet-smtpclient-should-not-be-used/</link>
      <pubDate>Tue, 04 May 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/dotnet-smtpclient-should-not-be-used/</guid>
      <description>I am very late to the party, but today I learned that the good old dotnet SmptClient is considered obsolete and should not be used. Quoting the documentation:
We don&amp;rsquo;t recommend using the SmtpClient class for new development because SmtpClient doesn&amp;rsquo;t support many modern protocols. Use MailKit or other libraries instead. (source)
Interestingly, Microsoft is recommending a third-party open-source library as an alternative. I hope we&amp;rsquo;ll see more of that in the future.</description>
    </item>
    <item>
      <title>How to add an empty directory to a Git repository</title>
      <link>https://nicolaiarocci.com/how-to-add-an-empty-directory-to-a-git-repository/</link>
      <pubDate>Mon, 22 Mar 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-add-an-empty-directory-to-a-git-repository/</guid>
      <description>How do you add an empty directory to a Git repository? It&amp;rsquo;s a classic, and yet, I have to look it up every single time. Git does not support this out of the box:
Currently the design of the Git index (staging area) only permits files to be listed, and nobody competent enough to make the change to allow empty directories has cared enough about this situation to remedy it. Directories are added automatically when adding files inside them.</description>
    </item>
    <item>
      <title>Battling with SSH, cron jobs, and macOS Keyring</title>
      <link>https://nicolaiarocci.com/battling-with-ssh-cron-jobs-and-macos-keyring/</link>
      <pubDate>Wed, 17 Mar 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/battling-with-ssh-cron-jobs-and-macos-keyring/</guid>
      <description>So today, I was setting up a cronjob on my trusty MacBook Pro. The goal was to backup some folders from a remote Linux server via rsync. The script is simple. It goes something like this:
rsync -avz -e &amp;quot;ssh -i ~/.ssh/my_rsa_keyfile&amp;quot; myuser@myserver:remotedir/ ~/localdir/ Launched by hand, it works seamlessly. Call it from a cron job via crontab, and I get a permission denied error. I then enabled ssh -v option to gather a little intel on what was actually going on.</description>
    </item>
    <item>
      <title>How to Shrink a WSL2 Virtual Disk</title>
      <link>https://nicolaiarocci.com/how-to-shrink-a-wsl2-virtual-disk/</link>
      <pubDate>Fri, 12 Mar 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-shrink-a-wsl2-virtual-disk/</guid>
      <description>I discovered you can use the &amp;ldquo;diskpart&amp;rdquo; tool to compact a VHDX. This allows you to shrink a WSL2 virtual disk file, reclaiming disk space. It appeared to work for me without any data corruption, taking the file size down from 100GB to 15GB. (source)
I adore Parallels &amp;ldquo;reclaim disk space&amp;rdquo; feature. Just the other day, I got back 70GB off my Windows Guest in a breeze. I&amp;rsquo;m coming from VirtualBox, where reclaiming disk space is a significant pain.</description>
    </item>
    <item>
      <title>Cleaning Up Your Postgres Database</title>
      <link>https://nicolaiarocci.com/cleaning-up-your-postgres-database/</link>
      <pubDate>Tue, 09 Mar 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/cleaning-up-your-postgres-database/</guid>
      <description>I am an application/backend developer who has to quibble with databases more often than desired. I can get my way around Postgres pretty well, but I can always use a hint or two, especially when it comes to fine-tuning and performance.
I stumbled upon Cleaning Up Your Postgres Databases. It offers useful advice on spotting performance bottlenecks in your Postgres database. Take the cache and index hit queries, for example.</description>
    </item>
    <item>
      <title>How to increase upload file size in ASP.NET Core</title>
      <link>https://nicolaiarocci.com/how-to-increase-upload-file-size-in-asp.net-core/</link>
      <pubDate>Fri, 26 Feb 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/how-to-increase-upload-file-size-in-asp.net-core/</guid>
      <description>Today I learned the hard way that since ASP.NET Core 2.0, the request body has acquired a default size limit at 30MB (~28.6 MiB).
If the request body size exceeds the configured max request body size limit, the call to Request.Body.ReadAsync will throw an IOException. If this exception is uncaught, Kestrel will respond with a 413 Payload Too Large response and HttpSys will respond with a generic 500 Internal Server Error response (source).</description>
    </item>
  </channel>
</rss>
