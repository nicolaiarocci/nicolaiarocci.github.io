<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>formazione on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/formazione/</link>
    <description>Recent content in formazione on Nicola Iarocci</description>
    <generator>Hugo -- 0.121.1</generator>
    <language>en</language>
    <copyright>Produced / Written / Maintained by Nicola Iarocci since 2010</copyright>
    <lastBuildDate>Fri, 20 Jan 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/formazione/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Imparare a Programmare… Pensando da Informatico</title>
      <link>https://nicolaiarocci.com/imparare-a-programmare-e-pensare-da-informatico/</link>
      <pubDate>Fri, 20 Jan 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/imparare-a-programmare-e-pensare-da-informatico/</guid>
      <description>&lt;p&gt;Chi mi segue da tempo sa  che l’educazione è un argomento che mi sta particolarmente a cuore ed è forse per questo motivo che spesso le persone mi chiedono consigli su come imparare a programmare. Gli articoli più letti di questo sito sono senz’altro le guide alla programmazione; &lt;a href=&#34;http://nicolaiarocci.com/impara-python-in-10-minuti/&#34; title=&#34;Python in 10 minuti&#34;&gt;Impara Python in 10 minuti&lt;/a&gt; e la &lt;a href=&#34;http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/&#34; title=&#34;Introduzione alle Regular Expression&#34;&gt;serie sulle Regular Expression&lt;/a&gt; sono vere e proprie Hit, ma certo non sono adatte ai principianti. L’ultima mail è di pochi giorni fa: Mirko chiedeva qual’è il modo migliore per avvicinarsi all’affascinante mondo della programmazione.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Chi mi segue da tempo sa  che l’educazione è un argomento che mi sta particolarmente a cuore ed è forse per questo motivo che spesso le persone mi chiedono consigli su come imparare a programmare. Gli articoli più letti di questo sito sono senz’altro le guide alla programmazione; <a href="http://nicolaiarocci.com/impara-python-in-10-minuti/" title="Python in 10 minuti">Impara Python in 10 minuti</a> e la <a href="http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/" title="Introduzione alle Regular Expression">serie sulle Regular Expression</a> sono vere e proprie Hit, ma certo non sono adatte ai principianti. L’ultima mail è di pochi giorni fa: Mirko chiedeva qual’è il modo migliore per avvicinarsi all’affascinante mondo della programmazione.</p>
<p>Una domanda facile da formulare, che presuppone un’altrettanto facile risposta. Ahimè non é così semplice, perlomeno non nel mio caso. Certo, ci sono dozzine di fonti di ottima qualità, ma penso che per poter fornire un consiglio valido dovrei conoscere meglio chi pone la domanda. Il tuo background è scientifico o umanistico? Sai l’inglese? La gran parte delle fonti che consiglierei sono inglesi. Qual’è la tua età? Sono tanti i fattori da considerare, soprattutto se ci si impunta a voler rispondere con cura.</p>
<p>In tempi non troppo lontani programmare significava conoscere il funzionamento dei computer; comprendere a fondo la loro teoria e la loro struttura. Ora è tutto cambiato. Ormai <!-- raw HTML omitted -->Assembly<!-- raw HTML omitted --> e <!-- raw HTML omitted -->Linguaggio Macchina<!-- raw HTML omitted --> sono domini riservati a pochissimi super-specialisti; la gran parte dei programmatori più giovani li ha solo sentiti nominare. I <!-- raw HTML omitted -->linguaggi ad alto livello<!-- raw HTML omitted --> ci permettono di concentrarci sulla soluzione dei problemi (gli <!-- raw HTML omitted -->algoritmi<!-- raw HTML omitted -->) delegando al compilatore la creazione delle istruzioni di basso livello.</p>
<p>E’ una buona notizia. Per diventare programmatori non è indispensabile essere particolarmente dotati, né seguire chissà quali corsi accademici. Buona volontà, curiosità, passione e un pizzico di intraprendenza sono tutto quel che serve per buttarsi. Se son rose fioriranno, come si suol dire.</p>
<h2 id="img-classalignright-size-thumbnail-wp-image-4329-styleborder-style-initial-border-color-initial-border-image-initial-border-width-0px-titlepensare-da-informatico-versione-python-srcimagesgasp_lessons-150x150pngfit1502c150-altpensare-da-informatico-versione-python-srcsethttpi1wpcomnicolaiaroccicomwp-contentuploadsgasp_lessonspngresize1502c150-150w-httpi1wpcomnicolaiaroccicomwp-contentuploadsgasp_lessonspngw192-192w-sizesmax-width-150px-100vw-150px-data-recalc-dims1-pensare-da-informatico"><!-- raw HTML omitted -->Pensare da Informatico</h2>
<p>Se mi avete seguito fin qui grazie per la pazienza. Vi ricompenso con lo stesso consiglio che ho dato a Mirko l’altro giorno: Pensare da Informatico. Ma come direte, dopo tutte queste chiacchiere ci spiattelli un’altra astrattezza da quattro soldi? Al contrario! Sto parlando di un libro vero e proprio. <!-- raw HTML omitted -->Pensare da Informatico (Versione Python)<!-- raw HTML omitted --> è l’unico testo che mi sento di consigliare davvero ai principianti. E’ gratuito ed è ottimamente tradotto da Alessandro Pocaterra. L’edizione originale è giunta da poco alla <!-- raw HTML omitted -->terza edizione<!-- raw HTML omitted --> (novembre 2011), mentre credo che l’italiana sia ferma alla seconda, che va benissimo comunque.</p>
<p>Nella Prefazione <!-- raw HTML omitted -->Jeff Elkner<!-- raw HTML omitted --> racconta che era alla ricerca di un testo adatto all’insegnamento della programmazione nelle scuole americane. Il grande <!-- raw HTML omitted -->Richard Stallman<!-- raw HTML omitted --> gli consigliò di dare una occhiata a <em>How to Think Like a Computer Scientist:</em></p>
<blockquote>
<p>Quando lessi quel libro seppi immediatamente che volevo usarlo nelle mie lezioni. Era il testo di informatica più chiaro ed utile che avessi visto: il libro enfatizzava il processo di pensiero coinvolto nella programmazione piuttosto che le caratteristiche di un particolare linguaggio. Il solo fatto di leggerlo mi rese un insegnante migliore.</p>
</blockquote>
<p>Mica male come premessa no? Python è il inguaggio scelto dagli autori (e in proposito vi consiglio di leggere <!-- raw HTML omitted -->introduzione <!-- raw HTML omitted -->e <!-- raw HTML omitted -->prefazione<!-- raw HTML omitted -->) ma davvero non è il linguaggio quel che conta. Leggete questo testo con attenzione e soprattutto senza fretta. Non passate al capitolo successivo se non siete sicuri di aver afferrato per bene ciò che avete appena letto. Si procede passo per passo affrontando tutti i principali temi della programmazione moderna. Vi assicuro che alla fine di questa esperienza saprete programmare a dovere, a prescindere dai linguaggi che in futuro vorrete studiare (e magari nel frattempo vi innamorerete pure di Python).</p>
<p>Fatemi sapere come è andata. Ci tengo molto.</p>
<p><em>Aggiornamento del 9.3.2012. Ho scovato per caso una <!-- raw HTML omitted -->versione PDF<!-- raw HTML omitted -->, ben fatta, di Pensare da Informatico.</em></p>]]></content:encoded>
    </item>
    <item>
      <title>JavaScript come Primo Linguaggio</title>
      <link>https://nicolaiarocci.com/javascript-come-primo-linguaggio/</link>
      <pubDate>Tue, 10 Jan 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/javascript-come-primo-linguaggio/</guid>
      <description>&lt;p&gt;JavaScript non è mai la prima scelta di un aspirante programmatore. Spesso si finisce per usarlo all’occorrenza, per giochetti AJAX o per manipolare il DOM. Google, copia &amp;amp; incolla, e JavaScript è servito. Prima o poi l’abbiamo fatto tutti. E’ un vero peccato perché JavaScript merita di ben altra attenzione.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;A spiegarlo al mondo è stato naturalmente Douglas Crockford in &lt;a href=&#34;http://www.amazon.it/gp/product/0596517742/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=nicoiaro-21&amp;amp;linkCode=as2&amp;amp;camp=3370&amp;amp;creative=24114&amp;amp;creativeASIN=0596517742&#34;&gt;JavaScript: The Good Parts&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;, un libretto di 172 intensissime pagine in cui si ha costantemente la sensazione che l’autore intenda demolire il linguaggio mentre, in realtà, non fa altro che esaltarne le doti. JavaScript è il linguaggio più usato al mondo, e non a caso: è l’unico supportato da qualunque browser del pianeta. La recente affermazione di &lt;!-- raw HTML omitted --&gt;Node &lt;!-- raw HTML omitted --&gt;lato server ne dimostra l’indiscussa attualità.&lt;/p&gt;
&lt;p&gt;Ciò nonostante JavaScript rimane un linguaggio inadatto al programmatore neofita. O forse no.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>JavaScript non è mai la prima scelta di un aspirante programmatore. Spesso si finisce per usarlo all’occorrenza, per giochetti AJAX o per manipolare il DOM. Google, copia &amp; incolla, e JavaScript è servito. Prima o poi l’abbiamo fatto tutti. E’ un vero peccato perché JavaScript merita di ben altra attenzione.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>A spiegarlo al mondo è stato naturalmente Douglas Crockford in <a href="http://www.amazon.it/gp/product/0596517742/ref=as_li_ss_tl?ie=UTF8&amp;tag=nicoiaro-21&amp;linkCode=as2&amp;camp=3370&amp;creative=24114&amp;creativeASIN=0596517742">JavaScript: The Good Parts</a><!-- raw HTML omitted -->, un libretto di 172 intensissime pagine in cui si ha costantemente la sensazione che l’autore intenda demolire il linguaggio mentre, in realtà, non fa altro che esaltarne le doti. JavaScript è il linguaggio più usato al mondo, e non a caso: è l’unico supportato da qualunque browser del pianeta. La recente affermazione di <!-- raw HTML omitted -->Node <!-- raw HTML omitted -->lato server ne dimostra l’indiscussa attualità.</p>
<p>Ciò nonostante JavaScript rimane un linguaggio inadatto al programmatore neofita. O forse no.</p>
<h2 id="john-resig-e-la-khan-academy">John Resig e la Khan Academy</h2>
<p>John Resig è il creatore di jQuery. Vera star internazionale, autore di libri di successo, ora lavora per <!-- raw HTML omitted -->Khan Academy<!-- raw HTML omitted -->, la famosa accademia online. Ecco ciò che Resig ha <!-- raw HTML omitted -->annunciato<!-- raw HTML omitted --> poco prima di Natale:</p>
<blockquote>
<p>Alla Khan Academy stiamo considerando nuovi, originali, metodi di insegnamento della Computer Science. L’aspetto più interessante è che proporremo agli studenti JavaScript come loro primo linguaggio.</p>
</blockquote>
<p>La sua è una situazione particolarmente vantaggiosa: oltre a essere completamente digiuni di programmazione i suoi studenti hanno appena completato un corso di matematica e scienze.</p>
<p>In effetti insegnare l’ereditarietà prototipale (<!-- raw HTML omitted -->prototypal inheritance<!-- raw HTML omitted -->) caratteristica di JavaScript a programmatori già abituati alla tradizionale ereditarietà degli oggetti richiede un certo impegno. E’ senz’altro più semplice spiegarla a chi non sa nemmeno cosa sia l’<!-- raw HTML omitted -->ereditarietà<!-- raw HTML omitted --> in informatica. JavaScript è anche un buon linguaggio per la <!-- raw HTML omitted -->programmazione funzionale<!-- raw HTML omitted -->, anche questa più facile da capire in assenza di condizionamenti precedenti. In questo filmato Resig parla del suo progetto sottolineando quello che probabilmente è il più grande vantaggio di JavaScript, la sua ubiquità:</p>
<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>Resig non si nasconde certo le difficoltà, tanto che nel suo articolo si dilunga nella spiegazione di una serie di accorgimenti didattici e tecnici che dovrebbero semplificare il processo di apprendimento.</p>
<h2 id="parliamone">Parliamone</h2>
<p>Il progetto è senz’altro interessante e non c’è dubbio che JavaScript sia un ottimo investimento. Non sono sicuro però che partire da JavaScript sia l’approccio migliore per imparare a programmare. L’obiettivo iniziale dovrebbe essere, io credo, imparare le basi della programmazione <em>a prescindere dal linguaggio</em>. Non sarebbe meglio sceglierne uno senza troppe <em>bad parts</em>, dotato di sintassi più semplice, applicabile a contesti diversi e non solo al web?</p>
<p>Chi mi legge sa della mia predilezione, per altro <!-- raw HTML omitted -->criticata aspramente<!-- raw HTML omitted --> da più parti, per Python come linguaggio didattico. Per altri motivi andrebbe bene anche un super-classico come il linguaggio C oppure, perché no, un linguaggio funzionale puro come Haskell. JavaScript? Assolutamente si, ma come secondo linguaggio.</p>
<p>Mi domando infine, e qui ci metto un pizzico di malizia, se la scelta di Khan Academy non sia stata influenzata dalla passione per JavaScript del suo super-consulente, a prescindere da ogni valutazione didattica. Voi che ne pensate?</p>]]></content:encoded>
    </item>
    <item>
      <title>Identità Digitale e Personal Branding per studenti del liceo</title>
      <link>https://nicolaiarocci.com/internet-non-solo-per-gioco/</link>
      <pubDate>Tue, 27 Dec 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/internet-non-solo-per-gioco/</guid>
      <description>&lt;p&gt;In questo periodo sono impegnato come docente nel progetto “Internet non (solo) per gioco”. Si tratta di una serie di lezioni tenute al liceo. L’obiettivo è sensibilizzare i ragazzi circa il ruolo che la rete può svolgere nello sviluppo delle loro abilità personali e professionali. La settimana scorsa si è conclusa la prima parte, quella più teorica, e approfitto della pausa festiva per proporvi le slide e raccontarvi come è andata.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In questo periodo sono impegnato come docente nel progetto “Internet non (solo) per gioco”. Si tratta di una serie di lezioni tenute al liceo. L’obiettivo è sensibilizzare i ragazzi circa il ruolo che la rete può svolgere nello sviluppo delle loro abilità personali e professionali. La settimana scorsa si è conclusa la prima parte, quella più teorica, e approfitto della pausa festiva per proporvi le slide e raccontarvi come è andata.</p>
<h2 id="identità-reale-virtuale-o-digitale">Identità Reale, Virtuale o Digitale?</h2>
<p>Nella prima lezione ho affrontato il tema del rapporto tra le attività svolte in rete (identità digitale) e quelle offline (identità reale). E’ un legame ben più stretto di quanto generalmente si pensi:</p>
<p>Nella corso dell’esercitazione pratica ho mostrato ai ragazzi come spesso sia facile aggirare i meccanismi che più o meno coscientemente erigono a protezione dei loro profili Facebook. Ho fatto anche notare come alcuni di loro siano già stati ‘profilati’ dalla rete, a prescindere dalla loro attività su Facebook.</p>
<h2 id="a-proposito-di-facebook">A proposito di Facebook</h2>
<p>Non mi ha sorpreso constatare come per praticamente ognuno di loro non ci sia rete al di fuori di Facebook. Semplicemente, per i giovani e giovanissimi di oggi Facebook <em>è</em> la rete.</p>
<h2 id="personal-branding-per-studenti-e-non-solo">Personal Branding per Studenti e non solo</h2>
<p>Preso atto che ciò che facciamo in rete può avere (avrà) conseguenze nella vita di tutti i giorni, ecco che allora possiamo prendere in mano l’iniziativa e sfruttare tutto questo a nostro vantaggio:</p>
<h2 id="un-primo-bilancio">Un primo bilancio</h2>
<p>Questa esperienza si sta rivelando anche più coinvolgente del previsto. Una cosa è parlare a un pubblico di adulti e colleghi, come mi capita di fare ogni tanto. Un’altra è relazionarsi con giovani studenti. Mi piace parlare a questi ragazzi, suscitare in loro curiosità oppure stupirli con qualche trucchetto.</p>
<p>E’ sorprendente rilevare come siano veramente “innocenti” nei confronti della rete. Per la maggior parte non sembrano conoscerne le potenzialità, né tantomeno i rischi. La usano quotidianamente, ma non la conoscono. Tuttavia ne subiscono il fascino e mi pare di percepire in loro un forte interesse per gli argomenti che stiamo trattando.</p>
<h2 id="cosa-ci-aspetta">Cosa ci aspetta</h2>
<p>Le prossime lezioni saranno più pratiche. Ci saranno meno slide. Cominceremo a sporcarci le mani costruendo siti e interagendo con gli strumenti web più disparati. Alla fine del percorso i ragazzi conosceranno meglio la rete e molti di quegli strumenti che oggi ignorano. Mi auguro che in seguito vorranno e sapranno usarli con consapevolezza, divertimento, profitto personale e, perché no, professionale.</p>]]></content:encoded>
    </item>
  </channel>
</rss>
