<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MVVM on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/mvvm/</link>
    <description>Recent content in MVVM on Nicola Iarocci</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 11 Apr 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/mvvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comprendere il MVVM – Guida per Sviluppatori JavaScript</title>
      <link>https://nicolaiarocci.com/comprendere-il-mvvm-guida-per-sviluppatori-javascript/</link>
      <pubDate>Wed, 11 Apr 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/comprendere-il-mvvm-guida-per-sviluppatori-javascript/</guid>
      <description>Addy Osmani ne ha combinata un’altra delle sue:
MVVM (Model View ViewModel) è un pattern architetturale basato su MVC e MVP, che tenta di separare chiaramente lo sviluppo della interfaccia utente (UI) da quelle che sono business logic e comportamento dell’applicazione. A questo fine, molte implementazioni del pattern ricorrono a un uso dichiarativo dei data bindings, per consentire la separazione del lavoro sulle Viste (View) dagli altri strati (layer).
MVVM consente creazione di UI e sviluppo del codice in parallelo, all’interno della stessa base di codice.</description>
    </item>
  </channel>
</rss>
