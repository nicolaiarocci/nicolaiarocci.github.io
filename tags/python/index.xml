<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/python/</link>
    <description>Recent content in python on Nicola Iarocci</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Produced / Written / Maintained by [Nicola Iarocci](/) since 2010</copyright>
    <lastBuildDate>Thu, 10 Aug 2023 07:05:25 +0100</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cerberus v1.3.5 released</title>
      <link>https://nicolaiarocci.com/cerberus-v1.3.5-released/</link>
      <pubDate>Thu, 10 Aug 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/cerberus-v1.3.5-released/</guid>
      <description>Thanks to [funkyfuture][1]&amp;rsquo;s tireless work, yesterday we released [version 1.3.5][2] of [Cerberus][3], the data validation package for Python. This release officially supports Python 3.10 and 3.11, fixes a few issues, and proudly displays a new documentation theme which I dig, and I hope you&amp;rsquo;ll do the same. As usual, see the [changelog][4] for details.</description>
      <content:encoded><![CDATA[<p>Thanks to [funkyfuture][1]&rsquo;s tireless work, yesterday we released [version 1.3.5][2] of [Cerberus][3], the data
validation package for Python. This release officially supports Python 3.10 and 3.11, fixes a few issues, and proudly
displays a new documentation theme which I dig, and I hope you&rsquo;ll do the same. As usual, see the [changelog][4] for
details.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Events 0.5 released</title>
      <link>https://nicolaiarocci.com/events-0.5-released/</link>
      <pubDate>Mon, 31 Jul 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/events-0.5-released/</guid>
      <description>Today I released Events 0.5. Thanks to Cailean Parker&amp;rsquo;s contribution, we added support for the __getitem__ dunder (aka Python magic method.) This allows the calling of events from strings, thus enabling dynamic events. For instance:
events = Events(tuple(f&amp;#34;on_{i}&amp;#34; for i in range(5))) for i in range(5): events[f&amp;#34;on_{i}&amp;#34;](i) The C# language provides a handy way to declare, subscribe to and fire events. In C#, an event is a &amp;ldquo;slot&amp;rdquo; to which callback functions (event handlers) can be attached - a process referred to as subscribing to an event.</description>
      <content:encoded><![CDATA[<p>Today I released <a href="https://pypi.org/project/Events/0.5/">Events 0.5</a>. Thanks to <a href="https://github.com/CaileanMParker">Cailean
Parker</a>&rsquo;s contribution, we added support for the <code>__getitem__</code> dunder (aka Python
magic method.) This allows the calling of events from strings, thus enabling dynamic events. For instance:</p>
<pre tabindex="0"><code>events = Events(tuple(f&#34;on_{i}&#34; for i in range(5)))

for i in range(5):
    events[f&#34;on_{i}&#34;](i)
</code></pre><p>The C# language provides a handy way to declare, subscribe to and fire events. In C#, an event is a &ldquo;slot&rdquo; to which
callback functions (event handlers) can be attached - a process referred to as subscribing to an event. <em>Events</em> adds
this mechanism to Python. It originated as a side experiment (I was a C# transfugee then) that I later adopted as an
<a href="https://github.com/pyeve/eve">Eve</a> dependency. It slowly got some traction besides my projects. Read more on the project&rsquo;s <a href="https://github.com/pyeve/events">GitHub
page</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python `decimal.getcontext` does not work with bpython</title>
      <link>https://nicolaiarocci.com/python-decimal.getcontext-does-not-work-with-bpython/</link>
      <pubDate>Tue, 06 Jun 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/python-decimal.getcontext-does-not-work-with-bpython/</guid>
      <description>I have been working on a side project for which I&amp;rsquo;m using [bpython][1], a &amp;ldquo;fancy interface to the Python interpreter.&amp;rdquo; If you use the Python REPL often, you should check it out. It offers unique features like in-line syntax highlighting, readline-like autocomplete, a &amp;ldquo;rewind&amp;rdquo; function to pop the last line of code from memory, auto-indentation and more.
Anyway, today I found a bug in bpython, and that&amp;rsquo;s that Python&amp;rsquo;s decimal.getcontext() does not work with it.</description>
      <content:encoded><![CDATA[<p>I have been working on a side project for which I&rsquo;m using [bpython][1], a &ldquo;fancy interface to the Python interpreter.&rdquo;
If you use the Python REPL often, you should check it out. It offers unique features like in-line syntax
highlighting, readline-like autocomplete, a &ldquo;rewind&rdquo; function to pop the last line of code from memory, auto-indentation
and more.</p>
<p>Anyway, today I found a bug in bpython, and that&rsquo;s that Python&rsquo;s <code>decimal.getcontext()</code> does not work with it.</p>
<pre tabindex="0"><code>bpython version 0.24 on top of Python 3.11.3
&gt;&gt;&gt; import decimal
&gt;&gt;&gt; decimal.getcontext().prec = 6
&gt;&gt;&gt; decimal.Decimal(1) / decimal.Decimal(7)
Decimal(&#39;0.1428571428571428571428571429&#39;)
</code></pre><p>If you run the same lines in the standard Python REPL, what you get instead is:</p>
<pre tabindex="0"><code>bpython version 0.24 on top of Python 3.11.3
&gt;&gt;&gt; import decimal
&gt;&gt;&gt; decimal.getcontext().prec = 6
&gt;&gt;&gt; decimal.Decimal(1) / decimal.Decimal(7)
Decimal(&#39;0.142857&#39;)
</code></pre><p>Further experimenting revealed that, as a workaround, setting <code>DefaultContext</code> works as expected:</p>
<pre tabindex="0"><code>bpython version 0.24 on top of Python 3.11.3
&gt;&gt;&gt; decimal.DefaultContext.prec = 6
&gt;&gt;&gt; decimal.Decimal(1) / decimal.Decimal(7)
Decimal(&#39;0.142857&#39;)
</code></pre><p>I suspect this has something to do with threads, as <code>decimal.getcontext</code> targets the current thread while
<code>DefaultContext</code> is global. I went to the bpython repository only to find that a ticket was already opened in 2021. I
[added][2] my <code>DefaultContext</code> observation there.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 2.1.0 has just been released</title>
      <link>https://nicolaiarocci.com/eve-2.1.0-has-just-been-released/</link>
      <pubDate>Tue, 14 Mar 2023 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-2.1.0-has-just-been-released/</guid>
      <description>Today I released Eve v2.1, which comes with official Flask 2.2+ support and the ability to modify the pagination limit on a per-resource basis thanks to the new pagination_limit setting. You can find the release on [PyPI][1], while the changelog is available [here][2]—special thanks to [Pieter De Clercq][3] and [smeng9][4] for the help with this release.</description>
      <content:encoded><![CDATA[<p>Today I released Eve v2.1, which comes with official Flask 2.2+ support and the ability to modify the pagination limit
on a per-resource basis thanks to the new <code>pagination_limit</code> setting. You can find the release on [PyPI][1],
while the changelog is available [here][2]—special thanks to [Pieter De Clercq][3] and [smeng9][4] for the help with this release.</p>
<p><img loading="lazy" src="/images/eve-2.1.0.png" alt="Eve 2.1.0 on PyPI"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>The Origins of Python</title>
      <link>https://nicolaiarocci.com/the-origins-of-python/</link>
      <pubDate>Sat, 26 Nov 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/the-origins-of-python/</guid>
      <description>Yesterday the creator of the Python language, Guido van Rossum, [tweeted][1] about [The Origins of Python][2], an essay by his mentor, Lambert Meertens.
&amp;ldquo;On Sunday, June 21, 1970, in an office building on Great Portland Street in London, a teletype sprang to life. Under the heading &amp;ldquo;HAPPY FAMILIES,&amp;rdquo; the machine rattled out a sequence of English sentences, such as &amp;ldquo;THE DOG SITS ON THE BABY&amp;rdquo; and &amp;ldquo;UNCLE TED PLAYS WITH SISTER.</description>
      <content:encoded><![CDATA[<p>Yesterday the creator of the Python language, Guido van Rossum, [tweeted][1]
about [The Origins of Python][2], an essay by his mentor, Lambert Meertens.</p>
<blockquote>
<p>&ldquo;On Sunday, June 21, 1970, in an office building on Great Portland Street in
London, a teletype sprang to life. Under the heading &ldquo;HAPPY FAMILIES,&rdquo; the
machine rattled out a sequence of English sentences, such as &ldquo;THE DOG SITS ON
THE BABY&rdquo; and &ldquo;UNCLE TED PLAYS WITH SISTER.&rdquo; The &ldquo;Happy Families&rdquo; program
that produced this output had been written that same weekend by someone with
no prior programming experience, a participant in a workshop organized by the
Computer Arts Society offering a course in &ldquo;non-numerical programming.&rdquo;</p>
</blockquote>
<blockquote>
<p>Almost fifty years later, on October 26, 2019, in Istanbul, the eyes of a
young woman lit up as she managed to get her very first program to run. She
was attending a workshop organized by Django Girls, an international
non-profit organization aiming to empower women through free, one-day
programming workshops.</p>
</blockquote>
<blockquote>
<p>The programming language used at the London workshop in 1970 was TELCOMP, a
simple unstructured language similar to BASIC—not BASIC as it is now, but
unstructured BASIC as it was then. The programming language taught at the
Istanbul workshop in 2019 was Python, a programming language designed by Guido
van Rossum that has become wildly popular, steadily gaining in popularity
since an inconspicuous public release in 1991. As far apart as these events
are, both in time and geography, an arc of history connects them.&rdquo;</p>
</blockquote>
<p>It is a magnificent article. If you&rsquo;re passionate about Python, and programming
languages in general, make sure to read it.[^3]</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 2.0.4 released</title>
      <link>https://nicolaiarocci.com/eve-2.0.4-released/</link>
      <pubDate>Thu, 10 Nov 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-2.0.4-released/</guid>
      <description>I just released Eve 2.0.4, the REST API framework for #python. It&amp;rsquo;s available on PyPI and includes a relevant security fix so you might want to update ASAP.
Package info Docs </description>
      <content:encoded><![CDATA[<p>I just released Eve 2.0.4, the REST API framework for #python. It&rsquo;s available
on PyPI and includes a relevant security fix so you might want to update ASAP.</p>
<ul>
<li><a href="https://pypi.org/project/Eve/2.0.4/">Package info</a></li>
<li><a href="https://docs.python-eve.org/en/stable/">Docs</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 2.0.2 released</title>
      <link>https://nicolaiarocci.com/eve-2.0.2-released/</link>
      <pubDate>Fri, 23 Sep 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-2.0.2-released/</guid>
      <description>Eve 2.0.2 was [just released today][1]. It fixes a problem introduced with v2.0 in which ETag generation failed if uuidRepresentation was not set in MONGO_OPTIONS. See [issue #1486][2] for details. Many thanks @tgm for reporting and then contributing the fix.</description>
      <content:encoded><![CDATA[<p>Eve 2.0.2 was [just released today][1]. It fixes a problem introduced with v2.0
in which ETag generation failed if <code>uuidRepresentation</code> was not set in
<code>MONGO_OPTIONS</code>. See [issue #1486][2] for details. Many thanks
<a href="https://github.com/tgm-git">@tgm</a> for reporting and then contributing the fix.</p>
]]></content:encoded>
    </item>
    <item>
      <title>The Docker Event Monitor</title>
      <link>https://nicolaiarocci.com/the-docker-event-monitor/</link>
      <pubDate>Thu, 08 Sep 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/the-docker-event-monitor/</guid>
      <description>How to get alerted when a docker container goes down, or (many) other things happen to it</description>
      <content:encoded><![CDATA[<p>I added a new tool to my amateurish DevOps toolbox. Developed in the open by
Tom Williams, the [Docker Event Monitor is][1] a &ldquo;tiny container that monitors
the local Docker event system in real-time and sends notifications to various
integrations for event types that match the configuration. For example, you can
trigger an alert when a container is stopped, killed, runs out of memory or
health status change.&rdquo;</p>
<p>At its core sits a simple [python script][2] that monitors the <code>docker.sock</code>
file for noticeable changes. The code is straightforward and looks safe to
me. It only took a few minutes to set DEM up so that our <code>alerts</code> channel on
Slack gets notified of any health status changes. Some handy options are
included; my favorite is <code>silence</code> to set a time window during which alerts are
not fired. It avoids unnecessary spam when routine maintenance goes off on your
stack.</p>
<p>I find [DEM][1] a useful little tool for lightweight, simple deployments where
you&rsquo;re not employing heavy weaponry, like k8s.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 2.0.1 released</title>
      <link>https://nicolaiarocci.com/eve-2.0.1-released/</link>
      <pubDate>Wed, 07 Sep 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-2.0.1-released/</guid>
      <description>Today I released [Eve 2.0.1][1], which contains an essential fix if you&amp;rsquo;re using MONGO_URI to connect to your MongoDB instance. See the [relevant ticket][2] for details. I&amp;rsquo;ve also pinned Flask dependency to v2.1, as v2.2 brings some breaking changes that, you guessed it, break our CI runs. If you think you can help wiht that, [please do so][3]. The complete changelog is available [here][4].</description>
      <content:encoded><![CDATA[<p>Today I released [Eve 2.0.1][1], which contains an essential fix if you&rsquo;re
using <code>MONGO_URI</code> to connect to your MongoDB instance. See the [relevant
ticket][2] for details. I&rsquo;ve also pinned Flask dependency to v2.1, as v2.2
brings some breaking changes that, you guessed it, break our CI runs. If you
think you can help wiht that, [please do so][3]. The complete changelog is
available [here][4].</p>
<p><img loading="lazy" src="/images/eve-2.0.1.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>&#34;A project you maintain has been designated as critical&#34;</title>
      <link>https://nicolaiarocci.com/a-project-you-maintain-has-been-designated-as-critical/</link>
      <pubDate>Mon, 18 Jul 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/a-project-you-maintain-has-been-designated-as-critical/</guid>
      <description>Last week, I got a mail from PyPI, the Python package index. They informed me that one of my open source projects had been designated as &amp;lsquo;critical,&amp;rsquo; and I was therefore required to enable two-factor authentication. If I didn&amp;rsquo;t oblige, I would soon lose the ability to add new releases or modify the project.
The project in question was [Cerberus][1]. The &amp;lsquo;critical&amp;rsquo; designation happens when a project has been in the top 1% of downloads over the prior six months.</description>
      <content:encoded><![CDATA[<p>Last week, I got a mail from PyPI, the Python package index. They informed me
that one of my open source projects had been designated as &lsquo;critical,&rsquo; and
I was therefore required to enable two-factor authentication. If I didn&rsquo;t
oblige, I would soon lose the ability to add new releases or modify the
project.</p>
<p>The project in question was [Cerberus][1]. The &lsquo;critical&rsquo; designation happens
when a project has been in the top 1% of downloads over the prior six months.
Given that there are currently 388K packages on the Python Package Index,
I must admit that having one of my projects in the top 1% does feel good.</p>
<p>However, I was initially a bit baffled in that I would lose control of the
package if I didn&rsquo;t take action. I understand the motivation behind this move,
which is to improve the general security of the Python ecosystem. Still, the
imposition from above didn&rsquo;t feel quite right to me. After reading about the
rationale for the new requirement, I surrendered, went on PyPI and activated
2FA[^3]. In hindsight, I should have done that long ago, as I already use 2FA
on many other services.</p>
<p>A couple of days later, I was relieved to learn that my initial
&ldquo;1984-dictatorship-alert&rdquo; ring bell wasn&rsquo;t the only one to go off. On that day,
[Armin Ronacher&rsquo;s thoughts][2] on this very topic made the headlines on Hacker
News:</p>
<blockquote>
<p>The message to me as a maintainer is quite clear: once a project achieved
criticality, then the index wants to exercise a certain amount of control
[&hellip;] However when I create an Open Source project, I do not chose to create
a “critical” package. It becomes that by adoption over time. Right now the
consequence of being a critical package is quite mild: you only need to
enable 2FA. But a line has been drawn  now and I&rsquo;m not sure why it
wouldn&rsquo;t be in the index best interest to put further restrictions in place.</p>
</blockquote>
<p>I think Armin&rsquo;s post is worth reading. I share some of his concerns, although
I don&rsquo;t consider &lsquo;users vetting,&rsquo; as he suggests, a suitable alternative for
authentication (vetting solves a different problem).</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 2.0 released</title>
      <link>https://nicolaiarocci.com/eve-2.0-released/</link>
      <pubDate>Wed, 08 Jun 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-2.0-released/</guid>
      <description>It&amp;rsquo;s been a long time coming, but I&amp;rsquo;m glad to announce that Eve 2 has finally been released today. This release drops support for Python 2, Python 3.5 and Python 3.6 hence the major version bump. Other than that, expect some fixes, a new uuidRepresentation setting for MONGO_OPTIONS, and an alignment to the latest Werkzeug/PyMongo idiosyncrasies. The full changelog is available on the [project website][1].
The Eve project has been out for ten years.</description>
      <content:encoded><![CDATA[<p>It&rsquo;s been a long time coming, but I&rsquo;m glad to announce that Eve 2 has finally
been released today. This release drops support for Python 2, Python 3.5 and
Python 3.6 hence the major version bump. Other than that, expect some fixes,
a new <code>uuidRepresentation</code> setting for <code>MONGO_OPTIONS</code>, and an alignment to the
latest Werkzeug/PyMongo idiosyncrasies. The full changelog is available on the
[project website][1].</p>
<p>The Eve project has been out for ten years. As said [elsewhere][2], I believe it&rsquo;s
mature and stable enough for most use cases. I consider it done in terms
of features, and it is now in &lsquo;maintenance mode&rsquo;.</p>
<p><img loading="lazy" src="/images/eve2.png" alt="Eve 2.0"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve-Swagger v0.2 released</title>
      <link>https://nicolaiarocci.com/eve-swagger-v0.2-released/</link>
      <pubDate>Tue, 17 May 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-swagger-v0.2-released/</guid>
      <description>I just released [Eve-Swagger v0.2][1] on PyPI. Eve-Swagger is a Swagger/OpenAPI extension for [Eve][2] powered RESTful APIs. This maintenance release addresses a few issues and adds support for [eve-auth-jwt][4]. Many thanks to [Roberto Romero][3] for his contributions to this release.</description>
      <content:encoded><![CDATA[<p>I just released [Eve-Swagger v0.2][1] on PyPI. Eve-Swagger is a Swagger/OpenAPI
extension for [Eve][2] powered RESTful APIs. This maintenance release addresses
a few issues and adds support for [eve-auth-jwt][4]. Many thanks to [Roberto
Romero][3] for his contributions to this release.</p>
<p><img loading="lazy" src="/images/eve-swagger-0.2.png" alt="Eve-Swagger 0.2"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>Work in progress on Eve 2.0</title>
      <link>https://nicolaiarocci.com/work-in-progress-on-eve-2.0/</link>
      <pubDate>Sun, 13 Feb 2022 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/work-in-progress-on-eve-2.0/</guid>
      <description>I&amp;rsquo;ve been back at the forge working on Eve 2.0. Version 2 will support Python 3.7+ and drop Python 2.7, 3.5 and 3.6. It will bring support for PyMongo 4+ as well, along with several other minor fixes and improvements ([changelog][1]). It would be nice if you guys and gals, users of Eve, would give it a spin before the release.
I know. I [recently][3] stated that Eve was in maintenance mode.</description>
      <content:encoded><![CDATA[<p>I&rsquo;ve been back at the forge working on Eve 2.0. Version 2 will support Python
3.7+ and drop Python 2.7, 3.5 and 3.6. It will bring support for PyMongo 4+ as
well, along with several other minor fixes and improvements ([changelog][1]).
It would be nice if you guys and gals, users of Eve, would give it a spin
before the release.</p>
<p>I know. I [recently][3] stated that Eve was in maintenance mode. All of
those considerations still apply, but what can I say? I want Eve 2 out.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Is Eve still maintained?</title>
      <link>https://nicolaiarocci.com/is-eve-still-maintained/</link>
      <pubDate>Sat, 06 Nov 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/is-eve-still-maintained/</guid>
      <description>Tonight someone opened a ticket on the Eve repository. I jotted down a quick reply and was about to hit the Comment button when I thought a more articulated reply was in order. I also want it published on my website.
So the question is:
Is Eve still maintained?
My reply goes like this:
Hello, yes, Eve is in &amp;lsquo;maintenance mode&amp;rsquo;, as I call it. I don&amp;rsquo;t actively develop new features anymore.</description>
      <content:encoded><![CDATA[<p>Tonight someone opened <a href="https://github.com/pyeve/eve/issues/1458">a ticket</a> on
the Eve repository. I jotted down a quick reply and was about to hit the
Comment button when I thought a more articulated reply was in order. I also
want it published on my website.</p>
<p>So the question is:</p>
<blockquote>
<p>Is Eve still maintained?</p>
</blockquote>
<p>My reply goes like this:</p>
<p>Hello, yes, <a href="https://python-eve.org">Eve</a> is in &lsquo;maintenance mode&rsquo;, as I call
it. I don&rsquo;t actively develop new features anymore. Still, I am more than
willing to code-review and merge relevant pull requests, especially so if they
are bug fixes or improvements over existing features.</p>
<p>Long story short, after many years of development, the <a href="https://docs.python-eve.org/en/stable/funding.html">funding
campaign</a>[^2] that would have
allowed me to keep working on the project failed miserably. People are using
the framework worldwide, probably making a profit out of it, but they are not
interested in investing in it[^1]. The good news is that the framework is, I think,
stable and mature enough to meet most needs.</p>
<p>With <a href="https://python-cerberus.org">Cerberus</a>, I was lucky enough to find
a worthy, skilled  maintainer in the person of
<a href="https://github.com/funkyfuture">@funkyfuture</a>, who&rsquo;s keeping the project
going. I am hoping the same happens with Eve. So, if anyone familiar with the
code-base is willing to help, this is your moment to come forward. Maybe start
with triaging open tickets, maybe pull-request for some low-hanging fruits, and
then challenge yourself with more demanding tasks, like <a href="https://github.com/pyeve/eve/issues/1278">updating Eve to the
latest version of Cerberus</a>.</p>
<p>I had so <a href="https://www.patreon.com/nicolaiarocci">many things</a> planned for Eve.
Hopefully someone will join the ranks, maybe take the helm, and help bring it
to the next level.</p>
]]></content:encoded>
    </item>
    <item>
      <title>My DotNetPodcast interview</title>
      <link>https://nicolaiarocci.com/my-dotnetpodcast-interview/</link>
      <pubDate>Tue, 06 Jul 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/my-dotnetpodcast-interview/</guid>
      <description>Today I was interviewed by [Mauro Servienti][2] on the [DotNetPodcast][1]. The theme was my experience as an open-source maintainer on both the Python and C# stacks. We also discussed the ongoing evolution of the dotNET ecosystem, touching on a few tangent topics.
The recording is in Italian and is available below here.
Listen to &amp;ldquo;Python, Eve, open source e fattura elettronica. Con Nicola Iarocci&amp;rdquo; on Spreaker.</description>
      <content:encoded><![CDATA[<p>Today I was interviewed by [Mauro Servienti][2] on the [DotNetPodcast][1]. The
theme was my experience as an open-source maintainer on both the Python and C#
stacks. We also discussed the ongoing evolution of the dotNET ecosystem,
touching on a few tangent topics.</p>
<p>The recording is in Italian and is available below here.</p>
<p><!-- raw HTML omitted -->Listen to &ldquo;Python, Eve, open source
e fattura elettronica. Con Nicola Iarocci&rdquo; on Spreaker.<!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>Flask 2.0</title>
      <link>https://nicolaiarocci.com/flask-2.0/</link>
      <pubDate>Fri, 14 May 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/flask-2.0/</guid>
      <description>Flask 2.0 has just been released. Along with it come many other major satellite releases: Werkzeug 2.0, Jinja 3.0, Click 8.0, ItsDangerous 2.0, and MarkupSafe 2.0.
Across all projects, Python 3.6+ is now required, and comprehensive type annotations are supported. At a glance, I&amp;rsquo;d say that the biggest news is async views in Flask 2. Work has also been done around Werkzeug Request and Response classes to allow for better sync and async in the future (it&amp;rsquo;s not a public API yet.</description>
      <content:encoded><![CDATA[<p>Flask 2.0 has just been released. Along with it come many other major satellite
releases: Werkzeug 2.0, Jinja 3.0, Click 8.0, ItsDangerous 2.0, and MarkupSafe
2.0.</p>
<p>Across all projects, Python 3.6+ is now required, and comprehensive type
annotations are supported. At a glance, I&rsquo;d say that the biggest news is async
views in Flask 2. Work has also been done around Werkzeug <code>Request</code> and
<code>Response</code> classes to allow for better sync and async in the future (it&rsquo;s not
a public API yet.) Jinja, Click and ItsDangerous come with a lot of new
niceties. Details are available on the <a href="https://palletsprojects.com/blog/flask-2-0-released/">Pallets website</a>.</p>
<p>Flask is, of course, the giant on which shoulders the whole [Eve][1] project rests.
To say that the Pallets team has been working hard at the forge is an
understatement—huge congrats to all of them.</p>
]]></content:encoded>
    </item>
    <item>
      <title>New Eve-Swagger and Flask-Sentinel releases</title>
      <link>https://nicolaiarocci.com/new-eve-swagger-and-flask-sentinel-releases/</link>
      <pubDate>Sat, 24 Apr 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/new-eve-swagger-and-flask-sentinel-releases/</guid>
      <description>It&amp;rsquo;s maintenance day in my little Python world. I just released new versions of two small but apparently quite popular packages:
eve-swagger, the OpenAPI/Swager extensions for Eve-powered APIs, hits v0.1.4. It&amp;rsquo;s just a single fix for API breakage introduced with the previous release; details available here. Thanks to Asger Gitz-Johansen for the help with this release.
Flask-Sentinel, an Oauth2 Provider for Flask, hits v0.0.8. This also is a small release that fixes 500 errors if you were using unpinned versions of redis.</description>
      <content:encoded><![CDATA[<p>It&rsquo;s maintenance day in my little Python world. I just released new versions of
two small but apparently quite popular packages:</p>
<ul>
<li>
<p><a href="https://pypi.org/project/Eve-Swagger/">eve-swagger</a>, the OpenAPI/Swager
extensions for <a href="https://python-eve.org">Eve</a>-powered APIs, hits v0.1.4. It&rsquo;s
just a single fix for API breakage introduced with the previous release;
details available
<a href="https://github.com/pyeve/eve-swagger/blob/master/CHANGES.rst">here</a>. Thanks to
Asger Gitz-Johansen for the help with this release.</p>
</li>
<li>
<p><a href="https://pypi.org/project/Flask-Sentinel/">Flask-Sentinel</a>, an Oauth2 Provider
for Flask, hits v0.0.8. This also is a small release that fixes 500 errors if
you were using unpinned versions of redis. This time, my gratitude goes to Adrian Cin.</p>
</li>
</ul>
<p>Enjoy.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Musings on Python&#39;s Pattern Matching</title>
      <link>https://nicolaiarocci.com/musings-on-pythons-pattern-matching/</link>
      <pubDate>Tue, 23 Feb 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/musings-on-pythons-pattern-matching/</guid>
      <description>Pattern Matching [is coming][1] to Python, and I am not sure I like it. Don&amp;rsquo;t get me wrong, I love pattern matching. I use it all the time in F#. I am sure that once it lands in the language, it will be wildly adopted.
So what&amp;rsquo;s the problem with Python&amp;rsquo;s pattern matching? The community, some core developers included, has expressed [several concerns][2]. The Python Steering Council has acknowledged them and is willing to look into improvements should they be proposed.</description>
      <content:encoded><![CDATA[<p>Pattern Matching [is coming][1] to Python, and I am not sure I like it. Don&rsquo;t get me
wrong, I love pattern matching. I use it all the time in F#. I am sure that
once it lands in the language, it will be wildly adopted.</p>
<p>So what&rsquo;s the problem with Python&rsquo;s pattern matching? The community, some core
developers included, has expressed [several concerns][2]. The Python Steering
Council has acknowledged them and is willing to look into improvements should
they be proposed. I am not going into the details here. You can look them up
yourself. Let&rsquo;s just say that there are a few gotchas, like the requirement to
use dotted names as constants, to prevent them from being interpreted as
capture variables instead (doh!) The lack of local scope bites hard here.</p>
<p>If we look at pattern matching in isolation, it is undoubtedly desirable. There
ought to be a reason why every language on the planet is trying to adopt it. Is
it pythonic? I doubt it. With all its corner cases and the odd syntax, I think
that the current design adds quite a bit of complexity to the language. As
someone [noted][6], core dev Larry Hastings puts it well:</p>
<blockquote>
<p>I dislike the syntax and semantics expressed in PEP 634. I see the match
statement as a DSL contrived to look like Python and to be used inside of
Python, but with very different semantics. When you enter a PEP 634 match
statement, the rules of the language change completely, and code that looks
like existing Python code does something surprisingly very different ([source][3])</p>
</blockquote>
<p>I especially agree with this sentiment, and I am still quoting Hastings:</p>
<blockquote>
<p><strong>I think the bar for adding new syntax to Python at this point in its life
should be set very high</strong>. The language is already conceptually pretty large,
and every new feature means new concepts one must learn if one is to read an
arbitrary blob of someone else&rsquo;s Python code. The bigger the new syntax, the
higher the bar should become, and so the bigger payoff the new syntax has to
provide.</p>
</blockquote>
<p>Unfortunately, I feel like this trend of getting away from pythonic-Python has
been going on for a while. As my friend Alessandro Molina mentioned just today:</p>
<blockquote>
<p>I have been thinking about how Python has been moving away from its own Zen
since the time of &ldquo;async&rdquo; keyword. Convenience rarely values added
complexity. Never been a big fan of adding keywords that will be misused by
the majority to deal with the vertical needs of a minority ([source][4])</p>
</blockquote>
<p>He was referring to group exceptions, not pattern matching. Still, his tweet
struck a nerve as I was busy writing down these thoughts.</p>
<p>More generally, I am concerned with all the recent attempts to take features
from functional languages and bring them over to object-oriented languages.
It&rsquo;s not just a Python thing; C# just ported Records, pattern matching, and
a few other things over from F#/ML. I understand that like 85% of the software
development crowd is into object-oriented languages, but look, it&rsquo;s going to
exceptionally hard to successfully and seamlessly move features from apples to
oranges.</p>
]]></content:encoded>
    </item>
    <item>
      <title>When Homebrew breaks your Python virtual environment</title>
      <link>https://nicolaiarocci.com/when-homebrew-breaks-your-python-virtual-environment/</link>
      <pubDate>Mon, 08 Feb 2021 07:05:25 +0100</pubDate>
      <guid>https://nicolaiarocci.com/when-homebrew-breaks-your-python-virtual-environment/</guid>
      <description>Ever had your old, trusty Python virtual environment fail on you? I sure did. Sometimes, when I activate or switch between virtual environments, I get the following error:
$ workon eve dyld: Library not loaded: @executable_path/../.Python I never really took the time to look into it. When this happens, because I am in a rush (and because I am a lazy old fart), I shrug it off, recreate the virtual environment on the spot, and get back to work.</description>
      <content:encoded><![CDATA[<p>Ever had your old, trusty Python virtual environment fail on you? I sure did.
Sometimes, when I activate or switch between virtual environments, I get the
following error:</p>
<pre><code>$ workon eve
dyld: Library not loaded: @executable_path/../.Python
</code></pre>
<p>I never really took the time to look into it. When this happens, because I am
in a rush (and because I am a lazy old fart), I shrug it off, recreate the
virtual environment on the spot, and get back to work.</p>
<p>My friend Justin Mayer knows better. The other day, he posted a [short
insightful article][1] about this very same issue:</p>
<blockquote>
<p>Perhaps you heard stories about why you shouldn’t use the system-bundled
Python, so instead you use Homebrew to install Python and then use its
interpreter to create a virtual environment. A month later, you activate that
same environment, and when you try to use it, you see this inscrutable error:
(&hellip;) What happened? The Python interpreter referenced by the virtual
environment… no longer exists. But how can that be? You didn’t change
anything! You didn’t change anything… but Homebrew did.</p>
</blockquote>
<p>Homebrew is the culprit. If you have been affected (and if you have done any
length of serious Python work, you have), then go [read][1] Justin&rsquo;s piece. He
explains the whys and then goes into the hows you solve the problem for good.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python Workload now officially supported in Visual Studio 2017</title>
      <link>https://nicolaiarocci.com/python-workload-now-officially-supported-in-visual-studio-2017/</link>
      <pubDate>Thu, 11 May 2017 16:16:06 +0200</pubDate>
      <guid>https://nicolaiarocci.com/python-workload-now-officially-supported-in-visual-studio-2017/</guid>
      <description>Visual Studio 2017 just received an update (version 15.2). Among other nice things, this update brings full support for Python back into the official release of VS2017. As you might recall (see my old whiny post), previously Python was only available with Visual Studio 2017 Preview (a separate install).
I just upgraded my copy of Visual Studio, added the Python Development Workload to it via the VS Installer, and finally (and very happily) uninstalled the whole Visual Studio Preview thingie.</description>
      <content:encoded><![CDATA[<p>Visual Studio 2017 just received an update (<a href="https://www.visualstudio.com/en-us/news/releasenotes/vs2017-relnotes">version 15.2</a>). Among other
nice things, this update brings full support for Python back into the official
release of VS2017. As you might recall (see my <a href="https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/">old whiny post</a>), previously
Python was only available with Visual Studio 2017 Preview (a separate install).</p>
<p>I just upgraded my copy of Visual Studio, added the Python Development Workload
to it via the VS Installer, and finally (and very happily) uninstalled the
whole Visual Studio Preview thingie.  Alleluja!</p>
<p>In case you are wondering what this is all about, well you should know that
Python in Visual Studio is very powerful. The Release Notes provide a quick
overview:</p>
<blockquote>
<p>We have enhanced the Python development workload in Visual Studio to maximize
your productivity in Python. We offer improved IntelliSense, web development
projects, Git, and VSTS integration to save you time and effort on everyday
tasks. Use world class debugging (local, remote, cross-platform, and
Python/native) and profiling tools to improve the quality and performance of
your Python code.</p>
</blockquote>
<p>You can also check out my <a href="https://speakerdeck.com/nicola/python-on-windows-like-a-boss">Python on Windows Like a Boss</a> talk (although
I guess it will kind of suck without the live demo), or jump over to the
official <a href="https://www.visualstudio.com/vs/python">Python information page</a>.</p>
<p><em>Join the <a href="http://eepurl.com/b-_Pzz">newsletter</a> to get an email alert when a new post surfaces on
this site. If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on twitter.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve and Cerberus funding campaign</title>
      <link>https://nicolaiarocci.com/eve-and-cerberus-funding-campaign/</link>
      <pubDate>Thu, 27 Apr 2017 11:23:05 +0200</pubDate>
      <guid>https://nicolaiarocci.com/eve-and-cerberus-funding-campaign/</guid>
      <description>Last February I published The State of Eve REST Framework. Among other things in that post, I mentioned that I was looking for ways that would allow me to allocate more time to the project (and its satellites).
I really feel like I should put more effort into Eve, Cerberus and satellite projects Eve-Swagger, Flask-Sentinel, Eve.NET, etc. I love working on these projects and I know a lot of people rely on them.</description>
      <content:encoded><![CDATA[<p>Last February I published <a href="https://nicolaiarocci.com/the-state-of-the-eve-rest-framework-project/">The State of Eve REST Framework</a>. Among other
things in that post, I mentioned that I was looking for ways that would allow
me to allocate more time to the project (and its satellites).</p>
<blockquote>
<p>I really feel like I should put more effort into Eve, Cerberus and satellite
projects Eve-Swagger, Flask-Sentinel, Eve.NET, etc. I love working on these
projects and I know a lot of people rely on them. Also, I have big ideas that
I would like to play with. At this point in time however, I cannot afford
allocating more time to not-paying-the-bill activities.</p>
</blockquote>
<p>Well, I went and looked at the possibilities, and finally settled down on
a model which would probably be best defined as a blend between the Vue.js and
the Django REST framework models.</p>
<p>Effective now, the Eve REST framework, Cerberus, and the whole eco-system are
<a href="https://www.patreon.com/nicolaiarocci">collaboratively funded projects</a>. If you run a business and are using
either Eve or Cerberus a revenue-generating product, it would make business
sense to sponsor their development: it ensures the project that your product
relies on stays healthy and actively maintained. Individual users are also
welcome to make either a recurring pledge or a one-time donation if Eve and/or
Cerberus have helped you in your work or personal projects. Every single
sign-up makes a significant impact towards making Eve possible.</p>
<p>Rest assured, Eve continues to be open-source and permissively licensed.
It is also maintained and developed in my free time, and by the awesome
community which has matured around it. I firmly believe, however, that it is in
the commercial best-interest for users of the project to invest in its ongoing
development (make sure you check the exciting <em>Things I Would Be Working On</em>
section on the Patreon page).</p>
<p>To join the backer ranks, check out <a href="https://www.patreon.com/nicolaiarocci">Eve campaign on Patreon</a>, or donate via
<a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=7U7G7EWU7EPNW">PayPal</a>.</p>
<p>Thank you, <em>Nicola</em>.</p>
<p><em>Join the <a href="http://eepurl.com/b-_Pzz">newsletter</a> to get an email alert when a new post surfaces on
this site. If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on twitter.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>Python support in Visual Studio 2017 or the lack thereof</title>
      <link>https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/</link>
      <pubDate>Wed, 08 Mar 2017 10:41:17 +0100</pubDate>
      <guid>https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/</guid>
      <description>So yesterday Visual Studio 2017 was released. Big news. Lots of cool stuff. As I write this I am watching the live stream of the 2 days-long launch event. If you want to learn about Python support in VS2017 though, you have to dig deeper and head over to the Python Engineering blog at Microsoft.
As expected, the official release is actually coming out with no support for Python. It will come in a few months.</description>
      <content:encoded><![CDATA[<p>So yesterday Visual Studio 2017 was released. Big news. Lots of <a href="https://www.visualstudio.com/vs/whatsnew/">cool
stuff</a>. As I write this I am watching the <a href="https://launch.visualstudio.com">live stream</a> of the
2 days-long launch event. If you want to learn about Python support in VS2017
though, you have to dig deeper and head over to the <a href="https://blogs.msdn.microsoft.com/pythonengineering/2017/03/07/python-support-in-vs2017/">Python Engineering</a>
blog at Microsoft.</p>
<p>As <a href="https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/">expected</a>, the official release is actually coming out with no support for
Python. It will come in a few months. Bummer. In the meanwhile however you can go and grab the
(also newly released) <a href="https://visualstudio.com/vs/preview?wt.mc_id=blogs_msdn_python">Visual Studio Preview</a>. This new kid on the block
has the ability to be installed and used side-by-side with the official release
and will be used - you guessed it - as an early preview of what’s coming next for Visual Studio.</p>
<p>Two key things to note here:</p>
<ul>
<li>Everything that is in Visual Studio 2017 is also in Visual Studio Preview;</li>
<li>They are two separate installations with separate workloads and settings.</li>
</ul>
<p>Now you might be thinking that two installs are overkill, and I concur. Because
Preview includes all the official features, you might also think that you can
probably get away with only installing Visual Studio Preview. That would work,
but here is the catch: Visual Studio Preview has no support for paid product
offerings. So if you are a Professional or Enterprise user well, you are out of
luck.</p>
<p>This is not ideal. Python pulled out of RC3 was understandable, although
unsettling. Not included with the official release? Not pretty. For most
people, I suspect, the gimmicks required to get Python to work with Visual
Studio 2017 are unbearable. Personally, I will fallback to other solutions and
wait until Python Workload gets merged back with the official offering.</p>
<p>I am still convinced that in the long run Visual Studio with its Python
Workload will become the best option to do Python on Windows (Visual Studio
Code being the second best candidate). I mean, look at this beauty:</p>
<p><img loading="lazy" src="/images/PythonVsPreview.png" alt=""  />
</p>
<p>Combined with the VsVim extension it makes Python coding on Windows almost as
great as Vim+bash I&rsquo;ve been using so far, but within Visual Studio which I use
for all my other coding (don&rsquo;t get me started on C# in Vim. That is material
for another post maybe.) I am also totally sympathetic with the dev team.
I have been in this business for longer than I care to admit and I do know
these things happen. But still, there is no dobut that this unfortunate
incident marks a serious setback.</p>
<p>In less than one month I will be givin a talk at PyCon Italy. It is titled
<a href="https://www.pycon.it/conference/talks/python-tools-for-visual-studio-ovvero-python-windows-like-a-boss-and-for-free">Python on Windows Like a Boss</a> and the heart of it was of course going be
the Python Workload for Visual Studio 2017. With this turn of events I will
probably end up going on stage with the previous version of the tool, and
Visual Studio 2015.</p>
<p>Or I will bite the bullet and install 35 gigs of mostly duplicated software.</p>
<p><em>Join the <a href="http://eepurl.com/b-_Pzz">newsletter</a> to get an email alert when a new post surfaces on
this site. If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on twitter.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve and Cerberus are now collaboratively funded projects</title>
      <link>https://nicolaiarocci.com/eve-and-cerberus-are-now-collaboratively-funded-projects/</link>
      <pubDate>Sun, 05 Mar 2017 10:10:29 +0100</pubDate>
      <guid>https://nicolaiarocci.com/eve-and-cerberus-are-now-collaboratively-funded-projects/</guid>
      <description>I finally took the plunge and made Eve and Cerberus collaboratively funded projects. Even if only mildly successful, this initiative will have a huge impact on them, as I will be able to dedicate them at least some of my working time.
So far (five years and counting) I have almost exclusively been working on Eve and Cerberus in my free time. However maintaining, supporting, and developing new features to projects of this scope takes a considerable amount of time.</description>
      <content:encoded><![CDATA[<p>I finally took the plunge and made <a href="http://python-eve.org">Eve</a> and <a href="http://python-cerberus.org">Cerberus</a> collaboratively
funded projects. Even if only mildly successful, this initiative will have
a huge impact on them, as I will be able to dedicate them at least some of my
working time.</p>
<p>So far (five years and counting) I have almost exclusively been working on
Eve and Cerberus in my free time. However maintaining, supporting, and
developing new features to projects of this scope takes a considerable amount
of time. And there is so much I would like to do. On my radar there are new
Client SDKs (Python, JavaScript), OpenAPI support, an overhaul of both the
documentation and the test suite. Eve-Swagger and Flask-Sentinel could and
should receive important improvements.</p>
<p>I believe that it is in the commercial best-interest for users of these projects
to invest in its ongoing development. Signing up, users will directly
contribute to faster releases, more features, and higher quality software. More
time will be invested in documentation, issue triage, and community support.
Essentially, by signing up they safeguard the future development of the
framework.</p>
<p>Quoting the Django REST framework which, along with Vue.js, showed me the path:</p>
<blockquote>
<p>Collaboratively funded software can offer outstanding returns on investment,
by encouraging users to collectively share the cost of development
(<a href="https://fund.django-rest-framework.org/topics/funding/">source</a>).</p>
</blockquote>
<p>If you run a business and is using Eve or Cerberus in a revenue-generating
product, it would make business sense to sponsor their development: it ensures
the projects that your product relies on stays healthy and actively maintained.
It can also help your exposure in the Eve community and makes it easier to
attract Eve developers.</p>
<p>Individual users are also welcome to make a recurring pledge if the projects
helped you in either work or personal projects. Alternatively, consider
donating as a sign of appreciation - like buying me coffee once in a while :)</p>
<p>In order to make the campaign as reasonable and affordable as possible, I set
up a bunch of goals and rewards, <a href="https://www.patreon.com/nicolaiarocci">check it out on Patreon</a>.</p>
<p><em>Join the <a href="http://eepurl.com/b-_Pzz">newsletter</a> to get an email alert when a new post surfaces on
this site. If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on twitter.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>Python Workload pulled off Visual Studio 2017 RC3</title>
      <link>https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/</link>
      <pubDate>Sat, 18 Feb 2017 10:48:29 +0100</pubDate>
      <guid>https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/</guid>
      <description>So how do you install the awesome Python Development Tools on the latest Visual Studio 2017 RC? That might seem a stupid question considering that the Data Science and Python Development workload has been available with every Release Candidate so far. You simply select the workload during the installation and you&amp;rsquo;re done, right? Not quite.
I found out the hard way this morning as I wanted to install VS 2017 RC3 on my development machine and, to my surprise, I could not find Python Development anywhere on the workloads window (which itself is a huge improvement over the VS 2015 install experience, by the way).</description>
      <content:encoded><![CDATA[<p>So how do you install the awesome <a href="https://www.visualstudio.com/vs/python/">Python Development Tools</a> on the latest
Visual Studio 2017 RC? That might seem a stupid question considering that the
Data Science and Python Development workload has been available with every
Release Candidate so far. You simply select the workload during the
installation and you&rsquo;re done, right? Not quite.</p>
<p>I found out the hard way this morning as I wanted to install VS 2017 RC3 on my
development machine and, to my surprise, I could not find Python Development
anywhere on the workloads window (which itself is a huge improvement over the
VS 2015 install experience, by the way). Easy, I thought, they moved it to some
secondary &ldquo;optional workloads&rdquo; tab, but a quick scan did not reveal any of
that.</p>
<p>Concerned now, I turned to the <a href="https://www.google.com/?gfe_rd=cr&amp;ei=Lh2oWNCJENCv8wfrtaqYDA&amp;gws_rd=cr#q=python+tools+visual+studio+2017+rc3">Oracle of All Things</a> only to find that the
Python Workload has been pulled off the Visual Studio 2017 RC3 (January 2017).
It was actually reported in the <a href="https://www.visualstudio.com/en-us/news/releasenotes/vs2017-relnotes">release notes</a>:</p>
<blockquote>
<p>Removed the Data Science and Python Development workloads as some of the
components weren’t meeting the release requirements, such as translation to
non-English languages. They will be available soon as separate downloads.</p>
</blockquote>
<p>When I glanced over them I (and probably you too) did not notice this little
paragraph. But wait, it&rsquo;s even worse than you would expect:</p>
<blockquote>
<p>Upgrading to current version will remove any previously installed Python and
Data Science workloads/components.</p>
</blockquote>
<p>That&rsquo;s right. If you upgrade to RC3 you win a wipe out of your Python
environment. Further research revelead an open <a href="https://github.com/Microsoft/PTVS/issues/2099">ticket</a> on GitHub.
Apparently they are working on a way to install the Python and Data Science
workloads on top of an existing VS 2017 install, but I would not hold my breath
on it:</p>
<blockquote>
<p>Thanks everyone for the support and understanding. It&rsquo;s still not clear to us
how we&rsquo;re going to be releasing Python support, but the plan is definitely to
have something when VS 2017 releases next month.</p>
</blockquote>
<p>Since the official VS 2017 release is planned early next month it is very
likely that we will just have to wait until then. In the meantime, you better
have a VS 2015 sitting side by side with your brand new, mutilated, Visual
Studio 2017. Or you switch to Visual Studio Code, which offers fantastic
support for Python.</p>
<p>Or you fallback to good ole trusted Vim, like I did.</p>
<p>UPDATE (Feb 22, 2017). There&rsquo;s now an <a href="https://blogs.msdn.microsoft.com/pythonengineering/2017/02/22/python-in-vs2017/">official post</a> up at the Microsoft
Python Engineering blog, by Steve Dower. Looks like using Python with Visual
Studio 2017 will initially require a separate &ldquo;preview&rdquo; build of VS itself.
Only months later Python support will be merged to the official bundle.</p>
<p>UPDATE (Mar 8, 2017). I posted a <a href="https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/">follow-up article</a>, as VS2017 has finally
been released.</p>
<p><em>Join the <a href="http://eepurl.com/b-_Pzz">newsletter</a> to get an email alert when a new post surfaces on
this site. If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on twitter.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>The state of the Eve REST framework project</title>
      <link>https://nicolaiarocci.com/the-state-of-the-eve-rest-framework-project/</link>
      <pubDate>Mon, 06 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/the-state-of-the-eve-rest-framework-project/</guid>
      <description>A new major release of the Eve REST API Framework is finally out with a number of cool new features (MongoDB Aggregations!), few fixes, and a couple of minor breaking changes. On the Eve blog you can find a detailed article about this important release.
I am glad to report that the Eve-SQLAlchemy community extension, which allows SQL databases to serve as Eve backends, has seen a surge of activity around it.</description>
      <content:encoded><![CDATA[<p>A new major release of the <a href="http://python-eve.org">Eve REST API Framework</a> is finally out with
a number of cool new features (MongoDB Aggregations!), few fixes, and a couple
of minor breaking changes. On the Eve blog you can find a <a href="http://blog.python-eve.org/eve-07-released">detailed article</a>
about this important release.</p>
<p>I am glad to report that the <a href="https://github.com/RedTurtle/eve-sqlalchemy">Eve-SQLAlchemy</a> community extension, which
allows SQL databases to serve as Eve backends, has seen a surge of activity
around it. There is a new maintainer, Dominik Kellner, and a bunch of active
contributors. Work is being done to align the extension with latest Eve
release. If interested, please join the efforts there. Speaking of community
extensions, only a few days ago <a href="https://github.com/petrjasek/eve-elastic">Eve-Elastic</a> version 2 has been released
too.</p>
<p>Next major release will of course be version 0.8 and it should come relatively
soon. It will be focused on adding <a href="http://python-cerberus.org">Cerberus 1.0</a> support. That will add
superpowers and more flexibility to areas like data validation and API
endpoints definition. Work on adding Cerberus 1 to Eve <a href="https://github.com/nicolaiarocci/eve/pull/917">has actually been
ongoing</a>. In fact, we were ready to release the feature with the current
release, but I decided against it as I wanted to deliver all the new features
before the inevitable breaking changes that will come with Cerberus 1. The
idea is to let most users take advantage of new features with as little effort
as possible. They will then have the option to bite the bullet and upgrade to
0.8 at their own pace.</p>
<p>The current release has been cooking for a long time, way more than
I anticipated. I have simply been too busy with normal day work, the kind of
activity that pays the bills. That is good for me I guess, but not so much for
the project. I really feel like I should put more effort into Eve, Cerberus and
satellite projects Eve-Swagger, Flask-Sentinel, Eve.NET, etc. I love
working on these projects and I know a lot of people rely on them. Also, I have
big ideas that I would like to play with. At this point in time however,
I cannot afford allocating more time to not-paying-the-bill activities. Rest
assured the project is not going stale. Worse case scenario, nothing changes
and it will just proceed at current pace. But I have been wondering what would
allow me to put more into it.</p>
<p>I am particulary fond of the <a href="https://fund.django-rest-framework.org/topics/funding/">collaboratively funded project</a> model adopted
by the Django REST Framework, and I wonder if it would work for Eve too. Of
course I know that Eve is a smaller project with a smaller ecosystem. I also
know however that many companies and institutions, big and small are using Eve
in production and with good results. In the past I even did the occasional
consulting gig for them. Maybe some would be willing to help with some form of
financing and/or sponsorship, adopting the project in exchange for some
visibility and, more importantly, project growth?</p>
<p>If you have some advice to share on this topic, <a href="mailto:nicola@nicolaiarocci.com">please do so</a>. I am very
hesitant and unsure about this whole thing. Part of me just wants to keep going
the way it&rsquo;s always been, as with any form of financing also comes more
responsability. The other half of me wants to work more on this thing, make it
bigger. Eventually we will get there but, unless something changes, it will
take quite some time.</p>
<p>By the way, next March I am speaking about RESTful Web Services at
<a href="http://rome2017.codemotionworld.com">Codemotion Rome 2017</a>. Presentation will include a Eve live demo, so if
you are interested in Eve and/or want to see me fail miserably and blow it up
on stage, join me there. Tickets are still available, <a href="http://rome2017.codemotionworld.com/talk-detail/?detail=4921">talk will be in
English</a>, and March is a great season to visit Rome. See ya&rsquo;ll there.</p>
<p>If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Cerberus 1.0 has been released</title>
      <link>https://nicolaiarocci.com/cerberus-1-0-released/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/cerberus-1-0-released/</guid>
      <description>After a one year long development cycle I am proud to announce that version 1.0 of Cerberus, the data validation and transformation tool for Python, is finally out. A while ago I wrote an article on the new features and breaking changes that come with it, so please check it out carefully along with the changelog.
I just wish to reiterate my gratitude towards all the contributors to the project. The ones who specifically worked on this awesome release, those who made it all possible, are: Matthew Ellison, Dominik Kellner, David Kirkendall, Damián Nohales, calve, Jonathan Huot, Roman Redkovich and of course the one and the only Frank Sachsenheim, whose role was pivotal to this release.</description>
      <content:encoded><![CDATA[<p>After a one year long development cycle I am proud to announce that version 1.0 of <a href="http://python-cerberus.org">Cerberus</a>, the data validation and transformation tool for Python, is finally out. A while ago I wrote an article on the <a href="http://nicolaiarocci.com/cerberus-1-0-coming-going-awesome/">new features and breaking changes</a> that come with it, so please check it out carefully along with the <a href="http://docs.python-cerberus.org/en/stable/changelog.html">changelog</a>.</p>
<p>I just wish to reiterate my gratitude towards all the contributors to the project. The ones who specifically worked on this awesome release, those who made it all possible, are: Matthew Ellison, Dominik Kellner, David Kirkendall, Damián Nohales, calve, Jonathan Huot, Roman Redkovich and of course the one and the only Frank Sachsenheim, whose role was pivotal to this release.</p>
<p>If you want to get in touch, I am <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>EveGenie makes Eve schema generation a breeze</title>
      <link>https://nicolaiarocci.com/evegenie-makes-eve-schema-generation-breeze/</link>
      <pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/evegenie-makes-eve-schema-generation-breeze/</guid>
      <description>Released by the nice folks at Drud, EveGenie is a tool for making Eve schema generation easier.
Eve’s schema definitions are full of features, but can take a good amount of time to create when dealing with lots of complex resources. From our experience, it’s often helpful to describe an endpoint in JSON before creating it as an Eve schema. This allows you to make quick decisions about the structure of your entities without spending time moving schema code around.</description>
      <content:encoded><![CDATA[<p>Released by the nice folks at Drud, <a href="https://github.com/drud/evegenie">EveGenie</a> is a tool for making <a href="http://python-eve.org">Eve</a> schema generation easier.</p>
<blockquote>
<p>Eve’s schema definitions are full of features, but can take a good amount of time to create when dealing with lots of complex resources. From our experience, it’s often helpful to describe an endpoint in JSON before creating it as an Eve schema. This allows you to make quick decisions about the structure of your entities without spending time moving schema code around. This is where EveGenie comes in.</p>
</blockquote>
<p>EveGenie saves time by creating a ready to use Python Eve schema from a very simple JSON representation of a set of resources.</p>
<p>Interested? Good! Matt Tucker (<a href="https://twitter.com/ultimateboy">@ultimateboy</a>) has a <a href="http://www.drud.com/evegenie-python-eve-schema-generation-done-fast/">getting started with EveGenie</a> article up for you, so make sure to check it out.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve REST API Framework v0.6.4 now available</title>
      <link>https://nicolaiarocci.com/eve-0-6-4-just-released/</link>
      <pubDate>Wed, 08 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-6-4-just-released/</guid>
      <description>Quick note to let you all know that Eve v0.6.4 is out with a few significant updates. Thanks to James Stewart for contributing to this release.
Work on v0.7, which will include MongoDB Aggregation Framework support (docs) and many other new features, continues steadily.</description>
      <content:encoded><![CDATA[<p>Quick note to let you all know that <a href="https://pypi.python.org/pypi/Eve/0.6.4">Eve v0.6.4</a> is out with a few significant <a href="http://python-eve.org/changelog#version-0-6-4">updates</a>. Thanks to James Stewart for contributing to this release.</p>
<p>Work on v0.7, which will include MongoDB Aggregation Framework support (<a href="http://python-eve.org/features.html#mongodb-aggregation-framework">docs</a>) and many other <a href="http://python-eve.org/changelog#version-0-7">new features</a>, continues steadily.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Meet Eve-Swagger the swagger.io extension for your Eve powered REST API</title>
      <link>https://nicolaiarocci.com/announcing-eve-swagger/</link>
      <pubDate>Mon, 06 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/announcing-eve-swagger/</guid>
      <description>Eve-Swagger is a swagger.io extension for Eve powered RESTful APIs. It has been around for a while on GitHub but I never managed to officially release it. So rejoice! it is now available on PyPI.
But what is Swagger, and why is it useful to your RESTful API? With a Swagger-enabled API you can get interactive documentation, client SDK generation and discoverability, all for free. From Swagger website:
Swagger is a simple yet powerful representation of your RESTful API.</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/nicolaiarocci/eve-swagger">Eve-Swagger</a> is a swagger.io extension for <a href="http://python-eve.org">Eve</a> powered RESTful APIs. It has been around for a while on GitHub but I never managed to officially release it. So rejoice! it is now available on PyPI.</p>
<p>But what is Swagger, and why is it useful to your RESTful API? With a Swagger-enabled API you can get interactive documentation, client SDK generation and discoverability, all for free. From <a href="http://swagger.io">Swagger website</a>:</p>
<blockquote>
<p>Swagger is a simple yet powerful representation of your RESTful API. With the largest ecosystem of API tooling on the planet, thousands of developers are supporting Swagger in almost every modern programming language and deployment environment. With a Swagger-enabled API, you get interactive documentation, client SDK generation and discoverability.</p>
</blockquote>
<p>When Eve-Swagger is installed and properly configured your Eve API exposes
a special <code>/api-docs</code> endpoint which returns a 100% swagger-compliant JSON
response. This JSON can then be processed by the swagger tools like <a href="https://github.com/swagger-api/swagger-ui">Swagger
UI</a> and <a href="http://editor.swagger.io/#/">Swagger Editor</a>. Here we can appreciate Swagger UI providing API
documentation out of the box (click to zoom):</p>
<p><img loading="lazy" src="/images/Screen-Shot-2016-06-06-at-15.13.04.png" alt="Swagger UI"  />
</p>
<p>Like most Eve extensions Eve-Swagger comes as a standard Flask Blueprint and, as such, using it is very simple:</p>
<script src="https://gist.github.com/nicolaiarocci/7720dd28f2e74e77c94edcb487aa5102.js"></script>

<p>Once the blueprint has been registered all you have to do is add a <code>SWAGGER_INFO</code> node to your settings. It maps to a swagger <a href="http://swagger.io/specification/#infoObject">infoObject</a> and contains some simple, human readable information. The extension will also scan your endpoint settings to figure out the API graph and document it. Of course, in order to not to clutter your launch script, you could (and probably should) set <code>SWAGGER_INFO</code> in your <a href="http://python-eve.org/config">configuration file</a>.</p>
<p>Installation is super easy:</p>
<script src="https://gist.github.com/nicolaiarocci/a7d2e3d8451f13907de6347448346c00.js"></script>

<p>This is just version 0.0.2 so many parts might still be moving, but you are encouraged to start using it right away. Also if you appreciate this extension please let me know by either starring it on GitHub or with a tweet or email, so I will know that I should really try hard and allocate more time to this project. As always, feel free to contribute via pull request!</p>
<p>If you want to get in touch, I am <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Cerberus 1.0 is coming and it is going to be awesome</title>
      <link>https://nicolaiarocci.com/cerberus-1-0-coming-going-awesome/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/cerberus-1-0-coming-going-awesome/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://python-cerberus.org&#34;&gt;Cerberus&lt;/a&gt; is a lightweight and extensible data validation library for Python. Beta has been around since 2012. During this time Cerberus has been serving as the validation system for &lt;a href=&#34;http://python-eve.org&#34;&gt;Eve&lt;/a&gt; core. It has been also adopted by a &lt;a href=&#34;https://github.com/search?q=from+cerberus+import+Validator&amp;amp;type=Code&amp;amp;utf8=%E2%9C%93&#34;&gt;quite a lot&lt;/a&gt; open source projects, averaging around 18K downloads per month on PyPI and collecting some remarkable &lt;a href=&#34;https://speakerdeck.com/nicola/cerberus?slide=56&#34;&gt;endorsements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All things considered, I would dare to claim that Cerberus is battle tested to death. This is, in fact, one reason why I believe that the time for a canonical and stable release has come. Another reason is that next release is a major one. It brings a ton of important &lt;a href=&#34;http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0&#34;&gt;new features&lt;/a&gt; along with very significant code refactoring and a redesigned, powerful &lt;a href=&#34;http://docs.python-cerberus.org/en/latest/api.html&#34;&gt;API&lt;/a&gt;. Third, next release &lt;a href=&#34;http://docs.python-cerberus.org/en/latest/changelog.html#breaking-changes&#34;&gt;breaks&lt;/a&gt; backward compatibility, and we want to signal that in the version number.&lt;/p&gt;
&lt;p&gt;So next Cerberus release will be 1.0. If you have been following the development this will come as no surprise, as a Release Candidate has been out for a while. As a Cerberus user you will want to take the plunge and upgrade to 1.0 because well, it is just too cool to be true. If new to Cerberus you will also want to adopt 1.0 right away, for the same reason. If you are new however, make sure you get the &lt;a href=&#34;https://cerberus.readthedocs.io/en/latest/usage.html#cerberus-usage&#34;&gt;basics covered&lt;/a&gt; before reading further. By the way, at latest PyCon Italy I gave a talk on Cerberus which also included a preview of several 1.0 features. You can check the &lt;a href=&#34;https://speakerdeck.com/nicola/cerberus&#34;&gt;slides&lt;/a&gt; to get a general idea of the tool, its usage, and upcoming features.&lt;/p&gt;
&lt;p&gt;Let’s now look at some of the relevant features and changes introduced with Cerberus 1.0. For a (mostly) accurate list of changes and new features, have a look at the &lt;a href=&#34;http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="http://python-cerberus.org">Cerberus</a> is a lightweight and extensible data validation library for Python. Beta has been around since 2012. During this time Cerberus has been serving as the validation system for <a href="http://python-eve.org">Eve</a> core. It has been also adopted by a <a href="https://github.com/search?q=from+cerberus+import+Validator&amp;type=Code&amp;utf8=%E2%9C%93">quite a lot</a> open source projects, averaging around 18K downloads per month on PyPI and collecting some remarkable <a href="https://speakerdeck.com/nicola/cerberus?slide=56">endorsements</a>.</p>
<p>All things considered, I would dare to claim that Cerberus is battle tested to death. This is, in fact, one reason why I believe that the time for a canonical and stable release has come. Another reason is that next release is a major one. It brings a ton of important <a href="http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0">new features</a> along with very significant code refactoring and a redesigned, powerful <a href="http://docs.python-cerberus.org/en/latest/api.html">API</a>. Third, next release <a href="http://docs.python-cerberus.org/en/latest/changelog.html#breaking-changes">breaks</a> backward compatibility, and we want to signal that in the version number.</p>
<p>So next Cerberus release will be 1.0. If you have been following the development this will come as no surprise, as a Release Candidate has been out for a while. As a Cerberus user you will want to take the plunge and upgrade to 1.0 because well, it is just too cool to be true. If new to Cerberus you will also want to adopt 1.0 right away, for the same reason. If you are new however, make sure you get the <a href="https://cerberus.readthedocs.io/en/latest/usage.html#cerberus-usage">basics covered</a> before reading further. By the way, at latest PyCon Italy I gave a talk on Cerberus which also included a preview of several 1.0 features. You can check the <a href="https://speakerdeck.com/nicola/cerberus">slides</a> to get a general idea of the tool, its usage, and upcoming features.</p>
<p>Let’s now look at some of the relevant features and changes introduced with Cerberus 1.0. For a (mostly) accurate list of changes and new features, have a look at the <a href="http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0">changelog</a>.</p>
<h2 id="transformation-and-normalization">Transformation and normalization</h2>
<p>Big news in the normalization department. Similar to <code>validated()</code>, the new <code>normalized()</code> method returns a normalized copy of a document without validating it.</p>
<script src="https://gist.github.com/nicolaiarocci/d67e66bd0970225cfdd032952d9ed651.js"></script>

<h3 id="renaming-of-fields">Renaming of Fields</h3>
<p>You can now define a field to be renamed before any further processing.</p>
<script src="https://gist.github.com/nicolaiarocci/19346b40a34a3a99f512d3a9e97744b2.js"></script>

<p>To let a callable rename a field or arbitrary fields, you can define a handler for renaming. If the constraint is a string, it points to a custom method.</p>
<script src="https://gist.github.com/nicolaiarocci/2eddf9ae965e66f7b2ed7bb84453dd2e.js"></script>

<p>If the constraint is an iterable, the value is processed through that chain.</p>
<script src="https://gist.github.com/nicolaiarocci/0b9f72c1e6f480f90cb845adc26b28f5.js"></script>

<h3 id="purging-unknown-fields">Purging Unknown Fields</h3>
<p>After renaming, unknown fields will be purged if the <code>purge_unknown</code> property of a <code>Validator</code> instance is <code>True</code>.</p>
<script src="https://gist.github.com/nicolaiarocci/2bc43cfb27b4148a50a217ee6fae9671.js"></script>

<p>You can set the property per keyword-argument upon initialization or as rule for subdocuments like <code>allow_unknown</code>. The default is <code>False</code>.</p>
<h3 id="default-values">Default Values</h3>
<p>You can set default values for missing fields in the document by using the default rule.</p>
<script src="https://gist.github.com/nicolaiarocci/829129d3a30dcf29aadee2173139690d.js"></script>

<p>You can also define a default setter callable to set the default value dynamically. The callable gets called with the current (sub)document as the only argument. If the constraint is a string, it points to a custom method.</p>
<script src="https://gist.github.com/nicolaiarocci/a9731d22994c23312f9c2569d3c58e02.js"></script>

<h3 id="value-coercion">Value Coercion</h3>
<p>Coercion has been introduced with 0.9. It allows you to apply a callable to a value before the document is validated. The return value of the callable replaces the new value in the document. This can be used to convert values or sanitize data before it is validated.</p>
<script src="https://gist.github.com/nicolaiarocci/85ba0667defc1f54486ce45b851ca548.js"></script>

<p>If the constraint is an iterable, the value is processed through that chain.</p>
<script src="https://gist.github.com/nicolaiarocci/20fd9437713f77d4cc9365162b5675eb.js"></script>

<p>Please note that <code>coerce</code> kicks in with <code>validate()</code>, not with <code>normalized()</code>.</p>
<h2 id="schema-validation">Schema Validation</h2>
<p>This is another area the is seeing a lot of changes and new, powerful things.</p>
<h3 id="registries">Registries</h3>
<p>Schema registries are awesome if your schemas shall include references to themselves (recursion) and if they contain a lot of reused parts and are supposed to be serialized. There are two default registries in the cerberus module namespace. You can use <code>schema_registry</code> to store definitions for schemas which can later be re-used:</p>
<script src="https://gist.github.com/nicolaiarocci/d7bf19da6a6505bacf7a4be7ad0058d1.js"></script>

<p>And you can extend <code>rules_set_registry</code> with rules-sets which can then be referenced in validation schemas:</p>
<script src="https://gist.github.com/nicolaiarocci/c82f6a8e255cd408d02afca8d2be0012.js"></script>

<h3 id="schema-constraints-in-docstrings">Schema Constraints in docstrings</h3>
<p>Validation schemas themselves are validated when passed to the validator or a new set of rules is set for a document’s field. A <code>SchemaError</code> is raised when an invalid validation schema is encountered.</p>
<p>Now you can provide constraints as literal Python expression in the docstring of the rule’s implementing method to validate the arguments given in a schema for that rule. Either the docstring contains solely the literal or the literal is placed at the bottom of the docstring preceded by the following sentence: <code>The rule's arguments are validated against this schema</code>.</p>
<p>The example below is comes directly from Cerberus’ own test suite:</p>
<script src="https://gist.github.com/nicolaiarocci/71575bca60ba1993e5e59cdc3f3a9f1a.js"></script>

<h2 id="validation-rules">Validation Rules</h2>
<h3 id="forbidden"><code>forbidden</code></h3>
<p>Opposite to <code>allowed</code>, this new rule validates if a value is any but one of the defined values:</p>
<script src="https://gist.github.com/nicolaiarocci/b7ea2a0170c2e67e0b1c5d59cff80879.js"></script>

<h3 id="min-max"><code>min</code>, <code>max</code></h3>
<p>Up to 0.9 you could only use <code>min</code> and <code>max</code> to compare numeric types. Now they define minimum and maximum values allowed for any types that implement comparison operators.</p>
<script src="https://gist.github.com/nicolaiarocci/2e356654c5bd0f98f95473bf27ef2d2e.js"></script>

<h3 id="keyschema"><code>keyschema</code></h3>
<p>For better consistency, the <code>propertyschema</code> rule has been renamed to <code>keyschema</code>. This is the counterpart to <code>valueschema</code> and validates the <em>keys</em> of a <code>dict</code>.</p>
<script src="https://gist.github.com/nicolaiarocci/f553cf446a986058a836a08206076573.js"></script>

<h3 id="type"><code>type</code></h3>
<p>Data type validation now also supports the <code>binary</code> type.</p>
<h2 id="breaking-changes">Breaking Changes</h2>
<p>This is a major release which breaks backward compatibility in several ways. Don’t worry, these changes are for the better. However, if you are upgrading, then you should really take the time to read the list of changes in the <a href="http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0">changelog</a> and consider their impact on your codebase, especially so if you have custom validators sitting around. For your convenience, there are also some <a href="http://docs.python-cerberus.org/en/latest/upgrading.html">upgrade notes</a> available.</p>
<h2 id="acknowledgements">Acknowledgements</h2>
<p>Cerberus 1.0 would not exist in its current form without the incredible work done by Frank “<a href="https://github.com/funkyfuture">funkyfuture</a>” Sachsenheim. After his initial, timid, set of v0.9 contributions, Frank went on a rage. He really adopted the project and went on touching on every aspect of it: documentation, new features, proposal, fixes, refactoring, ticket triaging, you-name-it. His efforts have been instrumental in taking the project to the next level. As a token of appreciation for his work, I’m tagging this release with the <code>funkyfuture</code> codename.</p>
<p>Of course he was not alone. Other contributors were Matthew Ellison, Dominik Kellner, Damián Nohales, calve, Roman Redkovich. And then are all the other people who helped by opening tickets and spreading the word around. Thank you all, folks.</p>
<h2 id="closing-notes">Closing notes</h2>
<p>Cerberus 1.0 is an important milestone. I consider the API to be reasonably stable and, once it is released, I plan to let it settle down for a while. Release Candidate will stay out for a couple more weeks, which is ideal for you to experiment a little bit before the final release.</p>
<p>If you are a Eve user you probably see the potential that new Cerberus can offer to your RESTful API, especially in the normalization department. Don’t get too excited though as I do not plan on immediately adding Cerberus 1.0 to Eve. Next Eve release (v0.7), which is also upcoming, will be focused on MongoDB Aggregation Framework and other things. That is more than enough for a major release. I am targeting the following release (v0.8) for Cerberus 1.0 support.</p>
<p>So, have fun with New Cerberus. As usual, please report any issue on the <a href="https://github.com/nicolaiarocci/cerberus/issues">ticket</a> system.</p>
<p>If you want to get in touch, I am <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>]]></content:encoded>
    </item>
    <item>
      <title>My Crazy Speaking Month</title>
      <link>https://nicolaiarocci.com/crazy-speaking-month/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/crazy-speaking-month/</guid>
      <description>April was definitely my crazy Speaking Month. After an almost one year long self-imposed conference hiatus, I was challenged to deliver four different talks, attend two discussion panels, give one live demo and release one interview. All in a three weeks period span. First I went to PyCon Sette in Florence. A few days later a plane took me to St. Petersburg, Russia, for PiterPy. Finally, the next weekend I was in Rome for the Western Europe Microsoft MVP Community Day.</description>
      <content:encoded><![CDATA[<p>April was definitely my crazy Speaking Month. After an almost one year long self-imposed conference hiatus, I was challenged to deliver four different talks, attend two discussion panels, give one live demo and release one interview. All in a three weeks period span. First I went to <a href="http://www.pycon.it">PyCon Sette</a> in Florence. A few days later a plane took me to St. Petersburg, Russia, for <a href="http://www.it-sobytie.ru/en/events/5862">PiterPy</a>. Finally, the next weekend I was in Rome for the <a href="https://mvp.microsoft.com">Western Europe Microsoft MVP Community Day</a>. In the meantime several Channel 9 TecHeroes episodes were due for release. This was of course super exciting. And challenging.</p>
<p>This post is not much (or only) about my talks or performance, but hopefully more around the different communities I got a chance to interact with.</p>
<h2 id="pycon-sette-florence">PyCon Sette, Florence</h2>
<p>PyCon Italy is like home to me. Here, back in 2012, I gave my first Python talk which also happened to be my first English talk ever. Back then Italy was hosting EuroPython 2012, the general assembly of the European Python community, so we had people flying in from all over the continent (and beyond). And I was there all alone, a .NET guy who knew no one, pretending to teach pythonistas how to <a href="https://speakerdeck.com/nicola/developing-restful-web-apis-with-python-flask-and-mongodb">properly build a REST API powered by MongoDB and Flask</a>. Talk about putting myself out of my comfort zone. That talk was important for many reasons, I won’t go into them, suffice to say that, without it, the <a href="http://python-eve.org">Eve</a> project would not exist now.</p>
<p>The following years I went back with more talks. After the three booming EuroPython years we saw the number of PyCon attendees drop from the 700s to the about 150 at PyCon Cinque. Following that first post-EuroPython event however the numbers started to raise. Fast. So fast, in fact, that this year we ended up celebrating the all-time high of 575 attendees. An impressive result, as it almost tops EuroPython numbers. We owe a lot to the skill, expertise and braveness of the PyCon Italy organizers. They are simply awesome, and tireless. Such a result, however, also a is a testimony of how strong, vibrant and resilient the Italian community around Python is.</p>
<p>This year I was there to give my first <a href="https://speakerdeck.com/nicola/cerberus">Cerberus talk</a>. The room was packed full, everything went smoothly (at least from my perspective) and when all was done and said I was left with the impression that the project was well received. My only regret is that I totally forgot to submit the talk for the English track. I also took part in the Python Web Framework Royal Rumble, a panel in which Django, Flask, Pyramid and TurboGear champions were to fight each other. I was <a href="https://speakerdeck.com/nicola/flask-web-development-one-drop-at-a-time">defending the Flask flag</a>, and it was a lot of fun.</p>
<p>The Italian Python community is cozy and friendly as always, stronger than ever. PyCon in Florence keeps improving its already high standard. My only suggestion would be to reverse the English/Italian tracks ratio. I would go for an all-English conference with just one track for Italian language. I am sure a lot of guests would flock in from nearby countries. I mean who would not want to visit Florence, and Tuscany Plus, many pythonistas already have very fond memories from the Italian EuroPython years and I am sure they would love to come back.</p>
<h2 id="piterpy-st-petersburg">PiterPy, St. Petersburg</h2>
<p>PiterPy is an important and very well organized Python event which gathers attendees not only from St. Petersburg, but also from other Russian cities and nearby countries.</p>
<p>I was invited by the conference organizers to talk about project Eve. I was honoured, excited and curious to meet fellow pythonistas from the Eastern Europe. Other headliners were Chris Ewing, Gael Varoquaux, Hynek Schlawack, Simone Soldateschi and Fabio Natali. As you can tell, we all have different backgrounds and specialize on different things, as it should be when you want to present your audience with different interesting aspects of your stack of choice.</p>
<p>I did my <a href="https://speakerdeck.com/nicola/eve-rest-api-for-humans">Eve talk</a> and then even managed to sneak in lightening talk on Cerberus. I was also interviewed by Vladimir Filonov (I think the recording is due out soon) and to my surprise the interview was not on my open source activity but rather on the Italian Python community. It turns out that in Russia they care a lot about the community, and they are eager to know more about other Python communities scattered all around Europe. Freaking awesome, if you ask me.</p>
<p>Organizers were professional and friendly all the time, letting me feel comfortable right from the start. In fact I was just off the plane when I met with Maxim Klymyshyn, who took me from the Airport to the conference location. The venue itself (Original Sokos Olympia Garden, conveniently located close to St. Petersburg’s city center) was probably one of the best, if not the best, conference venue I ever been at. And what about the attendees? They were very welcoming with their international guests and language barrier was not an issue as many of them speak very good English (often better than mine). Be warned however, when given the opportunity they will not hesitate to challenge the unwary speaker with the hardest of questions. I am told (by the attendees themselves) that this is in fact a trait of the Russian people. They won’t be shy when they have something to say. As a speaker, I really appreciated the attitude!</p>
<p>The day after the conference a cultural trip to <a href="https://en.wikipedia.org/wiki/Catherine_Palace">Catherine Palace</a> in Pushkin was planned for both speakers and attendees. That was terrific. Should you go to St. Petersburg, on a business trip or just as a tourist, make sure you visit Catherine Palace. You won’t regret it.</p>
<p>My eternal gratitude goes to Vladimir Shulyak and Dmitry Nazarov for taking me and my new buddy Chris Ewing out for diner and then on a super nice walk around the city center. Special thanks to Serge Matveenko, Diana Lyubavskaya and the rest of the team for inviting us and, most importantly, for putting up such a great event. I am sure PiterPy will soon become a relevant event within the international community.</p>
<h2 id="western-europe-mvp-community-day-rome">Western Europe MVP Community Day, Rome</h2>
<p>This was my first time as a MVP to a Microsoft event. Not only that. This was actually a MVP-only event and I was there to give a talk to experienced MVPs who, for the most part, have been in the program for years. Kind of intimidating, although I was reassured by the fact that my proposal had been voted by the MVP community itself.</p>
<p>Like at my first Python conference years ago I knew no one there, not personally at least, so it took some balls win my shyness and introduce myself to the first person I recognized, that one being <a href="https://mvp.microsoft.com/it-it/PublicProfile/4020723?fullName=Alessandro%20%20Del%20Sole">Alessandro Del Sole</a>, a long time MVP veteran. He and his pals were super nice and only moments after introducing myself to them I was already feeling part of the community. A very empowering feeling. Later during the evening and even more so the following day, at the conference, I got to meet and know a lot of new friends, all very knowledgeable in their craft, which is awesome.</p>
<p>I would say that the focus of the event was about Microsoft’s new openness toward other stacks and communities, which also helped in making me feel comfortable. I gave my <a href="https://speakerdeck.com/nicola/real-life-net-cross-platform">Real Life .NET Cross Platform</a> talk, with good feedback. SimpleCache, which was used as an example project and wasn’t really the main topic, got a lot of interest so I may actually release it on NuGet soon (blog post coming). My highlight for the event though, would be Karen Juhl keynote during which I suddenly realized that a picture of me, along with quotes from <a href="nicolaiarocci.com/look-mum-im-an-mvp/">one of my articles</a>, was being shown on stage. It took me a few seconds to realize what was going on, as it was totally unexpected. That was crazy, and mesmerizing. Later, when I got to talk with Karen, I learned that that very same slide has been used at several MVP events across Europe. So exciting!</p>
<p>The conference was closed by an Open Source Communities Panel, to which I was invited as a member of multiple communities.</p>
<p>The next day I was at the OpenDomus.net event, where I got a chance to repeat my cross platform talk (this time in Italian), and then to give a live demo of Ubuntu Bash on Windows. That one was interesting, and surprising I think, for many attendees. A few days later, with <a href="https://twitter.com/_geniodelmale?lang=it">Lorenzo Barbieri</a>, we recorded a Best of Build 2016 episode on the same topic (link below).</p>
<h2 id="techeroes-interlude">TecHeroes Interlude</h2>
<p>April and March were also the months in which I and Lorenzo Barbieri recorded and released a few MSDN TecHeroes Italy episodes:</p>
<ul>
<li><a href="https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-VSVim-Editor">Vim for Visual Studio</a></li>
<li><a href="https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-Python-tools-per-Visual-Studio">Python Tools for Visual Studio</a></li>
<li><a href="https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-CoderDojo-Coding-Club-for-Kids">CoderDojo Coding Clubs for Kids</a></li>
<li><a href="https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-Real-Life-Net-Cross-Platform">Real Life .NET Cross Platform</a></li>
<li><a href="https://channel9.msdn.com/Shows/Best-of-Build--Italy/Bash-su-Ubuntu-su-Windows">Bash on Ubuntu on Windows</a> (actually a Best of Build episode)</li>
</ul>
<h2 id="wrapping-it-up">Wrapping it up</h2>
<p>As I mentioned at the OSS panel I am lucky to have an active role in more than one community and to work every day with diverse technologies. Now, most of the times the problems tackled by these stacks are, in fact, the same. Besides the obvious differences in semantics, what really changes and is most interesting to me is the approach, the path if you will, taken by each individual stack. For me, being exposed to multiple approaches and therefore getting a chance to appreciate the differences, the pros and cons of each one (which tend to vary depending on the situation at hand) has been invaluable. I could (and probably should) fill a blog post with the things I learned working on Python that I am now using, with profit, in C#. And vice-versa.</p>
<p>And what about the communities? Different communities, again, expose me to different cultures. That is a good thing. Being rooted into a community is great but being active in multiple communities is even better, in essence for the same reasons you’d want to become a polyglot programmer.</p>
<p>So my invite is to get involved once again, no matter how active and fit you are into a stack and its community. Try something totally new, even if it doesn’t really sound like something immediately useful to you. Because you know, cross-pollination is a good thing. And you get to party twice the time, too.</p>
<p>If you want to get in touch, I am <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve REST API Framework v0.6.2 is out</title>
      <link>https://nicolaiarocci.com/eve-rest-api-framework-v0-6-2-is-out/</link>
      <pubDate>Mon, 14 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-rest-api-framework-v0-6-2-is-out/</guid>
      <description>Today I released Eve 0.6.2. It includes many fixes and improvements over the previous releases. Areas addressed are CORS management, soft deletes, token authentication, oplog, data validation, and others. Please see the changelog for details.
Work on v0.7 is also ongoing. It will include new features such as support for the MongoDB Aggregation Framework (docs) and a few breaking changes, so you might want to check it out in advance.</description>
      <content:encoded><![CDATA[<p>Today I released <a href="http://python-eve.org">Eve</a> 0.6.2. It includes many fixes and improvements over the previous releases. Areas addressed are CORS management, soft deletes, token authentication, oplog, data validation, and others. Please see the <a href="http://python-eve.org/changelog">changelog</a> for details.</p>
<p>Work on v0.7 is also ongoing. It will include new features such as support for the MongoDB Aggregation Framework (<a href="http://python-eve.org/features.html#mongodb-aggregation-framework">docs</a>) and a few breaking changes, so you might want to check it out in advance.</p>
<p>Special thanks to Arnau Orriols, Cyril Bonnard, Hamdy, Luca Di Gaspero, Manquer, Nick Park, Patrick Decat, Prayag Verma, Ralph Smith, Stratos Gerakakis, Valerie Coffman and Wei Guan who contributed to this release.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 0.6.1 has been released</title>
      <link>https://nicolaiarocci.com/eve-0-6-1-has-been-released/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-6-1-has-been-released/</guid>
      <description>A new version of Eve, the REST API framework for Humans, has been released today. Following the 0.6 milestone released one month ago, v0.6.1 introduces some fixes and few new important features. Upgrade is strongly encouraged. As always, a changelog with full list of updates is available.</description>
      <content:encoded><![CDATA[<p>A new version of <a href="http://python-eve.org">Eve</a>, the REST API framework for Humans, has been released today. Following the 0.6 milestone released one month ago, v0.6.1 introduces some fixes and few new important features. Upgrade is strongly encouraged. As always, a <a href="http://python-eve.org/changelog#version-0-6-1">changelog</a> with full list of updates is available.</p>
]]></content:encoded>
    </item>
    <item>
      <title>My talk at Percona Live 2015</title>
      <link>https://nicolaiarocci.com/my-talk-at-percona-live-2015/</link>
      <pubDate>Fri, 16 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/my-talk-at-percona-live-2015/</guid>
      <description>The slides of my talk at Percona Live 2015 (Amsterdam) are online. It was titled “MongoDB and REST APIs a Match Made in Heaven” and it was meant as an introduction to Mongo, REST principles and the Eve python framework.
Overall it has been a pleasant experience, although I found that splitting 300 attendees through seven concurrent tracks ultimately led to too much fragmentation. People often found themselves with 2-3 interesting talks all happening simultaneously, and just had to pick one.</description>
      <content:encoded><![CDATA[<p>The slides of my talk at Percona Live 2015 (Amsterdam) are <a href="https://speakerdeck.com/nicola/mongodb-and-rest-apis-a-match-made-in-heaven">online</a>. It was titled “MongoDB and REST APIs a Match Made in Heaven” and it was meant as an introduction to Mongo, REST principles and the Eve python framework.</p>
<p>Overall it has been a pleasant experience, although I found that splitting 300 attendees through seven concurrent tracks ultimately led to too much fragmentation. People often found themselves with 2-3 interesting talks all happening simultaneously, and just had to pick one.</p>
<p>I could only stay one day so I missed all side events, speakers dinner included, which was a bummer.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Custom endpoint handlers with Eve</title>
      <link>https://nicolaiarocci.com/building-custom-endpoint-handlers-with-eve/</link>
      <pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/building-custom-endpoint-handlers-with-eve/</guid>
      <description>On Stack Overflow and the Eve mailing list, but also in my mailbox and even on Twitter, I get a lot of enquiries on how to build custom endpoints within a Eve-powered RESTful application. Now, since within Eve all endpoints are fully customizable, what they really mean is:
How do I setup endpoints without any binding to a data entity, just connected to a custom method?
They would like to call something like /mycustomendpoint and get the response from a method they have defined somewhere in the Python sources.</description>
      <content:encoded><![CDATA[<p>On <a href="https://stackoverflow.com/questions/24134383/servicing-html-requests-with-eve/">Stack Overflow</a> and the Eve <a href="https://groups.google.com/forum/?hl=en#!topic/python-eve/LM9kZkgq3vA">mailing list</a>, but also in my mailbox and even on Twitter, I get a lot of enquiries on how to build custom endpoints within a Eve-powered RESTful application. Now, since within Eve all endpoints are fully customizable, what they really mean is:</p>
<blockquote>
<p>How do I setup endpoints without any binding to a data entity, just connected to a custom method?</p>
</blockquote>
<p>They would like to call something like <code>/mycustomendpoint</code> and get the response from a method they have defined somewhere in the Python sources. The standard endpoint-entity mapping provided by Eve covers 90% of their needs, but sometimes they just need endpoints that have nothing to do with data entities.</p>
<p>This is very easy to achieve. I’m writing it down so I can point people to this post in the future.</p>
<h2 id="eve-_is_-flask">Eve <em>is</em> Flask</h2>
<p><a href="http://python-eve.org">Eve</a> is a Flask application and I really mean it since it is, in fact, a Flask subclass. Eve adds out-of-the-box <a href="http://python-eve.org/features">RESTful capabilities</a> to the Flask micro-framework. Most of the time you will be happy with just Eve’s own features but remember, the full <a href="http://flask.pocoo.org">Flask</a> (and <a href="http://werkzeug.pocoo.org">Werkzeug</a> at a lower level) features set is also part of your arsenal.</p>
<blockquote>
<p>Whatever you can do with Flask, you can do with Eve</p>
</blockquote>
<p>So yes, of course you can easily set some functions to be invoked when a custom endpoint is hit with a request. The following snippet is a slightly modified version of Flask’s very own <a href="http://flask.pocoo.org/docs/0.10/quickstart/#a-minimal-application">Quickstart</a> tutorial:</p>
<script src="https://gist.github.com/nicolaiarocci/01ea2cd1068afc99f9e38f0bb9afcabf.js"></script>

<p>By decorating the <code>hello_world</code> method with the <code>route</code> decorator we added a new endpoint to the application. Each time a request to <code>/hello</code> comes in, it will be routed to our custom method. Of course the regular API endpoints (either defined in <code>settings.py</code>, passed as a dict at launch, or registered live by calling the <code>register_resource</code> method) will also be available.</p>
<p>If you have an <a href="http://python-eve.org/authentication.html">Eve authentication class</a> securing regular API endpoints, you can apply it to your custom endpoint too. Just add a <code>requires_auth</code> decorator:</p>
<script src="https://gist.github.com/nicolaiarocci/3fc0379e083266f20faf12b209108aa9.js"></script>

<p>Say that you saved the above snippet as <em>run.py</em> and also have your RESTful endpoints properly <a href="http://python-eve.org/config">configured</a>. Launch the script:</p>
<script src="https://gist.github.com/nicolaiarocci/697f85ee10b7e0c0b601fdd21b171a15.js"></script>

<p>You can now point your browser to <code>http://localhost:5000/hello/</code> and enjoy the application greeting. Or you can consume any other configured API endpoint.</p>
<p>As all of Flask features are at your fingertips you might as well opt for registering a <a href="http://flask.pocoo.org/docs/0.10/blueprints/">blueprint</a>, which is what the awesome <a href="https://github.com/charlesflynn/eve-docs">Eve-Docs</a> extension is doing in order to provide a static HTML <code>/docs</code> endpoint on top of any Eve powered API.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Cerberus 0.9 has been released</title>
      <link>https://nicolaiarocci.com/cerberus-0-9-has-been-released/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/cerberus-0-9-has-been-released/</guid>
      <description>A few days ago Cerberus 0.9 was released. It includes a bunch of new cool features, let’s browse through some of them.
Collection rules First up is the new set of anyof, allof, noneof and oneof validation rules. anyof allows you to list multiple sets of rules to validate against. The field will be considered valid if it validates against one set in the list. For example, to verify that a property is a number between 0 and 10 or 100 and 110, you could do the following:</description>
      <content:encoded><![CDATA[<p>A few days ago <a href="https://github.com/nicolaiarocci/cerberus">Cerberus 0.9</a> was released. It includes a bunch of new cool features, let’s browse through some of them.</p>
<h2 id="collection-rules">Collection rules</h2>
<p>First up is the new set of <code>anyof</code>, <code>allof</code>, <code>noneof</code> and <code>oneof</code> validation rules. <code>anyof</code> allows you to list multiple sets of rules to validate against. The field will be considered valid if it validates against one set in the list. For example, to verify that a property is a number between 0 and 10 or 100 and 110, you could do the following:</p>
<pre><code>&gt;&gt;&gt; schema = {
...     'prop1': {
...         'type': 'number',
...         'anyof': [
...             {'min': 0, 'max': 10}, 
...             {'min': 100, 'max': 110}
...         
...         ]
...     }
... }

&gt;&gt;&gt; doc = {'prop1': 5}
&gt;&gt;&gt; v.validate(document, schema)
True

&gt;&gt;&gt; doc = {'prop1': 105}
&gt;&gt;&gt; v.validate(document, schema)
True

&gt;&gt;&gt; doc = {'prop1': 55}
&gt;&gt;&gt; v.validate(document, schema)
False
</code></pre>
<p><code>allof</code> is the same as <code>anyof</code>, except that all rule collections in the list must validate. Same pattern applies to <code>noneof</code> (no rule in collection must validate) and <code>oneof</code> (only one rule in collection must validate).</p>
<h2 id="type-coercion">Type coercion</h2>
<p>Type coercion allows you to apply a callable to a value before any other validators run. The return value of the callable replaces the new value in the document. This can be used to convert values or sanitize data before it is validated.</p>
<pre><code>&gt;&gt;&gt; v = Validator({'amount': {'type': 'integer'}})
&gt;&gt;&gt; v.validate({'amount': '1'})
False

&gt;&gt;&gt; v = Validator({
...     'amount': {
...         'type': 'integer', 
...         'coerce': int
...     }
... })
&gt;&gt;&gt; v.validate({'amount': '1'})
True
&gt;&gt;&gt; v.document
{'amount': 1}

&gt;&gt;&gt; to_bool = lambda v: v.lower() in ['true', '1']
&gt;&gt;&gt; v = Validator({
...     'flag': {
...         'type': 'boolean', 
...         'coerce': to_bool
...     }
... })
&gt;&gt;&gt; v.validate({'flag': 'true'})
True

&gt;&gt;&gt; v.document
{'flag': True}
</code></pre>
<h2 id="properties-keys-validation">Properties (keys) validation</h2>
<p><code>propertyschema</code> is the counterpart to <code>valueschema</code> (also new, it replaces the now deprecated <code>keyschema</code>) and validates the keys of a dictionary.</p>
<pre><code>&gt;&gt;&gt; schema = 'a_dict': {
...     'type': 'dict', 
...     'propertyschema': {
...         'type': 'string', 
...         'regex': '[a-z]+'
...     }
... }

&gt;&gt;&gt; document = {'a_dict': {'key': 'value'}}
&gt;&gt;&gt; v.validate(document, schema)
True

&gt;&gt;&gt; document = {'a_dict': {'KEY': 'value'}}
&gt;&gt;&gt; v.validate(document, schema)
False
</code></pre>
<h2 id="list-of-types">List of types</h2>
<p>The <code>type</code> rule can now be a list of types, to allow for different type of values for the field.</p>
<pre><code>&gt;&gt;&gt; v = Validator({
...     'quotes': {
...         'type': ['string', 'list']
...     }
... })

&gt;&gt;&gt; v.validate({'quotes': 'Hello world!'})
True

&gt;&gt;&gt; v.validate({'quotes': ['Do not disturb my circles!', 
...                        'Heureka!']})
True

&gt;&gt;&gt; v = Validator({
...     'quotes': {
...         'type': ['string', 'list'], 
...         'schema': {'type': 'string'}
...     }
... })

&gt;&gt;&gt; v.validate({'quotes': 'Hello world!'})
True 

&gt;&gt;&gt; v.validate({'quotes': [1, 'Heureka!']})
False

&gt;&gt;&gt; v.errors
{'quotes': {0: 'must be of string type'}}
</code></pre>
<p>And there is more so make sure you check the <a href="https://cerberus.readthedocs.org/en/latest/#changelog">changelog</a> before upgrading. No breaking changes but there’s at least one deprecation, as mentioned.</p>
<p>Fun fact: Cerberus is currently getting 3x the downloads of his sister project <a href="https://github.com/nicolaiarocci/eve">Eve</a>, the REST API Framework for which the tool was originally conceived. Interesting if you consider that Eve is featuring 10x the GitHub stars. Fun, but not really surprising since Cerberus probably has a broader audience.</p>
<p>Special thanks to Frank Sachsenheim, Tobias Betz, Brett and C.D. Clark III for their valuable contributions to this release.</p>
<p>If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Talk Python To Me Podcast Episode #1: EVE RESTful APIs for Humans</title>
      <link>https://nicolaiarocci.com/talk-python-to-me-podcast-episode-1-eve-restful-apis-for-humans/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/talk-python-to-me-podcast-episode-1-eve-restful-apis-for-humans/</guid>
      <description>I was lucky enough be the first guest for the shiny new Talk Python To Me Podcast hosted by Michael Kennedy. In this episode we talk about Eve an my other open source releases, which gives us an excuse to touch on a variety of topics such as Polyglot Programming, New Microsoft and the .NET evolution, MongoDB and the Open Source eco-system as seen from the point of view of an old fart who has been spending most of his career in closed systems.</description>
      <content:encoded><![CDATA[<p>I was lucky enough be the first guest for the shiny new <a href="http://www.talkpythontome.com">Talk Python To Me Podcast</a> hosted by Michael Kennedy. In this episode we talk about Eve an my other open source releases, which gives us an excuse to touch on a variety of topics such as Polyglot Programming, New Microsoft and the .NET evolution, MongoDB and the Open Source eco-system as seen from the point of view of an old fart who has been spending most of his career in closed systems.</p>
<p><a href="http://www.talkpythontome.com/episodes/show/1/eve-restful-apis-for-humans"><img loading="lazy" src="/images/Screen-Shot-2015-04-01-at-10.16.08.png" alt="Talk Python To Me"  />
</a></p>
<p>Michael has a great lineup ready for the next episodes, so make sure you subscribe to his show. It is also available on <a href="https://itunes.apple.com/us/podcast/talk-python-to-me-python-conversations/id979020229">iTunes</a>.</p>
<p>If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>New Releases for Cerberus and Eve</title>
      <link>https://nicolaiarocci.com/new-releases-for-cerberus-and-eve/</link>
      <pubDate>Tue, 17 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/new-releases-for-cerberus-and-eve/</guid>
      <description>Yesterday Cerberus 0.8.1 was released with a few little fixes, one of them being more a new feature than a fix really: sub-document fields can now be set as field dependencies by using a ‘dotted’ notation.
So, suppose we set the following validation schema:
schema = { &#39;test_field&#39;: { &#39;dependencies&#39;: [ &#39;a_dict.foo&#39;, &#39;a_dict.bar&#39; ] }, &#39;a_dict&#39;: { &#39;type&#39;: &#39;dict&#39;, &#39;schema&#39;: { &#39;foo&#39;: {&#39;type&#39;: &#39;string&#39;}, &#39;bar&#39;: {&#39;type&#39;: &#39;string&#39;} } } } Then, we can validate a document like this:</description>
      <content:encoded><![CDATA[<p>Yesterday <a href="https://github.com/nicolaiarocci/cerberus">Cerberus 0.8.1</a> was released with a few little <a href="https://github.com/nicolaiarocci/cerberus/blob/master/CHANGES">fixes</a>, one of them being more a new feature than a fix really: sub-document fields can now be set as field dependencies by using a ‘dotted’ notation.</p>
<p>So, suppose we set the following validation schema:</p>
<pre><code>schema = {
  'test_field': {
    'dependencies': [
      'a_dict.foo', 
      'a_dict.bar'
    ]
  },
  'a_dict': {
    'type': 'dict',
      'schema': {
        'foo': {'type': 'string'},
        'bar': {'type': 'string'}
      }
  }
}
</code></pre>
<p>Then, we can validate a document like this:</p>
<pre><code>&gt;&gt;&gt; v = Validator(schema)
&gt;&gt;&gt; document = {
      'test_field': 'foobar', 
      'a_dict': {'foo': 'foo'}
    }

&gt;&gt;&gt; v.validate(document, schema)
False

&gt;&gt;&gt; v.errors
{'test_field': &quot;field 'a_dict.bar' is required&quot;}
</code></pre>
<p>This release will not work with Eve 0.5.2 or less so if you want to use Cerberus 0.8.1 with Eve make sure you upgrade to <a href="https://pypi.python.org/pypi/Eve">Eve 0.5.3</a>, released today. By the way, yesterday we hit 2K stargazers and 70 contributors on the <a href="https://github.com/nicolaiarocci/eve">Eve repository</a>, quite the milestone!</p>
<p>If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 0.5.2 ‘Giulia’ is Out</title>
      <link>https://nicolaiarocci.com/eve-0-5-2-giulia-is-out/</link>
      <pubDate>Mon, 23 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-5-2-giulia-is-out/</guid>
      <description>Eve 0.5.2 has just been released with a bunch of interesting fixes and documentation updates. See the changelog for details.</description>
      <content:encoded><![CDATA[<p><a href="https://pypi.python.org/pypi/Eve">Eve 0.5.2</a> has just been released with a bunch of interesting fixes and documentation updates. See the <a href="http://python-eve.org/changelog#version-0-5-2">changelog</a> for details.</p>
]]></content:encoded>
    </item>
    <item>
      <title>On Sustainable Open Source Management</title>
      <link>https://nicolaiarocci.com/sustainable-open-source-management/</link>
      <pubDate>Fri, 06 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/sustainable-open-source-management/</guid>
      <description>Tom Christie has some very good things to say on how to successfully maintain an open source project without losing sanity.
Truth one: There are, and will always be, a non-finite number of possible valid issues to address. Your code can always be better polished, your APIs better defined, and your project more fully featured. Your documentation can always be better. The ecosystem within which your project lives is constantly evolving.</description>
      <content:encoded><![CDATA[<p>Tom Christie has some very good things to say on how to successfully maintain an open source project without losing sanity.</p>
<blockquote>
<p>Truth one: There are, and will always be, a non-finite number of possible valid issues to address. Your code can always be better polished, your APIs better defined, and your project more fully featured. Your documentation can always be better. The ecosystem within which your project lives is constantly evolving. You will never run out of things you could work on. Ever.</p>
<p>Truth two: You have finite resources. Damn.</p>
</blockquote>
<p>If you are an open source maintainer, contributor or even a user do yourself a favour and <a href="http://www.dabapps.com/blog/sustainable-open-source-management/">read what Tom has to say</a> on the subject. Tom is the creator and maintainer of the Django REST Framework, a hugely successful open source project so he really knows what he’s talking about. And for what is worth, his conclusions mirror mines.</p>
<p>On a completely unrelated note, I met Tom at EuroPython 2014. He was so nice to come and meet me minutes after I was done delivering my <a href="https://speakerdeck.com/nicola/eve-rest-api-for-humans">REST API for Humans</a> talk. Good vibes.</p>
]]></content:encoded>
    </item>
    <item>
      <title>How about a Sentinel for your Flask Application?</title>
      <link>https://nicolaiarocci.com/a-sentinel-for-your-flask-applications/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/a-sentinel-for-your-flask-applications/</guid>
      <description>Flask-Sentinel is a OAuth2 Server implementation of the Resource Owner Password Credentials Grant pattern described in Section 1.3.3 of RFC 6749. It is powered by Flask-Oauthlib, Redis and MongoDB and is bundled as a Flask extension so it can be used to add OAuth2 capabilities to an existing application.
So what is the Resource Owner Password Credentials Grant pattern? According to the official RFC:
The resource owner password credentials (i.e., username and password) can be used directly as an authorization grant to obtain an access token.</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/nicolaiarocci/flask-sentinel">Flask-Sentinel</a> is a OAuth2 Server implementation of the Resource Owner Password Credentials Grant pattern described in <a href="http://tools.ietf.org/html/rfc6749#section-1.3.3">Section 1.3.3 of RFC 6749</a>. It is powered by Flask-Oauthlib, Redis and MongoDB and is bundled as a Flask extension so it can be used to add OAuth2 capabilities to an existing application.</p>
<p>So what is the Resource Owner Password Credentials Grant pattern? According to the official RFC:</p>
<blockquote>
<p>The resource owner password credentials (i.e., username and password) can be used directly as an authorization grant to obtain an access token. The credentials should only be used when there is a high degree of trust between the resource owner and the client (e.g., the client is part of the device operating system or a highly privileged application).</p>
</blockquote>
<p>A typical use case would be when the remote API maintainer controls the client application. Say that you have a REST API being consumed by your own iOS, Android, WinPhone, desktop or web applications. Users register to your service by creating their accounts. Then, they consume the service using your applications.</p>
<blockquote>
<p>Even though this grant type requires direct client access to the resource owner credentials, the resource owner credentials are used for a single request and are exchanged for an access token. This grant type can eliminate the need for the client to store the resource owner credentials for future use, by exchanging the credentials with a long-lived access token or refresh token.</p>
</blockquote>
<p>So let’s get back at the proprietary client scenario. The user has just installed the application on his/her device. On first run he/she is asked to provide his/her username and password. These are sent to the OAuth2 server through a SSL/TLS encrypted channel. If the user is registered for the service and the client id, which has also been sent along with the user credentials, is recognised, then the server sends back a valid access token. Otherwise responds with a <code>401 Unhautorized</code>.</p>
<p>From now on the application will only be using the access token for all requests until, eventually, the token expires. If that happens, the cycle repeats. Please note that in this scenario the client does not need to (and probably should not) store the username and/or password on the local cache. The User Credentials pattern usually relies on long lived tokens so asking again for username and password is not a big deal (you could also opt for permanent, revokable tokens.)</p>
<p>Flask-Sentinel provides two endpoints: one for token creation which defaults to <code>/oauth/token</code> and is consumed by clients, and another for users and clients management, accessible at <code>/oauth/management</code>:</p>
<!-- raw HTML omitted -->
<p>Note that the password is hashed and salted on the server, so no plain password is stored on either sides of the channel.</p>
<p>Only existing users and recognised clients will be provided an access token. A typical token request would be as follows:</p>
<pre><code>$ curl -k -X POST -d \
  &quot;client_id=9qFbZD4udTzFVYo0u5UzkZX9iuzbdcJDRAquTfRk&amp;
   grant_type=password&amp;
   username=jonas&amp;
   password=pass&quot; \
   &lt;api_url&gt;/oauth/token
</code></pre>
<p>And the response would be like so:</p>
<pre><code>{
    &quot;access_token&quot;: &quot;NYODXSR8KalTPnWUib47t5E8Pi8mo4&quot;, 
    &quot;token_type&quot;: &quot;Bearer&quot;, 
    &quot;refresh_token&quot;: &quot;s6L6OPL2bnKSRSbgQM3g0wbFkJB4ML&quot;, 
    &quot;scope&quot;: &quot;&quot;
}
</code></pre>
<p>The client can now use the access token to access protected API endpoints:</p>
<pre><code>$ curl -k -H \
  &quot;Authorization:Bearer NYODXSR8KalTPnWUib47t5E8Pi8mo4&quot; \
  &lt;api_url&gt;/endpoint

200 OK
</code></pre>
<p>There are a number of configuration options of course, for example you can change the url of token and management endpoints, set token expiration, setup database connection, stuff like that. Redis is used to store active access tokens, allows for optimal performance.</p>
<p>While you can use Flask-Sentinel to extend an existing API, you might want to instance it as a stand-alone Flask application to optimize for scalability. You would end up with a distributed network of three different (micro)services: the OAuth2 server, the resouces API with protected endpoints as needed, and the Redis instance bridging the two. Check out the <a href="https://github.com/nicolaiarocci/flask-sentinel">project page</a> on GitHub for details.</p>
<p>Of course Flask-Sentinel integrates seamlessly with any <a href="http://python-eve.org">Eve</a> powered REST API. Check out the <a href="https://github.com/nicolaiarocci/eve-oauth2">Eve-OAuth2</a> sample, a fork of the original Eve-Demo project with a couple protected endpoints and a static HTML page, also protected.</p>
<p>The project is very new and lacks a few little things, but I suspect it is already usable even at this stage. Enjoy!</p>
<p>If you want to get in touch, I am <a href="http://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 0.5.1 Released</title>
      <link>https://nicolaiarocci.com/eve-0-5-1-released/</link>
      <pubDate>Fri, 16 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-5-1-released/</guid>
      <description>Eve 0.5.1 was just released with a couple fixes to 0.5 (which was released earlier this week.) Don’t be surprised. Going forward I’m striving for a much faster release cycle, especially so when it comes to fixes.</description>
      <content:encoded><![CDATA[<p><a href="https://pypi.python.org/pypi/Eve">Eve 0.5.1</a> was just released with a <a href="http://python-eve.org/changelog#version-0-5-1">couple fixes</a> to 0.5 (which was released earlier this week.) Don’t be surprised. Going forward I’m striving for a much faster release cycle, especially so when it comes to fixes.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Announcing Eve-SQLAlchemy the official SQL extension for the Eve REST Framework</title>
      <link>https://nicolaiarocci.com/announcing-eve-sqlalchemy-the-official-sql-extension-for-the-eve-rest-framework/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/announcing-eve-sqlalchemy-the-official-sql-extension-for-the-eve-rest-framework/</guid>
      <description>Powered by SQLAlchemy and good intentions, Eve-SQLAlchemy is an official Eve extension which allows to effortlessly build and deploy highly customizable, fully featured RESTful Web Services with SQL backends.
As with all Eve extensions, once installed with
$ pip install eve-sqlalchemy using Eve-SQLAlchemy is very simple:
from eve import Eve from eve_sqlalchemy import SQL app = Eve(data=SQL) app.run() On a fresh virtualenv (of course you are using virtualenvs, right?) the install will also setup Eve and all its dependencies for you.</description>
      <content:encoded><![CDATA[<p>Powered by SQLAlchemy and good intentions, <a href="https://github.com/RedTurtle/eve-sqlalchemy">Eve-SQLAlchemy</a> is an official <a href="http://python-eve.org">Eve</a> extension which allows to effortlessly build and deploy highly customizable, fully featured RESTful Web Services with SQL backends.</p>
<p>As with all Eve extensions, once installed with</p>
<pre><code>$ pip install eve-sqlalchemy
</code></pre>
<p>using Eve-SQLAlchemy is very simple:</p>
<pre><code>from eve import Eve
from eve_sqlalchemy import SQL

app = Eve(data=SQL)
app.run()
</code></pre>
<p>On a fresh virtualenv (of course you are using virtualenvs, right?) the install will also setup Eve and all its dependencies for you. For a complete tutorial you can visit the Eve-SQLAlchemy <a href="http://eve-sqlalchemy.readthedocs.org/">Support Website</a>.</p>
<p>If you have been following the Eve development you probably know that the original plan was to release SQL support within the Eve core, alongside with the native MongoDB layer. In fact, in a <a href="http://nicolaiarocci.com/open-source-and-code-responsibility/">long rant</a> on open source and code responsibility I took the chance to outline the path forward.</p>
<p>However, if you check the discussion which spread in the comments below that post you can see how both my friend and fellow MongoDB Master <a href="http://www.flaper87.com/">Flavio</a> and the main contributor to the sqlalchemy branch <a href="https://github.com/amleczko">Andrew</a> were suggesting that a plugin system for data layers might be more appropriate. Not coincidentally that was easy to accomplish since the Eve data layer system was designed precisely with that goal in mind, right from the start.</p>
<p>So, to make a long story short, in agreement with Andrew who volountereed for the task, we changed plans. He refactored the sqlalchemy branch into a separate repository… and then the official Eve SQL extension was born. This approach also allows the extension and Eve to develop asynchronously which is ideal for a faster release cycle.</p>
<p>I like this setup so much that, if in time it shows to be as good as I think it will be, I will probably want to experiment with taking the MongoDB layer out of Eve core too. So with Eve 0.6 MongoDB support would still be preinstalled along with core (so nothing changes as first time user experience) but, being a separate package, users could easily switch to a different driver as they need, still keeping their Eve setup as light as possible.</p>
<p>So if you are willing to help with the development of a mature SQL driver please feel free to join Andrew and other contributors. Your help is more than welcome. Allow me thank them all individually, for the work they’ve been doing on the SQL code is absolutely amazing: Andrew Mleczko, Tomasz Jezierski (Tefnet), Bruce Frederiksen, Jacopo Sabbatini and Peter Zinng.</p>
<p>Get <a href="https://pypi.python.org/pypi/Eve-SQLAlchemy/0.1">Eve-SQLAlchemy v0.1</a> while it’s hot!</p>
<p>If you want to get in touch, I am <a href="http://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 0.5 released today</title>
      <link>https://nicolaiarocci.com/eve-0-5-released-today/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-5-released-today/</guid>
      <description>Eve v0.5 was released today. Cerberus v0.8 only a few days ago. A whole lot of new features, changes and fixes are coming with these releases so make sure to check the official release post to gather all the news.</description>
      <content:encoded><![CDATA[<p><a href="http://python-eve.org">Eve</a> v0.5 was released today. <a href="https://github.com/nicolaiarocci/cerberus">Cerberus</a> v0.8 only a few days ago. A whole lot of new features, changes and fixes are coming with these releases so make sure to check the <a href="http://blog.python-eve.org/eve-05-released">official release post</a> to gather all the news.</p>
]]></content:encoded>
    </item>
    <item>
      <title>How to: Add custom JeSuisCharlie header to API responses</title>
      <link>https://nicolaiarocci.com/how-to-add-a-je-suis-charlie-header-to-api-responses/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/how-to-add-a-je-suis-charlie-header-to-api-responses/</guid>
      <description>A lot of servers have been including a JeSuisCharlie header with their responses. If you haven’t already, try with Charlie Hebdo site itself:
$ curl -I charliehebdo.fr Date: Mon, 12 Jan 2015 15:56:13 GMT Content-Type: text/html; charset=iso-8859-1 Content-Length: 221 Connection: keep-alive Location: http://www.charliehebdo.fr/index.html Vary: Accept-Encoding X-Charlie-fr: Je suis toujours Charlie. X-Charlie-en: I am still Charlie. X-Charlie-es: Todavia soy Charlie. X-Charlie-de: Ich bin immer Charlie. X-Charlie-ro: Inca sunt Charlie. X-Charlie-cz: Jsem stale Charlie.</description>
      <content:encoded><![CDATA[<p>A lot of servers have been including a <code>JeSuisCharlie</code> header with their responses. If you haven’t already, try with Charlie Hebdo site itself:</p>
<pre><code>$ curl -I charliehebdo.fr
Date: Mon, 12 Jan 2015 15:56:13 GMT
Content-Type: text/html; charset=iso-8859-1
Content-Length: 221
Connection: keep-alive
Location: http://www.charliehebdo.fr/index.html
Vary: Accept-Encoding
X-Charlie-fr: Je suis toujours Charlie.
X-Charlie-en: I am still Charlie.
X-Charlie-es: Todavia soy Charlie.
X-Charlie-de: Ich bin immer Charlie.
X-Charlie-ro: Inca sunt Charlie.
X-Charlie-cz: Jsem stale Charlie.
</code></pre>
<p>I find this to be a great way for us techies to somehow contribute and show support for the ongoing anti-terrorism campaign. So if you feel like doing it here is a quick rundown on how to serve custom headers with your Eve-powered REST API. It is actually a very easy task to accomplish.</p>
<p>Eve provides <a href="http://python-eve.org/features.html#event-hooks">its own set</a> of callback hooks but since we don’t need fine-grained control (we are good with including the new header with all responses), this time we will leverage Flask’s <a href="http://flask.pocoo.org/snippets/53/">native</a> callback system instead.</p>
<pre><code>@app.after_request
def after_request(response):
    response.headers.add('X-Charlie', 'Je Suis Charlie.')
    response.headers.add('X-Ahmed', 'Je Suis Ahmed.')
    return response
</code></pre>
<p>A simple run script would then look something like:</p>
<pre><code>from eve import Eve
app = Eve()

@app.after_request
def after_request(response):
    response.headers.add('X-Charlie', 'Je Suis Charlie.')
    response.headers.add('X-Ahmed', 'Je Suis Ahmed.')
    return response

if __name__ == '__main__':
    app.run()
</code></pre>
<p>All API responses now include the custom headers:</p>
<pre><code>$ curl http://localhost:5000
HTTP/1.0 200 OK
Content-Type: application/json
Content-Length: 141
Server: Eve/0.5 Werkzeug/0.9.6 Python/2.7.8
Date: Mon, 12 Jan 2015 15:39:36 GMT
X-Charlie: Je Suis Charlie.
X-Ahmed: Je Suis Ahmed.
</code></pre>
<p>If you want to see it in action try sending a GET request with <code>curl</code>, <code>Postman</code> or similar tool to the Eve <a href="http://eve-demo.herokuapp.com/">demo instance</a> (<a href="https://github.com/nicolaiarocci/eve-demo/blob/master/run.py">source</a>). Remember Eve is a Flask subclass so whatever works with Flask generally works with Eve too.</p>
<p>If you want to get in touch, I am <a href="http://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Validating user objects with Cerberus</title>
      <link>https://nicolaiarocci.com/validating-user-objects-cerberus/</link>
      <pubDate>Mon, 05 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/validating-user-objects-cerberus/</guid>
      <description>People keep telling me that they want to validate class and instance attributes (object properties) with Cerberus. While it certainly wasn’t conceived with that goal in mind, it is actually very possible to leverage both the Python data model and Cerberus extensibility to achieve object validation.
Nuts &amp;amp; Bolts Let’s say that we have a simple class:
&amp;gt;&amp;gt;&amp;gt; class Person(object): ... pass We create a Person instance and add a few properties and values:</description>
      <content:encoded><![CDATA[<p>People keep telling me that they want to validate class and instance attributes (object properties) with <a href="https://github.com/nicolaiarocci/cerberus">Cerberus</a>. While it certainly wasn’t conceived with that goal in mind, it is actually very possible to leverage both the Python <a href="https://docs.python.org/2/reference/datamodel.html">data model</a> and Cerberus <a href="http://cerberus.readthedocs.org/en/latest/#custom-validators">extensibility</a> to achieve object validation.</p>
<h2 id="nuts--bolts">Nuts &amp; Bolts</h2>
<p>Let’s say that we have a simple class:</p>
<pre><code>&gt;&gt;&gt; class Person(object):
...     pass
</code></pre>
<p>We create a <code>Person</code> instance and add a few properties and values:</p>
<pre><code>&gt;&gt;&gt; p = Person()
&gt;&gt;&gt; p.name = &quot;bill&quot;
&gt;&gt;&gt; p.age = 44
</code></pre>
<p>Now let’s instance a Cerberus Validator and set up some validation rules for it:</p>
<pre><code>&gt;&gt;&gt; from Cerberus import Validator
&gt;&gt;&gt; schema = {
...     'name': {'type': 'string'},
...     'age': {'type': 'integer', 'min': 0}
... }
&gt;&gt;&gt; v = Validator(schema)
</code></pre>
<p>As you probably know already, all Python user objects have a <code>__dict__</code> magic method which exposes class and instance attributes as a dictionary. This means that we can also query our class like this:</p>
<pre><code>&gt;&gt;&gt; p.__dict__
{'name': 'bill', 'age': 44}

&gt;&gt;&gt; p.__dict__['age']
44
</code></pre>
<p>You see where we are going with this: we can exploit the <code>__dict__</code> method in order to let Cerberus perform validation on our object:</p>
<pre><code>&gt;&gt;&gt; v.validate(p.__dict__)
True
</code></pre>
<p>Validation succeeds because current attribute values do not break any rule. However, if we break the rules we do get what we deserve:</p>
<pre><code>&gt;&gt;&gt; p.age = -1
&gt;&gt;&gt; v.validate(p.__dict__)
False

&gt;&gt;&gt; v.errors
{'age': 'min value is 0'}
</code></pre>
<p>This works, but is somewhat clumsy. We can do better.</p>
<h2 id="a-custom-object-validator">A Custom Object Validator</h2>
<p>How about letting the Validator do the work for us? We could subclass the standard Validator and extend it to natively support object validation.</p>
<pre><code>&gt;&gt;&gt; class ObjectValidator(Validator):
...     def validate_object(self, obj):
...         return self.validate(obj.__dict__)
...

&gt;&gt;&gt; v = ObjectValidator(schema)
&gt;&gt;&gt; v.validate_object(p)
False

&gt;&gt;&gt; v.errors
{'age': 'min value is 0'}

&gt;&gt;&gt; p.age = 44
&gt;&gt;&gt; v.validate_object(p)
True
</code></pre>
<p>Much better. But what happens if we add a new property and then validate the object?</p>
<pre><code>&gt;&gt;&gt; p.lastname = 'white'
&gt;&gt;&gt; v.validate_object(p)
False

&gt;&gt;&gt; v.errors
{'lastname': 'unknown field'}
</code></pre>
<p>Validation fails because by default unknown fields are not allowed. This might not be the desired behaviour. If this is the case, we simply need to update the helper method in our custom validator class:</p>
<pre><code>&gt;&gt;&gt; class ObjectValidator(Validator):
...     def validate_object(self, obj):
...         self.allow_unknown = True
...         return self.validate(obj.__dict__)

&gt;&gt;&gt; v.validate_object(p)
True
</code></pre>
<p>By setting <code>allow_unknown</code> to <code>True</code> we <a href="http://cerberus.readthedocs.org/en/latest/#allowing-the-unknown">let unknown fields be ignored</a> by validation. If we are not concerned by state changes between calls we might conveniently choose to move the setting of <code>allow_unknown</code> to the <code>__init__</code> method so it gets executed only once.</p>
<p>Looks good so far. We can validate simple objects. But what about complex ones like those exposing other objects as attributes? This is going to require some more tinkering.</p>
<h2 id="validating-complex-objects">Validating Complex Objects</h2>
<p>It would be super handy if we could add support for an <code>object</code> data type and then provide a validation schema for it, like we already do with the <code>dict</code> and <code>list</code> types. A revised validation schema would then look like this:</p>
<pre><code>&gt;&gt;&gt; schema = {
...     'name': {'type': 'string'},
...     'age': {'type': 'integer', 'min': 0},
...     'address': {
...         'type': 'object',
            'schema': {
...             'street': {'type': 'string'},
...             'zip': {'type': 'integer'}
...         }
...     }
... }
</code></pre>
<p>We could then validate it like so:</p>
<pre><code>&gt;&gt;&gt; class Address
...     pass

&gt;&gt;&gt; addr = Address()
&gt;&gt;&gt; addr.street = 'Lexington'
&gt;&gt;&gt; addr.zip = 50238
&gt;&gt;&gt; p.address = addr

&gt;&gt;&gt; v.validate_object(p)
True

&gt;&gt;&gt; p.address.zip = 'not a number'
&gt;&gt;&gt; v.validate_object(p)
False

&gt;&gt;&gt; v.errors
{'address': {'zip': 'must be of integer type'}}
</code></pre>
<p>It turns out this is also very achievable. We can leverage Cerberus <a href="http://cerberus.readthedocs.org/en/latest/#adding-new-data-types">data type extensibility model</a> to add support for the <code>object</code> type. Then it is just a matter of handling the new type when validating the <code>schema</code> rule. I’m not going into details here but you can check <a href="https://gist.github.com/nicolaiarocci/829c98eb5f8b4e9c96c1">Validating complex objects with Cerberus</a>, a trivial implementation I posted as a GitHub gist.</p>
<h2 id="closing-note">Closing note</h2>
<p>You might be wondering why don’t I add object validation to Cerberus core. Actually, I don’t rule out this possibility but see I like to keep tools as simple, targeted and focused as possible. Besides, there are other object validation tools out there, so adding a new flavour does not seem very useful to me (but let me know if you feel otherwise.) Though as we have seen, if you want to validate user objects with Cerberus, you can do that easily enough.</p>
<p>If you want to get in touch, I am @<a href="http://twitter.com/nicolaiarocci">nicolaiarocci</a> on Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Introducing Eve.NET the HTTP/REST Client for Humans™</title>
      <link>https://nicolaiarocci.com/introducing-eve-net-httprest-client-humans/</link>
      <pubDate>Thu, 27 Nov 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/introducing-eve-net-httprest-client-humans/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/nicolaiarocci/Eve.NET&#34;&gt;Eve.NET&lt;/a&gt; is a simple HTTP and REST client for Web Services powered by the &lt;a href=&#34;http://python-eve.org&#34;&gt;Eve Framework&lt;/a&gt;. It leverages both &lt;code&gt;System.Net.HttpClient&lt;/code&gt; and &lt;code&gt;Json.NET&lt;/code&gt; to provide the best possible Eve experience on the .NET platform.&lt;/p&gt;
&lt;p&gt;Written and maintained by the same author of the Eve Framework itself, Eve.NET is delivered as a portable library (PCL) and runs seamlessly on .NET4, Mono, Xamarin.iOS, Xamarin.Android, Windows Phone 8 and Windows 8. We use Eve.NET internally to power our iOS, Web and Windows applications.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/nicolaiarocci/Eve.NET">Eve.NET</a> is a simple HTTP and REST client for Web Services powered by the <a href="http://python-eve.org">Eve Framework</a>. It leverages both <code>System.Net.HttpClient</code> and <code>Json.NET</code> to provide the best possible Eve experience on the .NET platform.</p>
<p>Written and maintained by the same author of the Eve Framework itself, Eve.NET is delivered as a portable library (PCL) and runs seamlessly on .NET4, Mono, Xamarin.iOS, Xamarin.Android, Windows Phone 8 and Windows 8. We use Eve.NET internally to power our iOS, Web and Windows applications.</p>
<p><em>And now please forgive me while I take you on a quick motivational, strongly opinionated, probably boring and overzealous detour</em></p>
<hr>
<h2 id="python-and-c-motherfucker-do-you-speak-it-">Python and C# Motherfucker, Do You Speak It? *</h2>
<p>If you don’t then well, you should consider doing just that. Especially so these days, with C# and the whole .NET platform going open source and cross platform. Actually, thanks to technologies like Mono and Xamarin (also based on Mono) we have been able to run C# code on all major platforms for a while: iOS, Android, OSX, Linux, Windows, Windows Phone, you-name-it. And what’s even better, on mobile platforms C# is compiled to native so performance is a non-issue.</p>
<p>What makes C# a perfect match for a REST API is precisely that: it’s ubiquity. You can have a portable client library like Eve.NET which runs seamlessly (and untouched) on all these mobile desktop and server platforms.</p>
<p>If you already have a Web Service running on Eve and are now looking at the client side of things then well, you should consider C# and Eve.NET because you know, you can’t have a native iOS app written in Python anyway. On the other hand if you are a C#/.NET shop consider this: you can have a powerful Web Service up and running in minutes (even if you don’t grok Python yet – trust me on that) <em>and</em> a complete out-of-the-box, cross platform client library ready to go with it.</p>
<p>A few years ago I gave a talk about leaving my Comfort Zone (**) and getting out of my .NET nest. That opened the path to Python, MongoDB, Node and so many other technologies and best practices and, what’s even more relevant, most of what I learned down that path I ended up using in my .NET projects in the long run. But the point I’m trying to make is don’t be afraid of change, it can only improve your skills making you a better all-around professional programmer.</p>
<p>Never mind the naysayers. Polyglot is the way.</p>
<hr>
<p>(*) I’m paraphrasing Zed A. Shaw’s <a href="http://programming-motherfucker.com/">Programming, Motherfucker</a>. You should get a T-Shirt by the way. They are so cool.</p>
<p>(**) Since then there have been plenty of talks on the same subject. Mine was an 5 minutes ignite talk and was in Italian, so you probably don’t care (it’s on my <a href="http//nicolaiarocci.com/talks">Talks</a> page anyway).</p>
<hr>
<p><em>Back to business now</em>.</p>
<h2 id="usage">Usage</h2>
<p>Initialization is as simple as instantiating a new client and providing it with the web service entry point.</p>
<pre><code>// Initialize and set API address.
var client = new EveClient();
client.BaseAddress = new Uri(&quot;http://api.com&quot;);

// Set target resource for subsequent requests.
client.ResourceName = &quot;companies&quot;;
</code></pre>
<p>Getting a list of objects is pretty straightforward:</p>
<pre><code>// List&lt;T&gt;
companies = await client.GetAsync&lt;Company&gt;();

// Objects changed since DateTime.
var ifModifiedSince = DateTime.Now.AddDays(-1);
companies = await 
  client.GetAsync&lt;Company&gt;(ifModifiedSince);

// Refresh an object
company = await client.GetAsync&lt;Company&gt;(company);

// Raw, conditional GET request
var companyId = &quot;507c7f79bcf86cd7994f6c0e&quot;;
var eTag = &quot;7776cdb01f44354af8bfa4db0c56eebcb1378975&quot;;

company = await 
  client.GetAsync&lt;Company&gt;(&quot;companies&quot;, companyId, eTag);
</code></pre>
<p>Other CRUD operations are easy too:</p>
<pre><code>// Create (POST)
company = await 
  client.PostAsync&lt;Company&gt;(
    new Company { Name = &quot;MyCompany&quot; }
  );

// Update (PUT)
company.Name = &quot;YourCompany&quot;;
var result = await client.PutAsync&lt;Company&gt;(company);

// Delete (DELETE)
var result = await client.DeleteAsync(company);
</code></pre>
<p>As you can see all methods are Async and return full object instances parsing JSON in and out on for you. If you need more control you can query the <code>HttpResponse</code> property to inspect the original JSON, response headers, status code, etc.</p>
<p>Behind the scenes <a href="http://python-eve.org/features#data-integrity-and-concurrency-control">data integrity and concurrency control</a> are transparently handled so for example <code>PutAsync</code> performs a <code>If-Match</code> check and same happens with <code>DeleteAsync</code>. On <code>PostAsync</code> new objects are returned with fresh meta-fields such as <code>ETag</code>, <code>DateCreated</code>, <code>DateUpdated</code> and <code>UniqueId</code>. Mapping object properties to JSON fields and Eve metafields is just a matter of setting the <code>JSonPropertyAttribute</code> and <code>RemoteAttribute</code>:</p>
<pre><code>public abstract class BaseClass
{
  [JsonProperty(&quot;_id&quot;)]
  [Remote(Meta.DocumentId)]
  public string UniqueId { get; set; }

  [JsonProperty(&quot;_etag&quot;)]
  [Remote(Meta.ETag)]
  public string ETag { get; set; }

  [JsonProperty(&quot;_updated&quot;)]
  [Remote(Meta.LastUpdated)]
  public DateTime Updated { get; set; }

  [JsonProperty(&quot;_created&quot;)]
  [Remote(Meta.DateCreated)]
  public DateTime Created { get; set; }   
}

public class Company : BaseClass
{
  [JsonProperty(&quot;n&quot;)]
  public string Name { get; set; }

  [JsonProperty(&quot;p&quot;)]
  public string Password { get; set; }
}
</code></pre>
<p>For a complete list of usage examples see the <a href="https://github.com/nicolaiarocci/Eve.NET/blob/master/README.md">README</a></p>
<h2 id="current-status-and-license">Current Status and License</h2>
<p>Eve.NET is a <a href="http://nicolaiarocci.com">Nicola Iarocci</a> and <a href="http://gestionaleamica.com">Gestionali Amica</a> open source project distributed under the <a href="https://github.com/nicolaiarocci/Eve.NET/blob/master/LICENSE.txt">BSD license</a>. It is a work in progress but it’s pretty stable already. It is <a href="https://www.nuget.org/packages/Eve.NET/">available on NuGet</a> as a pre-release package. The test suite can be run against a local Eve instance or, if you don’t grok Python yet, you can use a free test instance which is available online, see the <a href="https://github.com/nicolaiarocci/Eve.NET/blob/master/README.md">README</a> for details.</p>
<p>Did you read this far? Well thank you! And please, consider showing your appreciation by starring the project on <a href="https://github.com/nicolaiarocci/Eve.NET">GitHub</a>. It feels so lonely out there.</p>
<p>If you want to get in touch, I’m <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>]]></content:encoded>
    </item>
    <item>
      <title>Open Source and Code Responsibility</title>
      <link>https://nicolaiarocci.com/open-source-and-code-responsibility/</link>
      <pubDate>Tue, 21 Oct 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/open-source-and-code-responsibility/</guid>
      <description>&lt;p&gt;Last week I was speaking at an Open Source panel at &lt;a href=&#34;http://www.bettersoftware.it&#34;&gt;Better Software 2014&lt;/a&gt;, and one of the topics that we touched was code responsibility. This is an important topic for anyone who is maintaining an open source project, especially when it comes to the process of reviewing and accepting code contributions.&lt;/p&gt;
&lt;p&gt;At some point during the debate, I argued that when a maintainer merges a pull request, he (or she) implicitly agrees on being responsible for that code. That seemed to strike some surprise into most attendees.&lt;/p&gt;
&lt;p&gt;Yes, in theory any contributor is just a ping away so in case trouble arises one can always reach him, or her. Unfortunately this is not always the case. While some contributors will fully embrace your project and keep helping after their initial contribution, truth is that a good number of them will just move on, never to be seen again.&lt;/p&gt;
&lt;p&gt;There’s nothing wrong with that. Not everyone has spare time to devote to your project, which is perfectly fine. It is natural for most people to contribute what they need to a project and then go on their way. Actually, one could argue that most projects grow and prosper precisely thanks to this kind of contributions.&lt;/p&gt;
&lt;p&gt;However this attitude can become an incumbent when big chunks of code get merged, usually as new (big) features. Good practices advice against merging huge pull requests. In fact they are rare and when they do come, it is a good idea to ask for them to be split into smaller ones. But no matter the format, a huge contribution is likely to hit a project one day or another. It might even come from more than one person: a disconnected and distributed team of contributors who have been patiently tinkering on a side branch or a fork for example. When this happens, and provided that the contribution is worth merging, the maintainer should then ask him/herself the obvious question: &lt;em&gt;am I willing to deal with the consequences of this merge?&lt;/em&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Last week I was speaking at an Open Source panel at <a href="http://www.bettersoftware.it">Better Software 2014</a>, and one of the topics that we touched was code responsibility. This is an important topic for anyone who is maintaining an open source project, especially when it comes to the process of reviewing and accepting code contributions.</p>
<p>At some point during the debate, I argued that when a maintainer merges a pull request, he (or she) implicitly agrees on being responsible for that code. That seemed to strike some surprise into most attendees.</p>
<p>Yes, in theory any contributor is just a ping away so in case trouble arises one can always reach him, or her. Unfortunately this is not always the case. While some contributors will fully embrace your project and keep helping after their initial contribution, truth is that a good number of them will just move on, never to be seen again.</p>
<p>There’s nothing wrong with that. Not everyone has spare time to devote to your project, which is perfectly fine. It is natural for most people to contribute what they need to a project and then go on their way. Actually, one could argue that most projects grow and prosper precisely thanks to this kind of contributions.</p>
<p>However this attitude can become an incumbent when big chunks of code get merged, usually as new (big) features. Good practices advice against merging huge pull requests. In fact they are rare and when they do come, it is a good idea to ask for them to be split into smaller ones. But no matter the format, a huge contribution is likely to hit a project one day or another. It might even come from more than one person: a disconnected and distributed team of contributors who have been patiently tinkering on a side branch or a fork for example. When this happens, and provided that the contribution is worth merging, the maintainer should then ask him/herself the obvious question: <em>am I willing to deal with the consequences of this merge?</em></p>
<p>In fact this is the exact scenario I’m dealing with right now. The <a href="http://python-eve.org">Eve</a> project has always been a MongoDB shop. Since its inception however people have been asking if (when) SQL support was going to be added. I think we were in Alpha when someone started contributing SQL code. Over time I ended up devoting a specific branch to this feature. Several people have been hacking at it since then, and what a splendid job they did! To say that it was a huge commitment is an understatement but, in time, they managed to deliver. So now we have this awesome <a href="https://github.com/nicolaiarocci/eve/tree/sqlalchemy">sqlalchemy branch</a> which is feature complete and ready to be merged ahead of the new Eve release. We’re talking 4K+ lines of code and 44 files changed. Code quality is not under discussion. I know that several companies and individuals have been using that branch in production with good success, even when it still was at its early stages.</p>
<p>This is very exciting as adding SQL support has a good chance to greatly improve the audience of the project. At the same time however, I’m a little bit nervous if not scared, and I have been for a while. Am I ready to deal with the consequences of this supermerge? Inevitably SQLAlchemy tickets will be opened and Stack Overflow questions will be asked. SQL-related pull requests will come in and mailing list posts will flock. To be honest I don’t think I can handle that, let alone allocate more of my free time to the project. Also, I’m not very confident with SQLAlchemy itself so I would not be the best person deal with that code anyway. In the recent past while discussing SQLAlchemy support on the mailing list, I have been <a href="https://groups.google.com/forum/?hl=en#!topic/python-eve/11t1usVH2EY">very clear about my concerns</a>, so much that I probably scared a few people away. What worries me the most, I suspect, is the risk of new code becoming stale one day or another. In time that would probably impact the reputation of the whole project.</p>
<p>To think about it, we already had something similar happen in the past, although for a smaller feature. The <a href="http://python-eve.org/extensions">Document Versioning</a> pull request, contributed by the amazing <a href="https://github.com/joshvillbrandt">Josh Villbrandt</a>, had been daunting me with similar thoughts. New code was going to be be quite intrusive, adding a good deal of complexity to an otherwise relatively simple codebase. Everything went amazingly well though. Josh is still an active contributor. He helps with improving his own feature and, even more importantly, other contributors are now helping with Document Versioning <a href="https://github.com/nicolaiarocci/eve/pull/486">as we speak</a>. Overall, the Eve project as a whole as been enjoying a growing number of skilled contributors and adopters. It’s been a joy to see people commenting on open tickets, offer support on the mailing list and even on Stack Overflow. So that should be encouraging.</p>
<p>So here I sit, with 4K LOCs ready to be merged. What do I do with them? I considered a few options. One is leaving the SQL feature in a separate branch. Another is to ask the team to refactor the whole thing into an external extension (we have <a href="http://python-eve.org/features.html#document-versioning">a few</a> already). By doing any of these Eve-core would remain MongoDB only and I could keep managing it on my own. But then again, none of these options would add native SQL support to Eve. Also, an extension or a branch would run even a greater danger of becoming stale.</p>
<p>At some point I guess even mildly successful projects like Eve have to decide wether they want to outgrow their author. I strongly believe that growing and trusting communities is all that open source is about. You release your work out there and, even at that early stage, you are already entrusting people. You trust that they will take notice and then that they will validate your project (or not). Eventually, someone will review your code, adopt it and, in time, contribute. The project then grows up to a point where its community becomes so predominant that you, as the author and maintainer, just have to let some control go.</p>
<p>So yes, SQL support is coming to Eve, and as a native feature. I trust that the contributors to the SQLAlchemy backend will stay around and, if they won’t, that someone else will stand up and take the torch. I am also confident that the community as a whole will adopt the feature, make it grow and well… we’ll see what happens next.</p>
<p>If you want to get in touch, I’m <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>]]></content:encoded>
    </item>
    <item>
      <title>Feature Overview: The Eve OpLog</title>
      <link>https://nicolaiarocci.com/feature-overview-the-eve-oplog/</link>
      <pubDate>Mon, 06 Oct 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/feature-overview-the-eve-oplog/</guid>
      <description>&lt;p&gt;The operations log or OpLog is a new &lt;a href=&#34;http://python-eve.org&#34;&gt;Eve&lt;/a&gt; feature that I’m currently developing on the &lt;a href=&#34;https://github.com/nicolaiarocci/eve/tree/oplog&#34;&gt;&lt;code&gt;oplog&lt;/code&gt;&lt;/a&gt; experimental branch. It’s supposed to help in addressing a subtle issue that we’ve been dealing with, but I believe it can also emerge as a very useful all-around tool. I am posting about it in the hope of gathering some feedback from Eve contributors and users, so that I can better pinpoint design and implementation before I merge it to the main development branch.&lt;/p&gt;
&lt;h2 id=&#34;what-is-the-oplog&#34;&gt;What is the OpLog?&lt;/h2&gt;
&lt;p&gt;The OpLog is a special resource that keeps a record of operations that modify the data stored by the API. Every &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt; operation can eventually be recorded by the oplog.&lt;/p&gt;
&lt;p&gt;At its core the oplog is simply a server log, something that’s always been on the Eve roadmap. What makes it a little bit different is its ability to be exposed as a read-only API endpoint. This would in turn allow clients to query it as they would with any other standard endpoint.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>The operations log or OpLog is a new <a href="http://python-eve.org">Eve</a> feature that I’m currently developing on the <a href="https://github.com/nicolaiarocci/eve/tree/oplog"><code>oplog</code></a> experimental branch. It’s supposed to help in addressing a subtle issue that we’ve been dealing with, but I believe it can also emerge as a very useful all-around tool. I am posting about it in the hope of gathering some feedback from Eve contributors and users, so that I can better pinpoint design and implementation before I merge it to the main development branch.</p>
<h2 id="what-is-the-oplog">What is the OpLog?</h2>
<p>The OpLog is a special resource that keeps a record of operations that modify the data stored by the API. Every <code>POST</code>, <code>PATCH</code>, <code>PUT</code> and <code>DELETE</code> operation can eventually be recorded by the oplog.</p>
<p>At its core the oplog is simply a server log, something that’s always been on the Eve roadmap. What makes it a little bit different is its ability to be exposed as a read-only API endpoint. This would in turn allow clients to query it as they would with any other standard endpoint.</p>
<p>Every oplog entry contains few important informations about the document</p>
<p>involved with the edit operation:</p>
<ul>
<li>URL of the endpoint hit by the operation.</li>
<li>Kind of operation performed.</li>
<li>Unique ID of the document.</li>
<li>Date when the document was updated.</li>
<li>Date when the document as created.</li>
<li>User token, if <a href="http://python-eve.org/authentication.html#user-restricted-resource-access">User Restricted Resource Access</a> is enabled for the endpoint</li>
</ul>
<p>Like any other API-maintained documents, oplog entries also contain:</p>
<ul>
<li>Unique ID</li>
<li>ETag</li>
<li><a href="http://python-eve.org/features.html#hateoas">HATEOAS</a> meta fields, if enabled.</li>
</ul>
<p>A typical oplog entry would look something like this:</p>
<pre><code>{
    &quot;o&quot;: &quot;DELETE&quot;, 
    &quot;r&quot;: &quot;people&quot;, 
    &quot;i&quot;: &quot;542d118938345b614ea75b3c&quot;,
    &quot;_updated&quot;: &quot;Fri, 03 Oct 2014 08:16:52 GMT&quot;, 
    &quot;_created&quot;: &quot;Fri, 03 Oct 2014 08:16:52 GMT&quot;,
    &quot;_id&quot;: &quot;542e5b7438345b6dadf95ba5&quot;, 
    &quot;_etag&quot;: &quot;e17218fbca41cb0ee6a5a5933fb9ee4f4ca7e5d6&quot;
    &quot;_links&quot;: {...},
}
</code></pre>
<p>To save a little storing space field names have been shortened when possible (what can I say, I’m a MongoDB guy): <code>o</code> stands for operation, <code>r</code> stands for resource, <code>i</code> stands for unique ID and <code>c</code> stands for changes. Other keys are defined by the configuration settings, and their default names are shown here.</p>
<h2 id="how-is-the-oplog-operated">How is the oplog operated?</h2>
<p>Three new settings keywords are available:</p>
<ul>
<li>
<p><code>OPLOG</code></p>
<p>Sets the oplog name and defaults to <code>oplog</code>. This is the name of the collection on the database and also the default url for the oplog endpoint.<!-- raw HTML omitted --></p>
</li>
<li>
<p><code>OPLOG_METHODS</code></p>
<p>A list of HTTP methods for which oplog entries are to be recorded. Defaults to <code>['DELETE']</code>.<!-- raw HTML omitted --></p>
</li>
<li>
<p><code>OPLOG_ENDPOINT</code></p>
<p>Set it to <code>True</code> if an oplog endpoint should be made available by the API. Defaults to <code>False</code>.</p>
</li>
<li>
<p><code>OPLOG_AUDIT</code></p>
<p>If enabled, IP addresses and changes introduced with <code>PATCH</code> and <code>PUT</code> methods are also logged. Defaults to <code>True</code>.</p>
</li>
</ul>
<p>So by default the oplog is stored on a conveniently named <code>oplog</code> collection, it only stores informations about deleted documents.</p>
<p>Since the eventual oplog endpoint is a standard API endpoint, if it is enabled the API maintainer can also fiddle with the endpoint settings as he/she would do with any other Eve endpoint. This allows for setting custom authentication (you probably want this resource to be only accessible for administrative purposes), changing the url, etc. Just add an <code>oplog</code> entry to the <a href="http://python-eve.org/config#domain-configuration">API domain</a>, like so:</p>
<pre><code>'oplog': {
    'url': 'log',
    'auth': my_custom_auth_class,
    'datasource': {'source': 'myapilog'}
}
</code></pre>
<p>Note that while you can change most settings, the endpoint will always be read-only, so setting either <code>resource_methods</code> or <code>item_methods</code> to something else than <code>['GET']</code> will serve no purpose. Also, unless you need to do so, adding an oplog entry to the API domain is not required as it will be added automatically for you.</p>
<h2 id="why-the-oplog">Why the OpLog?</h2>
<p>Clients have always been able to retrieve changes by simply querying an endpoint with a <code>If-Modified-Since</code> request. So why do we need an operations log? Of course because server-side logging is cool, and so is auditing, but it’s not only about that.</p>
<h3 id="single-entry-point-for-all-api-updates">Single entry point for all API updates</h3>
<p>From the client perspective and for most use cases logging inserted, edited and replaced documents is probably a waste of both space and time, and this is the main reason why only <code>DELETE</code> operations are logged by default. However, I believe there are scenarios where remote access to a full activity log can be useful.</p>
<p>Imagine an API which is accessed by multiple apps (say phone, tablet, web and desktop applications) and all of them need to stay in sync with each other and the server. Instead of hitting every single endpoint with a <code>IMS</code> request they could just access the oplog. That’s a single request vs several, and since the oplog itself is a standard API endpoint, they could also perform <code>IMS</code> requests against it for optimal gains:</p>
<blockquote>
<p>Server, please send me all the changes occurred to the API since my last access. Sincerely, Your Client.</p>
</blockquote>
<p>Again this is not always the best approach a client could take. Sometimes it is probably better to only query for changes when they are really needed, but it seems cool to have both approaches available (and remember, the oplog endpoint is disabled by default).</p>
<h3 id="fixing-304s">Fixing 304s</h3>
<p>And then there are deleted documents which are a completely different beast. With no oplog we would have no way to tell if and when any document has been deleted, let alone inform clients about that. Actually, there is an <a href="https://github.com/nicolaiarocci/eve/issues/334">open ticket</a> precisely about this, and it’s been sitting there for a while.</p>
<p>When a <code>If-Modified-Since</code> request is received, the API is expected to respond with a <code>304 Not Modified</code> status if no changes occurred, so that clients can conveniently fallback to cached data. Up to version 0.4 (the official release at the time of this writing) Eve has been doing exactly that, with one caveat: missing documents were being ignored as, in the contest of the <code>IMS</code> request, there was no way to know about them.</p>
<p>The operations log will allow Eve powered APIs to take deleted documents into account, returning perfectly proper <code>304</code> codes as needed. The impact on performance should be minimal as we will only query the oplog when and if no changes have been detected on the target collection.</p>
<p>This solves only one half of the problem however. What happens when a <code>IMS</code> request comes in and deleted documents are found in the backlog? How do we report them back to the client? Three options come to mind which would address this scenario:</p>
<ol>
<li>
<p>Respond with a <code>200 OK</code> and a the usual “changes since <code>IMS</code> date” payload, which might happen to be empty if only deletions occurred in the time window. The client can then go and query the oplog endpoint with the same <code>IMS</code> date, finally getting the list of deleted documents IDs.</p>
</li>
<li>
<p>Include deleted documents IDs in the standard payload (within the <code>_items</code> list), maybe with a <code>deleted</code> status tag. This status tag is something new though, and for consistency we should probably add it to other objects in the payload.</p>
</li>
<li>
<p>Add support for a new <code>_deleted</code> meta field in resource payloads. When deleted documents are spotted in the backlog the response payload will include them in their own list. Something like this:</p>
</li>
</ol>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>First option is so bad I should probably not be listing it at all. It would take two roundtrips to get the whole update down. Also, it would kind of force API maintainers to open the oplog endpoint to their clients.</p>
<p>I’m not convinced #2 would be a good idea either, as objects in the items list would not be homogeneous anymore and we would have to add support for a new meta field anyway (the status tag).</p>
<p>Option #3 on the other hand looks quite good to me. It does not require multiple requests to handle the case of deleted documents on <code>IMS</code> requests, and it is still easy and clean for clients to process. I am going to go with #3 unless feedback is negative and for good reasons, so let your opinion be heard.</p>
<h2 id="closing-concerns">Closing concerns</h2>
<p>I am slightly concerned about the performance impact, not so much on <code>IMS</code> requests but rather on write operations, especially when a complete, all-operations log is being recorded.</p>
<p>In MongoDB world OpLog is probably an ideal candidate for a <a href="http://docs.mongodb.org/manual/core/capped-collections/">capped collection</a>. I’m not entirely convinced about that though, as by its nature a capped collection is bound to lose data over time, which again might lead to inaccurate <code>304</code> handling.</p>
<p>I am not implementing the OpLog at the data layer level however. It is a business layer feature to let other engines take advantage of it. Nothing prevents the MongoDB admin from setting the <code>oplog</code> as a capped collection anyway. Also, keep in mind that like all other resources maintained by the API, indexes are not handled by Eve itself so you will have to do your homework in that field too.</p>
<p>So here you have it. I’m currently done on both configuration and logging parts and will be working on <code>304</code> handling and response payloads in the coming days so that all of this can be included with next version 0.5. Be warned that at the moment the <code>develop</code> branch has no support for <code>IMS</code> requests on resource endpoints. It’s been disabled to avoid providing clients with inaccurate responses (see the ticket above).</p>
<p>If you have any comment or feedback to provide, please let me know in the comments below. I’d really appreciate that.</p>
<p>PS. In case you are wondering yes, the Eve OpLog is heavily inspired by the awesome <a href="http://docs.mongodb.org/manual/core/replica-set-oplog/">MongoDB OpLog</a>.</p>]]></content:encoded>
    </item>
    <item>
      <title>Ordered Dictionaries with Python 2.4-2.6</title>
      <link>https://nicolaiarocci.com/ordered-dictionaries-with-python-2-4-2-6/</link>
      <pubDate>Tue, 16 Sep 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/ordered-dictionaries-with-python-2-4-2-6/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.python.org/2/library/collections.html#collections.OrderedDict&#34;&gt;OrderedDict&lt;/a&gt; is a super handy data structure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An OrderedDict is a dict that remembers the order that keys were first inserted. If a new entry overwrites an existing entry, the original insertion position is left unchanged. Deleting an entry and reinserting it will move it to the end.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Problem is, this stuff is only available in the standard library since Python 2.7 while &lt;a href=&#34;http://python-eve.org&#34;&gt;my project&lt;/a&gt; also needs to support Python 2.6. Fortunately there’s a back-port available and it is only a pip install away:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# make OrderedDict available on Python 2.6-2.4
$ pip install ordereddict
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/ordereddict&#34;&gt;ordereddict&lt;/a&gt; is based on the awesome recipe by &lt;a href=&#34;http://code.activestate.com/recipes/576693&#34;&gt;Raymond Hettinger&lt;/a&gt;, works with Python 2.4-2.6 and, most importantly, is a drop-in replacement for OrderedDict.&lt;/p&gt;
&lt;p&gt;However if you want your code to run seamlessly on all Pythons there’s still some work to be done. First of all you want to make sure that the appropriate OrderedDict is imported, either the standard library version (for Python 2.7 and above) or the back-port release.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="https://docs.python.org/2/library/collections.html#collections.OrderedDict">OrderedDict</a> is a super handy data structure.</p>
<blockquote>
<p>An OrderedDict is a dict that remembers the order that keys were first inserted. If a new entry overwrites an existing entry, the original insertion position is left unchanged. Deleting an entry and reinserting it will move it to the end.</p>
</blockquote>
<p>Problem is, this stuff is only available in the standard library since Python 2.7 while <a href="http://python-eve.org">my project</a> also needs to support Python 2.6. Fortunately there’s a back-port available and it is only a pip install away:</p>
<pre><code># make OrderedDict available on Python 2.6-2.4
$ pip install ordereddict
</code></pre>
<p><a href="https://pypi.python.org/pypi/ordereddict">ordereddict</a> is based on the awesome recipe by <a href="http://code.activestate.com/recipes/576693">Raymond Hettinger</a>, works with Python 2.4-2.6 and, most importantly, is a drop-in replacement for OrderedDict.</p>
<p>However if you want your code to run seamlessly on all Pythons there’s still some work to be done. First of all you want to make sure that the appropriate OrderedDict is imported, either the standard library version (for Python 2.7 and above) or the back-port release.</p>
<p>This is easily accomplished, and in a very pythonic way:</p>
<pre><code>try:
    # try with the standard library
    from collections import OrderedDict
except ImportError:
    # fallback to Python 2.6-2.4 back-port
    from ordereddict import OrderedDict
</code></pre>
<h2 id="fixing-setuppy">Fixing setup.py</h2>
<p>If you are shipping your code as a package then you also want to make sure that setup.py properly handles the different Python versions. Since setup.py itself is nothing but standard Python module, we can make it more dynamic by applying the same technique above.</p>
<pre><code>#!/usr/bin/env python
from setuptools import setup, find_packages

# your standard required modules
install_requires = [
    'simplejson',
    'cerberus',
    'events',
    ...
]

try:
    from collections import OrderedDict
except ImportError:
    # add backport to list of required modules
    install_requires.append('ordereddict')

setup(
    name='appname',
    version='0.1',
    packages=find_packages(),
    ...
    # no matter which Python, we're now good to go
    install_requires = install_requires,
    ...
)
</code></pre>
<h2 id="handling-requirementstxt">Handling requirements.txt</h2>
<p>When it comes to pip’s requirements.txt, what I think works best is to simply add a <em>diff file</em> which targets old Python versions like so:</p>
<pre><code># py26-requirements.txt
# install from 'canonical' requirements.txt first (DRY)
-r requirements.txt
# add specific Python 2.6 dependencies
ordereddict
</code></pre>
<p>A developer using Python 2.6 would then go with</p>
<pre><code>$ pip install -r py26-requirements.txt
</code></pre>
<p>Whereas someone on a recent Python would simply run</p>
<pre><code>$ pip install -r requirements.txt
</code></pre>
<p>Since py26-requirements.txt explicitly lists Python 2.6 dependencies only and then relies on requirements.txt, most likely you will only need to update the main requirements when/if new dependencies are needed.</p>
<p>You can check out the <a href="https://github.com/nicolaiarocci/eve/commit/ae292f42a6ea92a447b194aaf17d8447b859b0ab">commit</a> where Python 2.6 support for OrderDict has been introduced.</p>
<p>If you want to get in touch, I’m <a href="https://twitter.com/nicolaiarocci">@nicolaiarocci</a> on Twitter.</p>]]></content:encoded>
    </item>
    <item>
      <title>Eve 0.4 and Cerberus 0.7 Released</title>
      <link>https://nicolaiarocci.com/eve-0-4-cerberus-0-7-released/</link>
      <pubDate>Thu, 10 Jul 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-4-cerberus-0-7-released/</guid>
      <description>Eve 0.4 adds cool features like Document Versioning and Coherence Mode. Cerberus 0.7 allows regex validation amongst other niceties. Make sure to check the official v0.4 announcement for all the details.</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->Eve 0.4 adds cool features like Document Versioning and Coherence Mode. Cerberus 0.7 allows regex validation amongst other niceties. Make sure to check the <a href="http://blog.python-eve.org/eve-04-released">official v0.4 announcement</a> for all the details.</p>
]]></content:encoded>
    </item>
    <item>
      <title>10 Most Common Python Mistakes</title>
      <link>https://nicolaiarocci.com/10-most-common-python-mistakes/</link>
      <pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/10-most-common-python-mistakes/</guid>
      <description>Python’s simple, easy-to-learn syntax can mislead Python developers – especially those who are newer to the language – into missing some of its subtleties and underestimating the power of the language.
With that in mind, this article presents a “top 10” list of somewhat subtle, harder-to-catch mistakes that can bite even the most advanced Python developer in the rear.
via 10 Most Common Python Mistakes.</description>
      <content:encoded><![CDATA[<blockquote>
<p>Python’s simple, easy-to-learn syntax can mislead Python developers – especially those who are newer to the language – into missing some of its subtleties and underestimating the power of the language.</p>
<p>With that in mind, this article presents a “top 10” list of somewhat subtle, harder-to-catch mistakes that can bite even the most advanced Python developer in the rear.</p>
</blockquote>
<p>via <a href="http://www.toptal.com/python/top-10-mistakes-that-python-programmers-make">10 Most Common Python Mistakes</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve 0.3 Released</title>
      <link>https://nicolaiarocci.com/eve-0-3-released/</link>
      <pubDate>Fri, 14 Feb 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-0-3-released/</guid>
      <description>Today we released Eve v0.3. It includes customizable Files Storage support (on GridFS by default), a lot of fixes, several breaking changes and a lot of love. Head over to relevant blog post and/or to changelog to know more about it.</description>
      <content:encoded><![CDATA[<p><a href="http://python-eve.org"><!-- raw HTML omitted --></a>Today we released <a href="https://pypi.python.org/pypi/Eve">Eve v0.3</a>. It includes customizable Files Storage support (on GridFS by default), a lot of fixes, several breaking changes and a lot of love. Head over to relevant <a href="http://blog.python-eve.org/eve-03-released">blog post</a> and/or to <a href="http://python-eve.org/changelog.html">changelog</a> to know more about it.</p>
]]></content:encoded>
    </item>
    <item>
      <title>REST APIs for Humans at FOSDEM</title>
      <link>https://nicolaiarocci.com/rest-apis-humans-fosdem/</link>
      <pubDate>Mon, 03 Feb 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/rest-apis-humans-fosdem/</guid>
      <description>Yesterday I gave a talk at FOSDEM 2014 in Brussels. The conference itself was amazing, with over 5000 attendees literally swarming and taking over the ULB Campus. I was stoked at how smoothly everything was going on despite the incredible number of simultaneous sessions and the number of attendees continuously flowing between buildings and conference rooms. Everybody involved, volunteers and attendees, has been very welcoming, charming and helpful. In short, I had a blast.</description>
      <content:encoded><![CDATA[<p>Yesterday I gave a talk at FOSDEM 2014 in Brussels. The conference itself was amazing, with over 5000 attendees literally swarming and taking over the ULB Campus. I was stoked at how smoothly everything was going on despite the incredible number of simultaneous sessions and the number of attendees continuously flowing between buildings and conference rooms. Everybody involved, volunteers and attendees,  has been very welcoming, charming and helpful. In short, I had a blast.</p>
<p>My <a href="https://speakerdeck.com/nicola/eve-rest-api-for-humans">REST APIs for Humans™</a> talk was given in a fully packed Python DevRoom, which granted a lot of smart questions both in the final QA session and later during the day. Thanks everybody for the great feedback!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python and Flask Are Ridiculously Powerful</title>
      <link>https://nicolaiarocci.com/python-and-flask-are-ridiculously-powerful/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-and-flask-are-ridiculously-powerful/</guid>
      <description>As a developer, I sometimes forget the power I yield. It’s easy to forget that, when something doesn’t work the way I’d like, I have the power to change it.
via Python and Flask Are Ridiculously Powerful.</description>
      <content:encoded><![CDATA[<blockquote>
<p>As a developer, I sometimes forget the power I yield. It’s easy to forget that, when something doesn’t work the way I’d like, I have the power to change it.</p>
</blockquote>
<p>via <a href="http://jeffknupp.com/blog/2014/01/18/python-and-flask-are-ridiculously-powerful/">Python and Flask Are Ridiculously Powerful</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python is the Language of the Year</title>
      <link>https://nicolaiarocci.com/python-is-the-language-of-the-year/</link>
      <pubDate>Thu, 02 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-is-the-language-of-the-year/</guid>
      <description>We shouldn’t really trust this kind of statistics, I know, but when my favorite language comes out as a clear winner, I can’t resist and take them for good.
Python is the “language of the year” according to the PYPL index : it had the biggest increase in popularity share in 2013. PHP had the biggest decline. Meanwhile, Java continues to have the highest popularity share among the programming languages.</description>
      <content:encoded><![CDATA[<p>We shouldn’t really trust this kind of statistics, I know, but when my favorite language comes out as a clear winner, I can’t resist and take them for good.</p>
<blockquote>
<p>Python is the “language of the year” according to the PYPL index : it had the biggest increase in popularity share in 2013. PHP had the biggest decline. Meanwhile, Java continues to have the highest popularity share among the programming languages.</p>
</blockquote>
<p>via <a href="https://sites.google.com/site/pydatalog/pypl/python-blog/pythonisthelanguageoftheyear?utm_source=buffer&amp;utm_campaign=Buffer&amp;utm_content=bufferd1bdd&amp;utm_medium=twitter">Python is the Language of the Year – pyDatalog</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Alex Gaynor — About Python 3</title>
      <link>https://nicolaiarocci.com/alex-gaynor-about-python-3/</link>
      <pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/alex-gaynor-about-python-3/</guid>
      <description>A very interesting read if you’re into Python. Eve has been Python 3 compatible for a while and honestl, I would be surprised to find that somebody is running it in production under Python 3.
Why aren’t people using Python 3?
First, I think it’s because of a lack of urgency. Many years ago, before I knew how to program, the decision to have Python 3 releases live in parallel to Python 2 releases was made.</description>
      <content:encoded><![CDATA[<p>A very interesting read if you’re into Python. Eve has been Python 3 compatible for a while and honestl, I would be surprised to find that somebody is running it in production under Python 3.</p>
<blockquote>
<p>Why aren’t people using Python 3?</p>
<p>First, I think it’s because of a lack of urgency. Many years ago, before I knew how to program, the decision to have Python 3 releases live in parallel to Python 2 releases was made. In retrospect this was a mistake, it resulted in a complete lack of urgency for the community to move, and the lack of urgency has given way to lethargy.</p>
<p>Second, I think there’s been little uptake because Python 3 is fundamentally unexciting. It doesn’t have the super big ticket items people want, such as removal of the GIL or better performance (for which many are using PyPy). Instead it has many new libraries (whose need is largely filled by pip install), and small cleanups which many experienced Python developers just avoid by habit at this point. Certainly nothing that would make one stop their development for any length of time to upgrade, not when Python 2 seems like it’s going to be here for a while.</p>
</blockquote>
<p>via <a href="http://alexgaynor.net/2013/dec/30/about-python-3/">Alex Gaynor — About Python 3</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>You Should Change Your Python Shell</title>
      <link>https://nicolaiarocci.com/you-should-change-your-python-shell/</link>
      <pubDate>Sun, 29 Dec 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/you-should-change-your-python-shell/</guid>
      <description>If you write Python code, switching to IPython is the number one thing you can do to immediately improve your productivity. Bold words, I know. Let’s look at how IPython can make you a more productive programmer.
via You Should Change Your Python Shell | GrokCode.</description>
      <content:encoded><![CDATA[<blockquote>
<p>If you write Python code, switching to IPython is the number one thing you can do to immediately improve your productivity. Bold words, I know. Let’s look at how IPython can make you a more productive programmer.</p>
</blockquote>
<p>via <!-- raw HTML omitted -->You Should Change Your Python Shell | GrokCode<!-- raw HTML omitted -->.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eve v0.0.8 has been released</title>
      <link>https://nicolaiarocci.com/eve-v0-0-8-has-been-released/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/eve-v0-0-8-has-been-released/</guid>
      <description>Most significant features are probably the native support for MongoDB write concern settings, new event hooks allowing for transformation of documents before they are sent to clients, increased handling of both pagination and CORS, and the native validation of float data types.
Get it on PyPI, go straight to the source code or more likely, visit the project homepage.</description>
      <content:encoded><![CDATA[<p>Most significant features are probably the native support for MongoDB write concern settings, new event hooks allowing for transformation of documents before they are sent to clients, increased handling of both pagination and CORS, and the native validation of float data types.</p>
<p>Get it on <!-- raw HTML omitted -->PyPI<!-- raw HTML omitted -->, go straight to the <!-- raw HTML omitted -->source code<!-- raw HTML omitted --> or more likely, visit the <!-- raw HTML omitted -->project homepage<!-- raw HTML omitted -->.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Champion Pythonista</title>
      <link>https://nicolaiarocci.com/champion-pythonista/</link>
      <pubDate>Tue, 21 May 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/champion-pythonista/</guid>
      <description>La Open Source Report Card è un’iniziativa divertente. E’ difficile resistere al richiamo dell’ego… soprattutto quand’è smisurato.
Nicola is a champion Pythonista (one of the top 11% most active Python users) who loves pushing code. Nicola is a nine-to-fiver who seems to work best in the mid-afternoon.</description>
      <content:encoded><![CDATA[<p>La <!-- raw HTML omitted -->Open Source Report Card<!-- raw HTML omitted --> è un’iniziativa divertente. E’ difficile resistere al richiamo dell’ego… soprattutto quand’è smisurato.</p>
<blockquote>
<p>Nicola is a champion Pythonista (one of the top 11% most active Python users) who loves pushing code. Nicola is a nine-to-fiver who seems to work best in the mid-afternoon.</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Multi-threading in Python</title>
      <link>https://nicolaiarocci.com/multi-threading-in-python/</link>
      <pubDate>Tue, 23 Apr 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/multi-threading-in-python/</guid>
      <description>Multithreaded Python Tutorial with the “Threadworms” Demo è un’ottima guida introduttiva ai thread ed alla programmazione multithread in Python. Dalla teoria alla pratica, in pochi minuti si arriva a creare una variante multithread di Snake.</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->Multithreaded Python Tutorial with the “Threadworms” Demo<!-- raw HTML omitted --> è un’ottima guida introduttiva ai <!-- raw HTML omitted -->thread<!-- raw HTML omitted --> ed alla programmazione multithread in Python. Dalla teoria alla pratica, in pochi minuti si arriva a creare una variante multithread di <!-- raw HTML omitted -->Snake.<!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>Gestione degli Eventi in Python</title>
      <link>https://nicolaiarocci.com/gestione-degli-eventi-in-python/</link>
      <pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/gestione-degli-eventi-in-python/</guid>
      <description>&lt;p&gt;Gli eventi sono molto usati nelle GUI e nelle implementazioni del modello MVC (Model, View, Controller). Un’altra applicazione tipica è nei protocolli di comunicazione, laddove layer di basso livello devono informare quelli più alti quando ci sono dati in ingresso o in uscita.&lt;/p&gt;
&lt;p&gt;Il linguaggio C# dispone da sempre di una soluzione elegante al problema della gestione degli eventi: il delegato EventHandler. &lt;a href=&#34;https://github.com/nicolaiarocci/events&#34; title=&#34;Events: Bringing the elegance of C# EventHandler to Python&#34;&gt;Events&lt;/a&gt; è una mia implementazione Python del EventHandler C#. In pratica si tratta di una classe molto leggera che incapsula il cuore del meccanismo di sottoscrizione e gestione degli eventi, e tenta di farlo in maniera “naturale”, sembrando parte integrante del linguaggio Python.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Gli eventi sono molto usati nelle GUI e nelle implementazioni del modello MVC (Model, View, Controller). Un’altra applicazione tipica è nei protocolli di comunicazione, laddove layer di basso livello devono informare quelli più alti quando ci sono dati in ingresso o in uscita.</p>
<p>Il linguaggio C# dispone da sempre di una soluzione elegante al problema della gestione degli eventi: il delegato EventHandler. <a href="https://github.com/nicolaiarocci/events" title="Events: Bringing the elegance of C# EventHandler to Python">Events</a> è una mia implementazione Python del EventHandler C#. In pratica si tratta di una classe molto leggera che incapsula il cuore del meccanismo di sottoscrizione e gestione degli eventi, e tenta di farlo in maniera “naturale”, sembrando parte integrante del linguaggio Python.</p>
<h2 id="come-usare-events">Come usare Events</h2>
<p>Tecnicamente un evento è qualcosa a cui è possibile “attaccare” una o più funzioni di callback. Prima di tutto creiamo una funzione di callback che verrà invocata allo scatenarsi dell’evento a cui siamo interessati:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Poi ‘iscriviamo’ la nostra funzione all’evento:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Notate come l’evento sia al tempo stesso dichiarato e sottoscritto, in un’unico passaggio. Più funzioni possono sottoscrivere lo stesso evento. Quando si scatena un evento tutte le funzioni ad esso collegate vengono invocate in sequenza. Per scatenare l’evento ci basta eseguire una chiamata all’evento stesso:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="un-esempio-di-modello-model-view-controller">Un esempio di modello Model-View-Controller</h2>
<p>In genere nell’implementazione di uno schema MVC l’istanza della classe Events farà parte di un Modello, come in questo esempio:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Oggetti View e Controller ne sono i tipici  sottoscrittori:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>E’ inoltre possibile vincolare il nome degli eventi e fare l’introspezione delle sole due classi che costituiscono Events. La <a href="http://events.readthedocs.org/" title="Events">documentazione</a> include gli esempi e le istruzioni per l’installazione; il <a href="https://github.com/nicolaiarocci/events" title="Events on GitHub">codice sorgente</a> è a disposizione su GitHub. Buon divertimento!</p>]]></content:encoded>
    </item>
    <item>
      <title>Vi presento Eve il framework per le REST API Web</title>
      <link>https://nicolaiarocci.com/vi-presento-eve-il-framework-per-lanciare-la-vostra-rest-api-web/</link>
      <pubDate>Tue, 08 Jan 2013 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/vi-presento-eve-il-framework-per-lanciare-la-vostra-rest-api-web/</guid>
      <description>Lo scorso anno abbiamo lavorato duro per costruirci una RESTful Web API su misura, flessibile e completa. In corso d’opera abbiamo imparato molto sulle migliori pratiche REST, mettendo anche alla frusta le rinomate capacità Web del linguaggio Python.
Ad EuroPython 2012 ho poi raccontato la nostra esperienza e condiviso ciò che avevamo imparato. In quell’occasione mi sono reso conto di quanto l’argomento fosse d’attualità, tanto che da quel 4 luglio le slide che avevo preparato (le trovate su Speaker Deck o Slideshare) ed i video su YouTube (italiano; inglese) hanno totalizzato 30mila visite.</description>
      <content:encoded><![CDATA[<p>Lo scorso anno abbiamo lavorato duro per costruirci una RESTful Web API su misura, flessibile e completa. In corso d’opera abbiamo imparato molto sulle migliori pratiche REST, mettendo anche alla frusta le rinomate capacità Web del linguaggio Python.</p>
<p>Ad EuroPython 2012 ho poi <a href="http://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/">raccontato la nostra esperienza</a> e condiviso ciò che avevamo imparato. In quell’occasione mi sono reso conto di quanto l’argomento fosse d’attualità, tanto che da quel 4 luglio le slide che avevo preparato (le trovate su <!-- raw HTML omitted -->Speaker Deck<!-- raw HTML omitted --> o <!-- raw HTML omitted -->Slideshare<!-- raw HTML omitted -->) ed i video su YouTube (<!-- raw HTML omitted -->italiano<!-- raw HTML omitted -->; <!-- raw HTML omitted -->inglese<!-- raw HTML omitted -->) hanno totalizzato 30mila visite. Da allora ricevo continue richieste di chiarimenti, suggerimenti, approfondimenti, consigli. Soprattutto, mi si chiedono esempi di codice. In fin dei conti prima o poi qualunque sviluppatore web si trova, volente o nolente, a fare i conti con una REST API.</p>
<p>Così ho pensato che avrei potuto prendere il nostro codice proprietario (nome interno Adam), sistemarlo un po’ in modo che si adattasse ai casi d’uso più comuni, e rilasciarlo come progetto open source. Be’ c’è voluto un bel po’ di lavoro, ben più di quello inizialmente preventivato, ma ora ci siamo. Il progetto è finalmente disponibile, e naturalmente si chiama <!-- raw HTML omitted -->Eve<!-- raw HTML omitted -->.</p>
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>Costruire e lanciare una API con Eve è semplice. Servono tre cose; un database, un file di configurazione, uno script di lancio. MongoDB è già supportato; sviluppare estensioni per altri database SQL/NoSQL non dovrebbe essere troppo complicato. Le personalizzazioni della vostra API sono salvate in un modulo standard Python. Lo script di esecuzione è in genere davvero semplice:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Le API basate su Eve supportano l’intero range di operazioni CRUD (Create, Read, Update, Delete). Ogni end-point è personalizzabile e supporta filtri, paginazione e ordinamenti. Per massima accessibilità i client possono chiedere che le risposte pervengano in JSON oppure XML. Sono supportati gli inserimenti multipli, le direttive di caching per i client, il versioning e… tante altre cosette.</p>
<p>Non mi dilungo oltre poiché su <!-- raw HTML omitted -->GitHub<!-- raw HTML omitted --> trovate tutto quel che serve: documentazione (al momento piuttosto scarna), codice e progetti satellite. In particolare date un’occhiata a <!-- raw HTML omitted -->Eve-Demo<!-- raw HTML omitted -->, una API funzionante messa su in pochi minuti grazie a Eve. Potete consultarla direttamente, via cURL per esempio, o anche <!-- raw HTML omitted -->via browser<!-- raw HTML omitted --> (in questo caso vi beccherete del XML in risposta, mentre via cURL o altro potrete scegliere JSON). Il README di eve-demo include una serie completa di esempi relativi alle varie operazioni di lettura, inserimento, cancellazione, aggiornamento.</p>
<p>C’è ancora tanto da fare affinché Eve diventi il framework completo, stabile e maturo che ho in mente ma credo che il progetto ora sia pronto per una anteprima pubblica. In ogni caso sono lieto di dare finalmente risposta alle richieste di questi mesi: ora avete il codice; usatelo come volete. Spero anche e soprattutto di raccogliere critiche, consigli e suggerimenti; magari a qualcuno verrà anche voglia di collaborare!</p>
<p>PS: Buon 2013!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python ti mette le ali</title>
      <link>https://nicolaiarocci.com/python-ti-mette-le-ali/</link>
      <pubDate>Sat, 15 Dec 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-ti-mette-le-ali/</guid>
      <description> </description>
      <content:encoded><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    <item>
      <title>Cerberus 0.0.2: tipi di dato personalizzati</title>
      <link>https://nicolaiarocci.com/cerberus-0-0-2-tipi-di-dato-personalizzati/</link>
      <pubDate>Thu, 22 Nov 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/cerberus-0-0-2-tipi-di-dato-personalizzati/</guid>
      <description>Primo aggiornamento per Cerberus, lo strumento per la convalida dei dizionari Python che ho rilasciato qualche tempo fa. Ora è possibile estendere la lista dei tipi di dato da convalidare, aggiungendone di propri. Per esempio nella nostra REST API (che usa Cerberus per la validazione) uso questa tecnica per implementare e convalidare il tipo ObjectId, tipico di MongoDB. I dettagli li trovate nella documentazione.</description>
      <content:encoded><![CDATA[<p>Primo aggiornamento per <!-- raw HTML omitted -->Cerberus<!-- raw HTML omitted -->,
lo strumento per la convalida dei dizionari Python che ho rilasciato qualche
tempo fa. Ora è possibile estendere la lista dei tipi di dato da convalidare,
aggiungendone di propri. Per esempio nella nostra REST API (che usa Cerberus
per la validazione) uso questa tecnica per implementare e convalidare il tipo
<code>ObjectId</code>, tipico di MongoDB. I dettagli
li trovate nella <!-- raw HTML omitted -->documentazione<!-- raw HTML omitted -->.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python Tools per Visual Studio 1.5</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-1-5/</link>
      <pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-1-5/</guid>
      <description>Seguo il progetto Python Tools per Visual Studio da molto tempo.
Python Tools per Visual Studio è un plugin gratuito e open source che trasforma Visual Studio in una IDE per Python. Supporta CPython, IronPython, Intellisense, Debugging, Profiling, Editing, Browsing, REPL Multipli, IPython, Django e Cloud Computing con librerie client per Windows, Linux e OS X (Azure).
La versione 1.5, rilasciata oggi, aggiunge supporto per Django, Azure, REPL debugging, Visual Studio 2012 e altro.</description>
      <content:encoded><![CDATA[<p>Seguo il progetto Python Tools per Visual Studio da <a href="http://nicolaiarocci.com/?s=python+tools+visual+studio&amp;submit=Search" title="Python Tools per Visual Studio">molto tempo</a>.</p>
<blockquote>
<p>Python Tools per Visual Studio è un plugin gratuito e open source che trasforma Visual Studio in una IDE per Python. Supporta CPython, IronPython, Intellisense, Debugging, Profiling, Editing, Browsing, REPL Multipli, IPython, Django e Cloud Computing con librerie client per Windows, Linux e OS X (Azure).</p>
</blockquote>
<p>La <!-- raw HTML omitted -->versione 1.5<!-- raw HTML omitted -->, rilasciata oggi, aggiunge supporto per Django, Azure, REPL debugging, Visual Studio 2012 e altro.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Convalidare un dizionario Python con Cerberus</title>
      <link>https://nicolaiarocci.com/convalidare-un-dizionario-python-con-cerberus/</link>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/convalidare-un-dizionario-python-con-cerberus/</guid>
      <description>Da qualche giorno ho rilasciato Cerberus, uno strumento per la convalida dei dizionari Python. Gli passate un dizionario, lui lo confronta con uno schema di convalida e, se c’è qualcosa che non va (per esempio una chiave sconosciuta, oppure un valore di tipo sbagliato), ve lo segnala.
Sono due le caratteristiche che rendono Cerberus interessante: è facilmente estensibile (la documentazione include un esempio di estensione del sistema di convalida), e non si blocca sollevando un’eccezione al primo problema riscontrato: gli errori, quando presenti, sono tutti riportati in una lista a fine convalida.</description>
      <content:encoded><![CDATA[<p>Da qualche giorno ho rilasciato <!-- raw HTML omitted -->Cerberus<!-- raw HTML omitted -->, uno strumento per la convalida dei dizionari Python. Gli passate un dizionario, lui lo confronta con uno schema di convalida e, se c’è qualcosa che non va (per esempio una chiave sconosciuta, oppure un valore di tipo sbagliato), ve lo segnala.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Sono due le caratteristiche che rendono Cerberus interessante: è facilmente estensibile (la <!-- raw HTML omitted -->documentazione<!-- raw HTML omitted --> include un esempio di estensione del sistema di convalida), e non si blocca sollevando un’eccezione al primo problema riscontrato: gli errori, quando presenti, sono tutti riportati in una lista a fine convalida.</p>
<p>Cerberus è un progetto open source tutt’ora in pieno sviluppo, al quale è possibile partecipare. E’ alla base del sistema di convalida impiegato dalla nostra REST API, ma può e dovrebbe vivere di vita propria – per esempio nei vostri progetti. A proposito, la stessa RESTful Web API, <a href="http://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/" title="Sviluppare una RESTful Web API con Python">quella di cui ho parlato a EuroPython</a>, sarà rilasciata come progetto open source. Stay tuned.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Decodificare le date in un flusso JSON (Python)</title>
      <link>https://nicolaiarocci.com/decodificare-le-date-in-un-flusso-json-python/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/decodificare-le-date-in-un-flusso-json-python/</guid>
      <description>JSON-Datetime permette di decodificare i valori [cci lang=”python” theme=”default”]datetime[/cci] normalmente espressi come stringhe in un flusso JSON. E’ davvero molto semplice, e fa parte della suite strumenti open source che sto sviluppando nel contesto del più ampio progetto RESTful Web API.
Del problema della decodifica delle stringhe JSON in valori datetime ho già scritto in passato. Allora proponevo una soluzione algoritmica; ora vi presento un prodotto finito che potete usare nei vostri progetti.</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->JSON-Datetime<!-- raw HTML omitted --> permette di decodificare i valori [cci lang=”python” theme=”default”]datetime[/cci] normalmente espressi come stringhe in un flusso JSON. E’ davvero molto semplice, e fa parte della suite strumenti open source che sto sviluppando nel contesto del più ampio progetto <a href="http://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/" title="Sviluppare una RESTful Web API">RESTful Web API</a>.</p>
<p>Del problema della decodifica delle stringhe JSON in valori datetime ho <a href="http://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/" title="Convertire una data JSON in un oggetto Python datetime">già scritto in passato</a>. Allora proponevo una soluzione algoritmica; ora vi presento un prodotto finito che potete usare nei vostri progetti.</p>
<h2 id="il-problema">Il problema</h2>
<p>Lo standard JSON (<!-- raw HTML omitted -->RFC 4627<!-- raw HTML omitted -->) non supporta valori di tipo data/ora. In un flusso JSON le date vengono rappresentate come semplici stringhe che i decoder Python interpretano come tali:</p>
<pre><code>import simplejson as json

&gt;&gt;&gt;test = '{&quot;name&quot;: &quot;John Doe&quot;, &quot;born&quot;: &quot;Thu, 1 Mar 2012 10:00:49 UTC&quot;}'
&gt;&gt;&gt;json.loads(test)
{'name': 'John Doe', 'born': 'Thu, 1 Mar 2012 10:00:49 
</code></pre>
<p>Nell’esempio precedente il campo <code>born</code> è una stringa nel JSON, e tale rimane dopo la decodifica in un dizionario Python.</p>
<h2 id="la-soluzione">La soluzione</h2>
<p>JSON-Datetime è un semplice wrapper attorno al metodo <code>loads</code> di <!-- raw HTML omitted -->simplejson<!-- raw HTML omitted -->. Ecco che succede quando usiamo JSON-Datetime al posto di simplejson:</p>
<pre><code>&gt;&gt;&gt; import jsondatetime as json
&gt;&gt;&gt; test = '{&quot;name&quot;: &quot;John Doe&quot;, &quot;born&quot;: &quot;Thu, 1 Mar 2012 10:00:49 UTC&quot;}'

&gt;&gt;&gt; json.loads(test)
{'name': 'John Doe', 'born': datetime.datetime(2012, 3, 1, 10, 0 ,49)}
</code></pre>
<p>Ora <code>born</code> assume il valore corretto. Affinché vengano riconosciute, le date contenute nel JSON devono corrispondere a un formato <code>strptime()</code> valido indicato con l’argomento <code>datetime_format</code>. Nell’esempio precedente, poiché l’argomento è assente, viene usato il valore di default <code>'%a, %d %b %Y %H:%M:%S UTC'</code>, corrispondente allo standard RFC 1123 (ex 822). Nell’esempio che segue usiamo un formato personalizzato:</p>
<pre><code>&gt;&gt;&gt; import jsondatetime as json
&gt;&gt;&gt; test = '{&quot;name&quot;: &quot;John Doe&quot;, &quot;born&quot;: &quot;Thu, 1 Mar 2012&quot;}'

&gt;&gt;&gt; json.loads(test, datetime_format=&quot;%a, %d %b %Y&quot;;)
{'name': 'John Doe', 'born': datetime.datetime(2012, 3, 1)}
</code></pre>
<p>JSON-Datetime è un semplice wrapper che ci lascia liberi di usare tutti gli argomenti standard previsti per <code>loads</code>, <code>object_hook</code> incluso. Ciò significa che questa soluzione (al contrario di quella proposta in precedenza) ci lascia liberi di applicare qualsivoglia parser al nostro flusso JSON.</p>
<h2 id="installazione-e-sorgenti">Installazione e sorgenti</h2>
<p>Per l’installazione basta il classico <code>pip install json-datetime</code>. Il codice è disponibile su <!-- raw HTML omitted -->GitHub<!-- raw HTML omitted -->.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Pybooks – Le migliori risorse gratuite su Python</title>
      <link>https://nicolaiarocci.com/pybooks-le-migliori-risorse-gratuite-su-python/</link>
      <pubDate>Tue, 04 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/pybooks-le-migliori-risorse-gratuite-su-python/</guid>
      <description>PyBooks è un’ottima selezione di risorse gratuite su Python e dintorni. I migliori libri gratuiti su Python sono inclusi, così come alcuni validi tutorial sulle librerie e i framework più diffusi. Il progetto è curato dalle stesse persone che stanno dietro JSBooks, la raccolta di libri JavaScript di cui ho scritto qualche giorno fa. Anche in questo caso è possibile contribuire attivamente segnalando nuove interessanti risorse.</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->PyBooks<!-- raw HTML omitted --> è un’ottima selezione di risorse gratuite su Python e dintorni. I migliori libri gratuiti su Python sono inclusi, così come alcuni validi tutorial sulle librerie e i framework più diffusi. Il progetto è curato dalle stesse persone che stanno dietro JSBooks, la raccolta di libri JavaScript di cui ho scritto <a href="http://nicolaiarocci.com/jsbooks-libri-open-source-su-javascript/" title="JSBooks">qualche giorno fa</a>. Anche in questo caso è possibile contribuire attivamente segnalando nuove interessanti risorse.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Imparare Python con Codecademy</title>
      <link>https://nicolaiarocci.com/imparare-python-con-codecademy/</link>
      <pubDate>Tue, 31 Jul 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/imparare-python-con-codecademy/</guid>
      <description>Di Codecademy avevo già scritto tempo fa in occasione dei loro primi corsi giocoso-interattivi su HTML, CSS e JavaScript. E’ di ieri l’annuncio del nuovo corso Python per principianti. Se volete rompere il ghiaccio con questo bellissimo linguaggio l’approccio di Codecademy (imparare divertendosi, anche grazie a collaudati meccanismi incentivanti come i punteggi e i trofei) potrebbe fare per voi.</description>
      <content:encoded><![CDATA[<p>Di Codecademy avevo già scritto <a href="http://nicolaiarocci.com/imparare-html-e-css-online-con-codecademy/" title="Imparare HTM e CSS online con Codecademy">tempo fa</a> in occasione dei loro primi corsi giocoso-interattivi su HTML, CSS  e JavaScript. E’ di ieri l’annuncio del <!-- raw HTML omitted -->nuovo corso Python per principianti<!-- raw HTML omitted -->. Se volete rompere il ghiaccio con questo bellissimo linguaggio l’approccio di Codecademy (imparare divertendosi, anche grazie a collaudati meccanismi incentivanti come i punteggi e i trofei) potrebbe fare per voi.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Analisi delle performance in Python</title>
      <link>https://nicolaiarocci.com/analisi-delle-performance-python/</link>
      <pubDate>Wed, 25 Jul 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/analisi-delle-performance-python/</guid>
      <description>E’ vero che non tutti i programmi Python richiedono un’analisi rigorosa delle prestazioni, ma è rassicurante sapere che l’ecosistema Python ci mette a disposizione una serie di strumenti a cui possiamo rivolgerci in caso di necessità.
Analizzare la performance di un programma significa prima di tutto rispondere a queste quattro semplici domande:
Quanto gira veloce? Dove sono i “collli di bottiglia”? Quanta memoria sta utilizzando? Dove occorrono gli spechi di memoria?</description>
      <content:encoded><![CDATA[<blockquote>
<p>E’ vero che non tutti i programmi Python richiedono un’analisi rigorosa delle prestazioni, ma è rassicurante sapere che l’ecosistema Python ci mette a disposizione una serie di strumenti a cui possiamo rivolgerci in caso di necessità.</p>
<p>Analizzare la performance di un programma significa prima di tutto rispondere a queste quattro semplici domande:</p>
<ul>
<li>Quanto gira veloce?</li>
<li>Dove sono i “collli di bottiglia”?</li>
<li>Quanta memoria sta utilizzando?</li>
<li>Dove occorrono gli spechi di memoria?</li>
</ul>
<p>Scopriamo come rispondere a queste domande attraverso alcuni strumenti molto interessanti.</p>
</blockquote>
<p><!-- raw HTML omitted -->A guide to analyzing Python performance<!-- raw HTML omitted --> è un’articolo non difficile che vale la pena leggere.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Flask-MimeRender v0.1.2</title>
      <link>https://nicolaiarocci.com/flask-mimerender-v0-1-2/</link>
      <pubDate>Thu, 19 Jul 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/flask-mimerender-v0-1-2/</guid>
      <description>Grazie al contributo di Bruno Ripa, la versione 0.1.2 di Flask-MimeRender pubblicata oggi introduce il supporto per codici di stato HTTP arbitrari. Ho colto l’occasione per uniformare il codice sorgente alle direttive PEP8 e per sistemare alcuni dettagli del package PyPI. Vi ricordo che potete contribuire voi stessi al progetto, direttamente su GitHub.</description>
      <content:encoded><![CDATA[<p>Grazie al contributo di <a href="http://twitter.com/brunoripa">Bruno Ripa</a>, la versione 0.1.2 di <a href="http://nicolaiarocci.com/come-implementare-un-web-service-rest-che-adatta-le-risposte-al-mime-media-type-delle-richieste-http/" title="Flask-MimeRender">Flask-MimeRender</a> pubblicata oggi introduce il supporto per codici di stato HTTP arbitrari. Ho colto l’occasione per uniformare il codice sorgente alle direttive PEP8 e per sistemare alcuni dettagli del <a href="http://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/" title="Flask-MimeRender su PyPI">package PyPI</a>. Vi ricordo che potete contribuire voi stessi al progetto, direttamente su <!-- raw HTML omitted -->GitHub<!-- raw HTML omitted -->.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Sviluppare una RESTful Web API con Python, Flask e MongoDB</title>
      <link>https://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;La scorsa settimana a &lt;!-- raw HTML omitted --&gt;EuroPython 2012&lt;!-- raw HTML omitted --&gt; ho tenuto un talk intitolato &lt;!-- raw HTML omitted --&gt;Sviluppare una RESTful Web API con Python, Flask e MongoDB&lt;!-- raw HTML omitted --&gt;. Mi ha fatto piacere riscontrare forte interesse sia per gli aspetti teorici dell’architettura REST che per la loro implementazione pratica con strumenti quali Flask e MongoDB. In entrambe le sessioni inglese e italiana mi sono state rivolte molte domande, sia in occasione delle Q&amp;amp;A plenarie che nei successivi colloqui informali. Parecchi anche i commenti ed i suggerimenti, davvero utili ed apprezzati (a quanto pare non sono l’unico che, forte di un background .NET, ha compiuto o sta per compiere il salto verso Python e il mondo open source).&lt;/p&gt;
&lt;p&gt;Soprattutto ho rilevato una forte curiosità su MongoDB, un database non-relazionale verso il quale sembra prevalere un atteggiamento  di generale timidezza: “vorrei ma non oso”, insomma. Per quanto riguarda Flask direi che ormai, nel vasto firmamento dei micro web framework, è una stella che brilla di luce propria.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->La scorsa settimana a <!-- raw HTML omitted -->EuroPython 2012<!-- raw HTML omitted --> ho tenuto un talk intitolato <!-- raw HTML omitted -->Sviluppare una RESTful Web API con Python, Flask e MongoDB<!-- raw HTML omitted -->. Mi ha fatto piacere riscontrare forte interesse sia per gli aspetti teorici dell’architettura REST che per la loro implementazione pratica con strumenti quali Flask e MongoDB. In entrambe le sessioni inglese e italiana mi sono state rivolte molte domande, sia in occasione delle Q&amp;A plenarie che nei successivi colloqui informali. Parecchi anche i commenti ed i suggerimenti, davvero utili ed apprezzati (a quanto pare non sono l’unico che, forte di un background .NET, ha compiuto o sta per compiere il salto verso Python e il mondo open source).</p>
<p>Soprattutto ho rilevato una forte curiosità su MongoDB, un database non-relazionale verso il quale sembra prevalere un atteggiamento  di generale timidezza: “vorrei ma non oso”, insomma. Per quanto riguarda Flask direi che ormai, nel vasto firmamento dei micro web framework, è una stella che brilla di luce propria.</p>
<p>Per quanto riguarda le registrazioni video potete andare su YouTube o sulla pagina ufficiale di EuroPython (<!-- raw HTML omitted -->english track<!-- raw HTML omitted --> e <!-- raw HTML omitted -->italian track<!-- raw HTML omitted -->). Ammetto di essere più soddisfatto della versione inglese nella quale – complice anche l’esperienza italiana del giorno prima – credo di essere stato più sintetico ed efficace. Qui mi limito a proporvi le slide:</p>
<h2 id="ringraziamenti">Ringraziamenti</h2>
<p>Un immenso grazie ai ragazzi dello staff di EuroPython che veramente hanno fatto di tutto per rendere questa manifestazione un evento straordinario – e ci sono riusciti  (una settimana di talk su cinque tracce parallele, sprint, hands-on, corsi, cibo di ottima qualità e credo oltre 800 partecipanti).</p>
<p>Vi racconto un episodio giusto per darvi l’idea di quanto questi ragazzi, tutti volontari, si diano da fare e ci mettano passione vera. Nella sessione italiana ho ‘sforato’ (capita anche ai migliori, mi dicono!) e così mi son trovato a sorvolare su un certo numero di slide. Ebbene il mio talk manager e il suo assistente mi hanno proposto di loro iniziativa di tenere una sessione pomeridiana straordinaria per consentirmi di portare a termine la mia relazione. Non capita tutti i giorni, credetemi. Per mia fortuna gran parte delle persone che avevano assistito alla sessione mattutina sono poi tornate per quella del pomeriggio, altrimenti sai che figura!</p>
<p>Se siete pythonisti o vorreste diventarlo non perdetevi la prossima edizione di questo evento internazionale che, con tutta probabilità, si terrà di nuovo a Firenze l’anno prossimo.</p>]]></content:encoded>
    </item>
    <item>
      <title>Windows Azure ora supporta ufficialmente Python</title>
      <link>https://nicolaiarocci.com/windows-azure-ora-supporta-ufficialmente-python/</link>
      <pubDate>Fri, 08 Jun 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/windows-azure-ora-supporta-ufficialmente-python/</guid>
      <description>Windows Azure ora supporta ufficialmente Python. La pagina ufficiale consente di scaricare l’SDK e contiene alcuni tutorial per la creazione di applicazioni Django, Python e IPython direttamente da Visual Studio.</description>
      <content:encoded><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Windows Azure ora supporta ufficialmente Python. La <!-- raw HTML omitted -->pagina ufficiale<!-- raw HTML omitted --> consente di scaricare l’SDK e contiene alcuni tutorial per la creazione di applicazioni Django, Python e IPython direttamente da Visual Studio.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Convertire una data JSON in un oggetto datetime Python</title>
      <link>https://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/</link>
      <pubDate>Thu, 07 Jun 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/</guid>
      <description>Abbiamo una stringa JSON che contiene una data:
fonte = &#39;{&amp;quot;ragione_sociale&amp;quot;: &amp;quot;CIR 2000&amp;quot;, &amp;quot;aggiornato_il&amp;quot;: &amp;quot;Wed, 06 Jun 2012 14:19:53 UTC&amp;quot;}&#39; Vediamo che succede se la convertiamo in un dizionario Python:
import simplejson as json json.loads(fonte) {&#39;aggiornato_il&#39;: &#39;Wed, 06 Jun 2012 14:19:53 UTC &#39;, &#39;ragione_sociale&#39;: &#39;CIR 2000&#39;} Facile, vero? C’è però un piccolo problema: aggiornato_il è ancora una stringa mentre a noi, per poterlo elaborare comodamente, serve un campo datetime.datetime. Come mai il pur potente modulo simplejson non converte correttamente la nostra data?</description>
      <content:encoded><![CDATA[<p>Abbiamo una stringa JSON che contiene una data:</p>
<pre><code>fonte = '{&quot;ragione_sociale&quot;: &quot;CIR 2000&quot;, &quot;aggiornato_il&quot;: &quot;Wed, 06 Jun 2012 14:19:53 UTC&quot;}'
</code></pre>
<p>Vediamo che succede se la convertiamo in un dizionario Python:</p>
<pre><code>import simplejson as json

json.loads(fonte)
{'aggiornato_il': 'Wed, 06 Jun 2012 14:19:53 UTC ', 'ragione_sociale': 'CIR 2000'}
</code></pre>
<p>Facile, vero? C’è però un piccolo problema: <code>aggiornato_il</code> è ancora una stringa mentre a noi, per poterlo elaborare comodamente, serve un campo <code>datetime.datetime</code>. Come mai il pur potente modulo <code>simplejson</code> non converte correttamente la nostra data?</p>
<h2 id="il-problema">Il problema</h2>
<p>Il fatto è che il JSON originale non fa nulla per informarci del fatto che il campo <code>aggiornato_il</code> esprime in realtà una data. La radice del problema sta nello standard JSON il quale non contempla la dichiarazione esplicita dei tipi di dati. In effetti la stessa questione si pone nella conversione di un numero non intero: va considerato un float, oppure un decimal? In quest’ultimo caso <code>simplejson</code> ci viene in aiuto con il parametro parse_float:</p>
<pre><code>import simplejson as json

json.loads('1.1', parse_float=decimal.Decimal)
Decimal('1.1')
</code></pre>
<p>Purtroppo, per il motivo visto prima, non esiste un equivalente per le date.</p>
<h2 id="la-soluzione-classica">La soluzione classica</h2>
<p>In questi casi la prassi comune è rendere esplicito, già all’interno della stringa JSON, il formato del campo. Qualcosa del genere:</p>
<pre><code>{&quot;aggiornato_il&quot;: &quot;$date: Wed, 06 Jun 2012 14:19:53 UTC&quot;}
</code></pre>
<p>Così facendo possiamo in seguito manipolare il dizionario restituito dal metodo <code>loads</code>: intercettare la direttiva <code>$date</code> e sostituire finalmente la stringa con una data. Una soluzione più raffinata è quella di sfruttare l’opzione <code>object_hook</code> che consente di invocare una nostra funzione ad ogni chiamata del metodo <code>loads</code>.</p>
<h2 id="la-mia-soluzione">La mia soluzione</h2>
<p>Nel mio caso il provider JSON è esterno, e non desidero obbligarlo a pre-processare le stringhe JSON inserendo clausole $date arbitrarie solo per soddisfare le esigenze della mia applicazione. Sfruttando l’opzione object_hook già accennata ho ottenuto una soluzione del tutto trasparente:</p>
<pre><code>fonte = '{&quot;aggiornato_il&quot;: &quot;Thu, 1 Mar 2012 10:00:49 UTC&quot;}'
dct = json.loads(fonte, object_hook=datetime_parser)
dct
{u'aggiornato_il': datetime.datetime(2012, 3, 1, 10, 0, 49)}


def datetime_parser(dct):
    for k, v in dct.items():
        if isinstance(v, basestring) and re.search(&quot; UTC&quot;, v):
            try:
                dct[k] = datetime.datetime.strptime(v, DATE_FORMAT)
            except:
                pass
    return dct
</code></pre>
<p>La funzione <code>datetime_parser</code> esamina gli elementi della stringa JSON. In caso di corrispondenza alla espressione regolare indicata in <code>re.search</code> tentiamo una conversione diretta al formato <code>datetime</code>. Data la specificità della espressione regolare la conversione dovrebbe avere successo. Il blocco <code>try... except</code> ci permette di ignorare un eventuale errore: in questo caso infatti presumiamo che si tratti di una stringa vera e propria e non, malgrado la somiglianza, di una data. L’unico vincolo imposto al provider JSON è l’adozione di un formato standard per rappresentare le date. Nel mio caso è il seguente:</p>
<pre><code>DATE_FORMAT = '%a, %d %b %Y %H:%M:%S UTC'
</code></pre>
<p>Per approfondimenti vi consiglio:</p>
<ul>
<li><!-- raw HTML omitted -->JSON econdoer and decoder<!-- raw HTML omitted --></li>
<li><a href="http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/" title="Introduzione alle Regular Expression">Introduzione alle Regular Expression</a></li>
</ul>
<p>Per completezza c’è da aggiungere che l’adozione di un <!-- raw HTML omitted -->json schema<!-- raw HTML omitted --> consentirebbe la specifica dei tipi di dati JSON. Quest’ultima soluzione però, data la sua complessità, non è applicabile nel mio e in molti altri casi.</p>
<p>PS: ne ho scritto anche su <!-- raw HTML omitted -->Stack Overflow<!-- raw HTML omitted -->.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Conosco solo PHP. Come scrivo una applicazione web in Python?</title>
      <link>https://nicolaiarocci.com/conosco-solo-php-come-scrivo-una-applicazione-web-in-python/</link>
      <pubDate>Mon, 07 May 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/conosco-solo-php-come-scrivo-una-applicazione-web-in-python/</guid>
      <description>Venite da PHP e siete incuriositi da Python? Vi consiglio la lettura di Python FAQ Webdev: i web framework Python dal punto di vista di un ex sviluppatore PHP.</description>
      <content:encoded><![CDATA[<p>Venite da PHP e siete incuriositi da Python? Vi consiglio la lettura di <!-- raw HTML omitted -->Python FAQ Webdev<!-- raw HTML omitted -->: i web framework Python dal punto di vista di un ex sviluppatore PHP.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Guido van Rossum a EuroPython 2012</title>
      <link>https://nicolaiarocci.com/guido-van-rossum-a-europython-2012/</link>
      <pubDate>Fri, 20 Apr 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/guido-van-rossum-a-europython-2012/</guid>
      <description>Partenza col botto per EuroPython 2012. I keynote introduttivi saranno tenuti nientemeno che dal creatore stesso del linguaggio, Guido Van Rossum, e da Alex Martelli. Ieri è stato annunciato il programma ufficiale e a quanto pare mi spetta l’inaugurazione della italian track martedì 3 luglio. Il giorno successivo sarò impegnato, ancora di prima mattina, con la versione in lingua inglese del mio talk:
Sviluppare una RESTful Web API con Python, Flask e MongoDB</description>
      <content:encoded><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Partenza col botto per <!-- raw HTML omitted -->EuroPython 2012<!-- raw HTML omitted -->. I keynote introduttivi saranno tenuti nientemeno che dal creatore stesso del linguaggio, Guido Van Rossum, e da Alex Martelli. Ieri è stato annunciato il <!-- raw HTML omitted -->programma ufficiale<!-- raw HTML omitted --> e a quanto pare mi spetta l’inaugurazione della italian track martedì 3 luglio. Il giorno successivo sarò impegnato, ancora di prima mattina, con la versione in lingua inglese del mio talk:</p>
<blockquote>
<p><!-- raw HTML omitted -->Sviluppare una RESTful Web API con Python, Flask e MongoDB<!-- raw HTML omitted --></p>
<p>Nel corso dell’ultimo anno abbiamo lavorato all’implementazione Python di una RESTful Web API completa. Abbiamo imparato un bel po’ di cose sui best pattern REST e, naturalmente, abbiamo messo alla prova le ben note capacità web di Python, rilasciando nel frattempo un paio di progetti Open Source. Nel corso del mio intervento condividerò quel che abbiamo imparato. Prenderemo in considerazione il problematico design di una REST API ‘pura’. Vedremo che cosa offre Python in questo campo e scenderemo infine nel dettaglio, dando una occhiata al codice che abbiamo scritto. Alcune tecnologie/stack che tratteremo sono (in nessun ordine particolare): Flask, PyMongo, MongoDB, REST, JSON, XML, Heroku. Lo sapevi? Che ti piaccia o no, c’è una REST API nel tuo futuro.</p>
</blockquote>
<p>Scorrendo la lista degli speaker scopro che anche Amin Roacher, autore di Flask, e Ross Lawley di 10Gen (MongoDB) saranno della partita. Insomma ammetto che un po’ d’ansia da prestazione comincia ad affiorare. Sarà una bella sfida, e non vedo l’ora di affrontarla. Conto molto sul vostro supporto e incoraggiamento: ne avrò bisogno 😉</p>
]]></content:encoded>
    </item>
    <item>
      <title>Speaker a EuroPython 2012</title>
      <link>https://nicolaiarocci.com/speaker-a-europython-2012/</link>
      <pubDate>Fri, 13 Apr 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/speaker-a-europython-2012/</guid>
      <description>EuroPython è la conferenza europea di riferimento per il linguaggio Python. Si terrà anche quest’anno a Firenze, dal 2 al 8 luglio. Sono in programma molti interventi davvero interessanti, cosa che rende ancor più soprendente il fatto che i miei talk siano stati votati così tanto.
Date un’occhiata al sito ufficiale per saperne di più sulla conferenza (in questo momento è ancora possibile approfittare dell’offerta early bird per l’acquisto dei biglietti); maggiori informazioni sui miei interventi tra qualche tempo, quando sarà ufficializzato il calendario dei talk.</description>
      <content:encoded><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>EuroPython è la conferenza europea di riferimento per il linguaggio Python. Si terrà anche quest’anno a Firenze, dal 2 al 8 luglio. Sono in programma molti interventi davvero interessanti, cosa che rende ancor più soprendente il fatto che i miei talk siano stati votati così tanto.</p>
<!-- raw HTML omitted -->
<p>Date un’occhiata al <!-- raw HTML omitted -->sito ufficiale<!-- raw HTML omitted --> per saperne di più sulla conferenza (in questo momento è ancora possibile approfittare dell’offerta <em>early bird</em> per l’acquisto dei biglietti); maggiori informazioni sui miei interventi tra qualche tempo, quando sarà ufficializzato il calendario dei talk.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Infografica: PHP vs Ruby vs Python</title>
      <link>https://nicolaiarocci.com/infografica-php-vs-ruby-vs-python/</link>
      <pubDate>Wed, 21 Mar 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/infografica-php-vs-ruby-vs-python/</guid>
      <description>&lt;p&gt;I linguaggi di programmazione ‘moderni’ a confronto: PHP vs Ruby vs Python. Lo scorso gennaio &lt;!-- raw HTML omitted --&gt;Udemy&lt;!-- raw HTML omitted --&gt; ha rilasciato una bella infografica che confronta i tre linguaggi sotto molti aspetti. Ne esce una fotografia secondo me interessante dell’attuale panorama dei linguaggi interpretati:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I linguaggi di programmazione ‘moderni’ a confronto: PHP vs Ruby vs Python. Lo scorso gennaio <!-- raw HTML omitted -->Udemy<!-- raw HTML omitted --> ha rilasciato una bella infografica che confronta i tre linguaggi sotto molti aspetti. Ne esce una fotografia secondo me interessante dell’attuale panorama dei linguaggi interpretati:</p>
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>]]></content:encoded>
    </item>
    <item>
      <title>Python per Facebook</title>
      <link>https://nicolaiarocci.com/python-per-facebook/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-per-facebook/</guid>
      <description>Una casa per gli sviluppatori Python che lavorano con Facebook. Gestiamo due repository su GitHub. facebook-sdk, un set di tools essenziali per lavorare con Facebook in Python. django-facebook, un plugin estendibile per costruire siti Django integrati con Facebook.
via @bacchilu</description>
      <content:encoded><![CDATA[<blockquote>
<p>Una casa per gli sviluppatori Python che lavorano con Facebook. Gestiamo due repository su GitHub. <strong>facebook-sdk</strong>, un set di tools essenziali per lavorare con Facebook in Python. <strong>django-facebook</strong>, un plugin estendibile per costruire siti Django integrati con Facebook.</p>
</blockquote>
<!-- raw HTML omitted -->
<p>via <!-- raw HTML omitted -->@bacchilu<!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>Flask MimeRender nel Python Package Index (PyPI)</title>
      <link>https://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/</guid>
      <description>Un appunto veloce per segnalare che Flask MimeRender, il mio strumento RESTful per il rendering basato sul MIME Media-Type delle richieste HTTP (JSON, XML, HTML, ecc.), è ora presente su PyPI, il Python Package Index ufficiale.
Tutto ciò significa che l’installazione di Flask MimeRender su Windows, OSX e Linux è diventato più semplice:
Codice sorgente e istruzioni sono a vostra disposizione su GitHub, mentre per spiegazione approfondita ed esempio d’uso vi rimando al mio articolo precedente: Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP.</description>
      <content:encoded><![CDATA[<p>Un appunto veloce per segnalare che <!-- raw HTML omitted -->Flask MimeRender<!-- raw HTML omitted -->, il mio strumento RESTful per il rendering basato sul MIME Media-Type delle richieste HTTP (JSON, XML, HTML, ecc.), è ora presente su <!-- raw HTML omitted -->PyPI<!-- raw HTML omitted -->, il Python Package Index ufficiale.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Tutto ciò significa che l’installazione di Flask MimeRender su Windows, OSX e Linux è diventato più semplice:</p>
<!-- raw HTML omitted -->
<p>Codice sorgente e istruzioni sono a vostra disposizione su <!-- raw HTML omitted -->GitHub<!-- raw HTML omitted -->, mentre per spiegazione approfondita ed esempio d’uso vi rimando al mio articolo precedente: <a href="http://nicolaiarocci.com/come-implementare-un-web-service-rest-che-adatta-le-risposte-al-mime-media-type-delle-richieste-http/" title="Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP">Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP</title>
      <link>https://nicolaiarocci.com/come-implementare-un-web-service-rest-che-adatta-le-risposte-al-mime-media-type-delle-richieste-http/</link>
      <pubDate>Fri, 03 Feb 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/come-implementare-un-web-service-rest-che-adatta-le-risposte-al-mime-media-type-delle-richieste-http/</guid>
      <description>&lt;p&gt;Da qualche tempo sto lavorando alla implementazione di una REST API. In linea generale e semplificando, una &lt;!-- raw HTML omitted --&gt;API&lt;!-- raw HTML omitted --&gt; è un servizio che espone alcune funzionalità, è accessibile via internet più o meno liberamente ed è, infine, utilizzabile non solo da persone fisiche ma anche e soprattutto da altre applicazioni. Un esempio di API è quella di Facebook, che consente a chiunque di creare applicazioni che interagiscono con gli utenti e le pagine Facebook. Già, se non ci fosse la API non esisterebbero i terribili giochini Facebook…&lt;/p&gt;
&lt;p&gt;Una delle specifiche &lt;!-- raw HTML omitted --&gt;REST&lt;!-- raw HTML omitted --&gt; più importanti vuole che un servizio RESTful sia in grado di fornire dati in più formati, in modo tale da soddisfare il maggior numero possibile di utenti/applicazioni. Immaginiamo un servizio che fornisce i risultati delle partite del campionato di calcio. Supponiamo che arrivino tre richieste successive per lo stesso risultato: la prima potrebbe chiedere una risposta in formato XML, la seconda in JSON e la terza in HTML. Il  nostro servizio deve rispondere a tutte e tre le richieste, adattando il flusso di dati della risposta al formato di ognuna.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Nel mio caso la API che sto implementando supporta XML, JSON, HTML e testo puro. E’ scritta in Python (ma va!) e si appoggia all’eccellente &lt;!-- raw HTML omitted --&gt;Flask&lt;!-- raw HTML omitted --&gt; micro web framework. Per risolvere in maniera elegante il problema delle risposte multi-formato ho deciso di usare i &lt;!-- raw HTML omitted --&gt;decorator&lt;!-- raw HTML omitted --&gt;, una delle caratteristiche più interessanti di Python. Dopo un po’ di lavoro in proprio ho scoperto che qualcuno aveva già risolto il problema, per giunta con la stessa tecnica. &lt;!-- raw HTML omitted --&gt;MimeRender&lt;!-- raw HTML omitted --&gt; di Martin Blech è un’ottima soluzione, solo che è specifica per web.py (un altro web framework). La mia soluzione non disponeva di alcune opzioni interessanti che MimeRender include; ho deciso allora di scrivere un port di MimeRender per Flask, e di metterlo a disposizione del pubblico.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Da qualche tempo sto lavorando alla implementazione di una REST API. In linea generale e semplificando, una <!-- raw HTML omitted -->API<!-- raw HTML omitted --> è un servizio che espone alcune funzionalità, è accessibile via internet più o meno liberamente ed è, infine, utilizzabile non solo da persone fisiche ma anche e soprattutto da altre applicazioni. Un esempio di API è quella di Facebook, che consente a chiunque di creare applicazioni che interagiscono con gli utenti e le pagine Facebook. Già, se non ci fosse la API non esisterebbero i terribili giochini Facebook…</p>
<p>Una delle specifiche <!-- raw HTML omitted -->REST<!-- raw HTML omitted --> più importanti vuole che un servizio RESTful sia in grado di fornire dati in più formati, in modo tale da soddisfare il maggior numero possibile di utenti/applicazioni. Immaginiamo un servizio che fornisce i risultati delle partite del campionato di calcio. Supponiamo che arrivino tre richieste successive per lo stesso risultato: la prima potrebbe chiedere una risposta in formato XML, la seconda in JSON e la terza in HTML. Il  nostro servizio deve rispondere a tutte e tre le richieste, adattando il flusso di dati della risposta al formato di ognuna.</p>
<p><!-- raw HTML omitted -->Nel mio caso la API che sto implementando supporta XML, JSON, HTML e testo puro. E’ scritta in Python (ma va!) e si appoggia all’eccellente <!-- raw HTML omitted -->Flask<!-- raw HTML omitted --> micro web framework. Per risolvere in maniera elegante il problema delle risposte multi-formato ho deciso di usare i <!-- raw HTML omitted -->decorator<!-- raw HTML omitted -->, una delle caratteristiche più interessanti di Python. Dopo un po’ di lavoro in proprio ho scoperto che qualcuno aveva già risolto il problema, per giunta con la stessa tecnica. <!-- raw HTML omitted -->MimeRender<!-- raw HTML omitted --> di Martin Blech è un’ottima soluzione, solo che è specifica per web.py (un altro web framework). La mia soluzione non disponeva di alcune opzioni interessanti che MimeRender include; ho deciso allora di scrivere un port di MimeRender per Flask, e di metterlo a disposizione del pubblico.</p>
<h2 id="istruzioni-per-l8217uso">Istruzioni per l’uso</h2>
<p>Prima di tutto è necessario fornire le funzioni da usare per il rendering, una per ogni formato che intendiamo supportare:</p>
<!-- raw HTML omitted -->
<p>Quindi decoriamo la nostra funzione, definendo per lei la mappa delle funzioni di rendering:</p>
<!-- raw HTML omitted -->
<p>Tutto qui! In caso di richiesta GET la funzione <code>index</code> restituisce un dizionario, il quale verrà reso da MimeRender come XML, JSON o quant’altro, a seconda del Content-Type specificato nella richiesta HTTP:</p>
<!-- raw HTML omitted -->
<p>Su <!-- raw HTML omitted -->github <!-- raw HTML omitted -->trovate l’esempio completo nonché il codice sorgente del renderer, che potete scaricare liberamente.</p>]]></content:encoded>
    </item>
    <item>
      <title>Imparare a Programmare… Pensando da Informatico</title>
      <link>https://nicolaiarocci.com/imparare-a-programmare-e-pensare-da-informatico/</link>
      <pubDate>Fri, 20 Jan 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/imparare-a-programmare-e-pensare-da-informatico/</guid>
      <description>&lt;p&gt;Chi mi segue da tempo sa  che l’educazione è un argomento che mi sta particolarmente a cuore ed è forse per questo motivo che spesso le persone mi chiedono consigli su come imparare a programmare. Gli articoli più letti di questo sito sono senz’altro le guide alla programmazione; &lt;a href=&#34;http://nicolaiarocci.com/impara-python-in-10-minuti/&#34; title=&#34;Python in 10 minuti&#34;&gt;Impara Python in 10 minuti&lt;/a&gt; e la &lt;a href=&#34;http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/&#34; title=&#34;Introduzione alle Regular Expression&#34;&gt;serie sulle Regular Expression&lt;/a&gt; sono vere e proprie Hit, ma certo non sono adatte ai principianti. L’ultima mail è di pochi giorni fa: Mirko chiedeva qual’è il modo migliore per avvicinarsi all’affascinante mondo della programmazione.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Chi mi segue da tempo sa  che l’educazione è un argomento che mi sta particolarmente a cuore ed è forse per questo motivo che spesso le persone mi chiedono consigli su come imparare a programmare. Gli articoli più letti di questo sito sono senz’altro le guide alla programmazione; <a href="http://nicolaiarocci.com/impara-python-in-10-minuti/" title="Python in 10 minuti">Impara Python in 10 minuti</a> e la <a href="http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/" title="Introduzione alle Regular Expression">serie sulle Regular Expression</a> sono vere e proprie Hit, ma certo non sono adatte ai principianti. L’ultima mail è di pochi giorni fa: Mirko chiedeva qual’è il modo migliore per avvicinarsi all’affascinante mondo della programmazione.</p>
<p>Una domanda facile da formulare, che presuppone un’altrettanto facile risposta. Ahimè non é così semplice, perlomeno non nel mio caso. Certo, ci sono dozzine di fonti di ottima qualità, ma penso che per poter fornire un consiglio valido dovrei conoscere meglio chi pone la domanda. Il tuo background è scientifico o umanistico? Sai l’inglese? La gran parte delle fonti che consiglierei sono inglesi. Qual’è la tua età? Sono tanti i fattori da considerare, soprattutto se ci si impunta a voler rispondere con cura.</p>
<p>In tempi non troppo lontani programmare significava conoscere il funzionamento dei computer; comprendere a fondo la loro teoria e la loro struttura. Ora è tutto cambiato. Ormai <!-- raw HTML omitted -->Assembly<!-- raw HTML omitted --> e <!-- raw HTML omitted -->Linguaggio Macchina<!-- raw HTML omitted --> sono domini riservati a pochissimi super-specialisti; la gran parte dei programmatori più giovani li ha solo sentiti nominare. I <!-- raw HTML omitted -->linguaggi ad alto livello<!-- raw HTML omitted --> ci permettono di concentrarci sulla soluzione dei problemi (gli <!-- raw HTML omitted -->algoritmi<!-- raw HTML omitted -->) delegando al compilatore la creazione delle istruzioni di basso livello.</p>
<p>E’ una buona notizia. Per diventare programmatori non è indispensabile essere particolarmente dotati, né seguire chissà quali corsi accademici. Buona volontà, curiosità, passione e un pizzico di intraprendenza sono tutto quel che serve per buttarsi. Se son rose fioriranno, come si suol dire.</p>
<h2 id="img-classalignright-size-thumbnail-wp-image-4329-styleborder-style-initial-border-color-initial-border-image-initial-border-width-0px-titlepensare-da-informatico-versione-python-srcimagesgasp_lessons-150x150pngfit1502c150-altpensare-da-informatico-versione-python-srcsethttpi1wpcomnicolaiaroccicomwp-contentuploadsgasp_lessonspngresize1502c150-150w-httpi1wpcomnicolaiaroccicomwp-contentuploadsgasp_lessonspngw192-192w-sizesmax-width-150px-100vw-150px-data-recalc-dims1-pensare-da-informatico"><!-- raw HTML omitted -->Pensare da Informatico</h2>
<p>Se mi avete seguito fin qui grazie per la pazienza. Vi ricompenso con lo stesso consiglio che ho dato a Mirko l’altro giorno: Pensare da Informatico. Ma come direte, dopo tutte queste chiacchiere ci spiattelli un’altra astrattezza da quattro soldi? Al contrario! Sto parlando di un libro vero e proprio. <!-- raw HTML omitted -->Pensare da Informatico (Versione Python)<!-- raw HTML omitted --> è l’unico testo che mi sento di consigliare davvero ai principianti. E’ gratuito ed è ottimamente tradotto da Alessandro Pocaterra. L’edizione originale è giunta da poco alla <!-- raw HTML omitted -->terza edizione<!-- raw HTML omitted --> (novembre 2011), mentre credo che l’italiana sia ferma alla seconda, che va benissimo comunque.</p>
<p>Nella Prefazione <!-- raw HTML omitted -->Jeff Elkner<!-- raw HTML omitted --> racconta che era alla ricerca di un testo adatto all’insegnamento della programmazione nelle scuole americane. Il grande <!-- raw HTML omitted -->Richard Stallman<!-- raw HTML omitted --> gli consigliò di dare una occhiata a <em>How to Think Like a Computer Scientist:</em></p>
<blockquote>
<p>Quando lessi quel libro seppi immediatamente che volevo usarlo nelle mie lezioni. Era il testo di informatica più chiaro ed utile che avessi visto: il libro enfatizzava il processo di pensiero coinvolto nella programmazione piuttosto che le caratteristiche di un particolare linguaggio. Il solo fatto di leggerlo mi rese un insegnante migliore.</p>
</blockquote>
<p>Mica male come premessa no? Python è il inguaggio scelto dagli autori (e in proposito vi consiglio di leggere <!-- raw HTML omitted -->introduzione <!-- raw HTML omitted -->e <!-- raw HTML omitted -->prefazione<!-- raw HTML omitted -->) ma davvero non è il linguaggio quel che conta. Leggete questo testo con attenzione e soprattutto senza fretta. Non passate al capitolo successivo se non siete sicuri di aver afferrato per bene ciò che avete appena letto. Si procede passo per passo affrontando tutti i principali temi della programmazione moderna. Vi assicuro che alla fine di questa esperienza saprete programmare a dovere, a prescindere dai linguaggi che in futuro vorrete studiare (e magari nel frattempo vi innamorerete pure di Python).</p>
<p>Fatemi sapere come è andata. Ci tengo molto.</p>
<p><em>Aggiornamento del 9.3.2012. Ho scovato per caso una <!-- raw HTML omitted -->versione PDF<!-- raw HTML omitted -->, ben fatta, di Pensare da Informatico.</em></p>]]></content:encoded>
    </item>
    <item>
      <title>Python nella scuola italiana. Si può.</title>
      <link>https://nicolaiarocci.com/python-nella-scuola-italiana-si-puo/</link>
      <pubDate>Fri, 25 Nov 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-nella-scuola-italiana-si-puo/</guid>
      <description>&lt;p&gt;Mia moglie è docente nel liceo artistico della nostra città. L’anno scorso era coinvolta in un progetto che vedeva studenti e professori impegnati nella progettazione di un monumento da installare nella sede dell’Autorità Portuale.&lt;/p&gt;
&lt;p&gt;Il soggetto scelto dal team erano le onde del mare e ben presto si pose il problema di rappresentarle realisticamente. Un insegnate di Matematica suggerì di ricorrere alla teoria dei &lt;!-- raw HTML omitted --&gt;frattali&lt;!-- raw HTML omitted --&gt;. Idea brillante che offriva l’opportunità di un approfondimento didattico piuttosto insolito per un liceo artistico.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Mia moglie è docente nel liceo artistico della nostra città. L’anno scorso era coinvolta in un progetto che vedeva studenti e professori impegnati nella progettazione di un monumento da installare nella sede dell’Autorità Portuale.</p>
<p>Il soggetto scelto dal team erano le onde del mare e ben presto si pose il problema di rappresentarle realisticamente. Un insegnate di Matematica suggerì di ricorrere alla teoria dei <!-- raw HTML omitted -->frattali<!-- raw HTML omitted -->. Idea brillante che offriva l’opportunità di un approfondimento didattico piuttosto insolito per un liceo artistico.</p>
<p>Le competenze informatiche del nostro intraprendente professore risalivano credo ai tempi dell’università, e i ragazzi erano a digiuno di qualunque nozione tecnica. Nel corso della discussione mia moglie, più che altro per associazione d’idee, buttò lì una frase:</p>
<blockquote>
<p>mio marito è un gran sostenitore del linguaggio Python, dice sempre che è l’ideale per imparare e che dovrebbero insegnarlo nelle scuole</p>
</blockquote>
<p>La cosa sembrava finita lì senonché dopo qualche giorno il professore irruppe in sala insegnanti, puntò dritto su mia moglie e l’apostrofò così:</p>
<blockquote>
<p>ho scritto questo programmino in Python, non è che tuo marito può darci una occhiata perché sai funziona, ma non disegna proprio il frattale che serve a noi – ci va vicino</p>
</blockquote>
<p>Immaginate la mia sorpresa quando la sera, a casa, mia moglie mi raccontò tutta la faccenda. La mia prima reazione è stata quella di correre al computer per dare un’occhiata al codice:</p>
<!-- raw HTML omitted -->
<p>Mi sono subito reso conto che si trattava di una implementazione parziale della <!-- raw HTML omitted -->Curva (o fiocco) di Koch<!-- raw HTML omitted -->, una delle prime curve frattali documentate e anche una delle più famose. Una volta corretto il problema l’output restituito dal programma è stato questo:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Non male davvero. Per ammissione dello stesso autore sappiamo che il codice era in parte scopiazzato (in rete si trovano implementazioni della curva di Koch in tutti i linguaggi), ma non è questo il punto.</p>
<p>Il fatto è che un professore di uno sperduto liceo artistico (artistico!) italiano ha:</p>
<ol>
<li>adottato Python per una lezione in classe</li>
<li>dimostrato che nella scuola ci sono anche (molti) docenti intraprendenti, appassionati e competenti</li>
</ol>
<p>Qualche mese più tardi un’altra docente, che mi chiedeva consiglio su come approcciare la programmazione in classe, ha rifiutato categoricamente la mia proposta di Python perché “non l’aveva mai sentito nominare”. Scelse invece il linguaggio C perché “molto più affermato”.</p>
<p>Senz’altro, anche se nutro seri dubbi sul fatto che la sua scelta sia la migliore da un punto di vista didattico. Dubito, per esempio, che dopo un giorno o due lei e i suoi studenti sarebbero stati in grado di scrivere un’implementazione C della curva di Koch.</p>]]></content:encoded>
    </item>
    <item>
      <title>Python Tools per Visual Studio per accedere a Kinect SDK ed Excel via Python</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-per-accedere-a-kinect-sdk-ed-excel-via-python/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-per-accedere-a-kinect-sdk-ed-excel-via-python/</guid>
      <description>E’ uscita ieri la versione 1.1 Alpha dei Python Tools per Visual Studio, il plug-in open source per programmare in Python con Visual Studio 2010. Migliorie e molte nuove features per la IDE ma la novità più interessante sono senz’altro PyKinect e Pyvot, due librerie che consentono rispettivamente di lavorare col Kinect SDK e di interagire con Excel via Python.
Per informazioni su Python Tools per Visual Studio date una occhiata a Programmare in Python con Visual Studio 2010 e Python Studio per Visual Studio 1.</description>
      <content:encoded><![CDATA[<p>E’ uscita ieri la <!-- raw HTML omitted -->versione 1.1 Alpha<!-- raw HTML omitted --> dei Python Tools per Visual Studio, il plug-in open source per programmare in Python con Visual Studio 2010. Migliorie e molte nuove features per la IDE ma la novità più interessante sono senz’altro <!-- raw HTML omitted -->PyKinect<!-- raw HTML omitted --> e <!-- raw HTML omitted -->Pyvot<!-- raw HTML omitted -->, due librerie che consentono rispettivamente di lavorare col Kinect SDK e di interagire con Excel via Python.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Per informazioni su Python Tools per Visual Studio date una occhiata a <a href="http://nicolaiarocci.com/python-tools-per-visual-studio-2010/" title="Programmare in Python con Visual Studio 2010">Programmare in Python con Visual Studio 2010</a> e <a href="http://nicolaiarocci.com/python-tools-per-visual-studio-1-0/" title="Python Tools per Visual Studio 1.0">Python Studio per Visual Studio 1.0</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python per il Web</title>
      <link>https://nicolaiarocci.com/python-per-il-web/</link>
      <pubDate>Thu, 20 Oct 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-per-il-web/</guid>
      <description>Python for the Web è una agile guida introduttiva per chi vuole accedere al Web via Python. Vengono presentate tre eccellenti librerie: Requests, simplejson e lxml. La prima consente di interagire facilmente coi siti Web da Python, la seconda serve a processare i flussi JSON e l’ultima è una fantastica risorsa per lo scraping (l’ho usata in un mio progetto, ve la consiglio senz’altro). L’ultimo argomento della guida è la creazione di siti web in Python attraverso il framework Django.</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->Python for the Web<!-- raw HTML omitted --> è una agile guida introduttiva per chi vuole accedere al Web via Python. Vengono presentate tre eccellenti librerie: <!-- raw HTML omitted -->Requests<!-- raw HTML omitted -->, <!-- raw HTML omitted -->simplejson<!-- raw HTML omitted --> e <!-- raw HTML omitted -->lxml<!-- raw HTML omitted -->. La prima consente di interagire facilmente coi siti Web da Python, la seconda serve a processare i flussi JSON e l’ultima è una fantastica risorsa per lo scraping (l’ho usata in un mio progetto, ve la consiglio senz’altro). L’ultimo argomento della guida è la creazione di siti web in Python attraverso il framework <!-- raw HTML omitted -->Django<!-- raw HTML omitted -->.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Più che una guida, Python for the Web è un <em>appetizer</em> che vi invoglierà ad approfondire gli argomenti trattati. Se state cominciando con Python, date una occhiata.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Python Tools per Visual Studio 1.0</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-1-0/</link>
      <pubDate>Tue, 30 Aug 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-1-0/</guid>
      <description>&lt;p&gt;Dopo una breve e brillante Beta, con l’uscita della versione 1.0 il progetto open source &lt;!-- raw HTML omitted --&gt;Python Tools for Visual Studio&lt;!-- raw HTML omitted --&gt; entra nel novero delle estensioni ufficiali per Visual Studio 2010. Ne da notizia W. Somasegar sul suo weblog, con &lt;!-- raw HTML omitted --&gt;un articolo introduttivo&lt;!-- raw HTML omitted --&gt; in cui ci ricorda le caratteristiche salienti di PTVS: syntax highlighting, refactoring, debugging in tempo reale, interprete Python interattivo integrato e supporto per CPython, IronPython, JPython e PyPy.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Dopo una breve e brillante Beta, con l’uscita della versione 1.0 il progetto open source <!-- raw HTML omitted -->Python Tools for Visual Studio<!-- raw HTML omitted --> entra nel novero delle estensioni ufficiali per Visual Studio 2010. Ne da notizia W. Somasegar sul suo weblog, con <!-- raw HTML omitted -->un articolo introduttivo<!-- raw HTML omitted --> in cui ci ricorda le caratteristiche salienti di PTVS: syntax highlighting, refactoring, debugging in tempo reale, interprete Python interattivo integrato e supporto per CPython, IronPython, JPython e PyPy.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->]]></content:encoded>
    </item>
    <item>
      <title>Python Tools per Visual Studio 2010 arriva la RC1</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-2010-arriva-la-rc1/</link>
      <pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-2010-arriva-la-rc1/</guid>
      <description>&lt;p&gt;Prosegue senza intoppi il cammino di &lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Python Tools per Visual Studio&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;, il progetto open source targato Microsoft che consente di programmare in Python con Visual Studio 2010. Dopo il &lt;a href=&#34;http://nicolaiarocci.com/python-tools-per-visual-studio-2010/&#34; title=&#34;Programmare in Python con Visual Studio 2010&#34;&gt;lancio ufficiale&lt;/a&gt; dello scorso marzo e la successiva &lt;a href=&#34;http://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/&#34; title=&#34;Python Tools per Visual Studio 2010 Beta 2&#34;&gt;Beta 2&lt;/a&gt; di maggio, ieri è stata presentata la &lt;strong&gt;Release Candidate 1&lt;/strong&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Prosegue senza intoppi il cammino di <strong><!-- raw HTML omitted -->Python Tools per Visual Studio<!-- raw HTML omitted --></strong>, il progetto open source targato Microsoft che consente di programmare in Python con Visual Studio 2010. Dopo il <a href="http://nicolaiarocci.com/python-tools-per-visual-studio-2010/" title="Programmare in Python con Visual Studio 2010">lancio ufficiale</a> dello scorso marzo e la successiva <a href="http://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/" title="Python Tools per Visual Studio 2010 Beta 2">Beta 2</a> di maggio, ieri è stata presentata la <strong>Release Candidate 1</strong>.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Oltre 200 i bug risolti e notevoli sono le novità introdotte, come per esempio il supporto per il refactoring. Consultate le <!-- raw HTML omitted -->release notes<!-- raw HTML omitted --> conoscere tutte le novità. Se volete saperne di più su questo interessante progetto vi invito a leggere <strong><a href="http://nicolaiarocci.com/python-tools-per-visual-studio-2010/" title="Programmare in Python con Visual Studio 2010">Programmare in Python con Visual Studio 2010</a></strong>,  la recensione che ho scritto in occasione del lancio.</p>
<p><em>Aggiornamento del 2.8.2011: siamo arrivati alla RC2</em></p>]]></content:encoded>
    </item>
    <item>
      <title>Python Tools per Visual Studio ecco la Beta 2</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/</guid>
      <description>&lt;p&gt;Microsoft ha rilasciato la seconda beta di &lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Python Tools per Visual Studio&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;, il suo progetto open source che offre agli sviluppatori la possibilità di scrivere codice Python, CPython e IronPython nell’ambiente IDE di Visual Studio 2010.&lt;/p&gt;
&lt;p&gt;Il progetto è stato presentato al &lt;!-- raw HTML omitted --&gt;PyCon 2011&lt;!-- raw HTML omitted --&gt; dal &lt;!-- raw HTML omitted --&gt;Microsoft Technical Computing Group&lt;!-- raw HTML omitted --&gt; ed è davvero ben fatto. Per tutti gli approfondimenti vi rimando al mio articolo &lt;!-- raw HTML omitted --&gt;Programmare in Python con Visual Studio 2010&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Microsoft ha rilasciato la seconda beta di <strong><!-- raw HTML omitted -->Python Tools per Visual Studio<!-- raw HTML omitted --></strong>, il suo progetto open source che offre agli sviluppatori la possibilità di scrivere codice Python, CPython e IronPython nell’ambiente IDE di Visual Studio 2010.</p>
<p>Il progetto è stato presentato al <!-- raw HTML omitted -->PyCon 2011<!-- raw HTML omitted --> dal <!-- raw HTML omitted -->Microsoft Technical Computing Group<!-- raw HTML omitted --> ed è davvero ben fatto. Per tutti gli approfondimenti vi rimando al mio articolo <!-- raw HTML omitted -->Programmare in Python con Visual Studio 2010<!-- raw HTML omitted -->.</p>
<!-- raw HTML omitted -->
<p>Questa nuova release porta in dote una serie di bug fix che rendono più stabile il progetto e nessuna nuova feature. A questo punto la Release Candidate 1, programmata inizialmente per il mese di maggio, subirà probabilmente un leggero slittamento. Immagino che dovremo aspettare almeno il prossimo mese.</p>]]></content:encoded>
    </item>
    <item>
      <title>Servire 500 milioni di utenti con Python e Django</title>
      <link>https://nicolaiarocci.com/servire-500-milioni-di-utenti-al-mese-con-python-e-django/</link>
      <pubDate>Wed, 20 Apr 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/servire-500-milioni-di-utenti-al-mese-con-python-e-django/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;A &lt;!-- raw HTML omitted --&gt;PyCon 2011&lt;!-- raw HTML omitted --&gt;, la conferenza mondiale sul linguaggio Python che si è conclusa da poco ad Atlanta, gli ingegneri di &lt;!-- raw HTML omitted --&gt;DISQUS&lt;!-- raw HTML omitted --&gt; hanno presentato una interessante relazione sulla loro infrastruttura hardware e software. DISQUS è un servizio di gestione dei commenti adottato da centinaia di migliaia di siti nel mondo. Tra i clienti figurano nomi importanti come CNN, MTV, IGN, Engadget, Mashable e tanti altri. Nel mese di marzo 2011 il network DISQUS ha gestito &lt;strong&gt;500 milioni di visitatori unici&lt;/strong&gt;. Questi volumi sono gestiti da una azienda che vanta &lt;strong&gt;16 addetti, dei quali solo 8 (otto!) ingegneri software&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Come è possibile tutto ciò? Gran parte del merito va attribuito al metodo produttivo adottato da DISQUS: &lt;!-- raw HTML omitted --&gt;metodologia agile&lt;!-- raw HTML omitted --&gt;, hardware in affitto e facilmente scalabile, grande fiducia nella capacità dei propri talenti: ognuno degli otto ingegneri è anche product manager. Secondo DISQUS tutto questo è stato possibile anche e soprattutto grazie a una scelta che si è rivelata determinante: l’adozione del linguaggio &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;Python&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; e del web framework &lt;!-- raw HTML omitted --&gt;Django&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->A <!-- raw HTML omitted -->PyCon 2011<!-- raw HTML omitted -->, la conferenza mondiale sul linguaggio Python che si è conclusa da poco ad Atlanta, gli ingegneri di <!-- raw HTML omitted -->DISQUS<!-- raw HTML omitted --> hanno presentato una interessante relazione sulla loro infrastruttura hardware e software. DISQUS è un servizio di gestione dei commenti adottato da centinaia di migliaia di siti nel mondo. Tra i clienti figurano nomi importanti come CNN, MTV, IGN, Engadget, Mashable e tanti altri. Nel mese di marzo 2011 il network DISQUS ha gestito <strong>500 milioni di visitatori unici</strong>. Questi volumi sono gestiti da una azienda che vanta <strong>16 addetti, dei quali solo 8 (otto!) ingegneri software</strong>.</p>
<p>Come è possibile tutto ciò? Gran parte del merito va attribuito al metodo produttivo adottato da DISQUS: <!-- raw HTML omitted -->metodologia agile<!-- raw HTML omitted -->, hardware in affitto e facilmente scalabile, grande fiducia nella capacità dei propri talenti: ognuno degli otto ingegneri è anche product manager. Secondo DISQUS tutto questo è stato possibile anche e soprattutto grazie a una scelta che si è rivelata determinante: l’adozione del linguaggio <!-- raw HTML omitted --><!-- raw HTML omitted -->Python<!-- raw HTML omitted --><!-- raw HTML omitted --> e del web framework <!-- raw HTML omitted -->Django<!-- raw HTML omitted -->.</p>
<h2 id="il-video-della-conferenza">Il video della conferenza</h2>
<p>Fortunatamente gran parte dei contenuti di PyCon 2011 sono disponibili al pubblico sotto forma di registrazioni audio-video e di slideshow. In questo filmato possiamo seguire Jason Yan e David Cramer (due dei super-otto, quanto sono giovani!) nel corso della loro conferenza.</p>
<!-- raw HTML omitted -->
<h2 id="le-slides">Le slides</h2>
<p>Se non avete tempo (o voglia) per seguire l’intera lezione potete sempre dare una occhiata a queste slides che spiegano in maniera concisa il processo di sviluppo e deployment e, soprattutto, pregi e difetti del lavoro con Python. Curioso come molti di loro abbiano cominciato da Django prima ancora di imparare Python! E’ un po’ la dimostrazione che prima viene il talento, poi il know-how.</p>
<!-- raw HTML omitted -->
<h2 id="una-questione-di-metodo">Una questione di metodo</h2>
<p>Da molti Python è considerato un linguaggio inadatto a gestire siti con grande traffico o applicazioni molto impegnative sotto il profilo delle prestazioni. L’esperienza DISQUS dimostra platealmente il contrario. In un prossimo articolo mi riprometto di approfondire la questione Python/Prestazioni. Se qualcuno vuol dire la sua in proposito è il benvenuto (sia sotto forma di commento che di <em>guest post</em> eventualmente).</p>]]></content:encoded>
    </item>
    <item>
      <title>Programmare in Python con Visual Studio 2010</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-2010/</link>
      <pubDate>Mon, 14 Mar 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-2010/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://pytools.codeplex.com/&#34;&gt;Python Tools per Visual Studio&lt;/a&gt;&lt;/strong&gt; è un plugin gratuito e open source che consente di programmare in Python usando la IDE Microsoft. Nel corso della lunga gestazione di Visual Studio 2010 si era rumoreggiato di un possibile supporto nativo per il linguaggio Python. Qualcosa di vero doveva esserci visto che il progetto è appena stato presentato al &lt;a href=&#34;http://us.pycon.org/2011/home/&#34;&gt;&lt;strong&gt;PyCon 2011&lt;/strong&gt;&lt;/a&gt;, la più importante conferenza Python al mondo, nientemeno che dal &lt;a href=&#34;http://www.microsoft.com/hpc&#34;&gt;Microsoft Technical Computing Group&lt;/a&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
      <content:encoded><![CDATA[<p><strong><a href="http://pytools.codeplex.com/">Python Tools per Visual Studio</a></strong> è un plugin gratuito e open source che consente di programmare in Python usando la IDE Microsoft. Nel corso della lunga gestazione di Visual Studio 2010 si era rumoreggiato di un possibile supporto nativo per il linguaggio Python. Qualcosa di vero doveva esserci visto che il progetto è appena stato presentato al <a href="http://us.pycon.org/2011/home/"><strong>PyCon 2011</strong></a>, la più importante conferenza Python al mondo, nientemeno che dal <a href="http://www.microsoft.com/hpc">Microsoft Technical Computing Group</a>.</p>
<!-- raw HTML omitted -->
<h2 id="progetti-e-soluzioni">Progetti e Soluzioni</h2>
<p>Python Tools è perfettamente integrato nel sistema a progetti tipico di Visual Studio. I file di progetto Python hanno estensione <code>.pyproj</code> e supportano parecchi tipi di applicazione (Console, WPF, MPI, WinForms, ecc.)</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="editor">Editor</h2>
<p>Python Tools supporta gran parte delle caratteristiche che hanno reso famoso l’editor di Visual Studio: evidenziazione degli elementi del linguaggio (syntax color highlighting), riconoscimento di classi e funzioni, navigazione dei metodi nella barra di navigazione, suggerimenti al passaggio del mouse, ricerca di definizioni e occorrenze, IntelliSense.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="debugger">Debugger</h2>
<p>Il potente debugger di Visual Studio è utilizzabile con Python. Valutazione di espressioni (anche nella finestra interattiva), ispezione delle variabili, impostazione dell’istruzione successiva, uscita ed entrata da cicli di codice e/o funzioni (step in, step out).</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="object-browser">Object Browser</h2>
<p>Python Tools supporta l’uso del Object Browser di Visual Studio 2010. Per ogni modulo è disponibile l’elenco delle classi e, per ogni classe, delle funzioni definite. Il pannello sinistro mostra i moduli e le classi mentre quello destro elenca gli attributi della classe selezionata.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Visto chi l’ha realizzato non stupisce che Python Tools per Visual Studio offra anche funzionalità avanzate quali il Profiling (solo su Visual Studio 2010 Ultimate), <a href="http://pytools.codeplex.com/wikipage?title=Detailed%20Walk-thu%20Guide%20-%20HPC%20and%20Cloud%20Features&amp;referringTitle=Home">cluster computing e cloud computing</a>. Clustering e scaling sono già implementati mentre per il supporto di Windows Azure bisognerà aspettare il prossimo aggiornamento. Già disponibili i <a href="http://pytools.codeplex.com/wikipage?title=NumPy%20and%20SciPy%20for%20.Net">port per .NET delle librerie NumPy e SciPy</a>.</p>
<p>Python Tools per Visual Studio non è una distruzione completa di Python. E comunque necessario installare <a href="http://www.python.it/">CPython</a> o <a href="http://ironpython.codeplex.com/">IronPython</a>. Questa è una buona notizia perché potrai lavorare sia nel modo tradizionale (magari con colleghi abituati ad altre IDE) sia con Visual Studio.</p>
<h2 id="una-grande-opportunità">Una grande opportunità</h2>
<p>Se vieni dal mondo .NET e sei incuriosito dal linguaggio Python (dovresti esserlo!) questa è la tua occasione. Puoi lavorare con Python senza rinunciare al tuo ambiente preferito e puoi concentrarti sulle caratteristiche del linguaggio risparmiandoti l’apprendimento di una nuova IDE. A dire il vero anche IronPython dispone di un suo plugin per VisualStudio ma ora hai l’opportunità di lavorare con CPython, il Python originale.</p>
<p>Per muovere i primi passi comincia con <!-- raw HTML omitted -->Impara Python in 10 minuti<!-- raw HTML omitted -->, guida rapida per il programmatore proveniente da altri linguaggi.</p>
<!-- raw HTML omitted -->]]></content:encoded>
    </item>
    <item>
      <title>Impara Python in 10 minuti</title>
      <link>https://nicolaiarocci.com/impara-python-in-10-minuti/</link>
      <pubDate>Thu, 10 Mar 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/impara-python-in-10-minuti/</guid>
      <description>E così vorresti imparare il linguaggio di programmazione Python. Probabilmente sei alla ricerca di un tutorial completo e allo stesso tempo conciso. Questa guida è un tentativo di insegnarti Python in 10 minuti. In effetti più che con una guida vera e propria hai a che fare con degli appunti che userai per partire col piede giusto. Naturalmente se davvero vuoi imparare bene dovrai anche esercitarti molto. Do per scontato che tu sappia già programmare, questo mi permetterà di concentrarmi sulle caratteristiche intrinseche del linguaggio.</description>
      <content:encoded><![CDATA[<p>E così vorresti imparare il linguaggio di programmazione Python. Probabilmente
sei alla ricerca di un tutorial completo e allo stesso tempo conciso. Questa
guida è un tentativo di insegnarti Python in 10 minuti. In effetti più che con
una guida vera e propria hai a che fare con degli appunti che userai per
partire col piede giusto. Naturalmente se davvero vuoi imparare bene dovrai
anche esercitarti molto. Do per scontato che tu sappia già programmare, questo
mi permetterà di concentrarmi sulle caratteristiche intrinseche del linguaggio.
Troverai le parole chiave <em>evidenziate</em> così potrai individuarle facilmente.
<em>Fai attenzione</em> perché per brevità alcune cose verranno introdotte
e commentate direttamente nel codice di esempio.</p>
<h3 id="attribuzione">Attribuzione</h3>
<p>Questo articolo è una traduzione autorizzata di <a href="http://www.korokithakis.net/tutorials/python">Learn Python in 10
minutes</a>. Ringrazio l&rsquo;amico Stavros Korokithakis per il permesso
di accordatomi.</p>
<h2 id="caratteristiche">Caratteristiche</h2>
<p>Python è un linguaggio fortemente e <em>dinamicamente tipizzato</em> (i tipi dati
esistono e sono necessari ma non è necessario dichiararli esplicitamente),
<em>case sensitive</em> (var e VAR sono due variabili diverse) e <em>object oriented</em>
(tutto in Python è un oggetto).</p>
<h2 id="come-ottenere-aiuto">Come ottenere aiuto</h2>
<p>L&rsquo;interprete di Python fornisce già un valido sistema di aiuto. Per
sapere come usare un oggetto basta digitare <code>help()</code>. Sono utili anche <code>dir</code>,
che elenca gli attributi (metodi) disponibili per l&rsquo;oggetto,  e
<code>.__doc__</code> che mostra la documentazione completa quando disponibile:</p>
<pre><code>&gt;&gt;&gt; help(5)
Help on int object:
(etc etc)

&gt;&gt;&gt; dir(5)
['__abs__', '__add__', ...]

&gt;&gt;&gt; abs.__doc__
'abs(number) -&gt; number\n\nReturn the absolute value of the
argument.'
</code></pre>
<h2 id="sintassi">Sintassi</h2>
<p>In Python *non ci sono terminatori di riga obbligatori e i <em>blocchi sono
specificati con l&rsquo; indentazione</em>. Indenta per cominciare un blocco e rimuovi
l&rsquo;indentazione per concluderlo, tutto qui. Le istruzioni che richiedono un
blocco indentato terminano con i due punti (<code>:</code>). I <em>commenti</em> cominciano col
cancelletto (<code>#</code>) e sono a linea singola. Stringhe su più righe sono usate per
i <em>commenti multi linea</em>. Le <em>assegnazioni</em> si compiono col simbolo di
uguale (<code>=</code>). Per i <em>test di uguaglianza</em> si usa il doppo uguale (<code>==</code>).
Puoi aumentare e diminuire un valore usando gli operatori <code>+=</code> e <code>-=</code> seguiti
dall&rsquo;addendo. Ciò funziona con molti tipi di dati, stringhe incluse. Puoi
assegnare e usare più variabili sulla stessa riga. Alcuni esempi:</p>
<pre><code>&gt;&gt;&gt; myvar = 3
&gt;&gt;&gt; myvar += 2
&gt;&gt;&gt; myvar
5

&gt;&gt;&gt; myvar -= 1
&gt;&gt;&gt; myvar
4

&quot;&quot;&quot;Questo è un commento su più righe.
Le righe seguenti vengono concatenate.&quot;&quot;&quot;
&gt;&gt;&gt; mystring = &quot;Hello&quot;
&gt;&gt;&gt; mystring += &quot; world.&quot;
&gt;&gt;&gt; print mystring
Hello world.

# Il codice seguente scambia due variabili in una sola riga.
# Non ci sono errori di conversione di tipo perché
# i nuovi valori non vengono assegnati. Vengono creati
# nuovi oggetti ai quali le variabili fanno ora riferimento.
&gt;&gt;&gt; myvar, mystring = mystring, myvar
</code></pre>
<h2 id="tipi-di-dati">Tipi di dati</h2>
<p>Le strutture più significative in Python sono <em>liste, tuple e dizionari</em>. I Set
sono integrati in Python a partire dalla versione 2.5 (per le versioni
precedenti sono disponibili nella libreria <code>sets</code>). Le Liste sono simili ad
array mono dimensionali ma è possibile creare liste che contengono altre liste.
I dizionari sono array che contengono coppie di chiavi e valori (hash table)
e le tuple sono oggetti immutabili mono dimensionali. In Python gli array
possono essere di qualunque tipo, quindi puoi mischiare interi, stringhe, ecc
nelle tue liste/dizionari e tuple. L&rsquo;indice del primo oggetto in qualunque tipo
di array è sempre zero. Gli indici negativi sono ammessi e contano a partire
dalla fine dell&rsquo;array, -1 indica l&rsquo;ultimo elemento dell&rsquo;array. Le variabili
possono fare riferimento a funzioni.</p>
<pre><code>&gt;&gt;&gt; esempio = [1, [&quot;un'altra&quot;, &quot;lista&quot;], (&quot;una&quot;, &quot;tupla&quot;)]
&gt;&gt;&gt; mialista = [&quot;Elemento 1&quot;, 2, 3.14]
&gt;&gt;&gt; mialista[0] = &quot;Ancora elemento 1&quot;
&gt;&gt;&gt; mialista[-1] = 3.15
&gt;&gt;&gt; miodizionario = {&quot;Key 1&quot;: &quot;Valore 1&quot;, 2: 3, &quot;pi&quot;: 3.14}
&gt;&gt;&gt; miodizionario[&quot;pi&quot;] = 3.15
&gt;&gt;&gt; miatupla = (1, 2, 3)
&gt;&gt;&gt; miafunzione = len
&gt;&gt;&gt; print miafunzione(mialista)
3
</code></pre>
<p>Puoi ottenere un <em>range di array</em> usando i due punti (<code>:</code>). Non indicare
l&rsquo;indice iniziale del range sottintende il primo elemento; non indicare
l&rsquo;indice finale sottintende l&rsquo;ultimo elemento. Indici negativi contano
a partire dall&rsquo;ultimo elemento (-1 è l&rsquo;ultimo elemento dell&rsquo;array). Quindi:</p>
<pre><code>&gt;&gt;&gt; mialista = [&quot;Elemento 1&quot;, 2, 3.14]
&gt;&gt;&gt; print mialista[:]
['Elemento 1', 2, 3.1400000000000001]

&gt;&gt;&gt; print mialista[0:2]
['Elemento 1', 2]

&gt;&gt;&gt; print mialista[-3:-1]
['Elemento 1', 2]

&gt;&gt;&gt; print mialista[1:]
[2, 3.14]
</code></pre>
<h2 id="stringhe">Stringhe</h2>
<p>Le stringhe in Python sono indicate *indifferentemente con la virgoletta
singola (<code>'</code>) o doppia (<code>&quot;</code>) ed è consentito usare una notazione all&rsquo;interno
di una stringa delimitata dall&rsquo;altra (<code>&quot;Egli disse 'ciao'.&quot;</code> è valida).
Stringhe su più righe sono racchiuse in triple (o singole) virgolette (<code>&quot;&quot;&quot;</code>).
Python *supporta Unicode, basta ricorrere alla sintassi <code>u&quot;Questa è una stringa unicode&quot;</code>. Per <em>inserire valori in una stringa</em> usa l&rsquo;operatore <code>%</code> (modulo)
e una tupla. Ogni % viene sostituito da un elemento della tupla, da sinistra
a destra, ed è consentito usare un dizionario per le sostituzioni.</p>
<pre><code>&gt;&gt;&gt; &quot;Nome: %s\nNumero: %s\nStringa: %s&quot; % (miaclasse.nome, 3, 3 * &quot;-&quot;)
Nome: Poromenos
Numero: 3
Stringa: ---

strString = &quot;&quot;&quot;Questa è
una stringa
multi riga.&quot;&quot;&quot;

# ATTENZIONE: Nota la s finale in &quot;%(key)s&quot;.
&gt;&gt;&gt; print &quot;Questo %(verbo)s un %(nome)s.&quot; % {&quot;nome&quot;: &quot;test&quot;, &quot;verbo&quot;: &quot;è&quot;}
Questo è un test.
</code></pre>
<h2 id="controllo-di-flusso">Controllo di flusso</h2>
<p>Le istruzioni per il controllo di flusso sono <code>if</code>, <code>for</code>, e <code>while</code>. Non esiste il <code>select</code>; al suo posto si usa <code>if</code>. Il <code>for</code> si usa anche per enumerare i membri di una lista. Per ottenere un elenco di numeri si usa <code>range(numero)</code>.</p>
<pre><code>rangelist = range(10)
&gt;&gt;&gt; print rangelist
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

for number in rangelist:
    # Verifica se numer è uno dei
    # numeri nella tupla.
    if number in (3, 4, 7, 9):
        # &quot;Break&quot; termina un for senza
        # eseguire la clausola &quot;else&quot;.
        break
    else:
        # &quot;Continue&quot; prosegue con l'iterazione successiva
        # del loop. Piuttosto inutile in questo caso,
        # visto che siamo all'ultima istruzione del loop.
        continue
else:
    # Questo &quot;else&quot; è opzionale ed è
    # eseguito solo se il loop non è stato interrotto
    # con &quot;break&quot;.
    pass # Non fa nulla

if rangelist[1] == 2:
    print &quot;Il secondo elemento (le liste sono 0-based) è 2&quot;
elif rangelist[1] == 3:
    print &quot;Il secondo elemento (le liste sono 0-based) è 3&quot;
else:
    print &quot;Non saprei&quot;

while rangelist[1] == 1:
    pass
</code></pre>
<h2 id="funzioni">Funzioni</h2>
<p>Le funzioni sono dichiarate con la la parola chiave <code>def</code>. Eventuali *argomenti
opzionali vanno dichiarati dopo quelli obbligatori e devono avere un valore
assegnato. Quando si chiamano funzioni passando *argomenti per nome
è necessario passare anche il valore. Le funzioni possono restituire una tuple
(lo spacchettamento delle tuple rende possibile la restituzione di *valori
multipli). Le *lambda sono funzioni in linea. I parametri sono passati <em>per
riferimento</em>, ma i tipi immutabili (tuple, interi, stringhe, ecc.) non possono
essere modificati nella funzione. Questo succede perché <em>viene passata solo la
posizione in memoria</em> dell&rsquo;elemento, e assegnare un altro oggetto alla
variabile <em>comporta la perdita del riferimento</em> all&rsquo;oggetto precedente. Per
esempio:</p>
<pre><code># Equivalente a def f(x): return x + 1
funzionevar = lambda x: x + 1
&gt;&gt;&gt; print funzionevar(1)
2

# un_int e una_stringa sono opzionali, hanno valori di default
# da usare se non vengono passati (2 e &quot;Una stringa&quot;, rispettivamente).
def passing_example(una_lista, un_int=2, una_stringa=&quot;Una stringa&quot;):
    una_lista.append(&quot;Nuovo elemento&quot;)
    un_int = 4
    return una_lista, un_int, una_string

&gt;&gt;&gt; mia_lista = [1, 2, 3]
&gt;&gt;&gt; mio_int = 10
&gt;&gt;&gt; print passing_example(mia_lista, mio_int)
([1, 2, 3, 'Nuovo elemento'], 4, &quot;Una stringa&quot;)

&gt;&gt;&gt; mia_lista
[1, 2, 3, 'Nuovo elemento']

&gt;&gt;&gt; mio_int
10
</code></pre>
<h2 id="classi">Classi</h2>
<p>Python supporta la <em>ereditarietà multipla</em> delle classi. Le variabili
e i metodi privati vengono dichiarati per convezione (non è una regola del
linguaggio) precedendoli con due underscore (_). Possiamo assegnare <em>attributi
(proprietà) arbitrari</em> alle istanze di una classe. Un esempio:</p>
<pre><code>class MiaClasse:
    comune = 10
    def __init__(self):
        self.miavariabile = 3
    def miafunzione(self, arg1, arg2):
        return self.miavariabile

# Creiamo una istanza della classe
&gt;&gt;&gt; istanza = MiaClasse()
&gt;&gt;&gt; istanza.miafunzione(1, 2)
3

# Questa variabile è condivisa da tutte le istanze
&gt;&gt;&gt; istanza2 = MiaClasse()
&gt;&gt;&gt; istanza.comune
10

&gt;&gt;&gt; istanza2.comune
10

# Nota come qui usiamo il nome della classe
# invece dell'istanza.
&gt;&gt;&gt; MiaClasse.common = 30
&gt;&gt;&gt; instanza.common
30

&gt;&gt;&gt; instanza2.common
30

# Questo non aggiornerà la variabile nella classe,
# invece assegnerà un nuovo oggetto alla variabile
# della prima istanza.
&gt;&gt;&gt; istanza.common = 10
&gt;&gt;&gt; istanza.common
10

&gt;&gt;&gt; istanza2.common
30

&gt;&gt;&gt; MiaClasse.common = 50

# Il valore non è cambiato perché &quot;common&quot;
# ora è una variabile dell'istanza.
&gt;&gt;&gt; istanza.common
10

&gt;&gt;&gt; istanza2.common
50

# Questa classe eredita da MiaClasse. L'ereditarietà
# multipla viene dichiarata così:
# class AltraClasse(MiaClasse1, MiaClasse2, MiaClasseN)
class AltraClasse(MiaClasse):
    # L'argomento &quot;self&quot; è passato automaticamente
    # e fa riferimento all'istanza della classe, quindi puoi impostare
    # variabili di istanza come sopra, ma dall'interno della classe.
    def __init__(self, arg1):
        self.miavariabile = 3
        print arg1

&gt;&gt;&gt; istanza = AltraClasse(&quot;hello&quot;)
hello

&gt;&gt;&gt; istanza.miafunzione(1, 2)
3

# Questa classe non ha un membro (proprietà) .test member, ma
# possiamo aggiungerne uno all'istanza quando vogliamo. Nota
# che .test sarà un membro della sola istanza.
&gt;&gt;&gt; istanza.test = 10
&gt;&gt;&gt; istanza.test
10
</code></pre>
<h2 id="eccezioni">Eccezioni</h2>
<p>Le eccezioni in Python sono gestite con dei blocchi <code>try-except [nome_eccezione]</code>:</p>
<pre><code>def una_funzione():
    try:
        # Divisione per zero causa una eccezione
        10 / 0
    except ZeroDivisionError:
        print &quot;Oops, errore.&quot;
    else:
        # Non c'è stata eccezione, possiamo proseguire.
        pass
    finally:
        # Questo codice viene eseguito quando il blocco
        # try..except è già eseguito e tutte le eccezioni
        # sono state gestite, anche se si verifica una nuova
        # eccezione direttamente nel blocco.
        print &quot;Abbiamo finito.&quot;

&gt;&gt;&gt; una_funzione()
Oops, errore.
Abbiamo finito.
</code></pre>
<h2 id="importare-librerie">Importare librerie</h2>
<p>Le librerie esterne si importano con <code>import [nomelibreria]</code>. Puoi anche usare la forma <code>[nomelibreria] import [nomefunzione]</code> per importare singole funzioni. Ecco un esempio:</p>
<pre><code>import random
from time import clock

randomint = random.randint(1, 100)

&gt;&gt;&gt; print randomint
64
</code></pre>
<h2 id="input-e-output">Input e Output</h2>
<p>Python vanta una vasta gamma di librerie per gestire input/output di files. In
questo esempio vediamo come <em>serializzare</em> (convertire strutture dati in
stringhe) usando la libreria <code>pickle</code>:</p>
<pre><code>import pickle
mialista = [&quot;Questo&quot;, &quot;è&quot;, 4, 13327]

# Apre il file C:\binary.dat in scrittura. La lettera r
# prima del nome file serve a evitare l'escaping
# del backslash.
miofile = file(r&quot;C:\binary.dat&quot;, &quot;w&quot;)

pickle.dump(mialista, miofile)
miofile.close()

miofile = file(r&quot;C:\text.txt&quot;, &quot;w&quot;)
miofile.write(&quot;Questa è una stringa di prova&quot;)
miofile.close()

miofile = file(r&quot;C:\text.txt&quot;)

&gt;&gt;&gt; print miofile.read()
'Questa è una stringa di prova'

miofile.close()

# Apre il file in lettura.
miofile = file(r&quot;C:\binary.dat&quot;)
listadafile = pickle.load(miofile)
miofile.close()

&gt;&gt;&gt; print listadafile
['Questo', 'è', 4, 13327]
</code></pre>
<h2 id="varie-ed-eventuali">Varie ed eventuali</h2>
<p>I *test possono essere concatenati. <code>1 &gt; a &lt; 3</code> verifica che a sia minore di  3
e maggiore di 1. Puoi usare <code>del</code> per <em>cancellare variabili o elementi di
array</em>. Le <em>comprensioni di lista</em> sono uno strumento potente per creare
e manipolare le liste. Consistono in una espressione seguita da una clausola
<code>for</code> seguita da zero o più clausole <code>if</code>. Quindi:</p>
<pre><code>&gt;&gt;&gt; lst1 = [1, 2, 3]
&gt;&gt;&gt; lst2 = [3, 4, 5]
&gt;&gt;&gt; print [x * y for x in lst1 for y in lst2]
[3, 4, 5, 6, 8, 10, 9, 12, 15]
&gt;&gt;&gt; print [x for x in lst1 if 4 &gt; x &gt; 1]
[2, 3]

# Verifica se almeno un elemento ha una determinata
# caratteristica.
# &quot;any&quot; restituisce true se qualunque elemento nella
# lista è vero.
&gt;&gt;&gt; any([i % 3 for i in [3, 3, 4, 4, 3]])
True
# Funziona perché 4 % 3 = 1, e 1 in Python è true,
# quindi any() restituisce True.

# Verifica quanto elemento hanno una determinata
# caratteristica.
&gt;&gt;&gt; sum(1 for i in [3, 3, 4, 4, 3] if i == 4)
2

&gt;&gt;&gt; del lst1[0]
&gt;&gt;&gt; print lst1
[2, 3]

&gt;&gt;&gt; del lst1
</code></pre>
<p>Le <em>variabili globali</em> vengono dichiarate all&rsquo;esterno delle funzioni
senza dichiarazioni particolari, ma se desideri modificarle in una funzione
devi dichiararle con la parola <code>global</code> all&rsquo;inizio della funzione,
altrimenti Python assegnerà quell&rsquo;oggetto a una nuova variabile locale
(presta attenzione, si tratta di un piccolo dettaglio che può metterti
facilmente nei guai). Per esempio: numero = 5</p>
<pre><code>def miafunz():
    # Questo stamperà 5.
    print numero

def altrafunz():
    # Questo solleva una eccezione perché la variabile
    # non è stata ancora assegnata. Python crea un
    # nuovo oggetto locale invece di accedere al globale
    print numero
    numero = 3

def ancorafunz():
    global numero
    # Questo cambierà il valore alla variabile globale
    numero = 3
</code></pre>
<h2 id="epilogo">Epilogo</h2>
<p>Questa non intende essere una guida completa (e nemmeno parziale) a Python.
Python ha una vasta gamma di librerie e molte, moltissime funzionalità che
dovrai scoprire con altri mezzi, come <a href="http://it.diveintopython.net/">Dive Into Python</a> (tradotto in
italiano) o l&rsquo;eccellente <a href="http://www.amazon.it/gp/product/0596158068/ref=as_li_ss_tl?ie=UTF8&amp;camp=3370&amp;creative=24114&amp;creativeASIN=0596158068&amp;linkCode=as2&amp;tag=nicoiaro-21">Learning Python di Mark Lutz</a>, libro che consiglio
a chiunque voglia davvero imparare e capire Python.</p>
<p>Mi auguro di averti aiutato nella transizione verso Python. Lasciami un
commento se pensi che ci sia qualcosa da migliorare o se c&rsquo;é qualcos&rsquo;altro
che vorresti approfondire.</p>
<p>Sono <a href="http://twitter.com/nicolaiarocci">@nicolaiarocci</a> su Twitter.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Programmazione, SEO, Startups – Il Meglio della Settimana #2</title>
      <link>https://nicolaiarocci.com/programmazione-seo-startups-il-meglio-della-settimana-2/</link>
      <pubDate>Mon, 28 Feb 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/programmazione-seo-startups-il-meglio-della-settimana-2/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Eccoci alla selezione delle notizie e i link che ho trovato più interessanti questa settimana. E’ stata una settimana ricca di avvenimenti e non è stato facile decidere cosa lasciare fuori. Andiamo a cominciare:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->Eccoci alla selezione delle notizie e i link che ho trovato più interessanti questa settimana. E’ stata una settimana ricca di avvenimenti e non è stato facile decidere cosa lasciare fuori. Andiamo a cominciare:</p>
<h2 id="like-button-facebook-cambia-le-regole">Like Button: Facebook cambia le regole</h2>
<p>Questa settimana Facebook ha sorpreso tutti cambiando radicalmente il funzionamento del pulsante Mi Piace. Su <strong>BigThink</strong> Daniele Ghidoli è tra i primi ad accorgersene e a segnalare la novità. <a href="http://www.bigthink.it/like-button-facebook-cambia/">Leggi l’articolo su BigThink</a>.</p>
<h2 id="google-migliora-l8217algoritmo-di-indicizzazione-del-web">Google migliora l’algoritmo di indicizzazione del web</h2>
<p>Negli ultimi mesi le critiche sulla qualità ****delle ricerche Google si sono moltiplicate. Le famigerate <em>content farm</em> hanno conquistato le prime posizioni per molte ricerche sulle keyword più importanti. Il gigante di Mountain View annuncia a sorpresa la contromossa, ossia l’aggiornamento del suo algoritmo più importante. L’obiettivo è penalizzare i siti di scarsa qualità e migliorare il ranking di quelli con contenuti validi. <a href="http://googleblog.blogspot.com/2011/02/finding-more-high-quality-sites-in.html">Leggi l’annuncio sul blog ufficiale di Google</a>.</p>
<h2 id="e8217-in-arrivo-una-nuova-bolla-delle-dot-com">E’ in arrivo una nuova Bolla delle Dot-Com?</h2>
<p>Le incredibili valutazioni economiche di servizi come Twitter e Facebook inducono molti a sostenere che ci troviamo nel bel mezzo della seconda bolla delle Dot-Com, declinata questa volta ai social network. <strong>TagliaBlog</strong> pubblica la traduzione di un bell’articolo del Wall Street Journal che, prendendo spunto dalla situazione di Twitter, tenta di fare il punto della situazione. <a href="http://blog.tagliaerbe.com/2011/02/nuova-bolla-dot-com.html">Leggi l’articolo su TagliaBlog</a></p>
<h2 id="come-un-tweet-sbagliato-può-portare-al-successo-commerciale-e-a-una-raccolta-di-sangue">Come un Tweet sbagliato può portare al successo commerciale (e a una raccolta di sangue)</h2>
<p>Quando Gloria Huang si accorge di aver twittato per sbaglio la sua richiesta di birra fresca dall’account del datore di lavoro (la Croce Rossa) non immagina certo di scatenare una donazione di sangue di massa e il successo commerciale della sua birra preferita. <a href="http://money.cnn.com/2011/02/17/smallbusiness/dogfish_redcross/index.htm">Leggi questa storia sul sito della CNN</a></p>
<h2 id="lo-stato-attuale-del-web-design-trends-2010">Lo stato attuale del Web Design: Trends 2010</h2>
<p>Il Web Design sta vivendo un’epoca d’oro. Abbiamo a disposizione strumenti potenti (CSS3, HTML5, il font-embedding), migliaia di risorse gratuite e decine di vivaci comunità online. Ma quali sono le nuove tendenze? Quali le tecniche, i concetti e le idee che si stanno affermando? Questa settimana <strong>Smashing Magazine</strong> tenta di anticipare il Web Design del prossimo futuro. <a href="http://www.smashingmagazine.com/2010/05/04/web-design-trends-2010/">Leggi l’articolo di Smashing Magazine</a>.</p>
<h2 id="diffondiamo-la-cultura-digitale-in-italia">Diffondiamo la Cultura Digitale in Italia</h2>
<p>Interessante il progetto Cultura Digitale curato e ideato da Fabio Lalli e dagli Indigeni Digitali. “Si vuole creare un libro gratuito da distribuire on line e off line che parli della Cultura Digitale, di cosa significa per ognuno di noi”. Chiunque può contribuire pubblicando il proprio pensiero sul wall di Cultura Digitale. L’idea è ingegnosa e ben implementata. Funziona anche perché solletica l’ego di ognuno di noi e sfrutta abilmente i meccanismi virali propri del web 2.0. I contributi affluiscono copiosi.  <a href="http://culturadigitale.com/">Visita il sito di Cultura Digitale</a></p>
<h2 id="mono-210">Mono 2.10</h2>
<p>La versione 2.10 di Mono, la piattaforma open source e multi piattaforma alternativa al Microsoft NET Framework, è stata rilasciata questa settimana. Tra le novità aggiornamenti ai compilatori C# e VB, supporto a MVC3, F# e Native Client Google oltre alla soluzione di molti problemi conosciuti. <a href="http://www.mono-project.com/Release_Notes_Mono_2.10">Leggi le Release Notes ufficiali</a>.</p>
<h2 id="python-32">Python 3.2</h2>
<p>Questa è anche la settimana che ha visto l’uscita dell’ultima release del linguaggio Python, la 3.2. La documentazione ufficiale è stata aggiornata con un documento che illustra accuratamente le novità introdotte con questo aggiornamento. <a href="http://docs.python.org/dev/whatsnew/3.2.html">Leggi le novità su Python 3.2</a>.</p>
<h2 id="google-cloud-connect">Google Cloud Connect</h2>
<p>Google Cloud Connect è un plugin per Microsoft Office che consente di sincronizzare i documenti Office appoggiandosi alla piattaforma Google Docs. Rilasciato da Google, questo plugin rende semplice la collaborazione tra utenti che non vogliono o non possono rinunciare alla suite Microsoft. I documenti possono essere aggiornati sia offline che online. <a href="http://www.readwriteweb.com/enterprise/2011/02/google-releases-microsoft-offi.php">Leggi tutto su Google Cloud Connect</a>.</p>
<h2 id="i-5-migliori-tool-gratuiti-per-sql-server">I 5 migliori tool gratuiti per SQL Server</h2>
<p>Sei pigro e la tua azienda è al verde. Che fare? Brent Ozar, guru SQL Server e uno dei progettisti di Stack Overflow, propone cinque tools gratuiti per la gestione e manutenzione di SQL Server. <a href="http://www.brentozar.com/archive/2011/02/my-favorite-free-sql-server-downloads/">Leggi l’articolo sul sito di Brent Ozar</a>.</p>
<h2 id="introduzione-alle-regular-expression">Introduzione alle Regular Expression</h2>
<p>Concludo con una svergognata auto promozione. Introduzione alle Regular Expression è una serie in tre parti, attualmente in pubblicazione, che ha l’ambizione di consentire a chiunque di avvicinarsi alle Regular Expression. Le RegEx sono un strumento potente e spesso incompreso, utile non solo ai programmatori ma a chiunque abbia a che fare con le ricerche su testo. <a href="http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/">Leggi la prima parte della Introduzione alle Regular Expression.</a></p>
<p>Vi è piaciuta questa selezione? Fatemi sapere che ne pensate con un bel commento qui sotto, lo apprezzerei molto. Alla prossima settimana!</p>]]></content:encoded>
    </item>
    <item>
      <title>Programmazione, SEO, Startups – Il Meglio della Settimana #1</title>
      <link>https://nicolaiarocci.com/programmazione-seo-startups-il-meglio-della-settimana-1/</link>
      <pubDate>Mon, 21 Feb 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/programmazione-seo-startups-il-meglio-della-settimana-1/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Vi propongo una scelta delle risorse più interessanti e curiose che ho scovato questa settimana in rete. Ce né per tutti i gusti: programmazione, SEO, Startups e curiosità. Andiamo a cominciare:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->Vi propongo una scelta delle risorse più interessanti e curiose che ho scovato questa settimana in rete. Ce né per tutti i gusti: programmazione, SEO, Startups e curiosità. Andiamo a cominciare:</p>
<ol>
<li>
<p><strong><a href="http://docs.python.org/dev/howto/pyporting.html">Da Python 2 a Python 3</a></strong></p>
<p>Python 3 è il futuro, ma Python 2 è attualmente la versione più usata al mondo. Ora finalmente la documentazione ufficiale è arricchita da una bella guida alle migliori strategie per supportare entrambe le versioni di Python.</p>
<p><a href="http://docs.python.org/dev/howto/pyporting.html"></a></p>
</li>
<li>
<p><a href="http://blogs.nationalgeographic.com/blogs/news/breakingorbit/2011/01/400-volunteer-for-one-way-mars-trip.html"><strong>Per quale motivo 400 persone si sono offerte volontarie per una viaggio di sola andata verso Marte?</strong></a></p>
</li>
</ol>
<pre><code>Il numero Ottobre-Novembre 2010 del _Journal of Cosmology_ contiene uno speciale di 55 pagine intitolato &amp;#8220;Missione Umana su Marte: Colonizzare il Pianeta Rosso&amp;#8221;. Secondo gli scienziati una missione di sola andata destinata a colonizzare Marte sarebbe possibile entro 20 anni. Cosa ha spinto ben quattrocento lettori a offrirsi come volontari per la missione?
</code></pre>
<ol start="3">
<li><strong><a href="http://www.seomoz.org/blog/tweets-effect-rankings-unexpected-case-study">Il sorprendente effetto di un singolo Tweet sul Page Rank di Google</a></strong></li>
</ol>
<pre><code>Google ha ammesso recentemente che i link provenienti dai social network sono segnali usati nella valutazione dell&amp;#8217;importanza dei siti web. I ragazzi di SEOmoz (tra i migliori esperti SEO in circolazione) sono rimasti esterrefatti dagli effetti che un singolo tweet ha causato sul page rank della loro _Beginners Guide to SEO_.
</code></pre>
<ol start="4">
<li><a href="http://www.lucasartoni.com/lavoro/open-letter-to-an-event-organizer"><strong>Lettera aperta a un organizzatore di eventi</strong></a></li>
</ol>
<pre><code>Per mestiere Luca Sartoni partecipa (come speaker, spettatore o organizzatore) a molte conferenze , seminari e workshops. In questa lettera elenca quelli che secondo lui sono i cinque errori commessi più spesso dagli organizzatori di eventi. E suggerisce come evitarli.
</code></pre>
<ol start="5">
<li><a href="http://en.blog.wordpress.com/2011/02/17/how-is-wordpress-com-made/"><strong>Come si fa WordPress?</strong></a></li>
</ol>
<pre><code>A quanto pare WordPress, pur avendo una sede a San Francisco, è una realtà capillarmente distribuita. Gran parte dei dipendenti lavora da casa ed è disseminata per il mondo, coprendone quasi tutti i fusi orari. In questo articolo sul blog ufficiale dell&amp;#8217;azienda Scott Berkun racconta come si svolge una giornata di lavoro in una azienda di questo tipo.
</code></pre>
<ol start="6">
<li><a href="http://www.allthingsdistributed.com/2011/02/website_amazon_s3.html"><strong>Come ospitare un intero sito (statico) su Amazon S3</strong></a></li>
</ol>
<pre><code>Da qualche tempo Werner Vogels, CTO di Amazon, ospita il suo sito direttamente su S3, la potente piattaforma di _cloud storage_ di Amazon. Una soluzione di questo tipo offre diversi vantaggi, primo fra tutti la scalabilità. In questo articolo Vogels ci spiega come raggiungere lo stesso risultato.
</code></pre>
<ol start="7">
<li><a href="http://www.limedaring.com/im-a-designer-who-learned-django-and-launched-her-first-webapp-in-6-weeks/"><strong>Sono una Designer e ho lanciato la mia prima applicazione in 6 settimane</strong></a></li>
</ol>
<pre><code>Tracy è una designer che non sa quasi nulla di programmazione. Ha una idea su un sito innovativo e tenta senza successo di ottenere un finanziamento che le consenta di assumere un programmatore esperto. Cosa fare? Tracy si rimbocca le maniche e in sei settimane riesce a lanciare una variante (semplificata) della sua idea originale. In Python/Django, ovviamente.
</code></pre>
<ol start="8">
<li><a href="http://sixrevisions.com/web-applications/new-facebook-page/"><strong>La Guida Definitiva al Design delle Pagine Facebook</strong></a></li>
</ol>
<pre><code>Facebook ha aggiornato le Pagine Fan introducendo parecchie novità significative. In questo articolo Six Revisions ci spiega quali sono e come sfruttarle al meglio.
</code></pre>
<ol start="9">
<li><a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008/video-lectures/"><strong>I filmati completi del Corso di Programmazione (Python) del MIT</strong></a></li>
</ol>
<pre><code>Ventiquattro filmati completi, di ottima qualità, per imparare a programmare direttamente dai professori del famoso MIT di Boston. Il materiale è di qualità eccellente.
</code></pre>
<ol start="10">
<li><a href="http://www.cenedella.com/job-search/leonardo-da-vincis-resume/"><strong>Il curriculum vitae di Leonardo Da Vinci</strong></a></li>
</ol>
<pre><code>Prima di Mona Lisa, dell&amp;#8217;Ultima Cena e dell&amp;#8217;invenzione dell&amp;#8217;elicottero anche a Leonardo Da Vinci è toccato scrivere il suo bel curriculum. Nel 1482, a trent&amp;#8217;anni, Leonardo lo inviò a Ludovico il Moro, Duca di Milano. In questo splendido articolo possiamo vedere l&amp;#8217;originale e leggerne la trascrizione. Perché? Per imparare un paio di trucchetti che potrebbero tornarci utili.
</code></pre>
<ol start="11">
<li><a href="http://mattoufoutu.rafale.org/ebooks/Doc_diverse/Cours%20Prog/Python/Books/Natural%20Language%20Processing%20with%20Python%20(2009).pdf"><strong>Processare il Linguaggio Naturale in Python</strong></a></li>
</ol>
<pre><code>L&amp;#8217;intero contenuto del libro _Natural Processing Language With Python_ in formato PDF, liberamente accessibile.
</code></pre>
<p>Queste sono solo alcune delle segnalazioni che giorno per giorno pubblico su Twitter. Se volete più notizie, spunti e link interessanti <a href="http://twitter.com/#!/nicolaiarocci">seguitemi anche su Twitter</a>!</p>]]></content:encoded>
    </item>
    <item>
      <title>Il meglio di Stack Overflow in una collana di eBook gratuiti</title>
      <link>https://nicolaiarocci.com/il-meglio-di-stack-overflow-una-collana-di-ebook-gratuiti/</link>
      <pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/il-meglio-di-stack-overflow-una-collana-di-ebook-gratuiti/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://stackoverflow.com/&#34;&gt;&lt;strong&gt;Stack Overflow&lt;/strong&gt;&lt;/a&gt; è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera &lt;strong&gt;minera di informazioni&lt;/strong&gt; &lt;strong&gt;preziose&lt;/strong&gt; e  meriterebbe maggiore attenzione…&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted --><a href="http://stackoverflow.com/"><strong>Stack Overflow</strong></a> è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera <strong>minera di informazioni</strong> <strong>preziose</strong> e  meriterebbe maggiore attenzione…</p>
<h2 id="gli-ebooks-di-stack-overflow">Gli eBooks di Stack Overflow</h2>
<h2 id="img-classsize-full-wp-image-794-alignright-titlestack-overflow-ebook-srchttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgfit2002c267-altstack-overflow-ebook-srcsethttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgw200-200w-httpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgresize1122c150-112w-sizesmax-width-200px-100vw-200px-data-recalc-dims1-"><!-- raw HTML omitted --></h2>
<p>Recentemente <a href="http://meta.stackoverflow.com/users/893/greg-hewgill">Greg Hewkill</a> ha <a href="http://meta.stackoverflow.com/questions/74399/stack-overflow-top-20-tags-in-ebook-format">annunciato</a> la creazione di <a href="https://github.com/ghewgill/so-static">uno script open source</a> che genera un eBook per ognuno dei <strong>20 tag più popolari</strong> di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria <a href="http://hewgill.com/~greg/stackoverflow/ebooks/"><em>collana Stack Overflow</em></a> che propone il <strong>concentrato dei migliori contenuti del sito</strong>. Basta scorrere i <em>titoli</em> (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:</p>
<ul>
<li>JAVA (26M)</li>
<li>C# (24M), C++ (21M), C (11M)</li>
<li>NET (21M)</li>
<li>PYTHON (20M), DJANGO (1.6M)</li>
<li>JAVASCRIPT (15M)</li>
<li>PHP (9.6M)</li>
<li>IPHONE (7.3M)</li>
<li>HTML (6.0M), HTML 5 (3.0M)</li>
<li>CSS (5.7M)</li>
<li>JQUERY (5.5M)</li>
<li>ASP.NET (4.8M)</li>
<li>DATABASE (4.8M)</li>
<li>RUBY (3.1M), RUBY ON RAILS (1.9M)</li>
<li>ANDROID (2.7M)</li>
<li>MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M)</li>
<li>AJAX (2.1M)</li>
<li>COCOA (1.5M), OBJECTIVE-C (3.1M)</li>
<li>VB.NET (1.5M)</li>
<li>SILVERLIGHT (1.1M)</li>
<li>FLASH (509K)</li>
</ul>
<p>Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è <a href="http://www.mobipocket.com/dev/article.asp?BaseFolder=prcgen&amp;File=mobiformat.htm">Mobipocket</a>, compatibile con [<!-- raw HTML omitted --><a href="http://stackoverflow.com/"><strong>Stack Overflow</strong></a> è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera <strong>minera di informazioni</strong> <strong>preziose</strong> e  meriterebbe maggiore attenzione…<!-- raw HTML omitted --></p>
<h2 id="gli-ebooks-di-stack-overflow-1">Gli eBooks di Stack Overflow</h2>
<h2 id="img-classsize-full-wp-image-794-alignright-titlestack-overflow-ebook-srchttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgfit2002c267-altstack-overflow-ebook-srcsethttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgw200-200w-httpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgresize1122c150-112w-sizesmax-width-200px-100vw-200px-data-recalc-dims1--1"><!-- raw HTML omitted --></h2>
<p>Recentemente <a href="http://meta.stackoverflow.com/users/893/greg-hewgill">Greg Hewkill</a> ha <a href="http://meta.stackoverflow.com/questions/74399/stack-overflow-top-20-tags-in-ebook-format">annunciato</a> la creazione di <a href="https://github.com/ghewgill/so-static">uno script open source</a> che genera un eBook per ognuno dei <strong>20 tag più popolari</strong> di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria <a href="http://hewgill.com/~greg/stackoverflow/ebooks/"><em>collana Stack Overflow</em></a> che propone il <strong>concentrato dei migliori contenuti del sito</strong>. Basta scorrere i <em>titoli</em> (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:</p>
<ul>
<li>JAVA (26M)</li>
<li>C# (24M), C++ (21M), C (11M)</li>
<li>NET (21M)</li>
<li>PYTHON (20M), DJANGO (1.6M)</li>
<li>JAVASCRIPT (15M)</li>
<li>PHP (9.6M)</li>
<li>IPHONE (7.3M)</li>
<li>HTML (6.0M), HTML 5 (3.0M)</li>
<li>CSS (5.7M)</li>
<li>JQUERY (5.5M)</li>
<li>ASP.NET (4.8M)</li>
<li>DATABASE (4.8M)</li>
<li>RUBY (3.1M), RUBY ON RAILS (1.9M)</li>
<li>ANDROID (2.7M)</li>
<li>MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M)</li>
<li>AJAX (2.1M)</li>
<li>COCOA (1.5M), OBJECTIVE-C (3.1M)</li>
<li>VB.NET (1.5M)</li>
<li>SILVERLIGHT (1.1M)</li>
<li>FLASH (509K)</li>
</ul>
<p>Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è <a href="http://www.mobipocket.com/dev/article.asp?BaseFolder=prcgen&amp;File=mobiformat.htm">Mobipocket</a>, compatibile con]<a href="http://www.amazon.com/dp/B002Y27P3M/?tag=gocous-20&amp;hvadid=5729120357&amp;ref=pd_sl_blgu0nkyl_b">7</a> e credo con altri lettori di eBook. Ricordo che è possibile leggere i libri per Kindle con l’applicazione <strong>gratuita</strong> disponibile per <a href="http://www.amazon.com/gp/feature.html/ref=kcp_pc_mkt_lnd?docId=1000426311">PC</a>, <a href="http://www.amazon.com/gp/feature.html/ref=kcp_mac_mkt_lnd?docId=1000464931">Mac</a>, [<!-- raw HTML omitted --><a href="http://stackoverflow.com/"><strong>Stack Overflow</strong></a> è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera <strong>minera di informazioni</strong> <strong>preziose</strong> e  meriterebbe maggiore attenzione…<!-- raw HTML omitted --></p>
<h2 id="gli-ebooks-di-stack-overflow-2">Gli eBooks di Stack Overflow</h2>
<h2 id="img-classsize-full-wp-image-794-alignright-titlestack-overflow-ebook-srchttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgfit2002c267-altstack-overflow-ebook-srcsethttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgw200-200w-httpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgresize1122c150-112w-sizesmax-width-200px-100vw-200px-data-recalc-dims1--2"><!-- raw HTML omitted --></h2>
<p>Recentemente <a href="http://meta.stackoverflow.com/users/893/greg-hewgill">Greg Hewkill</a> ha <a href="http://meta.stackoverflow.com/questions/74399/stack-overflow-top-20-tags-in-ebook-format">annunciato</a> la creazione di <a href="https://github.com/ghewgill/so-static">uno script open source</a> che genera un eBook per ognuno dei <strong>20 tag più popolari</strong> di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria <a href="http://hewgill.com/~greg/stackoverflow/ebooks/"><em>collana Stack Overflow</em></a> che propone il <strong>concentrato dei migliori contenuti del sito</strong>. Basta scorrere i <em>titoli</em> (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:</p>
<ul>
<li>JAVA (26M)</li>
<li>C# (24M), C++ (21M), C (11M)</li>
<li>NET (21M)</li>
<li>PYTHON (20M), DJANGO (1.6M)</li>
<li>JAVASCRIPT (15M)</li>
<li>PHP (9.6M)</li>
<li>IPHONE (7.3M)</li>
<li>HTML (6.0M), HTML 5 (3.0M)</li>
<li>CSS (5.7M)</li>
<li>JQUERY (5.5M)</li>
<li>ASP.NET (4.8M)</li>
<li>DATABASE (4.8M)</li>
<li>RUBY (3.1M), RUBY ON RAILS (1.9M)</li>
<li>ANDROID (2.7M)</li>
<li>MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M)</li>
<li>AJAX (2.1M)</li>
<li>COCOA (1.5M), OBJECTIVE-C (3.1M)</li>
<li>VB.NET (1.5M)</li>
<li>SILVERLIGHT (1.1M)</li>
<li>FLASH (509K)</li>
</ul>
<p>Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è <a href="http://www.mobipocket.com/dev/article.asp?BaseFolder=prcgen&amp;File=mobiformat.htm">Mobipocket</a>, compatibile con [<!-- raw HTML omitted --><a href="http://stackoverflow.com/"><strong>Stack Overflow</strong></a> è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera <strong>minera di informazioni</strong> <strong>preziose</strong> e  meriterebbe maggiore attenzione…<!-- raw HTML omitted --></p>
<h2 id="gli-ebooks-di-stack-overflow-3">Gli eBooks di Stack Overflow</h2>
<h2 id="img-classsize-full-wp-image-794-alignright-titlestack-overflow-ebook-srchttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgfit2002c267-altstack-overflow-ebook-srcsethttpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgw200-200w-httpi2wpcomnicolaiaroccicomwp-contentuploads201102stack_overflow_ebookjpgresize1122c150-112w-sizesmax-width-200px-100vw-200px-data-recalc-dims1--3"><!-- raw HTML omitted --></h2>
<p>Recentemente <a href="http://meta.stackoverflow.com/users/893/greg-hewgill">Greg Hewkill</a> ha <a href="http://meta.stackoverflow.com/questions/74399/stack-overflow-top-20-tags-in-ebook-format">annunciato</a> la creazione di <a href="https://github.com/ghewgill/so-static">uno script open source</a> che genera un eBook per ognuno dei <strong>20 tag più popolari</strong> di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria <a href="http://hewgill.com/~greg/stackoverflow/ebooks/"><em>collana Stack Overflow</em></a> che propone il <strong>concentrato dei migliori contenuti del sito</strong>. Basta scorrere i <em>titoli</em> (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:</p>
<ul>
<li>JAVA (26M)</li>
<li>C# (24M), C++ (21M), C (11M)</li>
<li>NET (21M)</li>
<li>PYTHON (20M), DJANGO (1.6M)</li>
<li>JAVASCRIPT (15M)</li>
<li>PHP (9.6M)</li>
<li>IPHONE (7.3M)</li>
<li>HTML (6.0M), HTML 5 (3.0M)</li>
<li>CSS (5.7M)</li>
<li>JQUERY (5.5M)</li>
<li>ASP.NET (4.8M)</li>
<li>DATABASE (4.8M)</li>
<li>RUBY (3.1M), RUBY ON RAILS (1.9M)</li>
<li>ANDROID (2.7M)</li>
<li>MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M)</li>
<li>AJAX (2.1M)</li>
<li>COCOA (1.5M), OBJECTIVE-C (3.1M)</li>
<li>VB.NET (1.5M)</li>
<li>SILVERLIGHT (1.1M)</li>
<li>FLASH (509K)</li>
</ul>
<p>Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è <a href="http://www.mobipocket.com/dev/article.asp?BaseFolder=prcgen&amp;File=mobiformat.htm">Mobipocket</a>, compatibile con]<a href="http://www.amazon.com/dp/B002Y27P3M/?tag=gocous-20&amp;hvadid=5729120357&amp;ref=pd_sl_blgu0nkyl_b">7</a> e credo con altri lettori di eBook. Ricordo che è possibile leggere i libri per Kindle con l’applicazione <strong>gratuita</strong> disponibile per <a href="http://www.amazon.com/gp/feature.html/ref=kcp_pc_mkt_lnd?docId=1000426311">PC</a>, <a href="http://www.amazon.com/gp/feature.html/ref=kcp_mac_mkt_lnd?docId=1000464931">Mac</a>,]<a href="http://www.amazon.com/gp/feature.html/ref=kcp_iphone_mkt_lnd?docId=1000301301">10</a> e <a href="http://www.amazon.com/gp/feature.html?ie=UTF8&amp;docId=165849822">Android</a>.</p>
<p><strong>Buona lettura!</strong></p>]]></content:encoded>
    </item>
    <item>
      <title>Python vince il TIOBE Programming Language Award 2010</title>
      <link>https://nicolaiarocci.com/python-vince-il-tiobe-programming-language-award-2010/</link>
      <pubDate>Mon, 10 Jan 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-vince-il-tiobe-programming-language-award-2010/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Python&lt;/strong&gt; è il &lt;strong&gt;&lt;a href=&#34;http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html&#34;&gt;Linguaggio di Programmazione del 2010&lt;/a&gt;&lt;/strong&gt;. Il riconoscimento viene assegnato da &lt;a href=&#34;http://www.tiobe.com/&#34;&gt;TIOBE&lt;/a&gt; al linguaggio di programmazione che ha conquistato più quote di mercato nel corso dell’anno. La crescita di Python è stata +1.81% da gennaio 2010, di poco superiore al risultato  di Objective-C (+1.63%), secondo classificato. Objective-C è il linguaggio usato nello sviluppo di applicazioni iPhone e IPad; è andato molto bene nella prima parte dell’anno ma ha perso quote negli ultimi mesi.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><strong><!-- raw HTML omitted -->Python</strong> è il <strong><a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html">Linguaggio di Programmazione del 2010</a></strong>. Il riconoscimento viene assegnato da <a href="http://www.tiobe.com/">TIOBE</a> al linguaggio di programmazione che ha conquistato più quote di mercato nel corso dell’anno. La crescita di Python è stata +1.81% da gennaio 2010, di poco superiore al risultato  di Objective-C (+1.63%), secondo classificato. Objective-C è il linguaggio usato nello sviluppo di applicazioni iPhone e IPad; è andato molto bene nella prima parte dell’anno ma ha perso quote negli ultimi mesi.</p>
<h2 id="non-solo-web-e-scripting">Non solo web e scripting</h2>
<p>TIOBE sottolinea come in questi anni Python sia diventato il linguaggio standard per lo scripting, sostituendo di fatto Perl. Da questo ambito tutto sommato ristretto negli ultimi anni Python si è diffuso in molti altri campi, primo fra tutti il web, dove ha riscosso grande successo anche grazie al framework <a href="http://www.djangoproject.com/"><strong>Django</strong></a>. Python è facile da imparare e molte università lo stanno adottando come linguaggio principale per l’insegnamento della programmazione. Tra i <a href="http://www.python.org/about/quotes/">grandi nomi che sviluppano in Python</a> ricordo Google, YouTube, il gioco multiplayer EVE Online, la NASA.</p>
<h2 id="il-tiobe-index-come-strumento-strategico">Il TIOBE Index come strumento strategico</h2>
<p>Il TIOBE Programming Community index è un indicatore annuale della popolarità dei linguaggi di programmazione. La classifica è calcolata tenendo conto anche dei giudizi espressi da ingegneri  e sviluppatori di chiara fama, oltre che tracciando i risultati di corsi di addestramento tenuti in tutto il mondo. I risultati forniti dai motori di ricerca più importanti (Google, MSN, Yahoo!, Wikipedia e YouTube) vengono a loro volta inclusi nell’elaborazione della classifica.</p>
<p>TIOBE non è un indice che tenta di individuare il <em>migliore</em> linguaggio di programmazione, serve piuttosto a indicare quali sono le tendenze in corso a livello planetario. Si tratta di una valida risorsa per verificare l’attualità delle proprie competenze e per pianificare strategicamente i prossimi linguaggi di programmazione su cui investire. Come spunto di riflessione consiglio caldamente la lettura del celebre <a href="http://invece.org/translations/pparadox.html"><strong>Paradosso di Python</strong></a>, formulato da <a href="http://www.paulgraham.com/">Paul Graham</a> nell’ormai lontano 2004. Forse i tempi stanno cambiando?</p>
<h2 id="l8217ultimo-decennio-chi-sale-e-chi-scende">L’ultimo decennio: chi sale e chi scende</h2>
<!-- raw HTML omitted -->
<pre><code>&lt;p class=&quot;wp-caption-text&quot;&gt;
  Andamento dell'indice TIOBE nell'ultimo decennio (2000-2010)
&lt;/p&gt;
</code></pre>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->]]></content:encoded>
    </item>
    <item>
      <title>E’ Python il linguaggio del 2011</title>
      <link>https://nicolaiarocci.com/python-e-il-linguaggio-del-2011/</link>
      <pubDate>Mon, 03 Jan 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-e-il-linguaggio-del-2011/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;Qualche giorno &lt;a href=&#34;http://www.readwriteweb.com/hack/2010/12/hacker-poll-programming-languages-2011.php&#34;&gt;ReadWriteWeb&lt;/a&gt; ha chiesto ai suoi lettori quali sono i linguaggi di programmazione che pensano di studiare nel 2011. La selezione è piuttosto ampia e include buona parte i linguaggi attorno ai quali c’è fermento questi mesi (tra gli altri &lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt;, &lt;a href=&#34;http://golang.org/&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;http://www.erlang.org/&#34;&gt;Erlang&lt;/a&gt;, &lt;a href=&#34;http://www.haskell.org/haskellwiki/Haskell&#34;&gt;Haskell&lt;/a&gt;). Ci si rivolge a programmatori esperti che hanno già maturato una certa esperienza, probabilmente per questo motivo sono esclusi alcuni grandi classici come il linguaggio C (è presente Java).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted -->Qualche giorno <a href="http://www.readwriteweb.com/hack/2010/12/hacker-poll-programming-languages-2011.php">ReadWriteWeb</a> ha chiesto ai suoi lettori quali sono i linguaggi di programmazione che pensano di studiare nel 2011. La selezione è piuttosto ampia e include buona parte i linguaggi attorno ai quali c’è fermento questi mesi (tra gli altri <a href="http://clojure.org/">Clojure</a>, <a href="http://golang.org/">Go</a>, <a href="http://www.erlang.org/">Erlang</a>, <a href="http://www.haskell.org/haskellwiki/Haskell">Haskell</a>). Ci si rivolge a programmatori esperti che hanno già maturato una certa esperienza, probabilmente per questo motivo sono esclusi alcuni grandi classici come il linguaggio C (è presente Java).</p>
<p>Quali sono finora i linguaggi più gettonati?</p>
<ol>
<li>Python (14.5%)</li>
<li>Ruby (13.8%)</li>
<li>Node.js (9.53%)</li>
<li>ECMAScript (JavaScript, ActionScript) (8.15%)</li>
<li>Scala (8.01%)</li>
</ol>
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --><a href="http://python.org/">Python</a> al momento si gode il primo posto anche se <a href="http://www.ruby-lang.org/en/">Ruby</a> gli soffia sul collo e non sembra intenzionato a mollare l’osso. Al terzo posto, distanziato, l’interessantissimo progetto <a href="http://nodejs.org/">Node.js</a>. Curiosa la scelta di includerlo nella selezione dato che non è un linguaggio di programmazione in senso stretto. JavaScript si piazza appena fuori dal podio mentre al quinto posto troviamo il primo dei <em>new kids on the block,</em> <a href="http://www.scala-lang.org/">Scala</a>.</p>
<h2 id="linguaggi-script-alla-ribalta">Linguaggi script alla ribalta</h2>
<p>E’ presto per trarre conclusioni (il questionario è online da pochi giorni e il sondaggio è ancora in corso) ma balza all’occhio come nelle prime quattro posizioni ci siano linguaggi script non compilati, a conferma di quella che sembra essere la tendenza degli ultimi anni, almeno nel contesto delle startup web e dei giovani programmatori web-oriented che costituisce in buona parte il pubblico di riferimento di un sito come ReadWriteWeb.</p>
<h2 id="javascript-è-più-importante-di-quanto-si-pensi">JavaScript è più importante di quanto si pensi</h2>
<p>Uniti, Node.js e JavaScript balzano in vetta alla classifica. Il linguaggio JavaScript è sottovalutato da molti sviluppatori che si limitano a incollare brevi snippets per la manipolazione del <a href="http://en.wikipedia.org/wiki/Document_Object_Model">DOM</a> o la convalida di campi di input, ma le esigenze di interattività e reattività indurranno a spostare  l’implementazione dal server al client rendendo la conoscenza approfondita del linguaggio JavaScript sempre più determinante.</p>
<p>Presto dedicherò una serie di articoli a Python e proporrò alcuni approfondimenti su JavaScript. Rimani sintonizzato!</p>]]></content:encoded>
    </item>
  </channel>
</rss>
