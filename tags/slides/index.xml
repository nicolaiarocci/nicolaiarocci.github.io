<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Slides on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/slides/</link>
    <description>Recent content in Slides on Nicola Iarocci</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <copyright>Produced / Written / Maintained by Nicola Iarocci since 2010</copyright>
    <lastBuildDate>Tue, 17 Jun 2025 09:59:26 +0200</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/slides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Marp, the markdown presentation ecosystem</title>
      <link>https://nicolaiarocci.com/marp-the-markdown-presentation-ecosystem/</link>
      <pubDate>Tue, 17 Jun 2025 09:59:26 +0200</pubDate>
      <guid>https://nicolaiarocci.com/marp-the-markdown-presentation-ecosystem/</guid>
      <description>&lt;p&gt;Today, I learned about &lt;a href=&#34;https://marp.app&#34;&gt;Marp&lt;/a&gt;, the &amp;ldquo;Markdown Presentation Ecosystem,&amp;rdquo; which comes with an enticing promise: &lt;em&gt;to create beautiful slide decks using an intuitive Markdown experience.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For my &lt;a href=&#34;https://nicolaiarocci.com/mcp-or-connecting-our-apps-to-llms/&#34;&gt;latest presentation&lt;/a&gt;, I utilized the Slides Extended Obsidian plugin, which is based on reveal.js—an excellent option for keeping slide decks within one&amp;rsquo;s Obsidian vault  (I keep all notes, work and personal journals, and knowledge in Obsidian.)&lt;/p&gt;
&lt;p&gt;Marp could be a viable alternative to the plugin, as Obsidian notes are just markdown files. The advantage here is that I can further elaborate or iterate on my slides, for example, from the command line, as Marp comes with a dedicated &lt;a href=&#34;https://github.com/marp-team/marp-cli/&#34;&gt;CLI tool&lt;/a&gt; that lets you export to PDF, HTML, and more. Additionally, Marp is not based on reveal.js, a tool that has given me headaches in the past.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Today, I learned about <a href="https://marp.app">Marp</a>, the &ldquo;Markdown Presentation Ecosystem,&rdquo; which comes with an enticing promise: <em>to create beautiful slide decks using an intuitive Markdown experience.</em></p>
<p>For my <a href="/mcp-or-connecting-our-apps-to-llms/">latest presentation</a>, I utilized the Slides Extended Obsidian plugin, which is based on reveal.js—an excellent option for keeping slide decks within one&rsquo;s Obsidian vault  (I keep all notes, work and personal journals, and knowledge in Obsidian.)</p>
<p>Marp could be a viable alternative to the plugin, as Obsidian notes are just markdown files. The advantage here is that I can further elaborate or iterate on my slides, for example, from the command line, as Marp comes with a dedicated <a href="https://github.com/marp-team/marp-cli/">CLI tool</a> that lets you export to PDF, HTML, and more. Additionally, Marp is not based on reveal.js, a tool that has given me headaches in the past.</p>
<p>My understanding is that Marp is more geared toward producing &ldquo;static&rdquo; slides intended for PDF or other outputs (HTML included, though). In contrast, reveal-based solutions allow for more advanced features, such as animated slides, which I don&rsquo;t like and use anyway.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
