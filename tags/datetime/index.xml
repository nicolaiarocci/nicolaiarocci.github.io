<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>datetime on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/datetime/</link>
    <description>Recent content in datetime on Nicola Iarocci</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Sep 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/datetime/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decodificare le date in un flusso JSON (Python)</title>
      <link>https://nicolaiarocci.com/decodificare-le-date-in-un-flusso-json-python/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/decodificare-le-date-in-un-flusso-json-python/</guid>
      <description>JSON-Datetime permette di decodificare i valori [cci lang=”python” theme=”default”]datetime[/cci] normalmente espressi come stringhe in un flusso JSON. E’ davvero molto semplice, e fa parte della suite strumenti open source che sto sviluppando nel contesto del più ampio progetto RESTful Web API.
Del problema della decodifica delle stringhe JSON in valori datetime ho già scritto in passato. Allora proponevo una soluzione algoritmica; ora vi presento un prodotto finito che potete usare nei vostri progetti.</description>
    </item>
    <item>
      <title>Convertire una data JSON in un oggetto datetime Python</title>
      <link>https://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/</link>
      <pubDate>Thu, 07 Jun 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/</guid>
      <description>Abbiamo una stringa JSON che contiene una data:
fonte = &#39;{&amp;quot;ragione_sociale&amp;quot;: &amp;quot;CIR 2000&amp;quot;, &amp;quot;aggiornato_il&amp;quot;: &amp;quot;Wed, 06 Jun 2012 14:19:53 UTC&amp;quot;}&#39; Vediamo che succede se la convertiamo in un dizionario Python:
import simplejson as json json.loads(fonte) {&#39;aggiornato_il&#39;: &#39;Wed, 06 Jun 2012 14:19:53 UTC &#39;, &#39;ragione_sociale&#39;: &#39;CIR 2000&#39;} Facile, vero? C’è però un piccolo problema: aggiornato_il è ancora una stringa mentre a noi, per poterlo elaborare comodamente, serve un campo datetime.datetime. Come mai il pur potente modulo simplejson non converte correttamente la nostra data?</description>
    </item>
  </channel>
</rss>
