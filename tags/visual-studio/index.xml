<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visual studio on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/visual-studio/</link>
    <description>Recent content in visual studio on Nicola Iarocci</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 11 May 2017 16:16:06 +0200</lastBuildDate>
    <atom:link href="https://nicolaiarocci.com/tags/visual-studio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Workload now officially supported in Visual Studio 2017</title>
      <link>https://nicolaiarocci.com/python-workload-now-officially-supported-in-visual-studio-2017/</link>
      <pubDate>Thu, 11 May 2017 16:16:06 +0200</pubDate>
      <guid>https://nicolaiarocci.com/python-workload-now-officially-supported-in-visual-studio-2017/</guid>
      <description>Visual Studio 2017 just received an update (version 15.2). Among other nice things, this update brings full support for Python back into the official release of VS2017. As you might recall (see my old whiny post), previously Python was only available with Visual Studio 2017 Preview (a separate install).
I just upgraded my copy of Visual Studio, added the Python Development Workload to it via the VS Installer, and finally (and very happily) uninstalled the whole Visual Studio Preview thingie.</description>
    </item>
    <item>
      <title>How to convert a PCL (Portable) project to NetStandard</title>
      <link>https://nicolaiarocci.com/how-to-convert-a-pcl-portable-project-to-netstandard/</link>
      <pubDate>Wed, 10 May 2017 09:47:05 +0200</pubDate>
      <guid>https://nicolaiarocci.com/how-to-convert-a-pcl-portable-project-to-netstandard/</guid>
      <description>I have been upgrading a few projects from their original PCL profiles (now deemed obsolete) to the Net Standard platform specification. It turned out to be a relatively straightforward process, but it does have its small hurdles, especially so if in the meantime you also want to transition to the new, streamlined, .csproj format as the migration will leave you with a now obsolete project.json project. In this article, I will cover upgrading a project from Portable Class Library to NetStandard.</description>
    </item>
    <item>
      <title>Python support in Visual Studio 2017 or the lack thereof</title>
      <link>https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/</link>
      <pubDate>Wed, 08 Mar 2017 10:41:17 +0100</pubDate>
      <guid>https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/</guid>
      <description>So yesterday Visual Studio 2017 was released. Big news. Lots of cool stuff. As I write this I am watching the live stream of the 2 days-long launch event. If you want to learn about Python support in VS2017 though, you have to dig deeper and head over to the Python Engineering blog at Microsoft.
As expected, the official release is actually coming out with no support for Python. It will come in a few months.</description>
    </item>
    <item>
      <title>Python Workload pulled off Visual Studio 2017 RC3</title>
      <link>https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/</link>
      <pubDate>Sat, 18 Feb 2017 10:48:29 +0100</pubDate>
      <guid>https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/</guid>
      <description>So how do you install the awesome Python Development Tools on the latest Visual Studio 2017 RC? That might seem a stupid question considering that the Data Science and Python Development workload has been available with every Release Candidate so far. You simply select the workload during the installation and you&amp;rsquo;re done, right? Not quite.
I found out the hard way this morning as I wanted to install VS 2017 RC3 on my development machine and, to my surprise, I could not find Python Development anywhere on the workloads window (which itself is a huge improvement over the VS 2015 install experience, by the way).</description>
    </item>
    <item>
      <title>Python Tools per Visual Studio 1.5</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-1-5/</link>
      <pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-1-5/</guid>
      <description>Seguo il progetto Python Tools per Visual Studio da molto tempo.
Python Tools per Visual Studio è un plugin gratuito e open source che trasforma Visual Studio in una IDE per Python. Supporta CPython, IronPython, Intellisense, Debugging, Profiling, Editing, Browsing, REPL Multipli, IPython, Django e Cloud Computing con librerie client per Windows, Linux e OS X (Azure).
La versione 1.5, rilasciata oggi, aggiunge supporto per Django, Azure, REPL debugging, Visual Studio 2012 e altro.</description>
    </item>
    <item>
      <title>Python Tools per Visual Studio per accedere a Kinect SDK ed Excel via Python</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-per-accedere-a-kinect-sdk-ed-excel-via-python/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-per-accedere-a-kinect-sdk-ed-excel-via-python/</guid>
      <description>E’ uscita ieri la versione 1.1 Alpha dei Python Tools per Visual Studio, il plug-in open source per programmare in Python con Visual Studio 2010. Migliorie e molte nuove features per la IDE ma la novità più interessante sono senz’altro PyKinect e Pyvot, due librerie che consentono rispettivamente di lavorare col Kinect SDK e di interagire con Excel via Python.
Per informazioni su Python Tools per Visual Studio date una occhiata a Programmare in Python con Visual Studio 2010 e Python Studio per Visual Studio 1.</description>
    </item>
    <item>
      <title>Python Tools per Visual Studio 2010 arriva la RC1</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-2010-arriva-la-rc1/</link>
      <pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-2010-arriva-la-rc1/</guid>
      <description>&lt;p&gt;Prosegue senza intoppi il cammino di &lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Python Tools per Visual Studio&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;, il progetto open source targato Microsoft che consente di programmare in Python con Visual Studio 2010. Dopo il &lt;a href=&#34;http://nicolaiarocci.com/python-tools-per-visual-studio-2010/&#34; title=&#34;Programmare in Python con Visual Studio 2010&#34;&gt;lancio ufficiale&lt;/a&gt; dello scorso marzo e la successiva &lt;a href=&#34;http://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/&#34; title=&#34;Python Tools per Visual Studio 2010 Beta 2&#34;&gt;Beta 2&lt;/a&gt; di maggio, ieri è stata presentata la &lt;strong&gt;Release Candidate 1&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Tools per Visual Studio ecco la Beta 2</title>
      <link>https://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0000</pubDate>
      <guid>https://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/</guid>
      <description>&lt;p&gt;Microsoft ha rilasciato la seconda beta di &lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Python Tools per Visual Studio&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;, il suo progetto open source che offre agli sviluppatori la possibilità di scrivere codice Python, CPython e IronPython nell’ambiente IDE di Visual Studio 2010.&lt;/p&gt;
&lt;p&gt;Il progetto è stato presentato al &lt;!-- raw HTML omitted --&gt;PyCon 2011&lt;!-- raw HTML omitted --&gt; dal &lt;!-- raw HTML omitted --&gt;Microsoft Technical Computing Group&lt;!-- raw HTML omitted --&gt; ed è davvero ben fatto. Per tutti gli approfondimenti vi rimando al mio articolo &lt;!-- raw HTML omitted --&gt;Programmare in Python con Visual Studio 2010&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
