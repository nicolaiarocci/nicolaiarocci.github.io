[{"content":"Il Piccolo Libro di MongoDB è la traduzione autorizzata di The Little MongoDB Book di Karl Seguin.\nMongoDB è un database NoSQL open source, facilmente scalabile e ad alte prestazioni. Mantiene alcune similitudini coi database relazionali il che, a mio avviso, lo rende un’ottima scelta per chi si sta avvicinando al mondo NoSQL. Il Piccolo Libro è stato scritto proprio per questo tipo di lettore, ma soddisferà senz’altro anche l’esperto che vuole saperne di più su Mongo. Non lasciatevi ingannare da facilità d’uso e giovane età: MongoDB è in grado di soddisfare anche i palati più esigenti.\nNote sulla traduzione Per garantire la coerenza del testo rispetto al tutorial interattivo online sviluppato dall’autore del libro, i nomi di database, collezioni, documenti e campi degli esempi sono stati mantenuti in lingua originale. Vi invito a segnalarmi qualunque errore di traduzione, battitura o impaginazione (ce ne sono di sicuro). Poiché il sorgente è su GitHub potete apportare e proporre voi stessi le correzioni, via pull-request. Ci terrei a migliorare la qualità del prodotto, anche e soprattutto grazie alla vostra collaborazione.\nSeconda edizione La traduzione Italiana è ora allineata alla seconda edizione inglese ed a MongoDB 2.6. Questa edizione include una introduzione al Aggregation Framework e, tra le altre cose, l’aggiornamento di tutti i link di approfondimento.\nDownload Il Piccolo Libro di MongoDB è più disponibile per il download, ma potete recuperarne il testo qui.\nIl Piccolo Libro su Goodreads Il libro è su Goodreads. Se volete aggiungete commenti e/o valutazioni contribuendo così alla sua diffusione – Grazie.\nMongoDB in Italia Fino ad oggi MongoDB non si è diffuso granché nel nostro paese e credo che una delle cause sia proprio la mancanza di risorse in lingua italiana. Purtroppo in Italia la barriera linguistica è ancora un grande ostacolo alla diffusione di quella conoscenza condivisa che, grazie alla rete, è sempre più diffusa a livello globale. Mi auguro davvero che Il Piccolo Libro di MongoDB contribuisca alla diffusione di Mongo anche dalle nostre parti.\nC’è voluto un bel po’ di lavoro, ma sono contento di averlo portato a termine.\n","permalink":"https://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/","summary":"\u003cp\u003eIl Piccolo Libro di MongoDB è la traduzione autorizzata di \u003ca href=\"http://openmymind.net/mongodb.pdf\"\u003eThe Little MongoDB Book\u003c/a\u003e di Karl Seguin.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://mongodb.org\"\u003eMongoDB\u003c/a\u003e è un database \u003ca href=\"http://en.wikipedia.org/wiki/NoSQL\"\u003eNoSQL\u003c/a\u003e open source, facilmente scalabile e ad alte prestazioni. Mantiene alcune similitudini coi database relazionali il che, a mio avviso, lo rende un’ottima scelta per chi si sta avvicinando al mondo NoSQL. Il Piccolo Libro è stato scritto proprio per questo tipo di lettore, ma soddisferà senz’altro anche l’esperto che vuole saperne di più su Mongo. Non lasciatevi ingannare da facilità d’uso e giovane età: MongoDB è in grado di soddisfare anche i palati più esigenti.\u003c/p\u003e","title":"Piccolo Libro di MongoDB"},{"content":"This is a partial list of the books I have read. I have it both to jog my memory and because I have read a lot of stuff I have loved, and want other people to find it.\n2025 The man who mistook his wife for a hat and other clinical tales, Oliver Sacks ★★★☆☆ Source code, Bill Gates ★★★★☆ Papyrus, Irene Vallejo ★★★★☆ Libera Università, Tomaso Montanari ★★★★☆ Cambiare la storia, Adriano Prosperi ★★★★☆ Grandma Gatewood\u0026rsquo;s Walk, Ben Montgomery ★★★☆☆ The death of Ivan Ilych, Lev Tolstoj ★★★★☆ La scomparsa di Majorana, Leonardo Sascia ★★★☆☆ The Moon and the Bonfires, Cesare Pavese ★★★★☆ Mornings in Jenin, Susan Abulhawa ★★★☆☆ The heartbeat of the wild, David Quammen ★★★☆☆ 2024 All your children, scattered, Beata Umubyeyi Mairesse ★★★★☆ Altri libertini, Pier Vittorio Tondelli ★★★★☆ New York Trilogy, Paul Auster ★★★★☆ Class trip, Emmanuel Carrère ★★★☆☆ White noise, Don DeLillo ★★★★☆ The Ministry of Ungentlemanly Warfare, Damien Lewis ★★★☆☆ The tree-body problem, Cixin Liu ★★★★☆ Blame! Vol. 2, Tsutomu Nihei ★★★★☆ Walking, Erling Kagge ★★★☆☆ Lacci, Domenico Starnone ★★★★☆ The bastard brigade, Sam Kean ★★★★☆ Storia di mia vita, Janek Gorczyca ★★☆☆☆ Pao Pao, Pier Vittorio Tondelli ★★★☆☆ Slow Horses, Mick Herron ★★★☆☆ Trappole alimentari, Stefano Vendrame ★★★☆☆ Taccuino 1870-1884, Giuseppe De Nittis ★★★☆☆ Blame! Vol. 1, Tsutomu Nihei ★★★★☆ I love Russia, Elena Kostyuchenko ★★★☆☆ My Ingeborg, Tore Renberg ★★★★☆ Kind of Blue: the making of the Miles Davis masterpiece, Ashley Kahn ★★★☆☆ Sixty Degrees North: Around the World in Search of Home, Malachy Tallack ★★★☆☆ Replay, Jordan Mechner ★★★★☆ The Horde: how the Mongols changed the world, Marie Favereau ★★★★☆ La resistenza delle donne, Benedetta Tobagi ★★★☆☆ Under the Volcano, Malcolm Lowry ★☆☆☆☆ Family Lexicon (Lessico Famigliare), Natalia Ginzburg ★★★★☆ Lolita, Vladimir Nabokov ★★★★★ Meditations, Marcus Aurelius ★★★★☆ The garden of the Finzi-Contini, Giorgio Bassani ★★★★☆ The question of Palestine, Edward W. Said ★★★☆☆ 2023 Books I read in 2023: wrap-up and reviews\nThe sorrows of young Werther, J.W. von Goethe ★★★☆☆ Happiness, as such (Caro Michele), Natialia Ginzburg ★★★☆☆ The ancient hours (L\u0026rsquo;ultima cosa bella sulla faccia della terra), M. Bible ★★★★☆ Milano calibro 9, Giorgio Scerbanenco ★★☆☆☆ Stella Maris, Cormac McCarthy ★★★★☆ Ferrovie del messico, Gian Marco Griffi ★★★★☆ ADHD workbook for adults (ADHD negli adulti), Tara Wilson ★★☆☆☆ Codice Jury, Jury Chechi ★★☆☆☆ High (La vita in alto. Una stagione sul\u0026rsquo;Himalaya), Erica Fatland ★★★☆☆ The passenger (Il passeggero), Cormac McCarthy ★★★★☆ Born to run 2, Chris McDougall and Eric Orton ★★☆☆☆ Blind\u0026rsquo;s man bluff (Immersione rapida), Sharry Sontag, Christopher Drew ★★★☆☆ Wuthering Heights (Cime Tempestose), Emily Bronte ★★★★☆ L\u0026rsquo;umanità è un tirocinio, Domenico Starnone ★★☆☆☆ The overstory (Il sussurro del mondo), Richard Powers ★☆☆☆☆ La mossa del matto, Alessandro Barbaglia ★★★☆☆ Disasters (Disastri), Daniil Charms ★★★☆☆ Land and Sea (Terra e mare), Carl Schmitt ★★☆☆☆ Medieval callings (Vita nel medioevo), Jacques Le Goff ★★★☆☆ Being wolf (Essere lupo), Kerstin Ekman ★★★☆☆ No sleep till Shengal, Zerocalcare ★★☆☆☆ Red Mars, Kim Stanley Robinson ★★☆☆☆ Sanguina ancora, Paolo Nori ★★★☆☆ Uomini, boschi e api, Mario Rigoni Stern ★★☆☆☆ 2022 My favorite books of 2022\nStoner, John Williams Candide, Voltaire When We Cease to Understand the World, Benjamin Labatut Mašen\u0026rsquo;ka, Vladimir Nabokov The Crow Comes Last, Italo Calvino Ravenna, Judith Herrin The Count of Monte Cristo, Alexandre Dumas Smiling Bears, Else Poulsen A captive West or the tragedy of Central Europe, Milan Kundera Just an Ordinary Day, Shirley Jackson Italica, Giacomo Papi The Rings of Saturn, W.G. Sebald Invisible Cities, Italo Calvino Memoirs of Hadrian, Marguerite Yourcenar Lone Rider, Elspeth Beard Roumeli, Patrick Leigh Fermor Thinking fast and slow, Daniel Kahneman Eichmann in Jerusalem. A Report on the Banality of Evil, Hannah Arendt Fiabe finlandesi, various authors 2021 Three good books I read in 2021\nConsider the Lobster, David Foster Wallace A proposito del senso della vita, Vito Mancuso Un uomo inutile, Sait Faik Abasiyanik Endurance, Shackleton\u0026rsquo;s Incredible Voyage, Alfred Lansing La matematica è politica, Chiara Valerio King and Emperor: A New Life of Charlemagne, Janet L. Nelson Language of the Spirit: An Introduction to Classical Music, Jan Swafford Nausea, Jean-Paul Sartre Proud tobea Flyer, Matteo Sola Nomadland, Jessica Bruder Eight Days in May: The Final Collapse of the Third Reich, Volker Ullrich Potere alle Parole, Vera Gheno Alpi ribelli, Enrico Camanni The Voice of the Sirens. The Greeks and the art of persuasion, Laura Pepe One Man Caravan, Robert Edison Fulton The Silence: A Novel, Don DeLillo In the Heart of the Sea, Nathaniel Philbrick Materada, Fulvio Tomizza The Library at Night, Alberto Manguel We Always Lived in the Castle, Shirley Jackson The Water Dancer, Ta-Nehisi Coates Erebus: The Story of a Ship, Michael Palin 2020 Five good books I read in 2020\nTerra incognita, Sebastiano Barisoni Leggende groenlandesi, Knud Rasmussen Nero d\u0026rsquo;inferno, Matteo Cavezzali Il tempo della rivolta, Donatella Di Cesare L\u0026rsquo;ordine nascosto: la vita segreta dei funghi, Merlin Sheldrake Dante, Alessandro Barbero Il ritorno del Re, JRR Tolkien (new translation by O. Fatica) Il piccolo libro dell\u0026rsquo;investimento, John C. Bogle Helgoland, Carlo Rovelli Sognando Jupiter, Ted Simmons HHhH, Laurent Binet Il cuore di un\u0026rsquo;ape, Helen Jukes Come le mosche d\u0026rsquo;autunno, Irène Némirovsky Per chi suona la campana, Ernest Hemingway Uomini e topi, John Steinbeck Il Maestro e Margherita, Michail Bulgakov 1984, George Orwell Lo Hobbit, un viaggio verso la maturità, William H. Green Sentieri nel ghiaccio, Werner Herzog Pachidermi e pappagalli, Carlo Cottarelli La strada di Swann, Marcel Proust La vita felice, Lucio Anneo Seneca La brevità della vita, Lucio Anneo Seneca Saggio sulla lucidità, José Saramago Pietro e Paolo, Marcello Fois Possiamo salvare il mondo, prima di cena, Jonathan Safran Foer Masters of Doom, David Kushner Tyll, Daniel Kehlmann Mani, Patrick Leigh Fermor 2019 Fiabe norvegesi, AA.VV. Genesi, Guido Tonelli La lotteria, Shirley Jackson Il vichingo nero, Bergsveinn Birgisson La compagnia dell\u0026rsquo;anello, JRR Tolkien (new translation by O. Fatica) La nascita della filosofia, Giorgio Colli Macchine come me, Ian McEwan La guerra segreta, Max Hastings Viaggio di una parigina a Lhasa, Alexandra David-Néel Il futuro è storia, Masha Gessen Guida galattica per gli autostoppisti, Douglas Adams Come sfasciare un paese in sette mosse, Ece Temelkuran Io Khaled vendo uomini e sono innocente, Francesca Mannocchi Nondimanco, Carlo Ginzburg Sulla motocicletta, John Berger Proletkult, Wu Ming Metamorfosi, Ovidio Grüne Linie, Giancarlo Barzagli Get programming with F#, Isaac Abraham Diario di una apprendista astronauta, Samantha Cristoforetti Il grande gioco, Peter Hopkirk The Passenger: Giappone, AA.VV. La vita segreta: tre storie vere dell\u0026rsquo;era digitale, Andrew O\u0026rsquo;Hagan Peaks of Europe, Johan Lolos Marco Polo: Viaggio ai confini del Medioevo, Giulio Busy 2018 Fiabe faroesi, AA.VV. Lezioni di letteratura, Vladimir Nabokov La caduta di Gongolin, JRR Tolkien Paranoia, Shirley Jackson The Passenger: Olanda, AA.VV. Fuga in Europa, Stephen Smith Shakespeare and Company, Paris: A History of the Rag \u0026amp; Bone Shop of the Heart, Krista Halverson Memorie di un cacciatore, Ivan Turgenev Atlantico, Simon Winchester Amore e ginnastica, Edmondo De Amicis Il campo di nessuno, Daniel Picouly Il professore e il pazzo, Simon Winchester The Passenger: Islanda, AA.VV. Brutti incontri al chiaro di luna, W. Stanley Moss Aua, Knud Rasmussen Gormenghast, Mervyn Peake Isola, Siri Ranva Hjelm Jacobsen Una vita da libraio, Shaun Bythell Il più grande uomo scimmia del Pleistocene, Roy Lewis Autunno tedesco, Stig Dagerman Cos\u0026rsquo;è la scienza. La rivoluzione di Anassimandro, Carlo Rovelli La danzatrice di Izu, Yasunari Kawabata Tutto quello che è un uomo, David Szalay Parla, ricordo, Vladimir Nabokov Musicofilia, Oliver Sacks Pensieri spettinati, Stanisław Jerzy Lec How we\u0026rsquo;ll live on Mars, Stephen L. Petranek Sinfonia Leningrado, Sarah Quigley Il silenzio, Erling Kagge 2017 Arboreto salvatico, Mario Rigoni Stern Il soccombente, Thomas Bernhard L\u0026rsquo;invenzione della solitudine, Paul Auster Sapiens. Da animali a Dei, Yuval Noah Harari Vita di un uomo: Francesco d\u0026rsquo;Assisi, Chiara Frugoni L\u0026rsquo;Arminuta, Donatella di Pietrantonio Bull Mountain, Brian Panowich Cosmo, Witold Gombrowicz Controvento, Federico Pace La via dello zen, Alan W. Watts Le otto montagne. Paolo Cognetti Eredità, Corrado Stajano Una cosa divertente che non farò mai più, David Foster Wallace L\u0026rsquo;ultimo arrivato, Marco Balzano L\u0026rsquo;arte della fuga, Fredrik Sjöberg Norvegian wood, Lars Mytting L\u0026rsquo;ordine del tempo, Carlo Rovelli Il fondamentalista riluttante, Moshin Hamid Il giro del miele, Sandro Campani Le nostre anime di notte, Kent Haruf Exit West, Mohsin Hamid Follia, Patrick McGrath La ricetta del dottor Wasser, Lars Gustafsson La conquista del Paradiso, Paul M. Cobb Il pastore d\u0026rsquo;Islanda, Gunnar Gunnarsson La casa dei Krull, Georges Simenon La vita segreta degli alberi, Peter Wohlleben L\u0026rsquo;arte di essere fragili, Alessandro D\u0026rsquo;Avenia Sei pezzi facili, Richard Faynman Scherzetto, Domenico Starnone Born to run, Bruce Springsteen Fiabe lapponi, Bruno Berni 2016 I viaggi di Jupiter, Ted Simon Zero K, Don DeLillo Il sentiero degli eroi, Marco Albino Ferrari La vegetariana, Han Kang L\u0026rsquo;incanto del lotto 49, Thomas Pynchon La settimana bianca, Emmanuel Carrère L’ultimo serpente, A.B. Guthrie Mea culpa, Francesco Fuschini Il vecchio e il mare, Ernest Hemingway Capitani coraggiosi, Rudyard Kipling Regni dimenticati, Gerard Russell Il processo, Franz Kafka Canone inverso, Paolo Maurensig Un anno sull’altipiano, Emilio Lussu Gente indipendente, Halldór Laxness Diario di un parroco di campagna, Georges Bernanos Le mele di Kafka, Andrea Vitali Purity, Jonathan Franzen Sette Maghi, Halldór Laxness La guardia, il poeta e l’investigatore, Jung-myung Lee La vita e il tempo di Michael K., J.M. Coetzee Io e Mabel ovvero l’arte della falconeria, Helen Macdonald Una parete sottile, Enrico Regazzoni Furore, John Steinbeck La Metamorfosi, Franz Kafka Lo zen e l’arte della manutenzione della motocicletta, Robert M. Pirsing La notte di Gerusalemme, Sven Delblanc Saga di Ragnarr, Anonimo Limonov, Emmanuel Carrère E l’uomo inventò il cane, Konrad Lorenz Abolire il carcere, Luigi Manconi et alii Il ritorno del guerriero: lettura dell’Odissea, G. Aurelio Privitera L’invenzione della madre, Marco Peano Un infinito numero, Sebastiano Vassalli 2015 Fiabe Danesi, Bruno Berni Mattatoio n°5, Kurt Vonnegut Aleph, Jorge Luis Borges Monte Athos, Robert Byron Solo bagaglio a mano, Gabriele Romagnoli Un angelo migliore, Chris Adrian Il caso Meursault, Kamel Daoud Il caso, Joseph Conrad La strada interrotta, Patrick Leigh Fermor La biblioteca: una storia mondiale, James W.P. Campbell Land grabbing, Stefano Liberti La tregua, Primo Levi Tra i boschi e l’acqua, Patrick Leigh Fermor Dedalus, James Joyce I frutti della terra, Knut Hamsun Laxdæla Saga, Anonimo Misteri, Knut Hamsun Epepe, Ferenc Karinthy Operazione Fritham, Monica Kristensen Se questo è un’uomo, Primo Levi La congiura, Jaan Kross L’arte di collezionare mosche, Fredrik Sjöberg Il paese dei coppoloni, Vinicio Capossela Storie di Amsterdam, Nescio Il Regno, Emmanuel Carrère La ballata di Adam Henry, Ian McEwan Sette brevi lezioni di fisica, Carlo Rovelli Viaggio nelle regioni equatoriali del nuovo continente, A. von Humboldt The Little Go Book, Karl Seguin The Little Redis Book, Karl Seguin Preparare un fuoco, Jack London Diario di Oaxaca, Oliver Sacks Giuda, Amos Oz I colori del ghiaccio, Robert Peroni The First 20 Minutes, Gretchen Reynolds La leggenda della Rosa di Natale, Selma Lagerlöf 2014 Shantaram, Gregory David Roberts Il costo di una vita, Angelo Ferracuti Un altro giro di giostra, Tiziano Terzani L’assassinio di Roger Ackroyd, Agatha Christie Molto forte incredibilmente vicino, Jonathan Safran Foer Leonardo da Vinci, Serge Bramly L’armata dei sonnambuli, Wu Ming Cristoforo Colombo uomo di mare, Samuel Eliot Morison Lorenzo il Magnifico, Ivan Cloulas Il cardellino, Donna Tartt Frugalità, Paolo Legrenzi Le vie dei canti, Bruce Chatwin La paura e altri racconti della grande guerra, Federico De Roberto Indagine sull’Orco, Tommaso Braccini Il sentiero degli Dei, Wu Ming 2 Dove il vento grida più forte, Robert Peroni In senso inverso, Philip K. Dick Invecchiando gli uomini piangono, Jean-Luc Seigle Il fiordo dell’eternità, Kim Leine In no particular order Blackout, Marc Elsberg Open, Andre Agassi Jack London vita opere e avventura, Daniel Dyer Capire il potere, Noam Chomsky La stella di Ratner, Don DeLillo The Art of Slowing Down, Edward Yu I giocatori di Titano, Philip K. Dick Nel cuore della foresta, Roger Deakin La via del lupo, Marco Albino Ferrari Io e te, Niccolò Ammaniti Canale Mussolini, Antonio Pennacchi Ma gli androidi sognano pecore elettriche?, Philip K. Dick Andiamo a correre, Fulvio Massini La leggenda dei monti naviganti, Paolo Rumiz Neuromante, William Gibson Il giorno della civetta, Leonardo Sascia Vita nel Medioevo, Eileen Power Il tallone di ferro, Jack London Ragazzi di vita, Pier Paolo Pasolini La promessa, Friedrich Dürrenmatt Il vagabondo delle stelle, Jack London Finzioni, Jorge Luis Borges Oscar e la dama in rosa, Éric-Emmanuel Schmitt La difesa di Luzin, Vladimir Nabokov Il formaggio e i vermi, Carlo Ginzburg La scopa del sistema, David Foster Wallace I Nibelunghi, Anonimo Il cerchio celtico, Björn Larsson Il giardino di cemento, Ian McEwan Edda, Snorri Sturluson Brevi interviste con uomini schifosi, David Foster Wallace Fuoco Pallido, Vladimir Nabokov Il deserto dei Tartari, Dino Buzzati Fahrenheit 451, Ray Bradbury Sei passeggiate nei boschi narrativi, Umberto Eco L’anno della lepre, Arto Paasilina I Malavoglia, Giovanni Verga Non ci sono solo le arance, Jeanette Winterson Pastorale americana, Philip Roth La famiglia Winshaw, Jonathan Coe In viaggio con Erodoto, Ryszard Kapuscinski Lo Hobbit, JRR Tolkien La via per la Terra di Mezzo, Tom Shippey Martin Eden, Jack London Camminare, Henry David Thoreau Una barca nel bosco, Paola Mastracola La sovrana lettrice, Alan Bennett JRR Tolkien la biografia, Humphrey Carpenter La variante di Lüneburg, Paolo Maurensig Ti prendo e ti porto via, Niccolò Ammaniti Capo Horn, Bernard Moitessier Auto da fé, Canetti Elias In fuga, Alice Munro Armi acciaio e malattie, Jared Diamond La vera storia del pirata Long John Silver, Larsson Björn Nuova storia del Jazz, Alyn Shipton Il vangelo secondo Gesù Cristo, José Saramago Walden, Henry David Throeau Tifone, Joseph Conrad Il banchiere anarchico, Fernando Pessoa Anna Karenina, Leo Tolstoy La peste scarlatta, Jack London Il guardiano del frutteto, Cormac McCarthy Cuore di tenebra, Joseph Conrad Le ceneri di Angela, Frank McCourt Le lettere di Berlicche, C.S. Lewis Cristo col fucile in spalla, Ryszard Kapuscinski Norwegian Wood, Haruki Murakami Racconti incompiuti, JRR Tolkien La realtà in trasparenza, JRR Tolkien Underworld, Don DeLillo Non è un paese per vecchi, Cormac McCarthy V, Thomas Pynchon JavaScript: The Good Parts, Douglas Crockford Il paradiso degli orchi, Daniel Pennac Il giovane Holden, JD Salinger Dieci piccoli indiani, Agatha Christie Jazz, Arrigo Polillo La mia prima estate sulla Sierra, John Muir Fame, Knut Hamsun Kalevala, Elias Lönnrot Nelle terre estreme, Jon Krakauer Delitto e castigo, Fyodor Dostoyevsky Il volo della martora, Mauro Corona L’epopea di Gilgameš, Anonimo Tre mani nel buio, Eraldo Baldini 54, Wu Ming I fantasmi delle biblioteche, Jacques Bonnet Faccia di sale, Eraldo Baldini Gotico rurale, Eraldo Baldini Bàrnabo delle montagne, Dino Buzzati Il compagno segreto, Joseph Conrad La biblioteca dei morti, Glenn Cooper Il libro dei libri perduti, Stuart Kelly Vertigine della lista, Umberto Eco Stella del mattino, Wu Ming 4 Stagioni, Mario Rigoni Stern Inchiesta su Gesù, Corrado Augias Il peso della farfalla, Erri De Luca RESTful Web Services Cookbok, Subbu Allamaraju Il giro del mondo in barcastop, Alberto Di Stefano La finestra dei Ruoet, Georges Simenon La versione di Barney, Mordecai Richler Per questo mi chiamo Giovanni, Luigi Garlando Il cimitero di Praga, Umberto Eco Nel legno e nella pietra, Mauro Corona Diario di un dolore, C.S. Lewis Scipione e Annibale, Giovanni Brizzi Beowulf, Anonimo Dolomiti nella leggenda, Ulrike Kindl Leggende delle Dolomiti, Giovanna Zangrandi Collezionare libri antichi rari e di pregio, Hanz Tuzzi I popoli di Tolkien, Gianfranco de Turris Resisto dunque sono, Pietro Trabucchi Come il lupo, Eraldo Baldini Storia medievale, Massimo Montanari De rerum natura, Lucrezio I miti nordici, Gianna Chiesa Isnardi Perché corriamo, Roberto Weber Quell’estate di sangue e di luna, Eraldo Baldini 11/22/63, Stephen King Bambine, Eraldo Baldini Il visconte dimezzato, Italo Calvino Il cavaliere inesistente, Italo Calvino La collezione, Giampiero Mughini Running fast and injury free, Gordon Pirie L’uomo che guardava passare i treni, Georges Simenon Il brigantaggio meridionale, Aldo De Jaco Paesaggi della Terra di Mezzo, Roberto Arduini Pan, Knut Hamsun Lo zen e il tiro con l’arco, Eugen Herrigel La linea d’ombra, Joseph Conrad No easy day, Mark Owen Eredità, Lilli Gruber Immagina i corvi, Luigi Sorrenti Point Lenana, Wu Ming 1 La coscienza di Zeno, Italo Svevo Il lupo della steppa, Hermann Hesse Trilogia della Fondazione, Isaac Asimov Il mondo classico, Robin Lane Fox JRR Tokien: A Descriptive Bibliography, Wayne G. Hammond Tolkien and Modernity 1, Thomas Honegger Tolkien and Modernity 2, Thomas Honegger Gente di Dublino, James Joyce Ricordi dal sottosuolo, Fyodor Dostoyevsky Schegge di luce, Verlyn Flieger Tolkien e la Grande Guerra, John Garth Ebano, Ryszard Kapuscinski Q, Wu Ming Storie, Erodoto Tempo di regali, Patrick Leigh Fermor …and more. ","permalink":"https://nicolaiarocci.com/books-i-have-read/","summary":"\u003cp\u003eThis is a partial list of the books I have read. I have it both to jog my memory and because I have read a lot of stuff I have loved, and want other people to find it.\u003c/p\u003e\n\u003ch3 id=\"2025\"\u003e2025\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eThe man who mistook his wife for a hat and other clinical tales, Oliver Sacks ★★★☆☆\u003c/li\u003e\n\u003cli\u003eSource code, Bill Gates ★★★★☆\u003c/li\u003e\n\u003cli\u003ePapyrus, Irene Vallejo ★★★★☆\u003c/li\u003e\n\u003cli\u003eLibera Università, Tomaso Montanari ★★★★☆\u003c/li\u003e\n\u003cli\u003eCambiare la storia, Adriano Prosperi ★★★★☆\u003c/li\u003e\n\u003cli\u003eGrandma Gatewood\u0026rsquo;s Walk, Ben Montgomery ★★★☆☆\u003c/li\u003e\n\u003cli\u003eThe death of Ivan Ilych, Lev Tolstoj ★★★★☆\u003c/li\u003e\n\u003cli\u003eLa scomparsa di Majorana, Leonardo Sascia ★★★☆☆\u003c/li\u003e\n\u003cli\u003eThe Moon and the Bonfires, Cesare Pavese ★★★★☆\u003c/li\u003e\n\u003cli\u003eMornings in Jenin, Susan Abulhawa ★★★☆☆\u003c/li\u003e\n\u003cli\u003eThe heartbeat of the wild, David Quammen ★★★☆☆\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2024\"\u003e2024\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#all-your-children-scattered-by-beata-umubyeyi-mairesse-\"\u003eAll your children, scattered\u003c/a\u003e, Beata Umubyeyi Mairesse ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#altri-libertini-by-pier-vittorio-tondelli-\"\u003eAltri libertini\u003c/a\u003e, Pier Vittorio Tondelli ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-new-york-trilogy-paul-auster-\"\u003eNew York Trilogy\u003c/a\u003e, Paul Auster ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#class-trip-emmanuel-carr%C3%A8re-\"\u003eClass trip\u003c/a\u003e, Emmanuel Carrère ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#white-noise-don-delillo-\"\u003eWhite noise\u003c/a\u003e, Don DeLillo ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-ministry-of-ungentlemanly-warfare-damien-lewis-\"\u003eThe Ministry of Ungentlemanly Warfare\u003c/a\u003e, Damien Lewis ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-three-body-problem-cixin-liu-\"\u003eThe tree-body problem\u003c/a\u003e, Cixin Liu ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#blame-vol-2-by-tsutomu-nihei\"\u003eBlame! Vol. 2\u003c/a\u003e, Tsutomu Nihei ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#walking-erling-kagge\"\u003eWalking\u003c/a\u003e, Erling Kagge ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#lacci-domenico-starnone\"\u003eLacci\u003c/a\u003e, Domenico Starnone ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-bastard-brigade-sam-kean\"\u003eThe bastard brigade\u003c/a\u003e, Sam Kean ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#storia-di-mia-vita-janek-gorczyca\"\u003eStoria di mia vita\u003c/a\u003e, Janek Gorczyca ★★☆☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#pao-pao-by-pier-vittorio-tondelli\"\u003ePao Pao\u003c/a\u003e, Pier Vittorio Tondelli ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#slow-horses-by-mick-herron\"\u003eSlow Horses\u003c/a\u003e, Mick Herron ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#trappole-alimentari-by-stefano-vendrame\"\u003eTrappole alimentari\u003c/a\u003e, Stefano Vendrame ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#taccuino-1870-1884-by-giuseppe-de-nittis\"\u003eTaccuino 1870-1884\u003c/a\u003e, Giuseppe De Nittis ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#blame-vol-1-by-tsutomu-nihei\"\u003eBlame! Vol. 1\u003c/a\u003e, Tsutomu Nihei ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#i-love-russia-by-elena-kostyuchenko\"\u003eI love Russia\u003c/a\u003e, Elena Kostyuchenko ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#my-ingeborg-by-tore-renberg\"\u003eMy Ingeborg\u003c/a\u003e, Tore Renberg ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#kind-of-blue-the-making-of-the-miles-davis-masterpiece-ashley-kahn\"\u003eKind of Blue: the making of the Miles Davis masterpiece\u003c/a\u003e, Ashley Kahn ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#sixty-degrees-north-by-malachy-tallack\"\u003eSixty Degrees North: Around the World in Search of Home\u003c/a\u003e, Malachy Tallack ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#replay-by-jordan-mechner\"\u003eReplay\u003c/a\u003e, Jordan Mechner ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-horde-how-the-mongols-changed-the-world-by-marie-favereau\"\u003eThe Horde: how the Mongols changed the world\u003c/a\u003e, Marie Favereau ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#womens-resistance-by-benedetta-tobagi\"\u003eLa resistenza delle donne\u003c/a\u003e, Benedetta Tobagi ★★★☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#under-the-volcano-by-malcom-lowry\"\u003eUnder the Volcano\u003c/a\u003e, Malcolm Lowry ★☆☆☆☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#family-lexicon-by-natalia-ginzburg\"\u003eFamily Lexicon (Lessico Famigliare)\u003c/a\u003e, Natalia Ginzburg ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#lolita-by-vladimir-nabokov\"\u003eLolita\u003c/a\u003e, Vladimir Nabokov ★★★★★\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#meditations-by-marcus-aurelius\"\u003eMeditations\u003c/a\u003e, Marcus Aurelius ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-garden-of-the-finzi-contini-by-giorgio-bassani\"\u003eThe garden of the Finzi-Contini\u003c/a\u003e, Giorgio Bassani ★★★★☆\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/books-i-read-in-2024/#the-question-of-palestine-by-ew-said\"\u003eThe question of Palestine\u003c/a\u003e, Edward W. Said ★★★☆☆\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2023\"\u003e2023\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"/books-i-read-in-2023/\"\u003eBooks I read in 2023: wrap-up and reviews\u003c/a\u003e\u003c/p\u003e","title":"Books I Have Read"},{"content":"I speak at conferences and meetups. Here is a list of my most recent engagements. Want me to talk at your event? Get in touch!\n2025 .NET Conf 2025, Rome: C# 13 What\u0026rsquo;s new and interesting 2024 .NET Conference Italia 2024, Milan: C# 13 What\u0026rsquo;s new and interesting ABP Dotnet Conference 2024, Turkey: C# 12 What\u0026rsquo;s new and interesting WebDay 2024, Milan: Oauth2 e Open ID Connect con ASP.NET Core 8 (video) .NET Rome Conference 2024: Oauth2 e Open ID Connect con ASP.NET Core 8 2023 .NET Conference Italia 2023, Milan: C# 12 What\u0026rsquo;s new and interesting (video) WebDay 2023, Milan: End-to-end testing with Microsoft Playwright DevRomagna Meetup, .NET 7 Spotlight 2022 WPC 2022, Milan: Reliable end-to-end testing for modern web apps DevRomagna: Modern Web Testing with Microsoft Playwright WebDay 2022: Reliable end-to-end testing for modern web apps 2021 DotNetPodcast: My Open Source experience (Italian) Scottish Summit 2021: Introduction to F# and functional programming CodeGen 2021: Python REST APIs for Humans 2020 Sharif University of Technology, Tehran: Open Source Workshop The Python Show #7: My Story with Open Source Python Conf++ 2020, Moscow: Cerberus or Data Validation for Humans Modena Tech Summit 2020: Introduction to F# and functional programming 2019 PiterPy 2019, St. Petersburg: Python on Windows, the State of the Art XPUG Bologna 2019: Introduction to F# and functional programming Agile Venture Firenze 2019: My Story with Open Source DevMarche 2019: Introduction to F# and functional programming Working Software Conf 2019: My Story with Open Source Community Days 2019: Introduction to F# and functional programming KLab 2019 #3: Git on the frontline Past WPC 2018, Milan: The Mythical Open Source Contributor EuroPython 2018, Edinburgh: My Story with Python and Open Source PyConWeb 2018, Munich: My Story with Python and Open Source (keynote) PyConWeb 2018, Munich: Eve, REST APIs for Humans PyCon Italy 2018: My Story with Python and Open Source PyCon Belarus 2018: Eve, REST APIs for Humans WPC 2017: Git on the frontline GitHub Constellation: My story with Open Source Codemotion Milan 2017: Git on the frontline PiterPy 2017: Cerberus, Data Validation for Humans DevRomagna: Git on the trenches EuroPython 2017: Python on Windows Like a Boss This is Python 2017: Python on Windows Like a Boss Socrates Italy 2017: Git in the trenches Socrates Italy 2017: Bringing an Open Source project to the next level DevRomagna: Contributing to Open Source projects DevRomagna: Git Branching Models and Semantic Versioning PyCon Italy 2017: Python on Windows Like a Boss PyCon Italy 2017: Microsoft Azure integration with Open Technologies (Panel) Codemotion Rome 2017: Restful Web Services for human beings Future Decoded 2016: Python Tools for Visual Studio PyConUK 2016: Cerberus, Data Validation for Humans PyterPy 2016: Eve, REST APIs for Humans PyCon Italy 2016: Cerberus, Data Validation for Humans (video, Italian) PyCon Italy 2016: Web Framework Royal Rumble Western Europe MVP Open Day 2016: Real Life .NET Cross Platform OpenDomus.net Communities Meetup: Real Life .NET Cross Platform Microsoft TecHeroes: Real Life .NET Cross Platform (Italian) Microsoft Best of Build: Bash on Ubuntu on Windows (Italian) Microsoft TecHeroes: Vim for Visual Studio (Italian) Microsoft TecHeroes: Python Tools for Visual Studio (Italian) Microsoft TecHeroes: CoderDoojo Coding Club for Kids (Italian) Persona Live 2015: Eve, REST APIs for Humans EuroPython 2014: Eve, REST APIs for Humans PyCon Italy 2014: Eve, REST APIs for Humans PyCon Sweden 2014: Eve, REST APIs for Humans Python Meetup: Eve, REST APIs for Humans FOSDEM 2014: Eve, REST APIs for Humans RomagnaCamp 2013: We Are All Remote Workers NoSQL Day 2013: RESTful Web API and MongoDB go for a picnic MongoTorino 2013: RESTful Web API and MongoDB go for a picnic A Morning With MongoDB: RESTful Web API and MongoDB go for a picnic EuroPython 2012: Developing RESTful Web APIs with Python, Flask and MongoDB Agenda Digitale Ravenna 2014: CoderDojo Romagna Cultura d\u0026rsquo;Impresa 2.0: Online / Offline Liceo Artistico Severini (Ravenna): Identità Reale, Virtuale e Digitale Liceo Artistico Severini (Ravenna): Personal Branding per Studenti e non solo KnowCamp 2011: Fuga dalla Comfort Zone RomagnaCamp 2011: Quattro passi tra le nuvole ","permalink":"https://nicolaiarocci.com/speaking/","summary":"\u003cp\u003eI speak at conferences and meetups. Here is a list of my most recent\nengagements. Want me to talk at your event? \u003ca href=\"mailto:info@nicolaiarocci.com\"\u003eGet in touch\u003c/a\u003e!\u003c/p\u003e\n\u003ch3 id=\"2025\"\u003e2025\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e.NET Conf 2025, Rome: \u003ca href=\"https://dotnetconf.it\"\u003eC# 13 What\u0026rsquo;s new and interesting\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2024\"\u003e2024\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e.NET Conference Italia 2024, Milan: \u003ca href=\"https://www.dotnetconference.it/e/3538/-NET-Conference-Italia-2024\"\u003eC# 13 What\u0026rsquo;s new and interesting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eABP Dotnet Conference 2024, Turkey: \u003ca href=\"https://abp.io/conference/2024\"\u003eC# 12 What\u0026rsquo;s new and interesting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWebDay 2024, Milan: \u003ca href=\"https://www.webdayconf.it/e/3328/Web-Day-2024\"\u003eOauth2 e Open ID Connect con ASP.NET Core 8\u003c/a\u003e (\u003ca href=\"https://www.improove.tech/videos/3376/Oauth2-e-Open-ID-Connect-con-ASP-NET-Core-8\"\u003evideo\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e.NET Rome Conference 2024: \u003ca href=\"https://www.dotnetconf.it/agenda\"\u003eOauth2 e Open ID Connect con ASP.NET Core 8\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2023\"\u003e2023\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e.NET Conference Italia 2023, Milan: \u003ca href=\"https://www.dotnetconference.it/e/sessione/3295/C-12-Cosa-c-e-di-nuovo-e-interessante\"\u003eC# 12 What\u0026rsquo;s new and interesting\u003c/a\u003e (\u003ca href=\"https://www.ugidotnet.org/e/sessione/3295/C-12-Cosa-c-e-di-nuovo-e-interessante\"\u003evideo\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eWebDay 2023, Milan: \u003ca href=\"https://www.webdayconf.it/e/3087/Web-Day-2023\"\u003eEnd-to-end testing with Microsoft Playwright\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDevRomagna Meetup, \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/289709131/\"\u003e.NET 7 Spotlight\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2022\"\u003e2022\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eWPC 2022, Milan: \u003ca href=\"/my-session-at-wpc-2022/\"\u003eReliable end-to-end testing for  modern web apps\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDevRomagna: \u003ca href=\"https://www.meetup.com/it-IT/DevRomagna/events/284626987/\"\u003eModern Web Testing with Microsoft Playwright\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWebDay 2022: \u003ca href=\"https://www.ugidotnet.org/e/sessione/2883/Reliable-end-to-end-testing-for-modern-web-apps-with-Playwright-for-NET\"\u003eReliable end-to-end testing for modern web apps\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2021\"\u003e2021\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDotNetPodcast: \u003ca href=\"https://www.spreaker.com/user/dotnetpodcast/python-eve-open-source-e-fattura-elettro\"\u003eMy Open Source experience (Italian)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eScottish Summit 2021: \u003ca href=\"https://scottishsummit.com/ss2021\"\u003eIntroduction to F# and functional programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCodeGen 2021: \u003ca href=\"https://codegen2021.azurewebsites.net/agenda\"\u003ePython REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2020\"\u003e2020\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSharif University of Technology, Tehran: \u003ca href=\"https://ssc.ce.sharif.edu\"\u003eOpen Source Workshop\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eThe Python Show #7: \u003ca href=\"https://www.youtube.com/watch?v=-B0QXTQN3yM\"\u003eMy Story with Open Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePython Conf++ 2020, Moscow: \u003ca href=\"https://conf.python.ru/en/2020/\"\u003eCerberus or Data Validation for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eModena Tech Summit 2020: \u003ca href=\"https://modenatechsummit.it/\"\u003eIntroduction to F# and functional programming\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2019\"\u003e2019\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ePiterPy 2019, St. Petersburg: \u003ca href=\"https://piterpy.com/materials/2631\"\u003ePython on Windows, the State of the Art\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eXPUG Bologna 2019: \u003ca href=\"https://www.eventbrite.it/e/biglietti-introduzione-a-f-e-functional-programming-nicola-iarocci-74142958585#\"\u003eIntroduction to F# and functional programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAgile Venture Firenze 2019: \u003ca href=\"https://www.agileday.it/venture/2019/firenze/\"\u003eMy Story with Open Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDevMarche 2019: \u003ca href=\"https://www.eventbrite.it/e/biglietti-introduzione-a-f-e-ai-linguaggi-funzionali-per-il-programmatore-c-oop-64430134266?fbclid=IwAR0eBGHMGN1QX4ZoJ0NBzz52713LuX32tcu25jcGH_f4a318HUtFSH6GdaI\"\u003eIntroduction to F# and functional programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWorking Software Conf 2019: \u003ca href=\"https://www.agilemovement.it/workingsoftware/schedule.html#schedule\"\u003eMy Story with Open Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCommunity Days 2019: \u003ca href=\"http://www.communitydays.it/events/2019/dev11/\"\u003eIntroduction to F# and functional programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eKLab 2019 #3: \u003ca href=\"https://www.eventbrite.com/e/klab-2019-3-typescript-come-forse-non-lo-avete-mai-visto-git-on-the-front-line-tickets-61043068461#\"\u003eGit on the frontline\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"past\"\u003ePast\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eWPC 2018, Milan: \u003ca href=\"http://wpc2017.it/cms/it-IT/SpeakerPage?parameters%5B0%5D=73\"\u003eThe Mythical Open Source Contributor\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEuroPython 2018, Edinburgh: \u003ca href=\"https://ep2018.europython.eu/conference/p/nicola-iarocci\"\u003eMy Story with Python and Open Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyConWeb 2018, Munich: \u003ca href=\"https://2018.pyconweb.com/talks/30-06-2018/my-story-with-python-and-open-source\"\u003eMy Story with Python and Open Source\u003c/a\u003e (keynote)\u003c/li\u003e\n\u003cli\u003ePyConWeb 2018, Munich: \u003ca href=\"https://2018.pyconweb.com/talks/30-06-2018/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Italy 2018: \u003ca href=\"https://www.pycon.it/conference/talks/my-story-with-python-and-open-source\"\u003eMy Story with Python and Open Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Belarus 2018: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWPC 2017: \u003ca href=\"http://wpc2017.it/cms/it-IT/SpeakerPage?parameters%5B0%5D=73\"\u003eGit on the frontline\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGitHub Constellation: \u003ca href=\"http://githubconstellation.com/milan/#nicola-iarocci\"\u003eMy story with Open Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCodemotion Milan 2017: \u003ca href=\"https://milan2017.codemotionworld.com/speaker/460/\"\u003eGit on the frontline\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePiterPy 2017: \u003ca href=\"https://it-events.com/events/8527/materials/2327\"\u003eCerberus, Data Validation for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDevRomagna: \u003ca href=\"https://www.meetup.com/it-IT/preview/DevRomagna/events/240838433\"\u003eGit on the trenches\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEuroPython 2017: \u003ca href=\"https://speakerdeck.com/nicola/python-on-windows-like-a-boss\"\u003ePython on Windows Like a Boss\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eThis is Python 2017: \u003ca href=\"https://speakerdeck.com/nicola/python-on-windows-like-a-boss\"\u003ePython on Windows Like a Boss\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSocrates Italy 2017: Git in the trenches\u003c/li\u003e\n\u003cli\u003eSocrates Italy 2017: Bringing an Open Source project to the next level\u003c/li\u003e\n\u003cli\u003eDevRomagna: \u003ca href=\"https://www.meetup.com/it-IT/DevRomagna/events/239382597/\"\u003eContributing to Open Source projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDevRomagna: \u003ca href=\"https://www.meetup.com/it-IT/DevRomagna/events/239110404/\"\u003eGit Branching Models and Semantic Versioning\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Italy 2017: \u003ca href=\"https://speakerdeck.com/nicola/python-on-windows-like-a-boss\"\u003ePython on Windows Like a Boss\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Italy 2017: Microsoft Azure integration with Open Technologies (Panel)\u003c/li\u003e\n\u003cli\u003eCodemotion Rome 2017: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eRestful Web Services for human beings\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFuture Decoded 2016: \u003ca href=\"https://speakerdeck.com/nicola/python-tools-for-visual-studio\"\u003ePython Tools for Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyConUK 2016: \u003ca href=\"https://speakerdeck.com/nicola/cerberus\"\u003eCerberus, Data Validation for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyterPy 2016: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Italy 2016: \u003ca href=\"https://speakerdeck.com/nicola/cerberus\"\u003eCerberus, Data Validation for Humans\u003c/a\u003e (\u003ca href=\"https://youtu.be/WQJP_2FkBqI\"\u003evideo, Italian\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ePyCon Italy 2016: \u003ca href=\"https://speakerdeck.com/nicola/flask-web-development-one-drop-at-a-time\"\u003eWeb Framework Royal Rumble\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWestern Europe MVP Open Day 2016: \u003ca href=\"https://speakerdeck.com/nicola/real-life-net-cross-platform\"\u003eReal Life .NET Cross Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eOpenDomus.net Communities Meetup: \u003ca href=\"https://speakerdeck.com/nicola/real-life-net-cross-platform\"\u003eReal Life .NET Cross Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMicrosoft TecHeroes: \u003ca href=\"https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-Real-Life-Net-Cross-Platform\"\u003eReal Life .NET Cross Platform (Italian)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMicrosoft Best of Build: \u003ca href=\"https://channel9.msdn.com/Shows/Best-of-Build--Italy/Bash-su-Ubuntu-su-Windows\"\u003eBash on Ubuntu on Windows (Italian)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMicrosoft TecHeroes: \u003ca href=\"https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-VSVim-Editor\"\u003eVim for Visual Studio (Italian)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMicrosoft TecHeroes: \u003ca href=\"https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-Python-tools-per-Visual-Studio\"\u003ePython Tools for Visual Studio (Italian)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMicrosoft TecHeroes: \u003ca href=\"https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-CoderDojo-Coding-Club-for-Kids\"\u003eCoderDoojo Coding Club for Kids (Italian)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePersona Live 2015: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEuroPython 2014: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Italy 2014: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePyCon Sweden 2014: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePython Meetup: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFOSDEM 2014: \u003ca href=\"https://speakerdeck.com/nicola/eve-rest-api-for-humans\"\u003eEve, REST APIs for Humans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eRomagnaCamp 2013: \u003ca href=\"https://speakerdeck.com/nicola/we-are-all-remote-workers\"\u003eWe Are All Remote Workers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eNoSQL Day 2013: \u003ca href=\"https://speakerdeck.com/nicola/restful-web-api-and-mongodb-go-for-a-pic-nic\"\u003eRESTful Web API and MongoDB go for a picnic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMongoTorino 2013: \u003ca href=\"https://speakerdeck.com/nicola/restful-web-api-and-mongodb-go-for-a-pic-nic\"\u003eRESTful Web API and MongoDB go for a picnic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eA Morning With MongoDB: \u003ca href=\"https://speakerdeck.com/nicola/restful-web-api-and-mongodb-go-for-a-pic-nic\"\u003eRESTful Web API and MongoDB go for a picnic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEuroPython 2012: \u003ca href=\"https://speakerdeck.com/nicola/developing-restful-web-apis-with-python-flask-and-mongodb\"\u003eDeveloping RESTful Web APIs with Python, Flask and MongoDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAgenda Digitale Ravenna 2014: \u003ca href=\"https://speakerdeck.com/nicola/coderdojo-romagna\"\u003eCoderDojo Romagna\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCultura d\u0026rsquo;Impresa 2.0: \u003ca href=\"https://speakerdeck.com/nicola/online\"\u003eOnline / Offline\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eLiceo Artistico Severini (Ravenna): \u003ca href=\"https://speakerdeck.com/nicola/identita-reale-virtuale-e-digitale\"\u003eIdentità Reale, Virtuale e Digitale\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eLiceo Artistico Severini (Ravenna): \u003ca href=\"https://speakerdeck.com/nicola/personal-branding-per-studenti-e-non-solo\"\u003ePersonal Branding per Studenti e non solo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eKnowCamp 2011: \u003ca href=\"https://speakerdeck.com/nicola/fuga-dalla-comfort-zone\"\u003eFuga dalla Comfort Zone\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eRomagnaCamp 2011: \u003ca href=\"https://speakerdeck.com/nicola/quattro-passi-tra-le-nuvole\"\u003eQuattro passi tra le nuvole\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Speaking"},{"content":"You can follow my open source activity on this website or GitHub.\nHere is a partial list of open source projects I authored:\nC# FatturaElettronica.NET. Validation and de/serialization of electronic invoices adhering to the standard defined by the Italian “Agenzia delle Entrate”. Python Eve. Effortlessly build and deploy highly customizable, fully featured RESTful Web Services. Powered by Flask, MongoDB and good intentions.\nCerberus. Lightweight and extensible data validation library for Python. It provides type checking and other base functionality out of the box and is designed to be easily extensible, allowing for easy custom validation.\nEvents. Bringing the elegance of C# EventHanlder to Python. Here is a handy class that encapsulates the core to event subscription and event firing and feels like a “natural” part of the language.\nFlask-Sentinel. OAuth2 Server bundled as a Flask extension. Add OAuth2 capabilities to an existing or brand new Flask application.\nEve-Swagger. Swagger extension for Eve powered RESTful APIs.\nFlask-MimeRender. Python module for RESTful resource representation using MIME Media-Types and the Flask Microframework.\nOther Il Piccolo Libro di MongoDB. Authorized Italian translation of The Little MongoDB Book di Karl Seguin. ","permalink":"https://nicolaiarocci.com/opensource/","summary":"\u003cp\u003eYou can follow my open source activity on \u003ca href=\"/tags/open-source/\"\u003ethis website\u003c/a\u003e or \u003ca href=\"https://github.com/nicolaiarocci/\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHere is a partial list of open source projects I authored:\u003c/p\u003e\n\u003ch3 id=\"c\"\u003eC#\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/FatturaElettronicaPA/FatturaElettronicaPA\" title=\"FatturaElettronicaPA\"\u003e\u003cstrong\u003eFatturaElettronica.NET\u003c/strong\u003e\u003c/a\u003e. Validation and de/serialization of electronic invoices adhering to the standard defined by the Italian “Agenzia delle Entrate”.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"python\"\u003ePython\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://python-eve.org\" title=\"Eve\"\u003e\u003cstrong\u003eEve\u003c/strong\u003e\u003c/a\u003e. Effortlessly build and deploy highly customizable, fully featured RESTful Web Services. Powered by Flask, MongoDB and good intentions.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://python-cerberus.org\" title=\"Cerberus\"\u003e\u003cstrong\u003eCerberus\u003c/strong\u003e\u003c/a\u003e. Lightweight and extensible data validation library for Python. It provides type checking and other base functionality out of the box and is designed to be easily extensible, allowing for easy custom validation.\u003c/p\u003e","title":"Open Source"},{"content":"Hello there! My name is Nicola, and this is my website. I use it to store my memories and thoughts, share exciting resources, and post technical content. I follow the POSSE methodology, meaning I share my content on this website first and only later, eventually, on social media or other platforms.\nI\u0026rsquo;m a coder at heart author of several open source projects, a Microsoft MVP, conference speaker, teacher and consultant. I live in Ravenna, Italy, where I lead the development of Amica 20, a hybrid (cloud and on-premise) accounting app for Italian small businesses. I also the creator and organizer of DevRomagna, the developer community in my area.\nI am a former runner, climber and swimmer now keeping myself busy with bodyweight training (I think it\u0026rsquo;s called calisthenics these days). I love reading good books, hiking in the wilderness and riding my Triumph Bonneville. My all time favourite quote: \u0026ldquo;Only those who will risk going too far can possibly find out how far one can go (T.S. Eliot)\u0026rdquo;\nStay updated by subscribing to this website’s RSS feed or joining Ramblings of a Software Craftsman, my newsletter.\nFind me on Mastodon, Last.fm, GitHub, LinkedIn, or get in touch via email. My Twitter/X account is currently on hiatus.\nNo guest posts This is my personal website. I will not accept any “guest posts” here, not for compensation and not for any “good cause”. You can stop asking.\n","permalink":"https://nicolaiarocci.com/about/","summary":"\u003cp\u003eHello there! My name is Nicola, and this is my website. I use it to store my\nmemories and thoughts, share exciting resources, and post technical content. I\nfollow the \u003ca href=\"https://indieweb.org/POSSE\"\u003ePOSSE\u003c/a\u003e methodology, meaning I share my\ncontent on this website first and only later, eventually, on social media or\nother platforms.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m a coder at heart author of several \u003ca href=\"http://nicolaiarocci.com/opensource/\"\u003eopen source projects\u003c/a\u003e, a \u003ca href=\"https://mvp.microsoft.com/en-US/mvp/profile/a6892d61-aea0-e511-8114-c4346bac0abc\"\u003eMicrosoft\nMVP\u003c/a\u003e, \u003ca href=\"/speaking/\"\u003econference speaker\u003c/a\u003e, teacher and consultant. I live in Ravenna,\nItaly, where I lead the development of \u003ca href=\"http://gestionaleamica.com/\"\u003eAmica 20\u003c/a\u003e, a hybrid (cloud and\non-premise) accounting app for Italian small businesses. I also the creator and\norganizer of \u003ca href=\"http://meetup.com/it-IT/devromagna/\"\u003eDevRomagna\u003c/a\u003e, the developer community in my area.\u003c/p\u003e","title":"About"},{"content":"This week\u0026rsquo;s obligatory yet solid warning about the misunderstanding of LLMs comes from Tyler Austin Harper\u0026rsquo;s What Happens When People Don\u0026rsquo;t Understand How AI Works.\n","permalink":"https://nicolaiarocci.com/what-happens-when-people-dont-understand-how-ai-works/","summary":"Despite what tech CEOs might say, large language models are not smart in any recognizably human sense of the word.","title":"What happens when people don't understand how AI works"},{"content":"Why Bell Labs Worked is a fascinating, evocative read.\nWe live in a metrics obsessed culture that is obsessed with narrowly defined productivity. There\u0026rsquo;s too much focus on accountability and too little focus on creativity. The reason why we don\u0026rsquo;t have Bell Labs is because we\u0026rsquo;re unwilling to do what it takes to create Bell Labs — giving smart people radical freedom and autonomy. The freedom to waste time. The freedom to waste resources. And the autonomy to decide how.\n","permalink":"https://nicolaiarocci.com/why-bell-labs-worked/","summary":"\u003cp\u003e\u003ca href=\"https://1517.substack.com/p/why-bell-labs-worked\"\u003eWhy Bell Labs Worked\u003c/a\u003e is a fascinating, evocative read.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe live in a metrics obsessed culture that is obsessed with narrowly defined productivity. There\u0026rsquo;s too much focus on accountability and too little focus on creativity. The reason why we don\u0026rsquo;t have Bell Labs is because we\u0026rsquo;re unwilling to do what it takes to create Bell Labs — giving smart people radical freedom and autonomy. The freedom to waste time. The freedom to waste resources. And the autonomy to decide how.\u003c/p\u003e","title":"Why Bell Labs worked"},{"content":"Federico Pereiro\u0026rsquo;s Being Fat is a Trap is, I think, a great piece of advice. Way more people than I wish who are close to me are struggling with eating disorders of all kinds, so I\u0026rsquo;m sensible about the topic.\nThis sentence, in particular, rings true in an aching way:\nJudging people inside the fat trap just intensifies their misery and reduces the odds they can get out of it.\n","permalink":"https://nicolaiarocci.com/being-fat-is-a-trap/","summary":"\u003cp\u003eFederico Pereiro\u0026rsquo;s \u003ca href=\"https://federicopereiro.com/fat-trap/\"\u003eBeing Fat is a Trap\u003c/a\u003e is, I think, a great piece of advice. Way more people than I wish who are close to me are struggling with eating disorders of all kinds, so I\u0026rsquo;m sensible about the topic.\u003c/p\u003e\n\u003cp\u003eThis sentence, in particular, rings true in an aching way:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eJudging people inside the fat trap just intensifies their misery and reduces the odds they can get out of it.\u003c/p\u003e\u003c/blockquote\u003e","title":"Being fat is a trap"},{"content":"Since yesterday, Claude Code has been included in the Pro subscription we\u0026rsquo;re signed up for. I\u0026rsquo;d been wanting to try it for a while, and now nothing was stopping me. Only yesterday (a curious coincidence), I read AI Changes Everything by Armin Ronacher, which gave me a glimpse of the potential and made my hands itch to try it.\nThe initialization of Claude on the repository surprised me; the analysis (reported in CLAUDE.md) is thorough and reveals a good understanding of the project, including both the code and the general functioning, strategies, techniques, technologies and libraries employed.\nI asked Claude to generate a test suite from scratch, and it did so rather effortlessly (it went back and forth a few times, and it is fascinating following its reasoning and attempts from a distance). Claude added the tests to the existing project, a big no-no for me. I asked it to go back and create a dedicated test project, and it complied, adding the new project to the solution. It took several iterations to achieve a good result. We now have 134 tests that cover 98% of the project\u0026rsquo;s business logic. Upon request, Claude also added code coverage by installing the missing tools.\nOnce satisfied with the test suite and having committed and pushed (via Claude) the work done, I asked Claude to set up a GitHub Action to run the tests on every push, then to update the existing workflows (container build; deployment to test or production; etc.) so they all run tests first.\nIn half a day of work, during which I mostly did other things, such as helping a colleague while Claude was chugging away, I achieved what would have taken me a week or even just a few days.\nI have very little to complain about in terms of code quality, and where I wasn\u0026rsquo;t satisfied, I informed Claude and the unsatisfying code was quickly and pleasantly refactored. However, some refactoring is better done with Rider because it\u0026rsquo;s faster, doesn\u0026rsquo;t miss anything (like Claude tends to do if there are multiple similar refactorings to be done and they are scattered across various files) and doesn\u0026rsquo;t waste tokens that count toward usage limits (with the Pro subscription, we have access to a lighter tier of Claude Code. You want the Max subscription for unlimited - or higher anyway- ceiling).\nOne valuable feature is memory. You can have Claude memorize directives. This memory can be local to the repo or global. I instructed Claude to prefer collection expressions and utilize C#\u0026rsquo;s new targeted-type initialization feature, among other things, which were duly noted. I then asked Claude to refactor in light of the new directives, and it did. New code is now produced according to my preferences, and it will be on all my projects.\nA thorough code review is always necessary, of course, but wouldn\u0026rsquo;t you do that for any code coming into your project?\nColor me impressed so far. Copying and pasting from LLM\u0026rsquo;s web UIs is already a thing of the past. The present is all about agents, and they\u0026rsquo;re just getting started.\n","permalink":"https://nicolaiarocci.com/claude-code-first-impressions/","summary":"\u003cp\u003eSince yesterday, Claude Code has been included in the Pro subscription we\u0026rsquo;re signed up for. I\u0026rsquo;d been wanting to try it for a while, and now nothing was stopping me. Only yesterday (a curious coincidence), I read \u003ca href=\"/ai-changes-everything/\"\u003eAI Changes Everything\u003c/a\u003e by Armin Ronacher, which gave me a glimpse of the potential and made my hands itch to try it.\u003c/p\u003e\n\u003cp\u003eThe initialization of Claude on the repository surprised me; the analysis (reported in CLAUDE.md) is thorough and reveals a good understanding of the project, including both the code and the general functioning, strategies, techniques, technologies and libraries employed.\u003c/p\u003e","title":"Claude Code first impressions"},{"content":" Knowing when to leave might be more important than knowing when to show up.\n\u0026ndash; kupajo in When to Leave\n","permalink":"https://nicolaiarocci.com/when-to-leave/","summary":"\u003cblockquote\u003e\n\u003cp\u003eKnowing when to leave might be more important than knowing when to show up.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; kupajo in \u003ca href=\"https://kupajo.com/when-to-leave/\"\u003eWhen to Leave\u003c/a\u003e\u003c/p\u003e","title":"When to leave"},{"content":"Today\u0026rsquo;s Armin Ronacher\u0026rsquo;s AI Changes Everything strongly resonates with me1. I may not be using Claude Code as a daily driver as he now does, but I\u0026rsquo;ve slowly and steadily introduced large language models (LLMs) into my routine, and I\u0026rsquo;m reaping the benefits.\nIt wasn\u0026rsquo;t the purpose of his article, but I wish Armin had gone into the details of how, why, and when he delegates tasks to Claude Code.\nMy AI Skeptic Friends All Nuts, linked in Armin\u0026rsquo;s piece, is also worth reading.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/ai-changes-everything/","summary":"\u003cp\u003eToday\u0026rsquo;s Armin Ronacher\u0026rsquo;s \u003ca href=\"https://lucumr.pocoo.org/2025/6/4/changes/\"\u003eAI Changes Everything\u003c/a\u003e strongly resonates with me\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. I may not be using Claude Code as a daily driver as he now does, but I\u0026rsquo;ve slowly and steadily introduced large language models (LLMs) into my routine, and I\u0026rsquo;m reaping the benefits.\u003c/p\u003e\n\u003cp\u003eIt wasn\u0026rsquo;t the purpose of his article, but I wish Armin had gone into the details of how, why, and when he delegates tasks to Claude Code.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://fly.io/blog/youre-all-nuts/\"\u003eMy AI Skeptic Friends All Nuts\u003c/a\u003e, linked in Armin\u0026rsquo;s piece, is also worth reading.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e","title":"AI changes everything"},{"content":"In Moving On, Simone Silvestroni recounts how he moved away from the Apple ecosystem.\nIt\u0026rsquo;s a move I\u0026rsquo;ve been contemplating for some time. Like Simone, I use Linux at work daily so that the task wouldn\u0026rsquo;t be too much of a stretch, but I\u0026rsquo;m probably too lazy (or too old) to execute it.\n","permalink":"https://nicolaiarocci.com/moving-on/","summary":"\u003cp\u003eIn \u003ca href=\"https://minutestomidnight.co.uk/blog/moving-on/\"\u003eMoving On\u003c/a\u003e, Simone Silvestroni recounts how he moved away from the Apple ecosystem.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s a move I\u0026rsquo;ve been contemplating for some time. Like Simone, I use Linux at work daily so that the task wouldn\u0026rsquo;t be too much of a stretch, but I\u0026rsquo;m probably too lazy (or too old) to execute it.\u003c/p\u003e","title":"Moving On"},{"content":"Run Your Own AI by Anthony Lewis is a concise tutorial on how to run large language models on your laptop from the command line via llm-mlx. It focuses on Macs M-series, but it\u0026rsquo;s also suitable for other hardware. Saving it here for a friend.\n","permalink":"https://nicolaiarocci.com/run-your-own-ai/","summary":"\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://anthonylewis.com/2025/06/01/run-your-own-ai/\"\u003eRun Your Own AI\u003c/a\u003e\u003c/strong\u003e by Anthony Lewis is a concise tutorial on how to run large language models on your laptop from the command line via \u003ca href=\"https://simonwillison.net/2025/Feb/15/llm-mlx/\"\u003ellm-mlx\u003c/a\u003e. It focuses on Macs M-series, but it\u0026rsquo;s also suitable for other hardware. Saving it here for a friend.\u003c/p\u003e","title":"Run your own AI"},{"content":"Eve v2.2.1 was just released on PyPI. It is a minor upgrade, but it includes a remarkable performance increase contributed by Alexander Urieles. Also, thanks to Svante Bengtson and Pablo Parada for their help with this release.\n","permalink":"https://nicolaiarocci.com/eve-2.2.1/","summary":"\u003cp\u003e\u003ca href=\"https://pypi.org/project/Eve/2.2.1/\"\u003eEve v2.2.1\u003c/a\u003e was just released on PyPI. It is a minor upgrade, but it includes a remarkable performance increase contributed by \u003ca href=\"https://github.com/pyeve/eve/pull/1553\"\u003eAlexander Urieles\u003c/a\u003e. Also, thanks to \u003ca href=\"https://github.com/pyeve/eve/pull/1547\"\u003eSvante Bengtson\u003c/a\u003e and \u003ca href=\"https://github.com/pyeve/eve/pull/1541\"\u003ePablo Parada\u003c/a\u003e for their help with this release.\u003c/p\u003e","title":"Eve 2.2.1"},{"content":"From Corezzo, a short hiking loop along the park\u0026rsquo;s oldest mule tracks.\nThe Serra Pass mule track is one of the most fascinating in the entire Casentino territory, if only for the tangible memory of the millions of feet that have trodden, traveled, and worn it down over the centuries. It connected – and still connects – the upper Savio valley with that of Corsalone, branching off from the Romagna valley floor near the Gualchiere (about 2 km south of Bagno di Romagna) and climbing up the Nasseto ridge to reach the summit ridge at a pass that isn\u0026rsquo;t exactly low (1,150 m), but evidently \u0026ldquo;convenient\u0026rdquo; for other reasons, given that its use is documented as early as prehistoric times and experienced an intense period with medieval pilgrimages directed to Rome and later to La Verna.\nThis itinerary follows its best-preserved section, on the Tuscan side, from the mountain hamlet of Serra to the pass of the same name, among remnants of ancient stone paving where one seems to still perceive that \u0026ldquo;incessant wearing of steps\u0026rdquo; of pilgrims who descended from the Alps to reach the hospitals of Serra and Scapruggine, now safe from the dangers and storms of the ridge.\nOne good reason for late spring hiking: blossom.\nThe beech forest high on the Apennine ridge. As expected, this was the only section where I encountered anyone.\nOn the way back, downhill, there are clearings that were probably once cultivated fields.\nIn the distance, on the left, you can see the roofs of the village of Corezzo, the starting point and return point of the tour.\nThis trip was also an opportunity to take a ride on my motorcycle. The combination of motorcycling and hiking is not easy to pull off, especially with a classic bike like mine, but it\u0026rsquo;s worth it as it combines two of my passions.\nGPX track available here.\n","permalink":"https://nicolaiarocci.com/serra-pass-along-the-pilgrims-route/","summary":"\u003cp\u003eFrom Corezzo, a short hiking loop along the park\u0026rsquo;s oldest mule tracks.\u003c/p\u003e\n\u003cp\u003eThe Serra Pass mule track is one of the most fascinating in the entire Casentino territory, if only for the tangible memory of the millions of feet that have trodden, traveled, and worn it down over the centuries. It connected – and still connects – the upper Savio valley with that of Corsalone, branching off from the Romagna valley floor near the Gualchiere (about 2 km south of Bagno di Romagna) and climbing up the Nasseto ridge to reach the summit ridge at a pass that isn\u0026rsquo;t exactly low (1,150 m), but evidently \u0026ldquo;convenient\u0026rdquo; for other reasons, given that its use is documented as early as prehistoric times and experienced an intense period with medieval pilgrimages directed to Rome and later to La Verna.\u003c/p\u003e","title":"Serra Pass along the pilgrims' route"},{"content":"I went hiking in my beloved Foreste Casentinesi National Park a few weeks ago. This trip has been on my radar for a long time, a circular tour of incomparable beauty among wild environments like very few others in the area. Among the many ways to reach the La Lama, it is undoubtedly the best way to visit the ancient forests surrounding the beautiful, partly marshy plateau between rocky crags. The initial detour to Mount Penna is motivated by the rare panoramic view, perhaps the most beautiful in the entire park, as if from a wide-open balcony overlooking the sea of forests below.\nGPX track and details available here.\nThe view from Monte Penna summit. You can see the Ridracoli Lake in the distance.\nLa Lama is a partly marshy plateau between rock cargs, filled with its peculiar Black Alders\nLa Lama is crossed by several, crystal-clear streams.\nThe magnificent beech forest that covers the area, at this time graced by the bloom of wild garlic.\nThe day was bright and perfect, and everything went well. The highlight of the day was testing the Garmin InReach, and La Lama is the ideal place to test such an item since you have no cell signal. I sent and received text messages via satellite with Serena. The messages are geo-localized. You are no longer isolated; it works anywhere worldwide, and you can issue an SOS call anytime. Garmin will contact Mountain Rescue or equivalent service anywhere. As I have recently re-enrolled in CAI, social insurance should also cover any extraction intervention. I am very pleased with this setup; safety has increased dramatically. I have gone and come back on my motorcycle.\n","permalink":"https://nicolaiarocci.com/foresta-della-lama/","summary":"\u003cp\u003eI went hiking in my beloved \u003ca href=\"https://www.parcoforestecasentinesi.it/en\"\u003eForeste Casentinesi National Park\u003c/a\u003e a few weeks ago. This trip has been on my radar for a long time, a circular tour of incomparable beauty among wild environments like very few others in the area. Among the many ways to reach the \u003ca href=\"https://www.parcoforestecasentinesi.it/en/multimedia/interactive-map/place-to-visit/la-lama\"\u003eLa Lama\u003c/a\u003e, it is undoubtedly the best way to visit the ancient forests surrounding the beautiful, partly marshy plateau between rocky crags. The initial detour to Mount Penna is motivated by the rare panoramic view, perhaps the most beautiful in the entire park, as if from a wide-open balcony overlooking the sea of forests below.\u003c/p\u003e","title":"Foresta della Lama"},{"content":"I just released FatturaElettronica .NET v3.6.3. Since version 3.6.1, the project has added English to the list of supported languages. The latest release improves English support, aligning it with the official translation. Michael Mairegger contributed this improvement.\nThe Fattura Elettronica open-source project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by the Italian Revenue Agency.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-v3.6.3/","summary":"\u003cp\u003eI just released \u003ca href=\"https://www.nuget.org/packages/FatturaElettronica/3.6.3\"\u003eFatturaElettronica .NET v3.6.3\u003c/a\u003e. Since version 3.6.1, the project has added English to the list of supported languages. The latest release improves English support, aligning it with the official translation. Michael Mairegger \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET/pull/432\"\u003econtributed\u003c/a\u003e this improvement.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://fatturaelettronicaopensource.org\"\u003eFattura Elettronica\u003c/a\u003e open-source project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by the Italian Revenue Agency.\u003c/p\u003e","title":"Fattura Elettronica v3.6.3"},{"content":"I presented at .NET Conf Rome 2025 yesterday, and it went very well, or at least that was my impression. I enjoyed myself, and the reception seemed great, from the organizers, the other speakers (most of whom are fellow MVPs), and the audience.\nBut the kicker was just before the session when, at the coffee break, an attendant approached me to shake hands and tell me he had known me for a long time because he discovered and used Eve in a research project he was working on years ago. As I recall, he had attended one of my Eve sessions at EuroPython, maybe in Berlin in 2014. As is often the case, he had no immediate need for my project and shelved it as \u0026ldquo;interesting, and cool that it\u0026rsquo;s by an Italian author, but I don\u0026rsquo;t need really it\u0026rdquo;. Then, a couple of years later, in a time of need, he recalled that little presentation of mine, and, long story short, Eve ended up being adopted by a big, unnamed corp or research institute. I thanked him from the bottom of my heart and told him it was worth preparing for the talk, waking up at 4 am and travelling to Rome to meet him and hear his story. It\u0026rsquo;s moments like this that make it all worth it. Also, hearing such a Python story at a .NET event was unexpected.\nNothing gratifies me more than seeing my open-source work appreciated and actively used in the wild.\nSpecial thanks to Fabio Spaziani and the whole DotNetCode team for accomodating for my \u0026ldquo;daily commuter from afar\u0026rdquo; special needs.\n","permalink":"https://nicolaiarocci.com/it-is-moments-like-this/","summary":"\u003cp\u003eI presented at \u003ca href=\"https://www.dotnetconf.it\"\u003e.NET Conf Rome 2025\u003c/a\u003e yesterday, and it went very well, or at least that was my impression. I enjoyed myself, and the reception seemed great, from the organizers, the other speakers (most of whom are fellow MVPs), and the audience.\u003c/p\u003e\n\u003cp\u003eBut the kicker was just before the session when, at the coffee break, an attendant approached me to shake hands and tell me he had known me for a long time because he discovered and used \u003ca href=\"https://python-eve.org\"\u003eEve\u003c/a\u003e in a research project he was working on years ago. As I recall, he had attended one of my Eve sessions at EuroPython, maybe in Berlin in 2014. As is often the case, he had no immediate need for my project and shelved it as \u0026ldquo;interesting, and cool that it\u0026rsquo;s by an Italian author, but I don\u0026rsquo;t need really it\u0026rdquo;. Then, a couple of years later, in a time of need, he recalled that little presentation of mine, and, long story short, Eve ended up being adopted by a big, unnamed corp or research institute. I thanked him from the bottom of my heart and told him it was worth preparing for the talk, waking up at 4 am and travelling to Rome to meet him and hear his story. It\u0026rsquo;s moments like this that make it all worth it. Also, hearing such a Python story at a .NET event was unexpected.\u003c/p\u003e","title":"It is moments like this"},{"content":"Verlyn Flieger on the late addition of Tolkien\u0026rsquo;s most iconic characters:\nHobbits were no part of Tolkien’s original plan. They entered rather late and through a side door, as the unexpected central characters in a children’s story, The Hobbit which Tolkien invented for his own children but which found an immediate and lasting worldwide audience. And of which The Lord of the Rings was the commissioned, longed-awaited and trebly successful sequel.\nThe Literary Power of Hobbits: How JRR Tolkien Shaped Modern Fantasy is a good short read (via)\n","permalink":"https://nicolaiarocci.com/the-literary-power-of-hobbits/","summary":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Verlyn_Flieger\"\u003eVerlyn Flieger\u003c/a\u003e on the late addition of Tolkien\u0026rsquo;s most iconic characters:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHobbits were no part of Tolkien’s original plan. They entered rather late and through a side door, as the unexpected central characters in a children’s story, The Hobbit which Tolkien invented for his own children but which found an immediate and lasting worldwide audience. And of which The Lord of the Rings was the commissioned, longed-awaited and trebly successful sequel.\u003c/p\u003e","title":"The Literary Power of Hobbits"},{"content":"Anders Hejlsberg is a legend in my field, with Turbo Pascal, Delphi, C#, and TypeScript in his palmares. This week, he announced a rewrite of the TypeScript compiler, leading to a stunning 10x performance boost. This remarkable achievement is due to two main factors: the adoption of Go for the compiler and the Language Server Protocol and the high parallelism that Go enables. Previously, the compiler itself was in TypeScript, which severely hindered performance.\nTwo things strike me about this story.\nThe video is worth watching. Not so much for the content itself but for the delivery. No emphasis, special effects, marketing crap, visual tricks, or star tricks whatsoever. The strength is in the message; any addition would be a distraction. I was fortunate enough to attend a few meetings with Hejlsberg at the Microsoft Campus in Redwood, and, well, emphasis and hyperbole are certainly not his style. He\u0026rsquo;s genuinely a down-to-heart type of guy. On the other hand, he is Danish, not American.\nFor purely business reasons, Microsoft could have forced the choice of one of its languages for the rewrite. Of course, none of those would have been ideal, least of all C# (itself a Hejlsberg creature), but corporate reasons could easily have prevailed. Hejlsberg and his team could pick the best tool for the job. Go is the lowest-level language with a GC; it compiles natively on all platforms, has great parallelism support, and you can write excellent functional code with it. It says a lot about Microsoft, the cultural shift it has managed since the late 1990s and early 2000s, and how it stays relevant today, unlike many of its competitors of those times.\nI am concerned that by switching to Go, they will no longer dogfood the language. By their admission, maintaining that massive compiler codebase in TypeScript was instrumental in adequately developing the language. We\u0026rsquo;ll see how that pans out now that they\u0026rsquo;re not working TypeScript daily.\nI\u0026rsquo;ll end by quoting a YouTube commenter who nailed it in one sentence:\nImagine creating several languages but still choosing a different one for your compiler rewrite because it\u0026rsquo;s just the best tool for the job - absolute ego-less GOAT move.\n","permalink":"https://nicolaiarocci.com/a-10x-faster-typescript-but-thats-not-the-point/","summary":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Anders_Hejlsberg\"\u003eAnders Hejlsberg\u003c/a\u003e is a legend in my field, with Turbo Pascal, Delphi, C#, and TypeScript in his palmares. This week, he \u003ca href=\"https://devblogs.microsoft.com/typescript/typescript-native-port/\"\u003eannounced\u003c/a\u003e a rewrite of the TypeScript compiler, leading to a stunning 10x performance boost. This remarkable achievement is due to two main factors: the adoption of Go for the compiler and the Language Server Protocol and the high parallelism that Go enables. Previously, the compiler itself was in TypeScript, which severely hindered performance.\u003c/p\u003e","title":"A 10x faster TypeScript, but that's not the point"},{"content":"It\u0026rsquo;s raining a lot these days, and during my early morning walk, I see many earthworms popping out of the ground and filling the sidewalks and the streets. I observed this behaviour many times in similarly wet conditions. So I asked Claude: Why do earthworms appear on wet roads?\nWhen it rains heavily, streets fill with earthworms for several reasons:\nEarthworms breathe through their skin, which must remain moist. During heavy rainfall, their underground tunnels flood, forcing them to surface to avoid drowning.\nThe vibrations of raindrops on the soil can be mistaken by earthworms for those produced by predators like moles, causing them to flee to the surface.\nRainy periods are ideal for earthworms to move and find new habitats or mates, as they can travel on the moist surface without risking dehydration.\nOn paved surfaces like roads and sidewalks, water tends to accumulate more than in soil, creating conditions that attract earthworms.\nUnfortunately, once earthworms reach the asphalt, they often become trapped and unable to return to the soil, becoming easy prey or risking dehydration when the sun returns.\n","permalink":"https://nicolaiarocci.com/why-do-earthworms-appear-on-wet-roads/","summary":"\u003cp\u003eIt\u0026rsquo;s raining a lot these days, and during my early morning walk, I see many earthworms popping out of the ground and filling the sidewalks and the streets. I observed this behaviour many times in similarly wet conditions. So I asked Claude: \u003cem\u003eWhy do earthworms appear on wet roads?\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eWhen it rains heavily, streets fill with earthworms for several reasons:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eEarthworms breathe through their skin, which must remain moist. During heavy rainfall, their underground tunnels flood, forcing them to surface to avoid drowning.\u003c/p\u003e","title":"Why do earthworms appear on wet roads?"},{"content":" One of the most essential practices for maintaining the long-term quality of computer code is to write automated tests that ensure the program continues to act as expected, even when other people (including your future self) muck with it.\n\u0026ndash; Evan Miller (via)\n","permalink":"https://nicolaiarocci.com/quoting-evan-miller/","summary":"\u003cblockquote\u003e\n\u003cp\u003eOne of the most essential practices for maintaining the long-term quality of computer code is to write automated tests that ensure the program continues to act as expected, even when other people (including your future self) muck with it.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://www.evanmiller.org/functional-tests-as-a-tree-of-continuations.html\"\u003eEvan Miller\u003c/a\u003e (\u003cem\u003e\u003ca href=\"https://simonwillison.net/2025/Mar/13/evan-miller/#atom-everything\"\u003evia\u003c/a\u003e\u003c/em\u003e)\u003c/p\u003e","title":"Quoting Evan Miller"},{"content":"I just watched an incredible interview with legendary tennis coach Darren Cahill, now coaching Jannick Sinner. The interview is outstanding and worth watching; Cahill is remarkable and a great communicator. In the final part, they\u0026rsquo;re talking about Jannick when Cahill drops an incredible Jannick quote:\nDon\u0026rsquo;t worry about criticism from someone you wouldn\u0026rsquo;t take advice from.\nThat\u0026rsquo;s profound for a boy who\u0026rsquo;s just 23 years of age.\n","permalink":"https://nicolaiarocci.com/quoting-jannick-sinner/","summary":"\u003cp\u003eI just watched an \u003ca href=\"https://www.youtube.com/watch?v=KreEMoS0drQ\"\u003eincredible interview\u003c/a\u003e with legendary tennis coach Darren Cahill, now coaching Jannick Sinner. The interview is outstanding and worth watching; Cahill is remarkable and a great communicator. In the final part, they\u0026rsquo;re talking about Jannick when Cahill \u003ca href=\"https://www.youtube.com/watch?v=KreEMoS0drQ\u0026amp;t=3498s\"\u003edrops\u003c/a\u003e an incredible Jannick quote:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDon\u0026rsquo;t worry about criticism from someone you wouldn\u0026rsquo;t take advice from.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThat\u0026rsquo;s profound for a boy who\u0026rsquo;s just 23 years of age.\u003c/p\u003e","title":"Quoting Jannick Sinner"},{"content":"I\u0026rsquo;ve been slacking a little lately, shocked mainly by what is happening worldwide. I\u0026rsquo;ve also been busy at work and, unfortunately, am taking my old man to way too many medical checkups. A short recap of notable facts might be in order.\nFatturaElettronica for .NET 3.6 has been released. It adds support for the upcoming technical specifications v1.9 that are coming into effect on April 1, 2025 (not a joke.) The changelog is here. I did some maintenance work on Eve. The CI workflow has been switched to ubuntu-latest from 20.04, as the latter is about to be sunsetted by GitHub. I also merged two pull requests (#1541 and #1547), one of which was long-standing. There isn\u0026rsquo;t enough material for a release, although the guys who submitted the PRs might think otherwise (if that\u0026rsquo;s the case, let me know.) I ran two DevRomagna meetups. The first one was on OpenTelemetry and was kept by Alessandro Mengoli, of whom I\u0026rsquo;m very proud (I\u0026rsquo;ve been encouraging him to start speaking for a long time.) The second was on Linux Containers but before Docker. The speaker was Gabriele Santomaggio, my go-to buddy regarding low-level networking stuff. I found both events to be quite successful and enjoyable. I hope the other attendants agree. I finally deactivated my Twitter/X account. I abandoned the platform a while ago and did not miss it. I maintain a presence on Mastodon and Bluesky, mainly to propagate whatever content I post on my website, but don\u0026rsquo;t count on me following or reading you there (same with LinkedIn.) I\u0026rsquo;m not active on social media and don\u0026rsquo;t see myself getting back into them. I\u0026rsquo;m not interested anymore (and the content there is mostly trash.) I went on a nice hike a couple of weeks ago. It was cold and overcast, and that\u0026rsquo;s why, I suspect, I did not meet a single person the whole day. Speaking of hiking, I finally got myself a Garmin inReach Mini 2 device. It\u0026rsquo;s meant to be used in case of emergency. It allows me to call for help and send sms messages even when no cell signal is available (it uses the Iridium satellite network.) I resisted getting it so far because of the high cost, not so much of the device itself, but the mandatory subscription. Only recently, I found that one can buy Garmin data plans from other vendors, and ProteGear has a nice option to suspend the subscription when not in use. So, I bought the device from Garmin, activated it, and subscribed to ProteGear. It\u0026rsquo;s looking good so far, and sending sms messages (and emails!) when there\u0026rsquo;s no cell signal feels like black magic. I\u0026rsquo;ve been reading good books, and I\u0026rsquo;m grateful for them. Well, my dad is not doing well. He\u0026rsquo;s okay now, but he\u0026rsquo;s been going through a lot, and more is expected soon. That\u0026rsquo;s life, I know. I am having difficulty making peace with what is happening in the world right now. American friends, I cannot understand how you could re-elect Donald Trump for a second term. It beats me. I am in shock and worried about the geopolitical consequences. I hope time will prove me wrong, but the future looks grim. ","permalink":"https://nicolaiarocci.com/lately-2025-03-04/","summary":"\u003cp\u003eI\u0026rsquo;ve been slacking a little lately, shocked mainly by what is happening\nworldwide. I\u0026rsquo;ve also been busy at work and, unfortunately, am taking my old man\nto way too many medical checkups. A short recap of notable facts might be in\norder.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.nuget.org/packages/FatturaElettronica/3.6.0\"\u003eFatturaElettronica for .NET 3.6\u003c/a\u003e has been released. It adds support for the upcoming technical specifications v1.9 that are coming into effect on April 1, 2025 (not a joke.) The changelog is \u003ca href=\"https://fatturaelettronicaopensource.org/docs/changelog.html#v-360\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eI did some maintenance work on \u003ca href=\"https://python-eve.org\"\u003eEve\u003c/a\u003e. The CI workflow has been switched to \u003ccode\u003eubuntu-latest\u003c/code\u003e from \u003ccode\u003e20.04\u003c/code\u003e, as the latter is \u003ca href=\"https://github.com/actions/runner-images/issues/11101\"\u003eabout to be sunsetted\u003c/a\u003e by GitHub. I also merged two pull requests (\u003ca href=\"https://github.com/pyeve/eve/pull/1541\"\u003e#1541\u003c/a\u003e and \u003ca href=\"https://github.com/pyeve/eve/pull/1547\"\u003e#1547\u003c/a\u003e), one of which was long-standing. There isn\u0026rsquo;t enough material for a release, although the guys who submitted the PRs might think otherwise (if that\u0026rsquo;s the case, let me know.)\u003c/li\u003e\n\u003cli\u003eI ran two \u003ca href=\"https://www.meetup.com/devromagna/\"\u003eDevRomagna\u003c/a\u003e meetups. The first one was on \u003ca href=\"https://www.meetup.com/devromagna/events/304417824/\"\u003eOpenTelemetry\u003c/a\u003e and was kept by Alessandro Mengoli, of whom I\u0026rsquo;m very proud (I\u0026rsquo;ve been encouraging him to start speaking for a long time.) The second was on \u003ca href=\"https://www.meetup.com/devromagna/events/305974494/?eventOrigin=group_past_events\"\u003eLinux Containers\u003c/a\u003e but before Docker. The speaker was Gabriele Santomaggio, my go-to buddy regarding low-level networking stuff. I found both events to be quite successful and enjoyable. I hope the other attendants agree.\u003c/li\u003e\n\u003cli\u003eI finally deactivated my Twitter/X account. I abandoned the platform a \u003ca href=\"/im-leaving-twitter/x/\"\u003ewhile ago\u003c/a\u003e and did not miss it. I maintain a presence on Mastodon and Bluesky, mainly to propagate whatever content I post on my website, but don\u0026rsquo;t count on me following or reading you there (same with LinkedIn.) I\u0026rsquo;m not active on social media and don\u0026rsquo;t see myself getting back into them. I\u0026rsquo;m not interested anymore (and the content there is mostly trash.)\u003c/li\u003e\n\u003cli\u003eI went on \u003ca href=\"https://out.ac/IPUdpG\"\u003ea nice hike\u003c/a\u003e a couple of weeks ago. It was cold and overcast, and that\u0026rsquo;s why, I suspect, I did not meet a single person the whole day.\u003c/li\u003e\n\u003cli\u003eSpeaking of hiking, I finally got myself a Garmin inReach Mini 2 device. It\u0026rsquo;s meant to be used in case of emergency. It allows me to call for help  and send sms messages even when no cell signal is available (it uses the Iridium satellite network.) I resisted getting it so far because of the high cost, not so much of the device itself, but the mandatory subscription. Only \u003ca href=\"https://youtu.be/Hv7cH_oShbw?si=KTYHBBuR5frjJMxU\"\u003erecently\u003c/a\u003e, I found that one can buy Garmin data plans from other vendors, and \u003ca href=\"https://www.protegear.de/en-gb/inreach-dataplans\"\u003eProteGear\u003c/a\u003e has a nice option to suspend the subscription when not in use. So, I bought the device from Garmin, activated it, and subscribed to ProteGear. It\u0026rsquo;s looking good so far, and sending sms messages (and emails!) when there\u0026rsquo;s no cell signal feels like black magic.\u003c/li\u003e\n\u003cli\u003eI\u0026rsquo;ve been reading \u003ca href=\"/books-i-have-read\"\u003egood books\u003c/a\u003e, and I\u0026rsquo;m grateful for them.\u003c/li\u003e\n\u003cli\u003eWell, my dad is not doing well. He\u0026rsquo;s okay now, but he\u0026rsquo;s been going through a lot, and more is expected soon. That\u0026rsquo;s life, I know.\u003c/li\u003e\n\u003cli\u003eI am having difficulty making peace with what is happening in the world right now. American friends, I cannot understand how you could re-elect Donald Trump for a second term. It beats me. I am in shock and worried about the geopolitical consequences. I hope time will prove me wrong, but the future looks grim.\u003c/li\u003e\n\u003c/ul\u003e","title":"Lately"},{"content":"I just released FatturaElettronica .NET v3.5.2. It gets around a known CVE so you may want to update ASAP. The Fattura Elettronica open-source project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by the Italian Revenue Agency.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-v3.5.2/","summary":"\u003cp\u003eI just released \u003ca href=\"https://www.nuget.org/packages/FatturaElettronica/3.5.2\"\u003eFatturaElettronica .NET v3.5.2\u003c/a\u003e. It gets around a \u003ca href=\"https://github.com/advisories/GHSA-hh2w-p6rv-4g7w\"\u003eknown CVE\u003c/a\u003e so you may want to update ASAP. The Fattura Elettronica open-source project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by the Italian Revenue Agency.\u003c/p\u003e","title":"Fattura Elettronica v3.5.2"},{"content":"My most used command-line commands:\n5180 git 777 cd 653 ls 452 go 440 ./invoice 377 dotnet 373 rm 270 vi 225 cat 219 ssh Version control dominates the scene (a gentle middle finger for the youngster - you know who you are - who told me I should not be coding anymore). I also like that the list hints at the new stuff I\u0026rsquo;ve been working on recently and am excited about.\nGenerated with history | awk '{print $2}' | sort | uniq --count | sort --numeric-sort --reverse | head -10 and inspired by Chris De Luca.\n","permalink":"https://nicolaiarocci.com/my-most-used-command-line-commands/","summary":"\u003cp\u003eMy most used command-line commands:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e5180 \u003ccode\u003egit\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e777 \u003ccode\u003ecd\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e653 \u003ccode\u003els\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e452 \u003ccode\u003ego\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e440 \u003ccode\u003e./invoice\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e377 \u003ccode\u003edotnet\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e373 \u003ccode\u003erm\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e270 \u003ccode\u003evi\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e225 \u003ccode\u003ecat\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e219 \u003ccode\u003essh\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eVersion control dominates the scene (a gentle middle finger for the youngster - you know who you are - who told me I should not be coding anymore). I also like that the list hints at the new stuff I\u0026rsquo;ve been working on recently and am excited about.\u003c/p\u003e","title":"My most used command-line commands"},{"content":"I read 30 books or 8365 pages in 2024, a solid improvement over last year\u0026rsquo;s, and many of those books were excellent. Lolita by Vladimir Nabokov was outstanding, Marcus Aurelius\u0026rsquo; Meditations was incredible, and then there\u0026rsquo;s Family Lexicon and The garden of Finzi-Contini, and many others were close to that league. Yeah, color me satisfied.\nThe usual scoring system applies:\nOne star means a book is meh. Two stars mean a book is perfectly fine. Three stars mean a book is good—consider it recommended. Four stars mean a book is exceptional. Five stars is pretty much unheard of. The question of Palestine, by E.W. Said (La Questione Palestinese, il Saggiatore)\n★★★☆☆\nI was interested in learning about Israeli-Palestinian history from the beginning, and I wanted it told from the perspective of an Arab-Palestinian scholar and critic. In the West, we grow with Western and pro-Israeli narratives, and it is super-hard to get access to the Palestinian narration. The Palestinian Question turned out to be the ideal text. \u0026ldquo;The tragedy of being a victim of victims.\u0026rdquo;\nThe garden of the Finzi-Contini, by Giorgio Bassani (Il giardino dei Finzi-Contini, audiolibro)\n★★★★☆\nThe Garden of the Finzi-Contini is probably the most understated and effective novel about the Holocaust. It is also a bittersweet and nostalgic tale of youth. The reconstruction of provincial life in the years immediately preceding World War II is touching, especially if one is fortunate enough to know Ferrara and its historic town center. The prose is rich, the characters are all indispensable and well-chiseled, each peculiar in his way, but some stand out, like Micol. The dialogues, never trite, often hint at unspoken yet implied meanings. Near the novel\u0026rsquo;s end, the late-night conversation between the protagonist (whose name we never know) and his old father touched me deeply. This slow burner picks up pace as it approaches its inevitable, bitter end.\nMeditations, by Marcus Aurelius (Pensieri, Oscar Mondadori)\n★★★★☆\nMarcus Aurelius, one of the Five Good Emperors of Rome, kept a journal to collect his thoughts about how to live well. It was not meant for the public, and in fact, it did not go public until centuries after the emperor\u0026rsquo;s death, when it surfaced in its original Greek form, probably with missing and corrupted parts. Meditations is that journal, a work of motivational advice that inspires us in stoicism and a manual for being a complete, mature adult living a dignified, thoughtful life. Some concepts repeatedly resurface throughout the twelve books that make the text:\ninevitability of death irrelevance of the individual no matter their importance in life how to be a good man forgive the defects of others accept and embrace what comes at us, be it good or bad live in accordance wit nature These and others were reflections and aims meant for the author, not lectures for an audience. That these thoughts came from the most powerful man in the world makes it all the more impressive. Two thousand years have passed, and humanity still struggles with the same essential topics and unanswered questions.\nLolita, by Vladimir Nabokov (Lolita, audiolibro)\n★★★★★\nI read many of Nabokov\u0026rsquo;s works but avoided reading Lolita for a long time despite its universal acclaim as his masterpiece. I was not ready to confront its obscenity. In hindsight, I cowardly feared that my admiration for the writer would be affected. However, now that I have read the book, I know it is both shocking and disturbing, yet sublime. While reading, I couldn\u0026rsquo;t help but appreciate the author\u0026rsquo;s audacity in publishing a text like this in 1955. It was then pointed out to me that it was easier to publish works on the topic of pedophilia during that time as compared to today1.\nQuoting Nabokov in his afterword to the Italian edition (Adelphi):\nLolita does not carry any morals with it. For me, a work of fiction exists only if it provides me with what I will frankly call aesthetic voluptuousness, that is, the sense of being in touch, somehow, somewhere, with other states of being where art (curiosity, tenderness, goodness, ecstasy) is the norm. The others are topical garbage or what some call the Literature of Ideas, which very often consists of circumstantial shenanigans that are lovingly passed on from era to era in large chalk blocks until someone gives Balzac, Gorky, Mann a good hammering.\nI am glad to report that my admiration for the author is intact. Shoutout to Ennio Fantastichini for his exceptional audiobook reading (Ad Alta Voce, Radio Tre.)\nFamily Lexicon, by Natalia Ginzburg (Lessico Famigliare, Einaudi)\n★★★★☆\nThe key to this novel is outlined already in its title. It is familiar because it tells the story of a Jewish and antifascist family, the Levi family, in Turin between the 1930s and 1950s. And Lexicon because the paths of memory pass through the recollection of phrases, idioms, and slang expressions that only existed within the family. The Levi\u0026rsquo;s were not just an ordinary family. During those years, characters who were already or would become influential for the time passed by their house: politicians, industrialists, and intellectuals are all told from the point of view of a kid (later a girl, then a woman) who observes them from an unusual and unprejudiced angle. The years of Jewish persecution, confinement, and the postwar period are recounted without drama; the Great Story is lived daily and flows around them; they\u0026rsquo;re impacted in significant ways, yet the focus stays on the family, its members and the many characters that revolve around it. The outstanding characters are the mother and the father; Natalia, the author, stays on the fringe, rarely seen or mentioned, if not by the last part of the book.\nUnder the Volcano, by Malcom Lowry (Sotto il Vulcano, Einaudi)\n★★☆☆☆\nI gave up on this one. I wanted to like this one. I attempted it a couple of times last year, and then I tried with an audiobook, which was more engaging. However, in the end, I abandoned it again. Again, I\u0026rsquo;m sorry because the writing is good, and the author is remarkable in their art. Nothing happens throughout the 400+ pages of this book. The plot could be summarized as primarily drunk people wandering around a small Mexican town at the foot of two volcanoes, spending much of their time brooding over an old love triangle that was never entirely forgotten.\nWomen\u0026rsquo;s Resistance, by Benedetta Tobagi (La Resistenza delle Donne, Einaudi)\n★★★☆☆\nThis book is exciting and well-written. It tells the story of the Italian Resistance from the point of view of women who participated actively in it and with an often decisive role but never really saw their merits appreciated, much less their participation recognized. The Italian Resistance was a pivotal and dramatic period of World War II, and women who chose to participate had to show even more courage and attitude than their male comrades, as in those times, women were expected to serve as mothers, wives, and housekeepers at home. War was a male affair; women leaving for the mountains to join packs of male rebels tended to be ill-reputed, and when captured, they risked far more than their male counterparts. At times, it tends a bit toward rhetoric, which is entirely excusable in this case, but even when it happens, the author quickly picks up the thread.\nThe Horde: How the Mongols Changed the World, by Marie Favereau (L\u0026rsquo;Orda. Come i mongoli cambiarono il mondo, Einaudi)\n★★★★☆\nThis book interested me because it offered a historically researched and accurate narrative of a historical period and geographical area I know little about: the Euro-Asiatic region between the 8th and 16th centuries, during the Mongol rule. It is a remarkable work that substantially revises and corrects the canonical image of the Mongols as ruthless and almost uncivilized rulers and conquerors. On the contrary, historical sources prove that the Mongol empire was based on flexibility, tolerance for customs, traditions and religions, integration and not assimilation, often allowing the dominant structures of the conquered territories to remain intact. The Empire offered ample and rich trade opportunities, both to the dominated and outsiders (the European, Muslim, and nonassimilated Asian powers), and thrived on the tribute it reaped from the thriving economy that resulted. The other key point of this book is the intrinsic and never-lost pure nomadic nature of the Empire, perhaps its distinguishing characteristic: Mongol leaders always remained nomadic, even as they conquered and assimilated settled civilizations, such as Russia, China, and Islamic regions of southern Asia. And yet the Empire shattered when, over time, it slowly moved away from ancestral, communal nomadic traditions in favor of an authoritarianism that, paradoxically, made the Empire less authoritative and, as such, weaker. I also learned about the origins of Russian society, the relevance of Kyiv and other principalities before the slow rise of Moscow, and the influence the Mongol Empire had in the formation of modern Russia.\nReplay, by Jordan Mechner ★★★★☆\nFirst Second Books/Macmillan, signed copy\nA graphic memoir by Prince of Persia creator Jordan Mechner, recounting his own family story of war, exile and new beginnings.\nIt\u0026rsquo;s the first comic book I\u0026rsquo;ve read in a long while, and I\u0026rsquo;m glad I did. I pre-ordered a signed first edition from the USA that I received by post. The book is a work of craftsmanship. The story was a challenge for the author, I\u0026rsquo;m sure. Many characters from three (if not four) generations are juxtaposed and interwoven continuously; the risk of getting lost is real, but Mechner manages to keep control, also thanks to the comic form that he masters and lends itself to the purpose, for example, through the use of different color palettes depending on the era being narrated. Remarkably, this narrative would not have been possible without the diaristic fever that gripped at least three generations of this Jewish family that was uprooted and then dispersed across two continents by the dramatic events that followed the advent of Nazism in Europe.\nSixty Degrees North, by Malachy Tallack ★★★☆☆\nIperborea, I Corvi\nSixty Degrees North is a travel book written in the 2000s based on the author\u0026rsquo;s visits to each of the eight nations along this northern parallel. I didn\u0026rsquo;t expect that so much of it would be about the impact on the author of his father\u0026rsquo;s death when he was a teenager, his search to resolve his feelings about this, and his search to find somewhere to live that felt like home. These unexpected parts gravitate the book more toward the memoir genre, but the travel parts are still prevalent, well-researched, and recounted, some more interesting than others. This book touches on many things, often only superficially, which is a pity.\nKind of Blue, the making of the Miles Davis masterpiece, Ashley Kahn ★★★☆☆\nIl Saggiatore\nI saw the light the first time I listened to Kind of Blue, and I did a lot of research to find a text that would go into detail and explain how this legendary album came about and why it influenced jazz so much that it became the benchmark. Kind of Blue by Ashley Kahn fully met my expectations. Well-researched and written, full of first-hand accounts and quotes from the sextet members. I appreciated the introductory part that clearly illustrates where the jazz scene was at when the six came together to record this masterpiece, as well as the final part in which we understand the influence that Kind of Blue had, and is still having, in the decades that followed, not only in jazz but in all genres of music.\nMy Ingeborg, by Tore Renberg ★★★★☆\n(La mia Ingeborg, Fazi)\nAwarded best book of the year by Norwegian booksellers, this one is a literary bestseller dragged along by lashing writing, as taut as a thriller and as moving as a love story, My Ingeborg is an intense tale of a family that, headed by a destructive man, falls apart. A great book.\nI love Russia, by Elena Kostyuchenko ★★★☆☆\n(La mia Russia, Einaudi)\nThis book is written by an independent Russian journalist who worked at Novaja Gazeta for many years until it was banned. Mostly, these are reportages from the great rural Russia, far from the big cities (the story from small villages on the high-speed train line between Moscow and St. Petersburg is one of the best). I Love Russia helps us understand today\u0026rsquo;s deep Russia and the consequences of the fall of the USSR and the advent of Putin. It is also a love letter to the homeland, hence the title, but it does not bend to the official narrative; quite the opposite.\nBlame! Vol. 1, by Tsutomu Nihei ★★★★☆\nI came to this manga after watching the action movie on Netflix. The movie intrigued me, and I wanted to trace the source. It was well worth the effort. Cyberpunk is at its best here.\nTaccuino 1870-1884, by Giuseppe De Nittis ★★★☆☆\nWe happened upon the De Nittis exhibition at the Royal Palace in Milan. It was a revelation, the best exhibition since the Pre-Raphaelite Brotherhood one in Forlì a few months ago. Giuseppe De Nittis\u0026rsquo;s notebook, an inconspicuous booklet displayed in a few copies in the bookshop at the end of the exhibition, caught my eye. I bought it because I wanted to learn more about this artist from southern Italy who emigrated to Paris to become one of the most famous painters of his era. It turned out to be a good purchase. De Nittis recounts salient episodes of his life in the French period and in London (where \u0026ldquo;I made my fortune\u0026rdquo;), with several enjoyable episodes occurring during his travels in Italy, especially in Naples and his hometown Barletta in Apulia. We learn a lot about the artist\u0026rsquo;s life, peculiar personality, and the upper-class lifestyle of the time. In contrast, Italian episodes often depict scenes of popular life that would come across as stereotypical today but are undoubtedly genuine.\nTrappole alimentari, by Stefano Vendrame ★★★☆☆\nThere are four things that never cease to amaze me: first, how disastrous people\u0026rsquo;s diets are; second, how little they realize; third, how even small changes in eating habits can make huge differences in health status; and fourth, how little people are willing to make such changes.\nVendrami is a nutritional biologist with great expertise and undoubted popularization skills (he\u0026rsquo;s also active on YouTube). In this book, he does not propose diets but highlights the \u0026ldquo;food traps\u0026rdquo; into which all of us in the West have fallen, induced mainly by the food industry. At the end of each chapter, Vendrami suggests behaviours and tricks that promise to get us back on track. Anchored in sound science, Food Traps is a valuable book worth keeping on hand, applying its suggestions a little at a time, without haste, with the long-term goal improving our nutrition strategy and, with it, achieve better health.\nSlow Horses, by Mick Herron ★★★☆☆\nThe first book in CWA Gold Dagger Award-winning British espionage series starring a team of MI5 agents united by one common bond: They\u0026rsquo;ve screwed up royally and will do anything to redeem themselves.\nThis was a fun read. I should read more fiction in the future, especially light-hearted fiction like this; it entertains and engages.\nPao Pao, by Pier Vittorio Tondelli ★★★☆☆\nThis book is a collection of autobiographical accounts from the author\u0026rsquo;s military service in 1980. In Italy, military service was mandatory—a rite of passage for generations of young adults. I went through that ten years later (1990), but the experiences were very similar. His conscript life was much more transgressive and unruly than mine, and the book perhaps indulges too much in those excesses, but PVT was like that. Pao Pao is a worthwhile read, especially for remembering a long-gone, intensely lived era that will never return. Also, PVT was a great writer.\nStoria di mia vita, Janek Gorczyca ★★☆☆☆☆\nThis book tells the the story of Janek, a Pole who has lived in Rome for over 30 years without a home, documents or a steady job. It is a work written in an overwhelming, cruel, and unique Italian language, as spoken by the protagonist. It is a short, rough and not wholly satisfying book.\nThe bastard brigade, Sam Kean ★★★★☆\n(La brigata dei bastardi, Adelphi)\nThe Bastard Brigate tells the gripping, untold story of a renegade group of scientists and spies determined to keep Adolf Hitler from obtaining the ultimate prize: a nuclear bomb. In the middle of building an atomic bomb, the leaders of the Manhattan Project were alarmed to learn that Nazi Germany was far outpacing the Allies in nuclear weapons research. Hitler, with just a few pounds of uranium, would have the capability to reverse the entire D-Day operation and conquer Europe. So they assembled a rough and motley crew of geniuses - dubbed the Alsos Mission - and sent them reeling into Axis territory to spy on, sabotage, and even assassinate members of Nazi Germany\u0026rsquo;s feared Uranium Club. This book is well conceived and executed, and I liked that there\u0026rsquo;s humour in it on almost every page, despite the dramatic events it narrates. I want to read more by Sam Kean.\nLacci, Domenico Starnone ★★★★☆\nWhat are we willing to sacrifice so as not to feel trapped? And what do we lose when we choose to retrace our steps? Nothing is more radical than abandonment, but nothing is more tenacious than those invisible ties that bind people to one another. And sometimes, all it takes is the slightest gesture to resurface what we have tried to put aside. Domenico Starnone gives us a moving story, a masterful account of an escape, of a return, of all the failures that seem impossible to us and those that keep us company for a lifetime.\nWalking, Erling Kagge (Camminare, Einaudi)\n★★★☆☆\nWalking, by Erling Kagge, is a book on walking. The author is an explorer who has walked to both poles and the summit of Everest; his performances are certainly out of the ordinary, yet in this book, he is more about the everyday act of walking: the walks he still takes every day, both in his neck of the woods (Norway) and around the many places in the world he has visited. The text contains thematic quotations from writers, philosophers, and other famous people, and it explores the meaning and utility, both physiological and psychological, of the act of walking. As a walker and hiker, I found myself in many of the arguments in the text, but Kagge explains and argues them better.\nBlame! Vol. 2, by Tsutomu Nihei ★★★★☆\nThe second instalment of Blame didn\u0026rsquo;t delude me. I\u0026rsquo;m not very deep into mangas, so sometimes I\u0026rsquo;m in trouble parsing what I\u0026rsquo;m seeing and making sense of a story often told via drawings rather than words, but I welcome the challenge.\nThe Ministry of Ungentlemanly Warfare, Damien Lewis ★★★☆☆ (Il ministero della guerra sporca)\nDamien Lewis became an author largely by accident, when a British publisher asked him if he\u0026rsquo;d be willing to turn a TV documentary he was working on into a book (source).\nReading the book, one notices that the author must not have a literary background, as the language seems more appropriate for an action movie. It is not great literature, but it does tell a story worth knowing, that of the early clandestine actions that saw the baptism of the British SOE and Anders Lassen (SOE, SAS, SBS), a role model for all brave and swaggering agents operating behind the lines. In celebrating the daring actions of these outlawed warriors, this book does not hide their flaws, such as the abundant use of drugs to sustain themselves in action. I was surprised to learn that at the end of WWII, SOE operated in my area, and Lassen ultimately found his death in Comacchio (FE). His body is buried at the Argenta Gap War Cemetery, not too far from where I live.\nThe three-body problem, Cixin Liu ★★★★☆ (Il problema dei tre corpi, Mondadori)\nIt took me oh-so-long to get to this book. I was scared it would be a delusion, and I\u0026rsquo;m glad to say I was wrong. Excellent writing, an enthralling story, and lots of science intermixed with intriguing philosophical concepts and wild ideas—Sci-fi at his best.\nWhite noise, Don DeLillo ★★★★☆ (Rumore Bianco, Einaudi)\nI missed DeLillo, as it had been some years since I read him. White Noise is from 1985 but is still fresh and relevant today, maybe especially today. It\u0026rsquo;s the book that brought him to prominence and with merit. A couple random quotes:\nMan’s guilt in history and in the tides of his own blood has been complicated by technology, the daily seeping falsehearted death.\nNo sense of the irony of human experience, that we are the highest form of life on earth, and yet ineffably sad because we know what no other animal knows, that we must die.\nDeLillo is The american postmodern writer. Well, along with Paul Auster, of course.\nClass trip, Emmanuel Carrère ★★★☆☆ (La settimana bianca, Einaudi)\nI thought this would be a chilly psychological murder mystery with a classic French Existentialism gloss. Instead, I read a haunting character study of a child filled with angst and dread, trying and failing to make sense of the disorienting world around him, never understanding the true nature of his existence in this meaningless, absurd, and often deadly world, which is French Existentialism in a nutshell. Class Trip is the only Carrere book I read that is pure fiction. He soon moved on to the fictionalised biography genre and became more effective there. Mine was a reread, as I found out today when I went to add the book to my library page and discovered I read it in 2016. It should tell either about the book\u0026rsquo;s impact on me, my ageing and sadly vanishing memory, or both. And yes, I own two copies of this book now; they\u0026rsquo;re different editions, at least.\nThe New York Trilogy, Paul Auster ★★★★☆ (Trilogia di New York, Einaudi)\nPaul Auster\u0026rsquo;s The New York Trilogy is a postmodern masterpiece. It is a collection of three short detective and mystery fiction novels initially published between 1985 and 1986: City of Glass, Ghosts and The Locked Room. Although seemingly independent stories, they share themes, atmospheres, and narrative structures that deeply connect them. All three novels explore the identity crisis of the protagonists, who are often driven to confuse themselves with other characters. The protagonists are isolated figures engulfed by an urban landscape (New York City) that becomes a veritable labyrinth. The city is more than a backdrop; it is a unifying and symbolic element. With its immensity and endless possibilities, New York represents a place of loss and finding but also an enigma. It functions as a reflection of the protagonists\u0026rsquo; obsessions and quests. Auster plays with the boundaries between reality and fiction, questioning the meaning of writing and storytelling. In some cases, the narrator almost emerges as a character (so much so that one character is named \u0026ldquo;Paul Auster\u0026rdquo;.) The author litters the three novels with recurring elements that create a sense of continuity and mysterious interconnectedness. The objects, character names, and details that reappear suggest that the stories are not independent but parts of a single narrative universe. Again, a masterpiece. Also, the book that gave Auster fame.\nAltri libertini, by Pier Vittorio Tondelli ★★★★☆ After Pao Pao, I wanted to go back to Pier Vittorio Tondelli, to his early work, to understand better what it was all about. I wanted to know more about the author, but also about what he was telling about, about that Italian generation of the late 70s and early 80s orphaned of the great ideals of the 60s, much more ramshackle, desperate and at the same time full of will to live. Great.\nAll your children, scattered, by Beata Umubyeyi Mairesse ★★★★☆ (I tuoi figli ovunque dispersi, e/o)\nI read this book almost by accident. It was a home reading assignment for my daughter Anna, who liked it and recommended it to me. It is a novel but also an autobiography, given the many commonalities between the author\u0026rsquo;s story and the Rwandan family featured in this novel. Everyone remembers the 1994 Tutsi genocide in Rwanda, if only from following the news on TV. This book tells us about those dramatic events and the trauma that followed, along with the life-long attempt to reconcile, from the point of view of those who experienced them firsthand. It isn\u0026rsquo;t easy to hold together the stories of four generations of protagonists and do so engagingly—good, solid book. I am grateful to Anna\u0026rsquo;s literature teacher; she always gives me stimulating and enriching readings.\nLolita was first published in France (1955), as the text was initially not accepted by any publisher in the States.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/books-i-read-in-2024/","summary":"\u003cp\u003eI read 30 books or 8365 pages in 2024, a solid improvement over \u003ca href=\"/books-i-read-in-2023/\"\u003elast\nyear\u003c/a\u003e\u0026rsquo;s, and many of those books were excellent.\n\u003cem\u003eLolita\u003c/em\u003e by Vladimir Nabokov was outstanding, Marcus Aurelius\u0026rsquo; \u003cem\u003eMeditations\u003c/em\u003e was\nincredible, and then there\u0026rsquo;s \u003cem\u003eFamily Lexicon\u003c/em\u003e and \u003cem\u003eThe garden of Finzi-Contini\u003c/em\u003e,\nand many others were close to that league. Yeah, color me satisfied.\u003c/p\u003e\n\u003cp\u003eThe usual scoring system applies:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOne star means a book is meh.\u003c/li\u003e\n\u003cli\u003eTwo stars mean a book is perfectly fine.\u003c/li\u003e\n\u003cli\u003eThree stars mean a book is good—consider it recommended.\u003c/li\u003e\n\u003cli\u003eFour stars mean a book is exceptional.\u003c/li\u003e\n\u003cli\u003eFive stars is pretty much unheard of.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"the-question-of-palestine-by-ew-said\"\u003eThe question of Palestine, by E.W. Said\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003e(La Questione Palestinese, il Saggiatore)\u003c/em\u003e\u003c/p\u003e","title":"Books I read in 2024"},{"content":"I sat to jot down a quick introduction to my C# 13 What\u0026rsquo;s New and Interesting session next week, and what I ended up with instead is a long rant or, should I dare, stream of consciousness that is certainly inappropriate for a five-minute introduction. I\u0026rsquo;ll have to cut most of it down, especially on the personal story part, but my site might be a good place to host it in all its completeness. I may reference this post at the start of the session on Monday for those few poor souls who might be interested.\nExactly one year ago we were here, in this same room, at the same conference, presenting C# 12. Some of you in the audience were present back then. If so, please raise your hands. Twelve months later, here we are again, looking at a new version of C#. It\u0026rsquo;s the new normal; this has been happening, give or take, since the advent of .NET Core and C# 8 in 2019. Previously, C# had a new release every 2–3 years, so the release rate has doubled or even tripled recently. Is this good news? If you\u0026rsquo;ve followed forums or social media, you might have noticed some controversy about the topic. The main complaint is that the language is changing too quickly, \u0026ldquo;chasing trends,\u0026rdquo; with no valuable addition to its core.\nMost of these complaints come from old-timers around my age (maybe even ten years younger because I\u0026rsquo;m seasoned) and have been in the .NET environment for many, perhaps too many years. There\u0026rsquo;s always a certain inertia, a form of resistance to change, especially when it\u0026rsquo;s rapid. But I\u0026rsquo;m seasoned enough to remember when complaints went in the opposite direction: back then, the .NET Framework (the historical, monolithic, Windows-only version) moved like a dinosaur while the world was racing ahead. New languages were blooming. Old competitors were evolving at double or triple the speed, constantly innovating, and—this is key—attracting hordes of developers. There was a critical moment when this attraction became so intense that more and more developers set aside .NET and C# to explore new directions. I know because I was one of them.\nAround 2010–11, I was set to create a new, rather complex platform of REST services, and instead of reaching out for my usual .NET toolchain, I chose Python. That marked the beginning of an adventure that lasted years and included the unexpected release of some reasonably successful open-source Python projects. The reasons I decided to abandon .NET and C# were several—not least the frustration with the lack of transparency and a clear path for the .NET ecosystem, its languages, with oh-so-many frameworks enthusiastically presented and then abandoned, changes of direction, and above all, in my case, it all being closed source, which didn\u0026rsquo;t allow me to dig deeper and understand why certain things didn\u0026rsquo;t work as expected. I clearly remember when I was writing my first REST service in Python and realized that in this new ecosystem if I didn\u0026rsquo;t understand what was happening behind the scenes (in my case, with the Flask framework), I could quickly look at what was going on because the entire Flask source code, like Python\u0026rsquo;s for that matter, was available not only for consumption but it was also open to contribution. Coming from the enterprise closed-source world, it was an empowering sensation.\nThe discovery of Flask was an absolute revelation, not for its intrinsic features (which were great) but because it was just one of the many options. In Python space, there were dozens of web frameworks at varying stages of maturity. There was a choice and often many different approaches to solve the same problem. I could experiment freely and decide what was best for my use case. Not only was I facing a vast and diverse world, but I could also use the operating system I wanted. Linux was much less demanding, let alone less expensive, for deployment than Windows, and behold! I could use a Mac for development. Open-source, cross-platform, with a vast community not only adopting the language and the standard library but constantly forging new solutions, making them available to the same community, almost always for free. It was the way forward.\nI envied that such a thing was unthinkable in my world. But unbeknownst to many, Microsoft was watching and taking notes. To the best of my knowledge, it was mainly the developers inside the corp —the dev team—who, glancing out of the ivory tower, began a campaign of internal lobbying, initially scattered and disorganized and later increasingly coordinated, which in turn led to endless meetings, discussions at coffee machines, and gradually, slowly and then more rapidly, to the advent of the .NET Core project. The metaphor of a snowball slowly rolling down a slope until it becomes an unstoppable avalanche perfectly applies here.\nSo, years after my departure (not an actual departure—I still worked in .NET for our legacy products), a new and unexpected .NET appeared on the scene. It was open-source, cross-platform, and open to external contributions. We could and perhaps should have a lengthy discussion on the openness to external contributions, but we can all agree that a revolution occurred and was historic in scale. At the same time, Microsoft opened up to other stacks, mainly because of Azure. I was shocked when I was proposed for a Microsoft MVP Award for my work on Python, not C#, at a time when Python had little to nothing to do with Microsoft. It made sense, as there was an urgent need to speak to developers outside its ecosystem—and perhaps even more so to those like me who had left: Hey, look, we\u0026rsquo;re back, we\u0026rsquo;re on track, and we\u0026rsquo;re not evil anymore.1 And there I was, finding my old stack (which I secretly, I admit, considered only museum-worthy) back to relevance, competing on equal footing with the rest of the scene. The delay was costly, though. Even today, I meet colleagues who think modern .NET is just a new version, if not a simple rebranding of the Windows framework of old, and C# is more or less the same, way behind the new kids on the block. It\u0026rsquo;s a shame, and there are responsibilities. Some choices could have been bolder and more disruptive, starting with naming the new framework—but that\u0026rsquo;s another story.\nToday, I create REST services with Minimal APIs on my Mac and deploy them on Linux via Docker at zero or near-zero cost, just as I would with Python, JavaScript, Rust, Go, or any other stack. The performance is far better than Python\u0026rsquo;s (C# REST services make circles around Python\u0026rsquo;s), and the toolchain is rich and powerful, especially around the command line, while many think .NET is still a GUI/Windows thing. Quick release cycles are essential to compensate for lost time (and there was lots of it) and stay on the cutting edge, sending a continuous signal that the platform is alive, thriving, and constantly expanding.\nAldus Manutius, the renowned Venetian printer and publisher of the Renaissance, adopted the Latin motto Festina lente, which translates to Make haste slowly or Hasten slowly. This paradoxical phrase encapsulates achieving careful, deliberate progress quickly and precisely, balancing urgency with caution. I feel that, consciously or not, the .NET team is on track with Manuzio\u0026rsquo;s goal: they iterate rapidly to achieve progress, balancing urgency with caution.\nNowadays, both .NET and C# focus on performance and while there\u0026rsquo;s room for growth, the current achievements are extraordinary. We\u0026rsquo;re competitive with most stacks, if not significantly ahead of them. Frequent, more minor C# releases allow for quick adjustments. Attentive developers adopt them continuously. Meanwhile, those who aren\u0026rsquo;t in a rush (probably most of Microsoft\u0026rsquo;s long-time customers, slow-moving conglomerates and the like) benefit from performance gains and technological advantages (multi-platform deployment!) at a low cost because, while the framework and language evolve, great effort is put into preserving backward compatibility. In most cases, migrating to .NET Core and newer versions of C# requires minimal effort.\nC# 12 introduced two significant features: primary constructors and collection expressions, with the latter being predominant in terms of syntactic, semantic, and performance importance. They weren\u0026rsquo;t the only new features but certainly the key ones. C# 13 innovates further but subtly—there\u0026rsquo;s less syntax and more semantics, building on last year\u0026rsquo;s new features. The improvements may be less flashy but guide developers in the right direction, often ensuring better performance at zero cost, sometimes even without us having to do anything. As we shall see, it happens because in recent releases—let\u0026rsquo;s say the last two or three— features were introduced primarily to improve the framework, which is also written in C#. Our higher-level applications benefit from all of this. It is a pattern we\u0026rsquo;ll observe repeatedly throughout this presentation.\nIf you think we\u0026rsquo;re talking about the same company that had its CEO infamously pronounce the \u0026ldquo;Linux is a cancer\u0026rdquo; quote, please consider that it happened on June 1, 2001. That was 23 (twenty-three!) years ago at the time of this writing. Take your time to process that. That happened like a couple of technological eras ago. I know it\u0026rsquo;s a distant past because I was there. Things have moved forward. Get over it. Of course, one must stay vigilant; things can change, but this is where we are now, and it is a good position to be in.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/on-csharp-and-dotnet-quick-release-cycle/","summary":"\u003cp\u003e\u003cem\u003eI sat to jot down a quick introduction to my \u003ca href=\"/speaking-at-the-dotnet-conference-italia-2024/\"\u003eC# 13 What\u0026rsquo;s New and Interesting\u003c/a\u003e session next week, and what I ended up with instead is a long rant or, should I dare, stream of consciousness that is certainly inappropriate for a five-minute introduction. I\u0026rsquo;ll have to cut most of it down, especially on the personal story part, but my site might be a good place to host it in all its completeness. I may reference this post at the start of the session on Monday for those few poor souls who might be interested.\u003c/em\u003e\u003c/p\u003e","title":"On C# and .NET quick release cycle"},{"content":"I\u0026rsquo;m speaking at the .NET Conference Italia 2024 on Dec 16th in Milan at the Microsoft House. My session is titled C# 13 What\u0026rsquo;s New and Interesting and will be on the latest iteration of the C# language. We\u0026rsquo;ll also briefly touch on .NET 9, which was also just released. Hope to see you there (make sure to come to me to say Hi!)\n","permalink":"https://nicolaiarocci.com/speaking-at-the-dotnet-conference-italia-2024/","summary":"\u003cp\u003eI\u0026rsquo;m speaking at the \u003ca href=\"https://www.dotnetconference.it\"\u003e.NET Conference Italia 2024\u003c/a\u003e on Dec 16th in Milan at the Microsoft House. My session is titled \u003ca href=\"https://www.dotnetconference.it/e/sessione/3589/C-13-e-NET-9-cosa-c%E2%80%99e-di-nuovo-e-interessante\"\u003eC# 13 What\u0026rsquo;s New and Interesting\u003c/a\u003e and will be on the latest iteration of the C# language. We\u0026rsquo;ll also briefly touch on .NET 9, which was also just released. Hope to see you there (make sure to come to me to say Hi!)\u003c/p\u003e","title":"Speaking at the .NET Conference Italia 2024"},{"content":" Inspired by the historic Dahomey Amazons and founded by three of the biggest powerhouses in African music, Mamani Keïta, Mariam Doumbia, and Oumou Sangare, Les Amazones d\u0026rsquo;Afrique have been using their voices to advocate for women\u0026rsquo;s rights since their 2017 debut. The group has never shied away from mashing up tradition and technology. Still, on Musow Dance, with the endlessly inventive production of Jacknife Lee, they lean heavily into an almost entirely electronic sound, turning up the energy several notches with booming 808s, dramatic synth slides, and bursts of vintage disco. But none of these additions ever overshadow the true soul of the music, instead amplifying the already formidable voices of Les Amazones d\u0026rsquo;Afrique\u0026rsquo;s ever-evolving lineup (source).\nMusow Dance is a stunning release, and Kuma Fo is just the perfect leading track. Every component is on point, finely dispensed and precisely interleaved: voices, sound, beat, you name it. The producer, after all, is Jacknife Lee (R.E.M., Taylor Swift, U2.)\nMusow Danse by Les Amazones d\u0026#39;Afrique Then, there are the lyrics with their meaninful message. While they all sing in their native language (the four members are from different African countries), I could dig out the English translation from the official video, which is equally good and powerful.\nShe preserves life, gives the first breath\nShe preserves life, gives the first breath\nWoman oh, oh woman\nShe gives the first breath\nChorus:\nWhatever they say\nWhatever women have to say\nIs worth listening to\nLife is hard, I fight with courage, let me be\nWhatever they say\nWhatever women have to say\nIs worth listening to\nYou know, my life is mine, so give me space\nThe world was created by a woman\nMika mika mika mika mika\nShe preserves life\nMika mika mika mika mika\nYou wonder how we’re gona make it?\nWe decided to gather our strength and fight\nWhatever it costs\nYou wonder how we’ll make it?\nChorus\nYou light up life\nYou light up life\nTo educate a woman is to educate a village\nTo educate a girl is to educate the world\nGet up, get up, get up\nRegain your feminine strength\nWoman, woman, woman, get up, get up\nRegain your feminine strength\nI travelled to the North\nPeople from the North told me\nThat women have dignity\nI travelled to the West\nPeople from the West told me\nThat women have dignity\nI belong to myself, I’m free to do what I like\nI will not accept what others want me to be\nI belong to myself, I’m free to do what I like\nI will never accept it anymore\nChorus\nWhatever they say\nWhatever women have to say\nIs worth listening to\nI will not be driven like a car\nWoman, woman, woman\nYou give hope\nYou give hope\nYou give hope\nYou give life\nTo educate a woman is to educate a village\nTo educate a girl is to educate the world\n","permalink":"https://nicolaiarocci.com/kuma-fo-by-les-amazones-dafrique/","summary":"\u003cblockquote\u003e\n\u003cp\u003eInspired by the historic Dahomey Amazons and founded by three of the biggest powerhouses in African music, Mamani Keïta, Mariam Doumbia, and Oumou Sangare, Les Amazones d\u0026rsquo;Afrique have been using their voices to advocate for women\u0026rsquo;s rights since their 2017 debut. The group has never shied away from mashing up tradition and technology. Still, on Musow Dance, with the endlessly inventive production of Jacknife Lee, they lean heavily into an almost entirely electronic sound, turning up the energy several notches with booming 808s, dramatic synth slides, and bursts of vintage disco. But none of these additions ever overshadow the true soul of the music, instead amplifying the already formidable voices of Les Amazones d\u0026rsquo;Afrique\u0026rsquo;s ever-evolving lineup (\u003ca href=\"https://daily.bandcamp.com/best-of-2024/the-best-albums-of-2024-g-m\"\u003esource\u003c/a\u003e).\u003c/p\u003e","title":"Kuma Fo by Les Amazones D'Afrique"},{"content":"I just finished reading Paul Auster\u0026rsquo;s The New York Trilogy1. On this occasion, I discovered a new use for ChatGPT and LLMs. ChatGPT and I chatted about the themes, especially the correlations and connections between the three short novels that comprise the volume. It was an alienating and revealing experience. For the first time, I am reasoning about a book with a machine, not a person. Because it knows everything about the text and draws on the shared global knowledge, it can give more satisfaction than most people do (also, it\u0026rsquo;s not easy to find someone around with whom I can talk about all the books I read!) Yes, it is wordy and repetitive, but it can stimulate and enrich my analysis2.\nI\u0026rsquo;ve been using LLMs (ChatGPT and Claude) more and more lately, especially for work. The more I use them, the more I understand how to leverage their capabilities. I would have never thought about sharing my reading experiences with ChatGPT before. Ethan Mollick has it right; we should all put at least 10 hours into LLMs before judging them.\nYour goal is simple: spend 10 hours using AI on tasks that actually matter to you. After that, you\u0026rsquo;ll have a natural sense of how AI fits into your work and life. You\u0026rsquo;ll develop an intuition for effective prompting, and you\u0026rsquo;ll better understand AI\u0026rsquo;s potential. Don\u0026rsquo;t aim for perfection - just start somewhere and learn as you go.\nI\u0026rsquo;ve not been posting my usual short book reviews in 2024. I\u0026rsquo;m reading a lot, though, and updating a \u0026ldquo;Books I read in 2024\u0026rdquo; article as I go on. I plan to publish it by the end of the year.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSharing that chat with Serena was another remarkable feature.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/reading-books-and-commenting-on-them-with-chatgpt/","summary":"\u003cp\u003eI just finished reading Paul Auster\u0026rsquo;s The New York Trilogy\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. On this occasion, I discovered a new use for ChatGPT and LLMs. ChatGPT and I chatted about the themes, especially the correlations and connections between the three short novels that comprise the volume. It was an alienating and revealing experience. For the first time, I am reasoning about a book with a machine, not a person. Because it knows everything about the text and draws on the shared global knowledge, it can give more satisfaction than most people do (also, it\u0026rsquo;s not easy to find someone around with whom I can talk about all the books I read!) Yes, it is wordy and repetitive, but it can stimulate and enrich my analysis\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Reading books and commenting on them with ChatGPT"},{"content":"I took a daily hike in my beloved Apennine Mountains a few weeks ago. One of my favourite motorcycling routes is the narrow, engaging, panoramic road that unites Corniolo in the Bidente Valley with Marradi and the Mugello area via the Braccina Pass. I always wanted to return and hike through it; the moment had come.\nIt was an excellent circular tour that, to the merits of moderation-it is not too long, nor too strenuous, the ascent is always gradual, etc. - also combines the variety of the environment, shading from mixed mid-altitude broadleaf forests (hornbeams, oaks, ash, cherry, maple) to coniferous reforestations that in this case, with increasing age and size, have taken on a certain dignity.\nValpisella is a rural stone building dating back to 1872 and later reclaimed as a vacation home by the volunteer work of ANPI partisans. When I arrived, I could hear people enjoying their lunch inside. It\u0026rsquo;s a nice place; unfortunately, I forgot to take a picture.\nIf hiked at a brisk pace, it might take only half a day, but with a few well-deserved stops and savouring the myriad details that the various seasons can offer, it fills the whole day without difficulty.\nThe Corniolo/Braccina route marked my first winter hike of the season. I recently realized that, to me, daily hikes are more accessible in the winter. In summer, I\u0026rsquo;m usually too busy between motorcycling trips with the Club, family matters, holidays and, since we live close by, going to the beach.\nGPS track is available here.\n","permalink":"https://nicolaiarocci.com/from-corniolo-to-passo-braccina-via-valpisella/","summary":"\u003cp\u003eI took a daily hike in my beloved Apennine Mountains a few weeks ago. One of my favourite motorcycling routes is the narrow, engaging, panoramic road that unites Corniolo in the Bidente Valley with Marradi and the Mugello area via the Braccina Pass. I always wanted to return and hike through it; the moment had come.\u003c/p\u003e\n\u003cp\u003eIt was an excellent circular tour that, to the merits of moderation-it is not too long, nor too strenuous, the ascent is always gradual, etc. - also combines the variety of the environment, shading from mixed mid-altitude broadleaf forests (hornbeams, oaks, ash, cherry, maple) to coniferous reforestations that in this case, with increasing age and size, have taken on a certain dignity.\u003c/p\u003e","title":"From Corniolo to Passo Braccina via Valpisella"},{"content":"A walk on the beach right after the storm. Lots of logs scattered all around, for miles.\nAnd sanderlings running all over the place.\n","permalink":"https://nicolaiarocci.com/a-walk-after-the-storm/","summary":"\u003cp\u003eA walk on the beach right after the storm. Lots of logs scattered all around, for miles.\u003c/p\u003e\n\n\u003cdiv style=\"padding:56.25% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/1021633268?badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture; clipboard-write\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"After the storm\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cscript src=\"https://player.vimeo.com/api/player.js\"\u003e\u003c/script\u003e\n\n\u003cp\u003eAnd sanderlings running all over the place.\u003c/p\u003e\n\n\u003cdiv style=\"padding:56.25% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/1021609203?badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture; clipboard-write\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"Sanderlings\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cscript src=\"https://player.vimeo.com/api/player.js\"\u003e\u003c/script\u003e","title":"A walk after the storm"},{"content":"Kara Swisher, a dean in digital and classical journalism, has an interesting article in the New York Magazine. As a witness and protagonist she recounts how in the last 30 years digital has eaten away at traditional media and how today, with the advent of AI, there is a risk of it happening all over again. Above all, she reasons why it is essential for journalists not to surrender their weapons and lawmakers to step in and finally harness an industry that always had free reign and no regulation, as it is considered inevitable.\n[\u0026hellip;] more and more people across the globe get their news and cues from social media. It has a scary ability to generate anxiety and rage, and it is addictive. Expert after expert I’ve talked to over the years has made the same point — in the new paradigm, engagement equals enragement. This is made worse by the people who run these companies, for whom anticipation of consequences is lacking and whose first instinct is to let it all through the gate, regardless of potential damage or danger. What’s the opposite of the mommy state? Parent-free chaos.\nRead her article here.\nI appreciate how Swisher was an initial proponent of digital advent, so much so that she co-founded All Things Digital. Yet, that didn\u0026rsquo;t prevent her from foreseeing the troubled waters ahead.\n","permalink":"https://nicolaiarocci.com/journalists-should-not-surrender-their-weapons/","summary":"\u003cp\u003eKara Swisher, a dean in digital and classical journalism, has an interesting article in the New York Magazine. As a witness and protagonist she recounts how in the last 30 years digital has eaten away at traditional media and how today, with the advent of AI, there is a risk of it happening all over again. Above all, she reasons why it is essential for journalists not to surrender their weapons and lawmakers to step in and finally harness an industry that always had free reign and no regulation, as it is considered inevitable.\u003c/p\u003e","title":"Journalists should not surrender their weapons"},{"content":"Today I released Eve 2.2. It is a maintenance release that drops old Pythons and adds support for the latest versions of the language. Long overdue, it also gets rid of some annoying deprecation warnings. As always, see the changelog for details. Many thanks to Bret Curtis and Guillaume Le Pape for their contributions to this release.\n","permalink":"https://nicolaiarocci.com/eve-2.2.0/","summary":"\u003cp\u003eToday I released \u003ca href=\"https://pypi.org/project/Eve/2.2.0/\"\u003eEve 2.2\u003c/a\u003e. It is a maintenance release that drops old Pythons and adds support for the latest versions of the language. Long overdue, it also gets rid of some annoying deprecation warnings. As always, see the \u003ca href=\"https://docs.python-eve.org/en/stable/changelog.html#version-v2-2\"\u003echangelog\u003c/a\u003e for details. Many thanks to Bret Curtis and Guillaume Le Pape for their contributions to this release.\u003c/p\u003e","title":"Eve 2.2.0"},{"content":"Why does man print \u0026ldquo;gimme gimme gimme\u0026rdquo; at 00:30?\nThe maintainer of man is a good friend of mine, and one day six years ago I jokingly said to him that if you invoke man after midnight it should print \u0026ldquo;gimme gimme gimme\u0026rdquo;, because of the Abba song called \u0026ldquo;Gimme gimme gimme a man after midnight\u0026rdquo;. Well, he did actually put it in. A few people were amused to discover it, and we mostly forgot about it until today.\nLong live the good old hacker spirit. Full story here.\n","permalink":"https://nicolaiarocci.com/gimme-gimme-gimme/","summary":"\u003cp\u003eWhy does \u003ca href=\"https://www.man7.org/linux/man-pages/man1/man.1.html\"\u003eman\u003c/a\u003e print \u0026ldquo;gimme gimme gimme\u0026rdquo; at 00:30?\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe maintainer of man is a good friend of mine, and one day six years ago I\njokingly said to him that if you invoke man after midnight it should print\n\u0026ldquo;gimme gimme gimme\u0026rdquo;, because of the Abba song called \u0026ldquo;Gimme gimme gimme a man\nafter midnight\u0026rdquo;.  Well, he did actually put it in. A few people were amused to\ndiscover it, and we mostly forgot about it until today.\u003c/p\u003e","title":"Gimme gimme gimme"},{"content":"I just released FatturaElettronica .NET v3.5.0. This version adds multi-language support, all thanks to the excellent work done by Michael Mairegger. We currently support Italian and German and are ready to accept contributions for other languages. The Fattura Elettronica open-source project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by the Italian Revenue Agency.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-v3.5/","summary":"\u003cp\u003eI just released \u003ca href=\"https://www.nuget.org/packages/FatturaElettronica\"\u003eFatturaElettronica .NET v3.5.0\u003c/a\u003e. This version adds multi-language support, all thanks to the excellent work done by \u003ca href=\"https://michaelmairegger.it\"\u003eMichael Mairegger\u003c/a\u003e. We currently support Italian and German and are ready to accept contributions for other languages. The Fattura Elettronica open-source project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by the Italian Revenue Agency.\u003c/p\u003e","title":"Fattura Elettronica v3.5"},{"content":"I never knew about the connection between Ray Bradbury, John Huston, and Herman Melville.\nToday, few people are aware that Bradbury, renowned science fiction writer, beloved fantasist, and mainstay on banned-book lists, wrote the screenplay for the 1956 John Huston adaptation of the Melville classic, which starred Gregory Peck as the iconic and obsessive Captain Ahab. Writing the screenplay was a dream come true for Bradbury, until it morphed into a waking nightmare. As the old adage goes: Never meet your heroes.\nFascinating stuff. Well written, too. Read the full story here.\n","permalink":"https://nicolaiarocci.com/i-am-herman-melville/","summary":"\u003cp\u003eI never knew about the connection between Ray Bradbury, John Huston, and Herman Melville.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eToday, few people are aware that Bradbury, renowned science fiction writer, beloved fantasist, and mainstay on banned-book lists, wrote the screenplay for the 1956 John Huston adaptation of the Melville classic, which starred Gregory Peck as the iconic and obsessive Captain Ahab. Writing the screenplay was a dream come true for Bradbury, until it morphed into a waking nightmare. As the old adage goes: Never meet your heroes.\u003c/p\u003e","title":"I am Herman Melville"},{"content":"Dave Rupert, reasoning on why he likes books:\nBooks are strange objects. Chapters and chapters of coherent research and lived experiences assembled by people who wanted to put it all down in one place. Edited by actual editors who like editing. Designed— down to the weight of the paper, the typography, and the illustration on the cover— to make the experience of reading it enjoyable. Books are uncanny and impractical objects. A terribly inefficient way to encode information from one brain to another, but an excellent way to tell a story.\nFull post here.\n","permalink":"https://nicolaiarocci.com/books-are-strange-objects/","summary":"\u003cp\u003eDave Rupert, reasoning on why he likes books:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBooks are strange objects. Chapters and chapters of coherent research and lived experiences assembled by people who wanted to put it all down in one place. Edited by actual editors who like editing. Designed— down to the weight of the paper, the typography, and the illustration on the cover— to make the experience of reading it enjoyable. Books are uncanny and impractical objects. A terribly inefficient way to encode information from one brain to another, but an excellent way to tell a story.\u003c/p\u003e","title":"Books are strange objects"},{"content":"Today, I learned the hard way that NGINX has small buffer sizes, which can cause trouble in specific scenarios like mine.\nWe have two ASP.NET 8 applications behind NGINX; one is a regular web app, and the other is an auth server built with Duende Identity Server. When the user attempts to log in to the web app, they are sent to the auth server; once logged in, they are sent back to the app, and that\u0026rsquo;s when NGINX returns a weird 502 Bad Gateway. Upon inspecting the NGINX logs, I found the following error:\nupstream sent too big header while reading response header from upstream Some digging revealed that NGINX has a pretty small default buffer size, and proxying auth requests (with their typically above-average-size headers) back and forth is prone to breaking that limit.\nThe fix is straightforward: raise those buffer sizes. Most blogs suggest doing that globally, but that seems overkill, as NGINX buffering can be configured per server and location blocks. You may want to keep the global defaults and only raise them (along with memory consumption) for locations that need it.\nlocation { ... proxy_buffers 4 256k; proxy_buffer_size 128k; proxy_busy_buffers_size 256k; ... } Mind you, the above values (that I found in almost every blog dealing with this problem) are likely too big and should be trimmed down. That\u0026rsquo;s my next task, using this excellent article for guidance.\n","permalink":"https://nicolaiarocci.com/under-aspnet-8-nginx-returns-502-bad-gateway-after-authentication-by-identityserver/","summary":"Today, I learned the hard way that NGINX has default buffer sizes, which can cause trouble in specific scenarios like mine.","title":"Under ASP.NET 8, NGINX returns 502 Bad Gateway after authentication by IdentityServer"},{"content":"I admit, like many of my compatriots in this last year and a half, I follow a lot more tennis than usual, and it is all the fault (or merit) of Jannick Sinner. The top-level pro tennis field appears distant, privileged, brilliant and rewarding. We appreciate the immense talent of these players and sympathize with the struggle and stress they undergo. We praise their character, determination, and mental strength. They make a lot of money, so we infer they conduct fulfilling and satisfying lives. Most fans, however, ignore how crowded, harsh, lonely, and unapologetic professional players\u0026rsquo; lives are below the elite.\nThe Loneliness of the Low-ranking Tennis Player, by Conor Niland, chronicles the life of players at the Challenger and Futures levels, one or two steps below the elite. Sinner, Alcaraz, and most other stars have only skimmed through these purgatorial circles thanks to their talent, and still, hundreds spend their entire career trapped in there, and it\u0026rsquo;s not as pretty as we, the laymen, may think.\n","permalink":"https://nicolaiarocci.com/the-loneliness-of-the-low-ranking-tennis-player/","summary":"\u003cp\u003eI admit, like many of my compatriots in this last year and a half, I follow a lot more tennis than usual, and it is all the fault (or merit) of Jannick Sinner. The top-level pro tennis field appears distant, privileged, brilliant and rewarding. We appreciate the immense talent of these players and sympathize with the struggle and stress they undergo. We praise their character, determination, and mental strength. They make a lot of money, so we infer they conduct fulfilling and satisfying lives. Most fans, however, ignore how crowded, harsh, lonely, and unapologetic professional players\u0026rsquo; lives are below the elite.\u003c/p\u003e","title":"The loneliness of the low ranking tennis player"},{"content":" In the end we won because the open source community started to converge on distributed version control and we were the only ones in the hosting space that truly cared about how developers worked at all. The only ones who questioned it, approached it from first principles, tried to make it better holistically rather than just throwing more features onto something existing in order to sell it.\nFull story here. A great run-down by Scott Cahon himself on why Git and then GitHub won the version control system war.\n","permalink":"https://nicolaiarocci.com/why-github-actually-won/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIn the end we won because the open source community started to converge on distributed version control and we were the only ones in the hosting space that truly cared about how developers worked at all. The only ones who questioned it, approached it from first principles, tried to make it better holistically rather than just throwing more features onto something existing in order to sell it.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eFull story \u003ca href=\"https://blog.gitbutler.com/why-github-actually-won/\"\u003ehere\u003c/a\u003e. A great run-down by Scott Cahon himself on why Git and then GitHub won the version control system war.\u003c/p\u003e","title":"Why Github actually won"},{"content":"At home, we haven’t done anything about it yet: we’re still 100% grid-dependant and old-fashioned, partly because it would be problematic for us as we live in an apartment building and partly because, frankly, it still seems expensive, especially with three kids studying away from home. Also, I want to avoid getting entangled in another project; my mental bandwidth is limited (and I suspect it will only worsen over time.)\nBut I follow the solar energy topic and stay up to speed, as I want to take action one day. Here are two articles I read just in the last couple of days. In many aspects, they are similar, and both draw very optimistic conclusions: solar will get unfathomably cheap.\nSolar will get too cheap to connect to the grid, by Ben James What Will We Do With Our Free Power?, By David Wallace-Wells ","permalink":"https://nicolaiarocci.com/solar-will-get-unfathomably-cheap/","summary":"\u003cp\u003eAt home, we haven’t done anything about it yet: we’re still 100% grid-dependant and old-fashioned, partly because it would be problematic for us as we live in an apartment building and partly because, frankly, it still seems expensive, especially with three kids studying away from home. Also, I want to avoid getting entangled in another project; my mental bandwidth is limited (and I suspect it will only worsen over time.)\u003c/p\u003e","title":"Solar will get unfathomably cheap"},{"content":" A few days into making One Million Checkboxes I thought I’d been hacked. What was that doing in my database? A few hours later I was tearing up, proud of some brilliant teens.\nFull story here.\nWhat a great story. Teenagers who are enthusiastic about hacking and coding and have lots of fun in creative ways. It reminds me so much of my teenage years, like when assembling a fake backdoor on Lorien, my first BBS, as a honeypot to attract local hackers so I could later reach out and get to know them1.\nLong gone are those days, and I wish I still had that kind of drive.\nWhich was a successful attempt. We formed a team that went on to crack ITAPAC (we\u0026rsquo;re talking pre-Internet era) and do other funny things.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-secret-inside-one-million-checkboxes/","summary":"\u003cblockquote\u003e\n\u003cp\u003eA few days into making One Million Checkboxes I thought I’d been hacked. What was that doing in my database? A few hours later I was tearing up, proud of some brilliant teens.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eFull story \u003ca href=\"https://eieio.games/essays/the-secret-in-one-million-checkboxes/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhat a great story. Teenagers who are enthusiastic about hacking and coding and have lots of fun in creative ways. It reminds me so much of my teenage years, like when assembling a fake backdoor on Lorien, my first BBS, as a honeypot to attract local hackers so I could later reach out and get to know them\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"The secret inside One Million Checkboxes"},{"content":"For nerds of my generation, Infocom is a legend. Today, I watched the long-time overdue Infocom: The Documentary and I found it to be a gem.\nWith no commentary or narration but made up of the protagonists’ testimonies alone, it effectively evokes the excitement and enthusiasm around the early computer game industry (and software development in general) of those early years. It is also a cautionary tale about how easy it is to fall once you reach the peak1\nIf you dig this type of retro content, check out GET LAMP: The Text Adventure Documentary, from which Infocom: The Documentary was extracted.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/infocom-the-documentary/","summary":"\u003cp\u003eFor nerds of my generation, Infocom is a legend. Today, I watched the long-time overdue \u003cem\u003eInfocom: The Documentary\u003c/em\u003e and I found it to be a gem.\u003c/p\u003e\n\u003cp\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/OXNLWy7rwH4?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003cp\u003eWith no commentary or narration but made up of the protagonists’ testimonies alone, it effectively evokes the excitement and enthusiasm around the early computer game industry (and software development in general) of those early years. It is also a cautionary tale about how easy it is to fall once you reach the peak\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e","title":"Infocom: The Documentary"},{"content":"I\u0026rsquo;m abandoning Twitter/X. I\u0026rsquo;ll freeze the account without deleting it; never say never, but I don\u0026rsquo;t plan on coming back. I no longer feel comfortable on that platform and haven\u0026rsquo;t been for a while.\nIf you still want to follow me (I\u0026rsquo;d love for you to do so), the best option is my website where I always post first (RSS feed here), the mailing list, or Mastodon.\n","permalink":"https://nicolaiarocci.com/im-leaving-twitter/x/","summary":"\u003cp\u003eI\u0026rsquo;m abandoning Twitter/X. I\u0026rsquo;ll freeze the account without deleting it; never say never, but I don\u0026rsquo;t plan on coming back. I no longer feel comfortable on that platform and haven\u0026rsquo;t been for a while.\u003c/p\u003e\n\u003cp\u003eIf you still want to follow me (I\u0026rsquo;d love for you to do so), the best option is \u003ca href=\"https://nicolaiarocci.com\"\u003emy website\u003c/a\u003e  where I always post first (RSS feed \u003ca href=\"https://nicolaiarocci.com/index.xml\"\u003ehere\u003c/a\u003e), the \u003ca href=\"https://buttondown.email/nicolaiarocci\"\u003emailing list\u003c/a\u003e, or \u003ca href=\"https://fosstodon.org/@nicola\"\u003eMastodon\u003c/a\u003e.\u003c/p\u003e","title":"I'm leaving Twitter/X"},{"content":"We spent a weekend in Venice1 a short while ago, and one of the things that caught my attention was the wells in the city\u0026rsquo;s squares. Is there fresh water underneath that brackish swamp water? Well, no. The water from the wells in Venice is rainwater, collected by an ingenious hydraulic collection system that leveraged the square and surrounding buildings.\nI learned this and other intriguing tidbits by watching The Crazy Engineering of Venice on YouTube.\nWe were in Venice on a sailing trip, but that\u0026rsquo;s for another post.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-crazy-engineering-of-venice/","summary":"\u003cp\u003eWe spent a weekend in Venice\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e a short while ago, and one of the things that caught my attention was the wells in the city\u0026rsquo;s squares. Is there fresh water underneath that brackish swamp water? Well, no. The water from the wells in Venice is rainwater, collected by an ingenious hydraulic collection system that leveraged the square and surrounding buildings.\u003c/p\u003e\n\u003cp\u003eI learned this and other intriguing tidbits by watching \u003ca href=\"https://youtu.be/77omYd0JOeA\"\u003eThe Crazy Engineering of Venice\u003c/a\u003e on YouTube.\u003c/p\u003e","title":"The crazy engineering of Venice"},{"content":"Quoting Bryan Baun:\nCapability makes your life simpler. Tolerance, skills, knowledge, and health are always with you, wherever you go. They are assets but they take up no space. They are stored in your body. Some lack capability through no fault of their own, but anyone can increase their capability. It’s an investment that pays dividends every day.\n","permalink":"https://nicolaiarocci.com/capability-makes-you-life-simpler/","summary":"\u003cp\u003eQuoting \u003ca href=\"https://www.bryanbraun.com/2024/07/31/capability-makes-your-life-simpler/\"\u003eBryan Baun\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCapability makes your life simpler. Tolerance, skills, knowledge, and health are always with you, wherever you go. They are assets but they take up no space. They are stored in your body. Some lack capability through no fault of their own, but anyone can increase their capability. It’s an investment that pays dividends every day.\u003c/p\u003e\u003c/blockquote\u003e","title":"Capability makes you life simpler"},{"content":"Rand Fishkin on the evolution of digital marketing:\nWell, marketing friends, we gotta have a serious talk. Because the way we’ve done marketing for the last twenty years is ending. I’m serious. I believe that Rand in 2010 would have told you that digital marketing was all about being able to track every view and every click, so that when conversions happened, we could perfectly attribute them, is wrong today. Back then, we could say: “Oh, this piece of content, this advertisement, this PR investment, this word-of-mouth effort is worthwhile because it turned into this trackable, perfectly attributable series of events in our analytics.” It doesn’t work this way anymore. That’s because clicks are dying and attribution is dying. There’s only one way forward.\nA 7 minutes video, with transcript, is available here.\nYes, he\u0026rsquo;s stating the obvious in some ways, but it\u0026rsquo;s his job to spread the word to the masses, and he\u0026rsquo;s been doing that for quite a long time. I remember seeing him on stage in San Marino many years ago when his gospel was about SEO, SERP attribution, and traceability. I am glad to find that he\u0026rsquo;s still on the go.\nMy colleague Stefano correctly points out that Rand\u0026rsquo;s final advice on moving where the public is today is sound and reasonable, but it is nothing new. It\u0026rsquo;s always been about that. In 2014, we went to Google AdWords and the likes because that\u0026rsquo;s where the public was back then. In the 2020s, the public has flocked to platforms\u0026rsquo; walled gardens and digital marketers follow the herd, like a pack of wolves.\n","permalink":"https://nicolaiarocci.com/digital-market-is-going-back-to-20th-century/","summary":"\u003cp\u003eRand Fishkin on the evolution of digital marketing:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWell, marketing friends, we gotta have a serious talk. Because the way we’ve done marketing for the last twenty years is ending. I’m serious. I believe that Rand in 2010 would have told you that digital marketing was all about being able to track every view and every click, so that when conversions happened, we could perfectly attribute them, is wrong today. Back then, we could say: \u003cem\u003e“Oh, this piece of content, this advertisement, this PR investment, this word-of-mouth effort is worthwhile because it turned into this trackable, perfectly attributable series of events in our analytics.”\u003c/em\u003e It doesn’t work this way anymore.  That’s because clicks are dying and attribution is dying. There’s only one way forward.\u003c/p\u003e","title":"Digital market is going back to 20th century"},{"content":"I dig the attempt at a Solarpunk Manifesto.\nSolarpunk is a movement in speculative fiction, art, fashion, and activism that seeks to answer and embody the question “what does a sustainable civilization look like, and how can we get there?”\nThe aesthetics of solarpunk merge the practical with the beautiful, the well-designed with the green and lush, the bright and colorful with the earthy and solid.\nSolarpunk can be utopian, just optimistic, or concerned with the struggles en route to a better world , but never dystopian. As our world roils with calamity, we need solutions, not only warnings.\nSolutions to thrive without fossil fuels, to equitably manage real scarcity and share in abundance instead of supporting false scarcity and false abundance, to be kinder to each other and to the planet we share.\nSolarpunk is at once a vision of the future, a thoughtful provocation, a way of living and a set of achievable proposals to get there.\nI\u0026rsquo;m too compromised and ahead in age to make it my own. Still, I hope this movement has traction among young people, especially those in my field—optimism and activism instead of denial and despair.\nRead the whole document here.\n","permalink":"https://nicolaiarocci.com/a-solarpunk-manifesto/","summary":"\u003cp\u003eI dig the attempt at a \u003ca href=\"https://www.re-des.org/es/a-solarpunk-manifesto/\"\u003eSolarpunk Manifesto\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSolarpunk is a movement in speculative fiction, art, fashion, and activism that seeks to answer and embody the question “what does a sustainable civilization look like, and how can we get there?”\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe aesthetics of solarpunk merge the practical with the beautiful, the well-designed with the green and lush, the bright and colorful with the earthy and solid.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSolarpunk can be utopian, just optimistic, or concerned with the struggles en route to a better world ,  but never dystopian. As our world roils with calamity, we need solutions, not only warnings.\u003c/p\u003e","title":"A Solarpunk Manifesto"},{"content":" Cause the technology is just gonna get better and better and it\u0026rsquo;s gonna get easier and easier and more and more convenient and more and more pleasurable to sit alone with images on a screen given to us by people who do not love us but want our money and that\u0026rsquo;s fine in low doses but if it\u0026rsquo;s the basic main staple of your diet you\u0026rsquo;re gonna die.\n\u0026ndash; David Foster Wallace\n","permalink":"https://nicolaiarocci.com/david-foster-wallace-on-screen-time/","summary":"\u003cblockquote\u003e\n\u003cp\u003eCause the technology is just gonna get better and better and it\u0026rsquo;s gonna get easier and easier and more and more convenient and more and more pleasurable to sit alone with images on a screen given to us by people who do not love us but want our money and that\u0026rsquo;s fine in low doses but if it\u0026rsquo;s the basic main staple of your diet you\u0026rsquo;re gonna die.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://www.quotes.net/mquote/1089473\"\u003eDavid Foster Wallace\u003c/a\u003e\u003c/p\u003e","title":"David Foster Wallace on screen time"},{"content":"I left home at 5 AM on my Triumph Bonneville, arrived in Palafavera at about 9 AM, and left on foot half an hour later. I was eager to see the Civetta\u0026rsquo;s northwest face again, and it was as I remembered it: giant, looming, impressive, intimidating, outstanding. As I crossed the valley below, I thought about Marco Anghilleri, who completed the first winter repeat of the Solleder route on that wall, and just then, I came across a plaque, just below the summit\u0026rsquo;s vertical, announcing his passing on the Central Freney Pylon in 2014. He fell while attempting the first winter solo of a challenging route there.\nColdai Lake, immediately above the refuge and the homonymous saddle, at 2143 mt. On the left in the background is a glimpse of the huge west face of Civetta.\nThe monumental northwest face of Civetta, more than 1,000 meters of vertical rock with a total extension of more than 4 km\nAfter the fork to the Rifugio Tissi, the crowd (literally) disappeared. We are on the Alta Via 1, which has become an international attraction since I walked it almost thirty years ago: French, Dutch, Americans, and Italians, all lining up to complete it, and I guess it is a good thing, or maybe not? I snacked on one of the two small sandwiches I had bought at a café in Zoldo, enjoying the sunshine in a surprisingly flat clearing that was undoubtedly once an alpine pasture. I was low on water but heard water running nearby as I ate. And indeed, there was a stream just a few meters from me, and I refilled my water bottle. This canteen has a water filter and costs a lot, but it grants safety and peace of mind. It is too bad it is small; I should have gotten the 1L version. 0.6L is small when you are out all day in the sun in summer, and there\u0026rsquo;s little to no water around.\nCason del Col Raen, a splendid and lonely alpine pasture, now abandoned.\nThe evening at Rifugio Vazzoler was enjoyable. I had dinner at a table outside, sitting with five French people and one Spaniard. The French were two groups: three guys from Paris fleeing the 2024 Olympics and a couple from Lyon. She speaks Italian and breeds horses for a living, while he is an ultra-marathon runner who is a bit introverted and sulky but definitely on the ball. After the others went to bed, I chatted a little longer with Javier from Malaga. Last year, he did the Tour du Mont Blanc solo, his first real hiking experience. Remarkable. Like everyone else (except me) at the Vazzoler, he is now doing the Alta Via 1. After so much time avoiding them, I reevaluated the Alpine hut experience. In recent years, I have opted for wild camping away from the crowds. Still, the social aspect of sharing the experience in a cosy facility after a long day of strenuous hiking makes it all magical and unforgettable. There is another great advantage to the shelter: fewer logistical difficulties and less weight (tent, sleeping bag, stove, food) to carry around, which is no small thing, especially at 54. Looming over Vazzoler are Torre Venezia and Torre Trieste, the first of which I climbed almost thirty years ago. It was good to see it again and recall those strong emotions.\nTorre Venezia as seen from Rifugio Vazzoler, where I spent the night.\nAfter a restful night (I wouldn\u0026rsquo;t have guessed it, I was in a dormitory with 24 beds-luckily the one next to me was empty, and on the other side, I had the wooden wall-apt choice) I set off for the second and (much) more challenging stage, the one that would climb the very steep wall leading to Van delle Sasse and the fork above, then traverse the challenging Tivan Trail to Rifugio Coldai and then back to Palafavera. The climb was steady for almost 2 1/2 hours, always in an exciting environment. I never cease to be amazed at the wit of the hunters and hikers who, in ages long gone, have traced these daring routes. The Van delle Sasse is an isolated and wonderful high-altitude basin. There are no words to describe it. Almost unreachable, lonely, circled by a crown of peaks, with a flat, green plain just below the fork. It is the result of what used to be at the bottom of a massive glacier of lost epic. As I left early, I got up there first and met nobody the whole time. I rested and ate dried fruit at the Forcella delle Sasse above.\nTorre Venezia (left) illuminated by the first light of dawn. I climbed the tower some 30 years ago. As always in mountaineering, the structure seen from afar is much more awe-inspiring than when you are in its arms.\nForcella delle Sasse seen from Van delle Sasse below. The photo does not render the idea. At the foot of the fork, what appears to be a small green area is actually a plane at least the size of a soccer field, completely flat, green and perfect for camping at altitude.\nVan delle Sasse, seen from the Forcella delle Sasse. This is certainly one of the most remote and inaccessible places I have reached in my mountaineering experience.\nI began the rugged and steep descent, first on an equipped section (a few meters of iron cable), then on a very steep and slippery scree, and then I took the Tivan Trail to the left, which I must say I had underestimated. Very long, a continuous up and down at the foot of the looming Civetta walls. When it connects with the trail that goes up to Coldai from Pecol, it becomes a steady though not steep climb, interrupted often by exposed and equipped (again, iron cables) downhill sections, practically until the vicinity of the refuge. Tivan Trail is a wild, strenuous, exposed, lonely, precious experience. I was alone the whole time.\nView looking east from Forcella delle Sasse, the highest point of the route at 2476 meters.\nMonte Pelmo as seen from the Tivan Trail. I climbed Pelmo solo about 25 years ago: it is still there.\nI arrived at the hut very tired. There, I ate the sandwich the Vazzoler guys had made me, drank a Radler (a mixture of beer and Lemon soda the Germans like to drink; it didn\u0026rsquo;t particularly quench my thirst), and walked down back for one more hour to the parking lot, where my trusty Bonneville was waiting for me.\nThe much-coveted Rifugio Coldai, as seen on my return from the two-days Tour of Mount Civetta trail. From there, it\u0026rsquo;s only one more hour of descent till the parking, where my trusty Triumph Bonneville awaits.\nIt was a glorious day. Unfortunately, I sprained my ankle (my usual ankle) shortly after starting the climb to Van delle Sasse. I was sore but didn\u0026rsquo;t stop for a moment, and it slowly became manageable. Later, on a vertically equipped section on the descent, now 20 minutes, maybe less from the Coldai hut, I sprained the ankle again, which hurt a lot more this time. From experience, I was expecting this second accident to happen. I let out a terrible scream, I\u0026rsquo;m afraid, but I was alone, and no one could have helped me anyway. I slowly dragged myself to the hut, one step after another, hiking poles being crucial in this situation. Strangely enough, after lunch at Coldai, I could descend to Palafavera almost normally, with virtually no pain.\nAfter the second sprain, I sat, looked at the view, and said, \u0026ldquo;OK, this is my goodbye to the mountains.\u0026rdquo; I can\u0026rsquo;t hurt my ankle that often: it\u0026rsquo;s a problem, a fragility that sooner or later could put me in serious trouble, especially since I go solo on wild trails like the Tivan. I was convinced. But at the same time, I started wondering what I could do about it. Have Dr Calderoni examine me, maybe talk to him about my problem and hear if/what can be done, even if only on the level of rehabilitation exercise (I\u0026rsquo;m very pessimistic: I\u0026rsquo;ve been exercising for years, ankles included). I\u0026rsquo;ve been thinking about the ankle braces that Jannik Sinner and other professional tennis players use. On my first day back from the trip, I ordered something similar on Amazon.\nToday, I am less convinced about my goodbye to the mountain1.\nGPS track, more pictures, and statics are available here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-tour-of-mount-civetta-in-the-dolomites/","summary":"\u003cp\u003eI left home at 5 AM on my Triumph Bonneville, arrived in Palafavera at about 9 AM, and left on foot half an hour later. I was eager to see the Civetta\u0026rsquo;s northwest face again, and it was as I remembered it: giant, looming, impressive, intimidating, outstanding. As I crossed the valley below, I thought about Marco Anghilleri, who completed the first winter repeat of the Solleder route on that wall, and just then, I came across a plaque, just below the summit\u0026rsquo;s vertical, announcing his passing on the Central Freney Pylon in 2014. He fell while attempting the first winter solo of a challenging route there.\u003c/p\u003e","title":"The tour of Mount Civetta in the Dolomites"},{"content":"Today I learned about ShellCheck, a static analysis tool that \u0026ldquo;finds bugs in your scripts\u0026rdquo;. It can and should be run on the command line, but an online version is also available. It catches most style and syntax errors and has plenty of options, like ignoring specific errors and warnings, which is helpful in CI scenarios.\n","permalink":"https://nicolaiarocci.com/shellcheck/","summary":"\u003cp\u003eToday I \u003ca href=\"https://www.simplermachines.com/how-to-write-better-bash-than-chatgpt/\"\u003elearned\u003c/a\u003e about \u003ca href=\"https://github.com/koalaman/shellcheck\"\u003eShellCheck\u003c/a\u003e, a static analysis tool that \u0026ldquo;finds bugs in your scripts\u0026rdquo;. It can and should be run on the command line, but an \u003ca href=\"https://www.shellcheck.net\"\u003eonline version\u003c/a\u003e is also available. It catches most style and syntax errors and has plenty of options, like ignoring specific errors and warnings, which is helpful in CI scenarios.\u003c/p\u003e","title":"ShellCheck"},{"content":"Bash-Oneliner is an excellent resource for Bash/Linux users. Most of the \u0026ldquo;tricks\u0026rdquo; are well-known, but there is always something to learn. More importantly, finding them all well organized in one file is rare.\nI use the reverse lookup of bash-history (Ctrl+R) daily. Still, only today (thanks to an HN comment on Bash-Onliner) did I learn that it also preserves one\u0026rsquo;s comments, which can be exploited to invoke complex commands quickly:\n$ mv -n ~/Desktop/*.pdf ~/Documents/PDF_Archive/ #pdfsync Then, you simply Ctrl-R and type \u0026ldquo;pdfsync\u0026rdquo; to recall the above command when needed. Neat.\n","permalink":"https://nicolaiarocci.com/bash-oneliner-a-collection-of-terminal-tricks-for-linux/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/onceupon/Bash-Oneliner\"\u003eBash-Oneliner\u003c/a\u003e is an excellent resource for Bash/Linux users. Most of the \u0026ldquo;tricks\u0026rdquo; are well-known, but there is always something to learn. More importantly, finding them all well organized in one file is rare.\u003c/p\u003e\n\u003cp\u003eI use the reverse lookup of bash-history (Ctrl+R) daily. Still, only today (thanks to an HN \u003ca href=\"https://news.ycombinator.com/item?id=41033120\"\u003ecomment\u003c/a\u003e on Bash-Onliner) did I learn that it also preserves one\u0026rsquo;s comments, which can be exploited to invoke complex commands quickly:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ mv -n ~/Desktop/*.pdf ~/Documents/PDF_Archive/  \u003cspan style=\"font-style:italic\"\u003e#pdfsync\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen, you simply Ctrl-R and type \u0026ldquo;pdfsync\u0026rdquo; to recall the above command when needed. Neat.\u003c/p\u003e","title":"Bash-Oneliner: a collection of terminal tricks for Linux"},{"content":" The main issue with social media is that we want them to be everything. We want them to be a place for casual interactions, for discovery, for news, for serious discourse. And that’s a mistake. Because the moment you put a stupid amount of people in one room and you let them do whatever they want the only reasonable outcome you can expect is chaos. Sure, you might get some positive results out of it but you’ll also likely get someone shitting in a corner and someone trying to fuck the power outlet. Because that’s the world we live in. Now sprinkle some nonsense AI on top of it all and Bob’s your uncle.\n\u0026ndash; Manuel Moreale\n","permalink":"https://nicolaiarocci.com/the-main-issue-with-social-media/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe main issue with social media is that we want them to be everything. We want them to be a place for casual interactions, for discovery, for news, for serious discourse. And that’s a mistake. Because the moment you put a stupid amount of people in one room and you let them do whatever they want the only reasonable outcome you can expect is chaos. Sure, you might get some positive results out of it but you’ll also likely get someone shitting in a corner and someone trying to fuck the power outlet. Because that’s the world we live in. Now sprinkle some nonsense AI on top of it all and Bob’s your uncle.\u003c/p\u003e","title":"The main issue with social media"},{"content":" The art of not reading is a very important one. It consists in not taking an interest in whatever may be engaging the attention of the general public at any particular time. When some political or ecclesiastical pamphlet, or novel, or poem is making a great commotion, you should remember that he who writes for fools always finds a large public. - A precondition for reading good books is not reading bad ones: for life is short.\n\u0026ndash; Arthur Schopenhauer\n","permalink":"https://nicolaiarocci.com/the-art-of-not-reading/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe art of not reading is a very important one. It consists in not taking an interest in whatever may be engaging the attention of the general public at any particular time. When some political or ecclesiastical pamphlet, or novel, or poem is making a great commotion, you should remember that he who writes for fools always finds a large public. - A precondition for reading good books is not reading bad ones: for life is short.\u003c/p\u003e","title":"The art of not reading"},{"content":" With so many weird little guys running around Miyazaki’s filmography, it seems time to honor and celebrate them. [\u0026hellip;] A key aspect of Miyazaki’s weird little guys is how numerous they are. They’re a swarm, frequently providing little moments of comic relief as they move coal or swim through the sea. Their designs are quite simple, but their meaning frequently is not.\nMore here.\n","permalink":"https://nicolaiarocci.com/a-guide-to-miyazaki-weird-little-guys/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWith so many weird little guys running around Miyazaki’s filmography, it seems time to honor and celebrate them. [\u0026hellip;] A key aspect of Miyazaki’s weird little guys is how numerous they are. They’re a swarm, frequently providing little moments of comic relief as they move coal or swim through the sea. Their designs are quite simple, but their meaning frequently is not.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://www.vulture.com/article/miyazaki-weird-little-guys.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"A guide to Miyazaki weird little guys"},{"content":"Last night, I was at an outdoor theatre with Serena, watching Anatomy of a Fall (an excellent film). Outdoor theatres are becoming rare, which is a pity, and Arena del Sole is lovely with its strong vintage, 80s vibe. There\u0026rsquo;s little as pleasant as watching a film under the stars with your loved one on a quiet summer evening.\nAnyway, in the pause, I glanced at my e-mails and discovered I had been again granted the Microsoft MVP Award. It is the ninth consecutive year, and I\u0026rsquo;m grateful and happy the journey continues. At this point, I should put in some extra effort to reach the 10-year milestone next year.\n","permalink":"https://nicolaiarocci.com/microsoft-mvp-ninth-time/","summary":"\u003cp\u003eLast night, I was at an outdoor theatre with Serena, watching Anatomy of a Fall (an excellent film). Outdoor theatres are becoming rare, which is a pity, and \u003ca href=\"https://maps.app.goo.gl/j7t3SigtkPtKnB22A\"\u003eArena del Sole\u003c/a\u003e is lovely with its strong vintage, 80s vibe. There\u0026rsquo;s little as pleasant as watching a film under the stars with your loved one on a quiet summer evening.\u003c/p\u003e\n\u003cp\u003eAnyway, in the pause, I glanced at my e-mails and discovered I had been again granted the \u003ca href=\"https://mvp.microsoft.com/en-US/mvp/profile/a6892d61-aea0-e511-8114-c4346bac0abc\"\u003eMicrosoft MVP Award\u003c/a\u003e. It is the ninth consecutive year, and I\u0026rsquo;m grateful and happy the journey continues. At this point, I should put in some extra effort to reach the 10-year milestone next year.\u003c/p\u003e","title":"Microsoft MVP"},{"content":" Write a lot. This is alpha and omega of writing advice, the beginning and the end, and it\u0026rsquo;s that way for a reason– I don’t know anyone who’s good writing who hasn’t also put in serious hours.\n\u0026ndash; Nat Bennet\n","permalink":"https://nicolaiarocci.com/write-a-lot/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWrite a lot. This is alpha and omega of writing advice, the beginning and the end, and it\u0026rsquo;s that way for a reason– I don’t know anyone who’s good writing who hasn’t also put in serious hours.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://www.simplermachines.com/how-to-write/\"\u003eNat Bennet\u003c/a\u003e\u003c/p\u003e","title":"Write a lot"},{"content":" I’ve always loved libraries. They are a glimpse of the kind of ‘better world’ we all want to live in. That’s because by their very nature they are inclusive and welcoming. Anyone who walks through the doors of a library is reminded, just by inhaling the air of the library, just by being embraced by its atmosphere, to be a kinder and more caring person, and to forget, for a moment, the usual rules of our capitalistic society.\nA library is a good place.\n\u0026ndash; Rebecca Toh\n","permalink":"https://nicolaiarocci.com/a-library-is-a-good-place/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI’ve always loved libraries. They are a glimpse of the kind of ‘better world’ we all want to live in. That’s because by their very nature they are inclusive and welcoming. Anyone who walks through the doors of a library is reminded, just by inhaling the air of the library, just by being embraced by its atmosphere, to be a kinder and more caring person, and to forget, for a moment, the usual rules of our capitalistic society.\u003c/p\u003e","title":"A library is a good place"},{"content":" When I’m out hiking on my weekend hike I often spend much of the experience in contemplation. My thoughts are usually tickling at Warp 10, going everywhere possible at once, but then I ramp it back a bit and I just think about an assortment of topics at any given moment. Out in nature is really a good place for me to get things back into perspective, and I usually feel the better for it when I get back home.\n\u0026ndash; J.P. Wing\n","permalink":"https://nicolaiarocci.com/quoting-j.p.-wing/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhen I’m out hiking on my weekend hike I often spend much of the experience in contemplation. My thoughts are usually tickling at Warp 10, going everywhere possible at once, but then I ramp it back a bit and I just think about an assortment of topics at any given moment. Out in nature is really a good place for me to get things back into perspective, and I usually feel the better for it when I get back home.\u003c/p\u003e","title":"Quoting J.P. Wing"},{"content":"The latest issue of The Economist focuses on solar energy. The introductory article is short, compelling, and optimistic. On the economics, they make a good point:\nConsider solar economics. As the cumulative production of a manufactured good increases, costs go down. As costs go down, demand goes up. As demand goes up, production increases—and costs go down further. This cannot go on for ever; production, demand or both always become constrained. In earlier energy transitions—from wood to coal, coal to oil or oil to gas—the efficiency of extraction grew, but it was eventually offset by the cost of finding ever more fuel. Solar power faces no such constraint. The resources needed to produce solar cells and plant them on solar farms are silicon-rich sand, sunny places and human ingenuity, all three of which are abundant.\nEven China\u0026rsquo;s dominance in panel production, which remains a concern, does not prevent technology development and cost-cutting, at least not in the medium term.\nAnother worry is that the vast majority of the world’s solar panels, and almost all the purified silicon from which they are made, come from China. Its solar industry is highly competitive, heavily subsidised and is outstripping current demand—quite an achievement given all the solar capacity China is installing within its own borders. This means that Chinese capacity is big enough to keep the expansion going for years to come, even if some of the companies involved go to the wall and some investment dries up.\nThey sustain that low-cost, clean solar energy is inevitable and will reshape society and the planet in ways we can\u0026rsquo;t yet fathom. I sure hope things go in this direction.\n","permalink":"https://nicolaiarocci.com/the-exponential-growth-of-solar-power-will-change-the-world/","summary":"\u003cp\u003eThe latest issue of The Economist focuses on solar energy. The \u003ca href=\"https://archive.is/T48Iy\"\u003eintroductory article\u003c/a\u003e is short, compelling, and optimistic. On the economics, they make a good point:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eConsider solar economics. As the cumulative production of a manufactured good increases, costs go down. As costs go down, demand goes up. As demand goes up, production increases—and costs go down further. This cannot go on for ever; production, demand or both always become constrained. In earlier energy transitions—from wood to coal, coal to oil or oil to gas—the efficiency of extraction grew, but it was eventually offset by the cost of finding ever more fuel. Solar power faces no such constraint. The resources needed to produce solar cells and plant them on solar farms are silicon-rich sand, sunny places and human ingenuity, all three of which are abundant.\u003c/p\u003e","title":"The exponential growth of solar power will change the world"},{"content":" When you’re playing a point, it is the most important thing in the world. But when it’s behind you, it’s behind you\u0026hellip; This mindset is really crucial, because it frees you to fully commit to the next point… and the next one after that… with intensity, clarity and focus.\nThe truth is, whatever game you play in life\u0026hellip; sometimes you’re going to lose. A point, a match, a season, a job\u0026hellip; it’s a roller coaster, with many ups and downs. And it’s natural, when you’re down, to doubt yourself. To feel sorry for yourself. And by the way, your opponents have self-doubt, too. Don’t ever forget that. But negative energy is wasted energy.\nYou want to become a master at overcoming hard moments. That to me is the sign of a champion.\n\u0026ndash; Roger Federer\n","permalink":"https://nicolaiarocci.com/quoting-roger-federer/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhen you’re playing a point, it is the most important thing in the world. But\nwhen it’s behind you, it’s behind you\u0026hellip; This mindset is really crucial, because\nit frees you to fully commit to the next point… and the next one after that…\nwith intensity, clarity and focus.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe truth is, whatever game you play in life\u0026hellip; sometimes you’re going to\nlose. A point, a match, a season, a job\u0026hellip;  it’s a roller coaster, with many ups\nand downs.  And it’s natural, when you’re down, to doubt yourself. To feel sorry\nfor yourself. And by the way, your opponents have self-doubt, too. Don’t ever\nforget that.  But negative energy is wasted energy.\u003c/p\u003e","title":"Quoting Roger Federer"},{"content":" ","permalink":"https://nicolaiarocci.com/the-appropriate-response-to-a-horrible-idea-is-a-better-idea/","summary":"\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/hkUrnHT1VvI?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e","title":"The appropriate response to a horrible idea is a better idea"},{"content":"Charity Majors1 has a good, long-form article on the Stack Overflow blog. The title is misleading as, while AI\u0026rsquo;s impact on software engineering and its hiring process (spoiler: you\u0026rsquo;ll still want to hire junior engineers) is at the heart of the article, there\u0026rsquo;s so much more in it. It gets exciting in the second part, where she dispenses much from-the-trenches advice on team management and building.\nHiring engineers is about composing teams. The smallest unit of software ownership is not the individual, it’s the team.\nHave you ever been on a team packed exclusively with staff or principal engineers? It is not fun. That is not a high-functioning team. There is only so much high-level architecture and planning work to go around, there are only so many big decisions that need to be made. These engineers spend most of their time doing work that feels boring and repetitive, so they tend to over-engineer solutions and/or cut corners—sometimes at the same time. They compete for the “fun” stuff and find reasons to pick technical fights with each other. They chronically under-document and under-invest in the work that makes systems simple and tractable.\nThe best teams are ones where no one is bored, because every single person is working on something that challenges them and pushes their boundaries. The only way you can get this is by having a range of skill levels on the team.\nI met her once at MongoDB headquarters in 2012 or 2013. We were invited back when they were running their now-long-defunct MongoDB Masters program. She worked at Parse then. Anyway, I remember being impressed by her competence and delivery.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/generative-ai-is-not-going-to-build-your-engineering-team-for-you/","summary":"\u003cp\u003eCharity Majors\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e has a good, long-form article on the Stack Overflow \u003ca href=\"https://stackoverflow.blog/2024/06/10/generative-ai-is-not-going-to-build-your-engineering-team-for-you/\"\u003eblog\u003c/a\u003e. The title is misleading as, while AI\u0026rsquo;s impact on software engineering and its hiring process (spoiler: you\u0026rsquo;ll still want to hire junior engineers) is at the heart of the article, there\u0026rsquo;s so much more in it. It gets exciting in the second part, where she dispenses much from-the-trenches advice on team management and building.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHiring engineers is about composing teams. The smallest unit of software ownership is not the individual, it’s the team.\u003c/p\u003e","title":"Generative AI is not going to build your engineering team for you"},{"content":"I love this concise checklist on detecting fake experts, with which my experience wholeheartedly agrees. The first one:\nImitators can\u0026rsquo;t answer questions at a deeper level. Specific knowledge is earned, not learned, so imitators don\u0026rsquo;t fully understand the ideas they\u0026rsquo;re talking about. Their knowledge is shallow. As a result, when you ask about details, first principles, or nonstandard cases, they don\u0026rsquo;t have good answers.\nFor more advice, see the original post.\n","permalink":"https://nicolaiarocci.com/experts-vs.-imitators/","summary":"\u003cp\u003eI love \u003ca href=\"https://fs.blog/experts-vs-imitators/\"\u003ethis\u003c/a\u003e concise checklist on detecting fake experts, with which my experience wholeheartedly agrees. The first one:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eImitators can\u0026rsquo;t answer questions at a deeper level. Specific knowledge is earned, not learned, so imitators don\u0026rsquo;t fully understand the ideas they\u0026rsquo;re talking about. Their knowledge is shallow. As a result, when you ask about details, first principles, or nonstandard cases, they don\u0026rsquo;t have good answers.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eFor more advice, see the \u003ca href=\"https://fs.blog/experts-vs-imitators/\"\u003eoriginal post\u003c/a\u003e.\u003c/p\u003e","title":"Experts vs. imitators"},{"content":"We\u0026rsquo;re doing a DevRomagna meetup on container security. It will happen on June 26 at 7pm, it will be in Italian, and the speaker will be the one and the only Ugo Lattanzi. Details and signup here.\n","permalink":"https://nicolaiarocci.com/container-security-meetup-at-devromagna/","summary":"\u003cp\u003eWe\u0026rsquo;re doing a DevRomagna meetup on container security. It will happen on June 26 at 7pm, it will be in Italian, and the speaker will be the one and the only \u003ca href=\"https://x.com/imperugo\"\u003eUgo Lattanzi\u003c/a\u003e. Details and signup \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/301598446/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Container security meetup at DevRomagna"},{"content":"Lately, I have become increasingly interested in sound. Of the short films I shoot while hiking, for example, I\u0026rsquo;ve noticed that I\u0026rsquo;m primarily interested in their sounds. Footsteps on the ground, birds singing, wind rustling through leaves, things like that. During my motorcycle ride across Europe, I caught myself recording a walk with the Memo app on my iPhone. Listening to it allows me to reconstruct a sharp and surprisingly clear memory of that early morning, just out of the tent at Shelsley Walsh. My interest in sounds is not new; I\u0026rsquo;ve written about the Field Recordings podcast for example, but lately, I\u0026rsquo;ve become more aware of the importance of sound memory. During my daily early morning walk, I happen to listen to audiobooks or podcasts with the AirPods Pro, but there is always a lot of friction; I have to force myself into putting them on and, usually, after half an hour or so it is a great relief to take them off and listen to the world around me again (the jury is still out on whether I should leave my AirPods at home or not.)\nThe other day, I read on about Julian Sartorius (drummer, percussionist, and artist) latest work, Hidden Tracks: Domodossola—Weissmies. He took a five-day hike from Domodossola, Italy (272 meters above the sea) to Switzerland\u0026rsquo;s Weissmies summit (4017 mt). He took his drumsticks and a recorder with him, and as he went by, he recorded many sounds, natural and not, and, most importantly, played his sticks on many different surfaces. Quoting Bandcamp Daily:\nEvery track on Hidden Tracks: Domodossola – Weissmies is named according to that change (i.e., “272m ↗ 500m,” “1500m ↗ 2000m,” etc.). The first few, recorded in Domodossola and its surroundings, are lively—almost symphonic. You can hear passing cars and motorcycles, people talking, dogs barking, church bells tolling. Sartorius plays a hypnotic, techno-like rhythm—sometimes on wooden houses, sometimes with clanks on metal or footsteps on grass. With each subsequent track, the music becomes sparser and quieter. Sounds of nature prevail, as Sartorius plays the rhythm on a surface of a stream, and catches the sound of sheep as they pass through the meadow. It culminates on the mountain’s summit where the only sounds are wind, snow, and ice—and a distant helicopter.\nBeing a hiker myself, I was immediately enthralled by this project. I listened and was not disappointed, so I bought the album to support the author. There\u0026rsquo;s also a short film about the project on YouTube that is worth watching.\nHidden Tracks: Domodossola – Weissmies by Julian Sartorius ","permalink":"https://nicolaiarocci.com/hidden-tracks-domodossola-weissmies/","summary":"\u003cp\u003eLately, I have become increasingly interested in sound. Of the short films I shoot while \u003ca href=\"/tags/hiking\"\u003ehiking\u003c/a\u003e, for example, I\u0026rsquo;ve noticed that I\u0026rsquo;m primarily interested in their sounds. Footsteps on the ground, birds singing, wind rustling through leaves, things like that. During my \u003ca href=\"/a-motorcycle-trip-across-europe/\"\u003emotorcycle ride across Europe\u003c/a\u003e, I caught myself recording a walk with the Memo app on my iPhone. Listening to it allows me to reconstruct a sharp and surprisingly clear memory of that early morning, just out of the tent at Shelsley Walsh. My interest in sounds is not new; I\u0026rsquo;ve written about the \u003ca href=\"https://nicolaiarocci.com/what-i-listen-to-while-programming/\"\u003eField Recordings podcast\u003c/a\u003e for example, but lately, I\u0026rsquo;ve become more aware of the importance of sound memory. During my daily early morning walk, I happen to listen to audiobooks or podcasts with the AirPods Pro, but there is always a lot of friction; I have to force myself into putting them on and, usually, after half an hour or so it is a great relief to take them off and listen to the world around me again (the jury is still out on whether I should leave my AirPods at home or not.)\u003c/p\u003e","title":"Hidden Tracks: Domodossola – Weissmies"},{"content":" just writing down notes is all that really matters. Any tool that allows you to compose and save text will do. It is the act of writing, not the act of linking or reading or revisiting, that clarifies thought and leads to insight. The rest is all superfluous.\n\u0026ndash; Sean Voisen\nJust yesterday, I fixed a bug in our legacy application. Once I was done, I turned to my notes to log what I\u0026rsquo;d just done. I was only partially happy with the fix, so I articulated what would have been ideal and why I didn\u0026rsquo;t achieve my goal. Right in the middle of a sentence, the solution surfaced. It was so evident and straightforward! The simple act of writing down the problem led me to the solution. Relieved, I returned to the project and promptly improved my code.\nSean Voisen is right. The act of writing clarifies thoughts and leads to insight.\n","permalink":"https://nicolaiarocci.com/quoting-sean-voisen/","summary":"\u003cblockquote\u003e\n\u003cp\u003ejust writing down notes is all that really matters. Any tool that allows you to compose and save text will do. It is the act of writing, not the act of linking or reading or revisiting, that clarifies thought and leads to insight. The rest is all superfluous.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://sean.voisen.org/notes/2024-05-29-controversial-thoughts-on-networked-note-taking\"\u003eSean Voisen\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eJust yesterday, I fixed a bug in our legacy application. Once I was done, I turned to my notes to log what I\u0026rsquo;d just done. I was only partially happy with the fix, so I articulated what would have been ideal and why I didn\u0026rsquo;t achieve my goal. Right in the middle of a sentence, the solution surfaced. It was so evident and straightforward! The simple act of writing down the problem led me to the solution. Relieved, I returned to the project and promptly improved my code.\u003c/p\u003e","title":"Quoting Sean Voisen"},{"content":"I went on a motorcycle and hiking trip yesterday. It was a glorious day, albeit windy, which helped keep the temperature chill. Mixing hiking with motorcycling is something I love, as it combines two of my hobbies. However, it requires some careful planning. I still want to wear full safety gear on the bike but not take any of that with me as I walk in the wilderness, where I\u0026rsquo;ll be in hiking gear instead.\nThe loop tour from the Montone River Valley reaches the watershed ridge overlooking the Acquacheta basin and then the main Apennine ridge at over 1,000 meters. From an environmental point of view, it is worth noting the constant presence of woods, first of oak and hornbeam, then of beech; the latter, with recent conversions to tall trees from coppice, have largely regained an appearance closer to naturalness. From a historical point of view, the itinerary is characterized by access to the very ancient (11th century) Hermitage of the Toschi or Tusci, currently being restored to be used as a farm and accommodation facility that gives hospitality to hikers, still very suggestive for its superb isolation and position set among the meadows at the top of the valley of Fosso Pian di Soia.\nI risked losing the path when, just near the Hermitage, I spotted a hare a few steps away. She scampered unhurriedly away under my gaze as I was walking and not paying too much attention to the path, which seemed obvious. I missed a detour, and I recovered shortly after. Just before the hare, I kicked a harmless snake who got more scared than I did. It ran away, disappearing into knee-high grass.\nWhen I returned to the bike, since it was still early, I decided to go up to the Muraglione Pass, descend to Tuscany, and return via the Tre Faggi Pass, Permilcuore and Predappio. It always strikes me to see tourists (alas, many motorcyclists) stopping at the cemetery in Predappio, presumably to visit Mussolini\u0026rsquo;s grave.\nI published a short video on Vimeo1; GPX track and some photos are available here.\nBeech forests are a characteristic feature of this area of the Apennines\nBy now, at the end of the tour, the clearing with the Toschi Hermitage stands directly in front of us.\nIt\u0026rsquo;s embedded, but I discovered that email subscribers don\u0026rsquo;t get to see embedded resources.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-toschi-hermitage/","summary":"\u003cp\u003eI went on a motorcycle and hiking trip yesterday. It was a glorious day, albeit windy, which helped keep the temperature chill.  Mixing hiking with motorcycling is something I love, as it combines two of my hobbies. However, it requires some careful planning. I still want to wear full safety gear on the bike but not take any of that with me as I walk in the wilderness, where I\u0026rsquo;ll be in hiking gear instead.\u003c/p\u003e","title":"The Toschi Hermitage"},{"content":"Today, I learned how to handle custom claims in an Open ID Connect authenticated ASP.NET Core app.\nThe scenario goes like this. I have an ASP.NET Core app that authenticates with Open Id Connect. It receives a bearer token from the authentication server. Besides OIDC claims, this token has been forged with additional custom claims for use in the app. However, only ODIC claims exist when I parse HttpContext.User.Identity.Claims in my middleware. If I retrieve the token with HttpContext.GetTokenAsync and decode it, I confirm it contains all the claims I need. Where have my custom claims gone? Or, how can I get User.Identity to provide them along with the OIDC ones?\nAs it turns out, one must hack them into the User.Identity.Claims collection by hand. That\u0026rsquo;s done by leveraging the OnTokenValidated event handler like this:\nauthenticationBuilder.AddOpenIdConnect(\u0026#34;oidc\u0026#34;, options =\u0026gt; { options.Authority = \u0026#34;authority\u0026#34;; options.ClientId = \u0026#34;client_id\u0026#34;; options.ClientSecret = \u0026#34;secret\u0026#34;; options.ResponseType = \u0026#34;code\u0026#34;; ... options.GetClaimsFromUserInfoEndpoint = true; options.SaveTokens = true; options.Events = new() { OnTokenValidated = context =\u0026gt; { // adds custom claims from the token into Principal.Identity if (context.Principal?.Identity is not ClaimsIdentity claimsIdentity) return Task.CompletedTask; var accessToken = context.TokenEndpointResponse?.AccessToken; if (string.IsNullOrEmpty(accessToken)) return Task.CompletedTask; var handler = new JwtSecurityTokenHandler(); if (handler.ReadToken(accessToken) is not JwtSecurityToken jsonToken) return Task.CompletedTask; foreach (var claim in jsonToken.Claims) if (claimsIdentity.Claims.All(c =\u0026gt; c.Type != claim.Type)) claimsIdentity.AddClaim(claim); return Task.CompletedTask; } }; }); Is there a better and less hacky way to achieve the same result? Please let me know.\n","permalink":"https://nicolaiarocci.com/how-to-handle-custom-claims-in-an-oidc-authenticated-aspnet-core-app/","summary":"\u003cp\u003eToday, I learned how to handle custom claims in an Open ID Connect authenticated ASP.NET Core app.\u003c/p\u003e\n\u003cp\u003eThe scenario goes like this. I have an ASP.NET Core app that authenticates with Open Id Connect. It receives a bearer token from the authentication server. Besides OIDC claims, this token has been forged with additional custom claims for use in the app. However, only ODIC claims exist when I parse \u003ccode\u003eHttpContext.User.Identity.Claims\u003c/code\u003e in my middleware. If I retrieve the token with \u003ccode\u003eHttpContext.GetTokenAsync\u003c/code\u003e and decode it, I confirm it contains all the claims I need. Where have my custom claims gone? Or, how can I get \u003ccode\u003eUser.Identity\u003c/code\u003e to provide them along with the OIDC ones?\u003c/p\u003e","title":"How to handle custom claims in an Open ID Connect-authenticated ASP.NET Core app"},{"content":"Two years after its launch, Kagi, the pay-per-use search engine is profitable.\nWe are also thrilled to report that we have achieved profitability. This significant milestone is a testament to our sustainable growth and fiscal responsibility. It demonstrates that our approach of offering a premium, ad-free search experience resonates with users who support a service aligning with their values. Becoming profitable allows us to reinvest in the business, further enhancing our offerings and ensuring that we can continue to provide a top-notch search experience.\nThis is a remarkable achievement. Two years ago, only a few would have bet on its sustainability. I\u0026rsquo;ve tried Kagi\u0026rsquo;s free tier with good results, but not as much as I would like. It\u0026rsquo;s not my default search engine—not yet, at least.\nOver time, I\u0026rsquo;ve switched from free (as in \u0026ldquo;you, the user, are the product we sell\u0026rdquo;) to paid services. Years ago, I dropped Gmail and switched to Fastmail, and I could never imagine going back. I\u0026rsquo;m good with paying for excellent critical services. My data and I are not the product, and I\u0026rsquo;m invested in them staying around long-term.\n","permalink":"https://nicolaiarocci.com/kagi-is-profitable/","summary":"\u003cp\u003eTwo years after its launch, Kagi, the pay-per-use search engine \u003ca href=\"https://blog.kagi.com/what-is-next-for-kagi\"\u003eis profitable\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe are also thrilled to report that we have achieved profitability. This significant milestone is a testament to our sustainable growth and fiscal responsibility. It demonstrates that our approach of offering a premium, ad-free search experience resonates with users who support a service aligning with their values. Becoming profitable allows us to reinvest in the business, further enhancing our offerings and ensuring that we can continue to provide a top-notch search experience.\u003c/p\u003e","title":"Kagi is profitable"},{"content":"Simon Willison has a new article explaining an important and often ununderstood aspect of LLMs. There\u0026rsquo;s a remarkable difference between chatting with an LLM, as we users do, and training it.\nShort version: ChatGPT and other similar tools do not directly learn from and memorize everything that you say to them.\nEvery time you start a new chat conversation, you clear the slate. Each conversation is an entirely new sequence, carried out entirely independently of previous conversations from both yourself and other users. Understanding this is key to working effectively with these models. Every time you hit “new chat” you are effectively wiping the short-term memory of the model, starting again from scratch. This has a number of important consequences.\nMore here.\n","permalink":"https://nicolaiarocci.com/llms-dont-remember-everything-you-say/","summary":"\u003cp\u003eSimon Willison has a new article explaining an important and often ununderstood\naspect of LLMs. There\u0026rsquo;s a remarkable difference between chatting with an LLM, as\nwe users do, and training it.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eShort version: ChatGPT and other similar tools do not directly learn from and\nmemorize everything that you say to them.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEvery time you start a new chat conversation, you clear the slate. Each\nconversation is an entirely new sequence, carried out entirely independently of\nprevious conversations from both yourself and other users. Understanding this is\nkey to working effectively with these models. Every time you hit “new chat” you\nare effectively wiping the short-term memory of the model, starting again from\nscratch. This has a number of important consequences.\u003c/p\u003e","title":"LLMs don't remember everything you say"},{"content":" In 2021, in Russian courts, the fate of 783000 people was decided. There were 2190 acquittals. Two thousand one hundred and ninety. The probability of being acquitted is 0.28 per cent.\n\u0026ndash; Elena Kostyuchenko in I Love Russia, which I\u0026rsquo;m currently reading.\n","permalink":"https://nicolaiarocci.com/quoting-elena-kostyuchenko/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIn 2021, in Russian courts, the fate of 783000 people was decided. There were 2190 acquittals. Two thousand one hundred and ninety. The probability of being acquitted is 0.28 per cent.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; Elena Kostyuchenko in \u003cem\u003eI Love Russia\u003c/em\u003e, which I\u0026rsquo;m currently reading.\u003c/p\u003e","title":"Quoting Elena Kostyuchenko"},{"content":"Today I released Fattura Elettronica for .NET v3.4.15. The Fattura Elettronica project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by Italian Revenue Agency (Agenzia Entrate). See the changelog for details (Italian).\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-for-.net-v3.4.15/","summary":"\u003cp\u003eToday I released \u003ca href=\"https://fatturaelettronicaopensource.org/docs\"\u003eFattura Elettronica for .NET\u003c/a\u003e v3.4.15. The Fattura\nElettronica project allows for the validation and de/serialization of electronic\ninvoices that adhere to the standard defined by Italian Revenue Agency\n(\u003ca href=\"https://www.agenziaentrate.gov.it/portale/web/guest/specifiche-tecniche-versione-1.8\"\u003eAgenzia Entrate\u003c/a\u003e). See the \u003ca href=\"https://fatturaelettronicaopensource.org/docs/changelog.html#v-3415\"\u003echangelog\u003c/a\u003e for details (Italian).\u003c/p\u003e","title":"Fattura Elettronica for .NET v3.4.15"},{"content":"Last night, I returned from Trifest 75, a motorcycle rally organized by the Triumph Owners Motorcycle Club1 at the Shelsley Walsh Hill Climb, Worcester, UK. Crossing Europe from South to North took us a whole week across Italy, Switzerland, and France before reaching the soil of England.\nThis outing was conceived long ago (Trifest happen every year) and has always been postponed because of the high cost and time required. This year, we took the opportunity of the 75th anniversary to go, partly because I sensed the great interest while talking about the idea at various rallies we had last year in Italy.\nWe were twenty motorcycles strong. Leading such a large group across Europe for 4,000 km is no joke, but somehow, we made it through without significant issues. Energy and mood were always high, and we were welcomed with open arms by our English friends and by the other Triumph Owners Clubs attending: Germany, Sweden, and Holland. It was an excellent opportunity to strengthen the bond between us Italians and make new international friendships, laying the foundation, who knows, for future occasions.\nColmar, France, was our first stop at the end of a rather challenging (and rainy) 750km day.\nWhite cliffs of Dover. England here we come.\nMy tent \u0026amp; Bonneville at the Trifest 75 campsite.\nThe bucolic England you\u0026rsquo;d expect, just at a stone\u0026rsquo;s throw from the campsite.\nWhile there, we visited Triumph HQ in Hinckley and enjoyed the Visitor Experience there.\nOn the way back, we visited Stonehenge.\nWe came back to Italy via the Mont Blanc tunnel.\nOf which I happen to chair the Italian branch.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/a-motorcycle-trip-across-europe/","summary":"\u003cp\u003eLast night, I returned from \u003ca href=\"https://www.tomcc.org/Trifest/tomcc75\"\u003eTrifest 75\u003c/a\u003e,\na motorcycle rally organized by the \u003ca href=\"https://tomcc.org\"\u003eTriumph Owners Motorcycle\nClub\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e at the Shelsley Walsh Hill Climb, Worcester, UK.\nCrossing Europe from South to North took us a whole week across Italy,\nSwitzerland, and France before reaching the soil of England.\u003c/p\u003e\n\u003cp\u003eThis outing was conceived long ago (Trifest happen every year) and has always\nbeen postponed because of the high cost and time required. This year, we took\nthe opportunity of the 75th anniversary to go, partly because I sensed the great\ninterest while talking about the idea at various rallies we had last year in Italy.\u003c/p\u003e","title":"A motorcycle trip across Europe"},{"content":"The video my OAuth2 and OpenID Connect session at WebDay 2024 Milan is available online. It is in Italian, and you need to login or register in order to see it (sorry, I don’t have control over it.)\n","permalink":"https://nicolaiarocci.com/the-video-of-my-oauth2-session-at-webday-2024-is-online/","summary":"\u003cp\u003eThe video my OAuth2 and OpenID Connect session at WebDay 2024 Milan is\n\u003ca href=\"https://www.improove.tech/videos/3376/Oauth2-e-Open-ID-Connect-con-ASP-NET-Core-8\"\u003eavailable\nonline\u003c/a\u003e.\nIt is in Italian, and you need to login or register in order to see it (sorry, I\ndon’t have control over it.)\u003c/p\u003e","title":"The video of my OAuth2 session at WebDay 2024 is online"},{"content":"Thirty-seven years ago, at about 11 a.m., at the Rocca Brancaleone Park, my then-girlfriend and I kissed for the first time under a tree. We decided immediately not to get together because we were classmates1, and we didn\u0026rsquo;t want to complicate our lives.\nRight.\nWe have been together ever since and will celebrate our 27th wedding anniversary next week. Our three sons are the fruitful result of that teenage affair.\nWe skipped class on that day.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/thirty-seven-years-ago/","summary":"\u003cp\u003eThirty-seven years ago, at about 11 a.m., at the Rocca Brancaleone Park, my then-girlfriend and I kissed for the first time under a tree. We decided immediately not to get together because we were classmates\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, and we didn\u0026rsquo;t want to complicate our lives.\u003c/p\u003e\n\u003cp\u003eRight.\u003c/p\u003e\n\u003cp\u003eWe have been together ever since and will celebrate our 27th wedding anniversary next week. Our three sons are the fruitful result of that teenage affair.\u003c/p\u003e","title":"Thirty-seven years ago"},{"content":"Open AI just released ChatGPT 4o. The launch demo is available on YouTube, and yes, it is impressive. They did not launch v5, though, and 4o is only incremental, not exponential, as v4 has been compared to its predecessor. It may mean we\u0026rsquo;re at the end of the \u0026ldquo;exponential growth\u0026rdquo; phase of LLM models.\nHowever, the most critical aspect of this release is not technical, as Ethan Mollick correctly pinpoints in his timely What Open AI Did post:\nLikely the biggest impact of GPT-4o is not technical, but a business decision: soon everyone, whether they are paying or not, will get access to GPT-4o1. I think this is a big deal. When I talk with groups and ask people to raise their hands if they use ChatGPT, almost every hand goes up. When I ask if they used GPT-4, only 5% of hands remain up, at most. GPT-4 is so, so much better than free ChatGPT-3.5, it is like having a PhD student work with you instead of a high school sophomore. But that $20 a month barrier kept many people from understanding how impressive AI can be, and for gaining any benefit from AI. That is no longer true.\nHe then speculates how this change will impact significant areas such as education, work, and global entrepreneurship.\n","permalink":"https://nicolaiarocci.com/what-open-ai-just-did/","summary":"\u003cp\u003eOpen AI just released ChatGPT 4o. The launch demo is available on \u003ca href=\"https://www.youtube.com/live/DQacCB9tDaw\"\u003eYouTube\u003c/a\u003e, and yes, it is impressive. They did not launch v5, though, and 4o is only incremental, not exponential, as v4 has been compared to its predecessor. It may mean we\u0026rsquo;re at the end of the \u0026ldquo;exponential growth\u0026rdquo; phase of LLM models.\u003c/p\u003e\n\u003cp\u003eHowever, the most critical aspect of this release is not technical, as Ethan Mollick correctly pinpoints in his timely \u003ca href=\"https://www.oneusefulthing.org/p/what-openai-did\"\u003eWhat Open AI Did\u003c/a\u003e post:\u003c/p\u003e","title":"What Open AI just did"},{"content":"I took a walk on the beach last weekend. I never frequent Lido Adriano. It is much better than I expected, especially out of season.\n","permalink":"https://nicolaiarocci.com/a-walk-on-the-beach-video/","summary":"\u003cp\u003eI took a walk on the beach last weekend. I never frequent Lido Adriano. It is much better than I expected, especially out of season.\u003c/p\u003e\n\n\u003cdiv style=\"padding:56.25% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/945495592?badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture; clipboard-write\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"A walk on the beach in Lido Adriano\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cscript src=\"https://player.vimeo.com/api/player.js\"\u003e\u003c/script\u003e","title":"A walk on the beach [video]"},{"content":"I read ADHD—A Lifelong Struggle today. It\u0026rsquo;s the best thing I\u0026rsquo;ve read on ADHD so far. Its advice is grounded in experience and applies to everyone: those who think ADHD is a crock or, worse, an excuse, those who suffer from it, and those who have family members or friends who suffer from it.\nAnd we all punish ourselves. That\u0026rsquo;s the real tragedy of this illness. We are our biggest detractors because we know what we\u0026rsquo;re capable of. Better than our teachers. Better than our parents. They always said that they could \u0026ldquo;see our potential,\u0026rdquo; but we saw ten times what they did. Every day. We saw the things we could do, in our heads, and hated ourselves for not doing them.\nThere are so many good lines in the article that I highlighted twelve whole paragraphs with many more deserving, and I struggled to pick one to quote here.\n","permalink":"https://nicolaiarocci.com/the-best-thing-i-have-read-on-adhd/","summary":"\u003cp\u003eI read \u003ca href=\"https://gekk.info/articles/adhd.html\"\u003eADHD—A Lifelong Struggle\u003c/a\u003e today.\nIt\u0026rsquo;s the best thing I\u0026rsquo;ve read on ADHD so far. Its advice is grounded in\nexperience and applies to everyone: those who think ADHD is a crock or, worse,\nan excuse, those who suffer from it, and those who have family members or\nfriends who suffer from it.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAnd we all punish ourselves. That\u0026rsquo;s the real tragedy of this illness. We are\nour biggest detractors because we know what we\u0026rsquo;re capable of. Better than our\nteachers. Better than our parents. They always said that they could \u0026ldquo;see our\npotential,\u0026rdquo; but we saw ten times what they did. Every day. We saw the things we\ncould do, in our heads, and hated ourselves for not doing them.\u003c/p\u003e","title":"The best thing I have read on ADHD"},{"content":"This is a follow-up post to C# 12 Primary Constructors. Like that article, this one originates from the preparation notes for my presentation at the ABP Dotnet Conference 2024.\nI love collection expressions. Like primary constructors, collection expressions will see a significant adoption in the long run.\nCollection expressions introduce a new way to initialize common collection values in a terse, unified syntax.\nThis is how we initialize collections today:\nvar x1 = new int[] { 1, 2, 3, 4 }; var x2 = Array.Empty\u0026lt;int\u0026gt;(); WriteByteArray(new[] { (byte)1, (byte)2, (byte)3 }); List\u0026lt;int\u0026gt; x3 = new() { 1, 2, 3, 4 }; Span\u0026lt;DateTime\u0026gt; dates = stackalloc DateTime[] { GetDate(0), GetDate(1) }; WriteByteSpan(stackalloc[] { (byte)1, (byte)2, (byte)3 }); Notice how the code is diverse depending on the type and the context. It is also verbose. Look at how we initialize an empty int array (second line); it\u0026rsquo;s lengthy and starkly contrasts with the previous line, where we initialize the same type with some actual values. In many situations, casting is needed; again, take a look at the WriteByteArray and WriteByteSpan calls.\nWith collection expressions, it becomes like this: int[] x4 = [1, 2, 3, 4]; int[] x5 = []; WriteByteArray([1, 2, 3]); List\u0026lt;int\u0026gt; x6 = [1, 2, 3, 4]; Span\u0026lt;DateTime\u0026gt; dates1 = [GetDate(0), GetDate(1)]; WriteByteSpan([1, 2, 3]); We enclose items within square brackets, and that\u0026rsquo;s all. An empty collection is empty brackets. We can, of course, call functions or use variables.\nIn many scenarios, the compiler will perform several optimizations. It can allocate the correct capacity or avoid copying data when unnecessary. The compiler can do that because the supported collection types are well-known and have been for a long time. We get these performance boosts for free when we switch to collection expressions.\nLet\u0026rsquo;s look at that WriteByteArray call. Let\u0026rsquo;s say that at some point, maybe months or years after it\u0026rsquo;s been used in many places, we decide to refactor the method and change the argument type from byte[] to int[]. We\u0026rsquo;d have to refactor the old-style caller to eliminate the casting, which is now an error. We don\u0026rsquo;t need to do any fix with collection expressions as they come with enhanced inference that will resolve the casting for us.\nOn the first line, we\u0026rsquo;re initializing a new array (we aren\u0026rsquo;t calling a method with a signature), so with collection expressions, if we try to use var, it won\u0026rsquo;t work. In that case, we need to be explicit about the type.\nThe spread operator allows us to insert variables and constants and to sort of \u0026ldquo;unroll\u0026rdquo; another collection within the new one, and it does so with optimal performance.\nint[] numbers1 = [1, 2, 3]; int[] numbers2 = [4, 5, 6]; int[] moreNumbers = [.. numbers1, .. numbers2, 7, 8, 9]; foreach(var number in moreNumbers) Console.WriteLine(number); It would be nice if lambdas were allowed in collection expressions, like in other languages (Python), but that\u0026rsquo;s not yet an option.\nWhat about custom collections? But let\u0026rsquo;s imagine I have built a LineBuffer class that inherits from IEnumrable\u0026lt;chrar\u0026gt;; it offers some custom features over its base class. I get an error if I try to use collection expression syntax on it. It is not a common .NET type, and the compiler doesn\u0026rsquo;t know how to go around it. public class LineBuffer : IEnumerable\u0026lt;char\u0026gt; { private readonly char[] _buffer = new char[80]; public LineBuffer(ReadOnlySpan\u0026lt;char\u0026gt; buffer) { int number = (_buffer.Length \u0026lt; buffer.Length) ? _buffer.Length : buffer.Length; for (int i = 0; i \u0026lt; number; i++) _buffer[i] = buffer[i]; } public IEnumerator\u0026lt;char\u0026gt; GetEnumerator() =\u0026gt; _buffer.AsEnumerable\u0026lt;char\u0026gt;().GetEnumerator(); IEnumerator IEnumerable.GetEnumerator() =\u0026gt; _buffer.GetEnumerator(); // etc } // this causes a compile error LineBuffer line = [\u0026#39;H\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;W\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;r\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;!\u0026#39;]; We can support collection expressions in our custom types, though. It\u0026rsquo;s a two-step process. First, we implement a builder method, then decorate the class (or struct) with a CollectionBuilderAttribute. The attribute maps our type to the builder method. [CollectionBuilder(typeof(LineBuffer), nameof(Create))] public class LineBuffer : IEnumerable\u0026lt;char\u0026gt; { private readonly char[] _buffer = new char[80]; public LineBuffer(ReadOnlySpan\u0026lt;char\u0026gt; buffer) { int number = (_buffer.Length \u0026lt; buffer.Length) ? _buffer.Length : buffer.Length; for (int i = 0; i \u0026lt; number; i++) _buffer[i] = buffer[i]; } public IEnumerator\u0026lt;char\u0026gt; GetEnumerator() =\u0026gt; _buffer.AsEnumerable\u0026lt;char\u0026gt;().GetEnumerator(); IEnumerator IEnumerable.GetEnumerator() =\u0026gt; _buffer.GetEnumerator(); internal static LineBuffer Create(ReadOnlySpan\u0026lt;char\u0026gt; values) =\u0026gt; new LineBuffer(values); } The official documentation says the builder must be named \u0026ldquo;Create,\u0026rdquo; but that\u0026rsquo;s false. We can name it however we want as long as it matches the attribute (it\u0026rsquo;s probably still worth adhering to the suggested practice.)\nAdding collection expression support to custom types is helpful in your codebase, even more so if you\u0026rsquo;re a library author.\nThe syntax of collection expressions is symmetric with that of slicing and pattern matching, a nice touch that keeps the language tidy and coherent. Take a look at this pattern matching switch:\npublic Grade GPA =\u0026gt; Grades switch { [] =\u0026gt; 4.0m, [var grade] =\u0026gt; grade, [.. var all] =\u0026gt; all.Average() }; Visual Studio, VS Code, JetBrains Rider and most other IDEs offer full support for refactoring old-style collection initializations to collection expressions.\nWhat about dictionary expressions? They are common in other languages (again, Python). When asked, Kathrine Dollard of the C# design team answered that they\u0026rsquo;re thinking about it, mostly trying to understand the best design, so there\u0026rsquo;s a chance that we\u0026rsquo;ll see dictionary expressions in the language in the future.\nAlso see: C# 12 Primary Constructors.\n","permalink":"https://nicolaiarocci.com/csharp-collection-expressions/","summary":"\u003cp\u003eThis is a follow-up post to \u003ca href=\"/csharp-primary-constructors\"\u003eC# 12 Primary\nConstructors\u003c/a\u003e. Like that article, this one\noriginates from the preparation notes for my presentation at the \u003ca href=\"https://abp.io/conference/2024\"\u003eABP Dotnet\nConference 2024\u003c/a\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eI love collection expressions. Like primary constructors, collection\nexpressions will see a significant adoption in the long run.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCollection expressions introduce a new way to initialize common collection\nvalues in a terse, unified syntax.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThis is how we initialize collections today:\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cs\" data-lang=\"cs\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"\"\u003evar\u003c/span\u003e x1 = \u003cspan style=\"font-weight:bold\"\u003enew\u003c/span\u003e \u003cspan style=\"\"\u003eint\u003c/span\u003e[] { 1, 2, 3, 4 };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"\"\u003evar\u003c/span\u003e x2 = Array.Empty\u0026lt;\u003cspan style=\"\"\u003eint\u003c/span\u003e\u0026gt;();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eWriteByteArray(\u003cspan style=\"font-weight:bold\"\u003enew\u003c/span\u003e[] { (\u003cspan style=\"\"\u003ebyte\u003c/span\u003e)1, (\u003cspan style=\"\"\u003ebyte\u003c/span\u003e)2, (\u003cspan style=\"\"\u003ebyte\u003c/span\u003e)3 });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u0026lt;\u003cspan style=\"\"\u003eint\u003c/span\u003e\u0026gt; x3 = \u003cspan style=\"font-weight:bold\"\u003enew\u003c/span\u003e() { 1, 2, 3, 4 };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eSpan\u0026lt;DateTime\u0026gt; dates = \u003cspan style=\"font-weight:bold\"\u003estackalloc\u003c/span\u003e DateTime[] { GetDate(0), GetDate(1) };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eWriteByteSpan(\u003cspan style=\"font-weight:bold\"\u003estackalloc\u003c/span\u003e[] { (\u003cspan style=\"\"\u003ebyte\u003c/span\u003e)1, (\u003cspan style=\"\"\u003ebyte\u003c/span\u003e)2, (\u003cspan style=\"\"\u003ebyte\u003c/span\u003e)3 });\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNotice how the code is diverse depending on the type and the context. It is also\nverbose. Look at how we initialize an empty \u003ccode\u003eint\u003c/code\u003e array (second line); it\u0026rsquo;s\nlengthy and starkly contrasts with the previous line, where we initialize the\nsame type with some actual values.  In many situations, casting is needed;\nagain, take a look at the \u003ccode\u003eWriteByteArray\u003c/code\u003e and \u003ccode\u003eWriteByteSpan\u003c/code\u003e calls.\u003c/p\u003e","title":"C# 12 Collection Expressions"},{"content":" The standard shouldn’t be never to make a mistake. It’s to make as few mistakes as possible, but quickly recognize, acknowledge, and address the ones you do make.\n\u0026ndash; John Gruber\n","permalink":"https://nicolaiarocci.com/quoting-john-gruber/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe standard shouldn’t be never to make a mistake. It’s to make as few mistakes as possible, but quickly recognize, acknowledge, and address the ones you do make.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://daringfireball.net/linked/2024/05/09/apple-crush-apology\"\u003eJohn Gruber\u003c/a\u003e\u003c/p\u003e","title":"Quoting John Gruber"},{"content":"I wrapped up my C# 12 session at the ABP Dotnet Conference 2024, and I wanted to share the take-home points, at least about the most relevant features in this language version. Posting the slides made no sense as they were minimal; all the content was packed in the live demo.\nIn a follow-up post, I plan to address Collection Expressions (done) and maybe \u0026ldquo;type any aliases\u0026rdquo;; this is about Primary Constructors.\nWe can now add a list of parameters to a struct or class declaration. This way, we avoid writing an explicit constructor method, sparing us some boilerplate code.\nWhat I refer to as \u0026lsquo;primary parameters\u0026rsquo; are unique in that they are in scope throughout the type definition; this means they can be used anywhere within the type.\npublic readonly struct Distance(double dx, double dy) { public readonly double Magnitude { get; } = Math.Sqrt(dx * dx + dy * dy); public readonly double Direction { get; } = Math.Atan2(dy, dx); public override string ToString() =\u0026gt; $\u0026#34;{nameof(Magnitude)}: {Magnitude}, {nameof(Direction)}: {Direction}\u0026#34;; public double Dx { get; } = dx; public double Dy { get; } = dy; } It\u0026rsquo;s important to note that primary constructor parameters are not class members; therefore, this. cannot be used on them. They can be considered static values, but unlike typical static values, they can also be used in non-static methods, offering a unique advantage (some black magic happens behind the scenes.)\nWe no longer need to define and assign a type-level field; the compiler will do that behind the scenes when needed; if a behind-the-scenes backing field is unnecessary, it won\u0026rsquo;t be created.\nPrimary constructor parameters don\u0026rsquo;t become properties and are inaccessible outside the instance. We can create properties to expose their values if needed. Record types are an exception. Constructor parameters become properties with records, and it makes sense because records are generally used as DTOs, whereas we want the option with class and structs.\nSecondary and parameterless constructors can be added to a primary constructor. They must invoke the primary, passing its values along.\npublic Distance() : this(0, 0) { } With primary constructors, we do not have a method body; how do we handle argument validation? One pattern is to perform validation at property assignation. public string AccountID { get; } = ValidAccountNumber(accountID) ? accountID : throw new ArgumentException(\u0026#34;Invalid account number\u0026#34;, nameof(accountID)); public static bool ValidAccountNumber(string accountID) =\u0026gt; accountID?.Length == 10 \u0026amp;\u0026amp; accountID.All(c =\u0026gt; char.IsDigit(c)); I like this pattern because it brings property declaration and validation close to each other, making it easier to process and reason about the domain logic. When we perform argument validation in an old-style constructor method, we tend to separate validation and declaration, making it difficult to reconcile the two aspects, especially when we have hundreds of lines between constructor code and property declaration.\nDerived types can have a primary constructor, too; it must invoke the base class\u0026rsquo; primary constructor.\npublic class CheckingAccount(string accountID, string owner, decimal overdraftLimit = 0) : BankAccount(accountID, owner) Old-style derived types can still derive from a primary constructor type; a regular constructor will invoke the base primary, as we\u0026rsquo;ve always been doing.\nRegarding inheritance, we can mix and match primary constructor types with old-style types, making it easy to refactor our libraries to use primary constructors. We know that adopters will have no problem deriving from our refactored types.\nWatch out for \u0026ldquo;nested captures\u0026rdquo; of primary parameter values in derived types. If both the derived and the base type capture them, and one (or both) change their captured values, we may end up with non-aligned instance values. Roslyn\u0026rsquo;s analyzer will raise a warning so we can fix our code or mute the alert with a pragma.\nVisual Studio and Visual Studio code offer built-in support for primary constructors (refactorings, etc.) That\u0026rsquo;s true for JetBrains Rider or any other IDEs leveraging Roslyn.\nThe primary constructor\u0026rsquo;s original implementation dates back to C# 6 in 2015. It was publicly available in one of those version previews for a short period. Then, it was taken back to the drawing board, only to resurface with record types in C# 9 (?) and custom types in C# 12.\nAlso see: C# 12 Collection Expressions.\n","permalink":"https://nicolaiarocci.com/csharp-primary-constructors/","summary":"\u003cp\u003eI wrapped up my C# 12 session at the \u003ca href=\"https://abp.io/conference/2024\"\u003eABP Dotnet Conference 2024\u003c/a\u003e, and I wanted to share the take-home points, at least about the most relevant features in this language version. Posting the slides made no sense as they were minimal; all the content was packed in the live demo.\u003c/p\u003e\n\u003cp\u003eIn a follow-up post, I plan to address Collection Expressions (\u003ca href=\"/csharp-collection-expressions\"\u003edone\u003c/a\u003e) and maybe \u0026ldquo;type any aliases\u0026rdquo;; this is about Primary Constructors.\u003c/p\u003e","title":"C# 12 Primary Constructors"},{"content":"I went for a walk in the local pinewood the other day. It\u0026rsquo;s one of my favorite places, especially the least frequented parts, where one can walk for hours (and risk getting lost) without meeting anyone. I cut it shorter this time as it started to drip rain, and I had nothing with me. ","permalink":"https://nicolaiarocci.com/in-the-pinewood-video/","summary":"\u003cp\u003eI went for a walk in the \u003ca href=\"https://maps.app.goo.gl/xYHc8GpX7fRN5ZqT6\"\u003elocal pinewood\u003c/a\u003e the other day. It\u0026rsquo;s one of my favorite places, especially the least frequented parts, where one can walk for hours (and risk getting lost) without meeting anyone. I cut it shorter this time as it started to drip rain, and I had nothing with me.\n\n\u003cdiv style=\"padding:56.25% 0 0 0;position:relative;\"\u003e\u003ciframe src=\"https://player.vimeo.com/video/942353685?badge=0\u0026amp;autopause=0\u0026amp;player_id=0\u0026amp;app_id=58479\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture; clipboard-write\" style=\"position:absolute;top:0;left:0;width:100%;height:100%;\" title=\"In the pinewood\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cscript src=\"https://player.vimeo.com/api/player.js\"\u003e\u003c/script\u003e\n\u003c/p\u003e","title":"In the pinewood [video]"},{"content":" I cannot remember the books I\u0026rsquo;ve read any more than the meals I have eaten; even so, they have made me.\n\u0026ndash; Ralph Waldo Emerson (debated, see here)\n","permalink":"https://nicolaiarocci.com/quoting-ralph-waldo-emerson/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI cannot remember the books I\u0026rsquo;ve read any more than the meals I have eaten; even so, they have made me.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://www.goodreads.com/quotes/37953-i-cannot-remember-the-books-i-ve-read-any-more-than\"\u003eRalph Waldo Emerson\u003c/a\u003e (debated, see \u003ca href=\"https://quoteinvestigator.com/2016/06/20/books/\"\u003ehere\u003c/a\u003e)\u003c/p\u003e","title":"Quoting Ralph Waldo Emerson"},{"content":" It\u0026rsquo;s very fast to build something that\u0026rsquo;s 90% of a solution. The problem is that the last 10% of building something is usually the hard part which really matters, and with a black box at the center of the product, it feels much more difficult to me to nail that remaining 10%. Closing that gap with gen AI feels much more fickle to me than a normal engineering problem. It could be that I\u0026rsquo;m unfamiliar with it, but I also wonder if some classes of generative AI based products are just doomed to mediocrity as a result.\n\u0026ndash; Moxie Marlinspike\n","permalink":"https://nicolaiarocci.com/quoting-moxie-marlinspike/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIt\u0026rsquo;s very fast to build something that\u0026rsquo;s 90% of a solution. The problem is that the last 10% of building something is usually the hard part which really matters, and with a black box at the center of the product, it feels much more difficult to me to nail that remaining 10%. Closing that gap with gen AI feels much more fickle to me than a normal engineering problem. It could be that I\u0026rsquo;m unfamiliar with it, but I also wonder if some classes of generative AI based products are just doomed to mediocrity as a result.\u003c/p\u003e","title":"Quoting Moxie Marlinspike"},{"content":" The moral is obvious. You can\u0026rsquo;t trust code that you did not totally create yourself. No amount of source-level verification or scrutiny will protect you from using untrusted code.\n\u0026ndash; Ken Thompson\nHis 1984 Turing Award paper on supply chain security is only four pages long and is worth reading repeatedly.\n","permalink":"https://nicolaiarocci.com/quoting-ken-thompson/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe moral is obvious. You can\u0026rsquo;t trust code that you did not totally create yourself. No amount of source-level verification or scrutiny will protect you from using untrusted code.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://dl.acm.org/doi/pdf/10.1145/358198.358210\"\u003eKen Thompson\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHis 1984 Turing Award paper on supply chain security is only four pages long and is worth reading repeatedly.\u003c/p\u003e","title":"Quoting Ken Thompson"},{"content":"This one looks like a promising read:\nTor, one of the most important and misunderstood technologies of the digital age, is best known as the infrastructure underpinning the so-called Dark Web. But the real “dark web,” when it comes to Tor, is the hidden history brought to light in this book: where this complex and contested infrastructure came from, why it exists, and how it connects with global power in intricate and intimate ways. In Tor: From the Dark Web to the Future of Privacy,Ben Collier has written, in essence, a biography of Tor—a cultural and technological history of power, privacy, politics, and empire in the deepest reaches of the internet.\nI\u0026rsquo;ve always been cautiously curious about the Tor project. I remember listening to a Tor talk at a PyCon Italy (or EuroPython?) conference, where the speaker insisted that Tor wasn\u0026rsquo;t meant for dark usages but as a means of liberation. Tor: From the Dark Web to the Future of Privacy might help frame the project from that perspective.\nIt\u0026rsquo;s packaged as a free PDF. It\u0026rsquo;s too bad it\u0026rsquo;s watermarked, so converting it to EPUB results in a mess.\n","permalink":"https://nicolaiarocci.com/tor-from-the-dark-web-to-the-future-of-privacy/","summary":"\u003cp\u003eThis one looks like a promising read:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTor, one of the most important and misunderstood technologies of the digital age, is best known as the infrastructure underpinning the so-called Dark Web. But the real “dark web,” when it comes to Tor, is the hidden history brought to light in this book: where this complex and contested infrastructure came from, why it exists, and how it connects with global power in intricate and intimate ways. In Tor: From the Dark Web to the Future of Privacy,Ben Collier has written, in essence, a biography of Tor—a cultural and technological history of power, privacy, politics, and empire in the deepest reaches of the internet.\u003c/p\u003e","title":"Tor: from the Dark Web to the Future of Privacy"},{"content":"Yesterday, Serena and I went to see Spellbound Contemporary Ballet\u0026rsquo;s The Art of Fugue, a performance based on J.S. Bach\u0026rsquo;s unfinished work.\nI have been gifting Serena two subscriptions to our city\u0026rsquo;s theater\u0026rsquo;s dance season for some years. She loves dance, both classic and contemporary. I thought I did not. Usually, she goes with one of her best friends. I don\u0026rsquo;t remember ever going before, and yesterday, I only went because none of her friends were available.\nI know nothing about ballet, and truthfully, I expected to get relatively bored. Instead, I got excited. I sat there in the stalls, open-mouthed, the whole time. The nonstop one-hour and ten-minute show flew by; it was delightful.\nMany of the dancers\u0026rsquo; movements, individual but primarily choral, reminded me of Hayao Miyazaki\u0026rsquo;s masterful sequences, particularly those in which one or more characters literally \u0026ldquo;liquefy\u0026rdquo; to the ground or otherwise amalgamate, which happens quite often in his works. I wonder if Mauro Astolfi, the choreographer, took inspiration from Miyazaki or if it was just a figment of my imagination (Serena, I later found out, had the same thoughts.)\nNext year, Serena\u0026rsquo;s best friends are staying at home. There\u0026rsquo;s a new ballet fan in town.\n","permalink":"https://nicolaiarocci.com/spellbound-contemporary-ballets-the-art-of-fugue/","summary":"\u003cp\u003eYesterday, Serena and I went to see \u003ca href=\"https://www.spellboundance.com/\"\u003eSpellbound Contemporary Ballet\u003c/a\u003e\u0026rsquo;s \u003cem\u003eThe Art of Fugue\u003c/em\u003e, a performance based on J.S. Bach\u0026rsquo;s \u003ca href=\"https://en.wikipedia.org/wiki/The_Art_of_Fugue\"\u003eunfinished work\u003c/a\u003e.\u003c/p\u003e\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe src=\"https://player.vimeo.com/video/811478146\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"vimeo video\" webkitallowfullscreen mozallowfullscreen allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003cp\u003eI have been gifting Serena two subscriptions to \u003ca href=\"https://www.teatroalighieri.org\"\u003eour city\u0026rsquo;s theater\u003c/a\u003e\u0026rsquo;s dance season for some years. She loves dance, both classic and contemporary. I thought I did not. Usually, she goes with one of her best friends. I don\u0026rsquo;t remember ever going before, and yesterday, I only went because none of her friends were available.\u003c/p\u003e","title":"Spellbound Contemporary Ballet's The Art of Fugue"},{"content":"I have been following Cowboy Bebop on Netflix (the anime, not the spinoff TV series). The opening is a visual and musical marvel; I\u0026rsquo;m enthralled by it.\nThe show\u0026rsquo;s soundtrack is a unique blend of jazz (big band hard bop, mainly), blues, and a bit of rock, which I\u0026rsquo;ve never seen before in anime and probably in movies. Even episode titles pay tribute to jazz, blues and rock tracks. We have \u0026ldquo;Valtz for Venus,\u0026rdquo; \u0026ldquo;Sympathy for the Devil,\u0026rdquo; \u0026ldquo;My Funny Valentine,\u0026rdquo; and stuff like that. Adorable. Episodes may appear rambling and superficial at first glance, but they are far from that. They strike a perfect balance between comedy and thought-provoking, often philosophical themes.\nLast night\u0026rsquo;s episode, \u0026ldquo;Jamming with Edward\u0026rdquo;, struck me as prescient. In 2071, Earth is surrounded by a mountain of scrap metal (mostly decommissioned satellites and wreckage from missiles, probes, and spaceships). Space junk was not a theme in 1998 when the anime was conceived, or was it? And there\u0026rsquo;s this AI, a clear tribute to HAL 9000, left active on a derelict satellite, feeling lonely, misunderstood, and abandoned. It is tremendously timely, resonating with the issues we face today.\nI bought the whole Space Cowboy soundtrack. It\u0026rsquo;s the bomb.\n","permalink":"https://nicolaiarocci.com/cowboy-bebop/","summary":"\u003cp\u003eI have been following \u003ca href=\"https://en.wikipedia.org/wiki/Cowboy_Bebop\"\u003eCowboy Bebop\u003c/a\u003e on Netflix (the anime, not the spinoff TV series). The opening is a visual and musical marvel; I\u0026rsquo;m enthralled by it.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/EL-D9LrFJd4?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eThe show\u0026rsquo;s soundtrack is a unique blend of jazz (big band hard bop, mainly), blues, and a bit of rock, which I\u0026rsquo;ve never seen before in anime and probably in movies. Even episode titles pay tribute to jazz, blues and rock tracks. We have \u0026ldquo;Valtz for Venus,\u0026rdquo; \u0026ldquo;Sympathy for the Devil,\u0026rdquo; \u0026ldquo;My Funny Valentine,\u0026rdquo; and stuff like that. Adorable. Episodes may appear rambling and superficial at first glance, but they are far from that. They strike a perfect balance between comedy and thought-provoking, often philosophical themes.\u003c/p\u003e","title":"Cowboy Bebop"},{"content":"Vicki Boykis has a good piece on Redis\u0026rsquo;s recent vicissitudes. At the same time, she recaps where we stand and sings the praises of a project that many are fond of, and not just for its technical worth.\nI, like many developers who have worked on high-scale, low-latency web services over the last fifteen years, have an intimate relationship with Redis. At any new job, when you ask where the data is, and someone points you to a server address with port 6379, you know you will meet an good, reliable friend there.\nRedis is indeed an awe-inspiring project. I have met Salvatore (antirez), its author, several times. He\u0026rsquo;s a down-to-earth and brilliant guy. I admit I feel nostalgic for Redis\u0026rsquo; \u0026ldquo;heroic\u0026rdquo; period when Salvatore was at the helm and Redis was for developers, not enterprises.\n","permalink":"https://nicolaiarocci.com/redis-is-forked/","summary":"\u003cp\u003eVicki Boykis has a \u003ca href=\"https://vickiboykis.com/2024/04/16/redis-is-forked/\"\u003egood piece\u003c/a\u003e on Redis\u0026rsquo;s recent vicissitudes. At the same time, she recaps where we stand and sings the praises of a project that many are fond of, and not just for its technical worth.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI, like many developers who have worked on high-scale, low-latency web services over the last fifteen years, have an intimate relationship with Redis. At any new job, when you ask where the data is, and someone points you to a server address with port 6379, you know you will meet an good, reliable friend there.\u003c/p\u003e","title":"Redis is forked"},{"content":"Molly White\u0026rsquo;s experience with LLMs corresponds more or less with my own, but she is much better at recounting, critiquing, and drawing conclusions than I am.\nI find my feelings about AI are actually pretty similar to my feelings about blockchains: they do a poor job of much of what people try to do with them, they can\u0026rsquo;t do the things their creators claim they one day might, and many of the things they are well suited to do may not be altogether that beneficial. And while I do think that AI tools are more broadly useful than blockchains, they also come with similarly monstrous costs.\nBrilliant.\nBut the reality is that you can\u0026rsquo;t build a hundred-billion-dollar industry around a technology that\u0026rsquo;s kind of useful, mostly in mundane ways, and that boasts perhaps small increases in productivity if and only if the people who use it fully understand its limitations. And you certainly can\u0026rsquo;t justify the kind of exploitation, extraction, and environmental cost that the industry has been mostly getting away with, in part because people have believed their lofty promises of someday changing the world.\nFull article here.\n","permalink":"https://nicolaiarocci.com/ai-isnt-useless.-but-is-it-worth-it/","summary":"\u003cp\u003eMolly White\u0026rsquo;s experience with LLMs corresponds more or less with my own, but she is much better at recounting, critiquing, and drawing conclusions than I am.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI find my feelings about AI are actually pretty similar to my feelings about blockchains: \u003cstrong\u003ethey do a poor job of much of what people try to do with them, they can\u0026rsquo;t do the things their creators claim they one day might, and many of the things they are well suited to do may not be altogether that beneficial\u003c/strong\u003e. And while I do think that AI tools are more broadly useful than blockchains, they also come with similarly monstrous costs.\u003c/p\u003e","title":"AI isn't useless. But is it worth it?"},{"content":"\nI am thrilled to have the opportunity to present at an international conference once again. On May 9th, I will speak at the ABP Donet Conf'24. My session, titled C #12: What\u0026rsquo;s New and Interesting, is on a topic I\u0026rsquo;m passionate about.\nWith the alignment of C# and Dotnet Core release cycles, the C# release cadence has increased (we\u0026rsquo;re on a yearly cycle now), while feature quantity has reduced for individual releases, which is good. The faster, smaller iterations allow for quicker course corrections, and introducing fewer new features makes it easier to embrace the changes.\nThe ABP Dotnet Conf'241 will be held online on 8-9th May; the lineup and agenda look great, so reserve a ticket before they are sold out, and see you there!\nI love what the conference organizers are doing with the subtle product name change. Did you catch that? #dropthedot\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/i-am-speaking-at-abp-dotnet-conf24.md/","summary":"\u003cp\u003e\u003cimg alt=\"Nicola Iarocci: C#12 What\u0026rsquo;s new and Interesting session at ABP Dotnet Conf'24\" loading=\"lazy\" src=\"/images/abp-dotnet-conf24.png\"\u003e\u003c/p\u003e\n\u003cp\u003eI am thrilled to have the opportunity to present at an international conference once again. On May 9th, I will speak at the \u003ca href=\"https://abp.io/conference/2024\"\u003eABP Donet Conf'24\u003c/a\u003e. My session, titled C #12: What\u0026rsquo;s New and Interesting, is on a topic I\u0026rsquo;m passionate about.\u003c/p\u003e\n\u003cp\u003eWith the alignment of C# and Dotnet Core release cycles, the C# release cadence has increased (we\u0026rsquo;re on a yearly cycle now), while feature quantity has reduced for individual releases, which is good. The faster, smaller iterations allow for quicker course corrections, and introducing fewer new features makes it easier to embrace the changes.\u003c/p\u003e","title":"I am speaking at ABP Dotnet Conf'24"},{"content":"Among the essential reasons I continue to make presentations at various conferences is that the preparation required to deliver good content forces me to learn and comprehend a topic in greater depth. I always try to talk about the stuff I am working on: the commitment to explaining what I am learning in public forces me into a higher level of knowledge.\nIn the past few weeks, I have spoken about OAuth2 at two different conferences, and OAuth2 has been precisely the subject of my work for the past few months, and it still is now. It goes like this: I study and implement things, and while doing that, I say to myself, hey, this could be an exciting topic for other devs, too. I let the idea cool down for a few days, and then, if it still seems good, I start looking for a fitting call for papers. Magic happens if the proposal is accepted: I am forced to turn from a superficial connoisseur to someone close to a field expert. That\u0026rsquo;s the level of competence to aim for if one wants to talk publicly, especially on a technical topic.\nSomething new happened yesterday. As I was writing the OAuth2 documentation for the next iteration of our APIs, I realized I could reuse some of the material from my live sessions. In the talk, it made sense to dedicate a few minutes to explain the OAuth2 Authorization Code Flow, so I used Obsidian Canvas to draw two diagrams, one with a high-level view of the flow while the other would zoom into the details. I could now take the first one, streamline and simplify it, and then include it in our official documentation. And that\u0026rsquo;s what I did.\nOur documentation now includes the flow chart I conceived for the conference.\nThat presentation took a while to prepare, but the delivery was good. It took me to a new level of expertise, and part of that work landed in our product. It was all well worth the effort.\n","permalink":"https://nicolaiarocci.com/why-i-speak-at-conferences/","summary":"\u003cp\u003eAmong the essential reasons I continue to make presentations at various conferences is that the preparation required to deliver good content forces me to learn and comprehend a topic in greater depth. I always try to talk about the stuff I am working on: the commitment to explaining what I am learning in public forces me into a higher level of knowledge.\u003c/p\u003e\n\u003cp\u003eIn the past few weeks, I have spoken about OAuth2 at \u003ca href=\"https://nicolaiarocci.com/i-am-presenting-on-oauth2-at-two-conferences-this-month/\"\u003etwo different conferences\u003c/a\u003e, and OAuth2 has been precisely the subject of my work for the past few months, and it still is now. It goes like this: I study and implement things, and while doing that, I say to myself, hey, this could be an exciting topic for other devs, too. I let the idea cool down for a few days, and then, if it still seems good, I start looking for a fitting call for papers. Magic happens if the proposal is accepted: I am forced to turn from a superficial connoisseur to someone close to a field expert. That\u0026rsquo;s the level of competence to aim for if one wants to talk publicly, especially on a technical topic.\u003c/p\u003e","title":"Why I speak at conferences"},{"content":" I wish I was morally bankrupt enough to be a productivity guru. I could, like, charge $50k to stand behind a podium in a hotel ballroom and spout nonsense at desperate people in an attempt to get them to buy my book and planners. It would be awesome.\n\u0026ndash; snakeyjake\n","permalink":"https://nicolaiarocci.com/quoting-snakeyjake/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI wish I was morally bankrupt enough to be a productivity guru. I could, like,\ncharge $50k to stand behind a podium in a hotel ballroom and spout nonsense at\ndesperate people in an attempt to get them to buy my book and planners. It would\nbe awesome.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://news.ycombinator.com/item?id=39950195\"\u003esnakeyjake\u003c/a\u003e\u003c/p\u003e","title":"Quoting snakeyjake"},{"content":"The so-called \u0026ldquo;XZ attack\u0026rdquo; is all over the internet these days, and for good reason.\nOver a period of over two years, an attacker using the name “Jia Tan” worked as a diligent, effective contributor to the xz compression library, eventually being granted commit access and maintainership. Using that access, they installed a very subtle, carefully hidden backdoor into liblzma, a part of xz that also happens to be a dependency of OpenSSH sshd on Debian, Ubuntu, Fedora, and other systemd-based Linux systems. That backdoor watches for the attacker sending hidden commands at the start of an SSH session, giving the attacker the ability to run an arbitrary command on the target system without logging in: unauthenticated, targeted remote code execution.\nAs the excellent timeline of the xz open-source attack quoted above remarks, this will likely be remembered as the first known supply chain attack on widely used open-source software. This story screams a nation-state-level hacking attempt to me.\nAs an open-source maintainer with limited bandwidth, I know very well how tempting it can be to give up control and how difficult it is to judge someone\u0026rsquo;s intentions. I feel for the original author of XZ. A relevant discussion is currently going on on HN.\n","permalink":"https://nicolaiarocci.com/timeline-of-the-xz-open-source-attack/","summary":"\u003cp\u003eThe so-called \u0026ldquo;XZ attack\u0026rdquo; is all over the internet these days, and for good\nreason.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOver a period of over two years, an attacker using the name “Jia Tan” worked\nas a diligent, effective contributor to the xz compression library, eventually\nbeing granted commit access and maintainership. Using that access, they\ninstalled a very subtle, carefully hidden backdoor into liblzma, a part of xz\nthat also happens to be a dependency of OpenSSH sshd on Debian, Ubuntu, Fedora,\nand other systemd-based Linux systems. That backdoor watches for the attacker\nsending hidden commands at the start of an SSH session, giving the attacker the\nability to run an arbitrary command on the target system without logging in:\nunauthenticated, targeted remote code execution.\u003c/p\u003e","title":"Timeline of the XZ open source attack"},{"content":"Happy Easter, everyone. This morning, I completed the long-overdue move of all my ripped CDs from my old 2012 MacBook Pro to the new one and, then, to my iPhone. I\u0026rsquo;m using Doppler on both devices. I like Doppler, a simple yet elegant MP3 player app with few well-thought-out features.\nI am increasingly convinced that returning to purchased music is the way. I\u0026rsquo;ve been listening to streaming services for so long that I almost forgot the accomplishment of listening to music I own. This music was so significant when I first listened to it that it was worth buying and carrying along over the years. It\u0026rsquo;s tangible, too: it\u0026rsquo;s sitting right next to me, on my hard disk and my phone; I can look at it and, yes, touch and move it as I please, as I can with my original CDs. The same goes for the new music I buy on Bandcamp or elsewhere.\nI can download music from Spotify, but that\u0026rsquo;s rented music that I cannot move away from the app.\nIt\u0026rsquo;s also relevant that a much more significant part of my money goes to the artists when I purchase their music, and I\u0026rsquo;m glad for that because I\u0026rsquo;m thankful. I want their business to be healthy and prosperous so that I may enjoy more of their art in the future.\nI\u0026rsquo;m listening to Dance Cadaverous from Wayne Shorter\u0026rsquo;s Speak No Evil, a song I probably last listened to ten years ago. Speak No Evil is one of the 100 CDs that, back in the day, I started collecting from The Best Jazz (pre-1980) Ever Released Digitally. I never completed that collection. I may resume it now, although future purchases will likely be just MP3s.\n","permalink":"https://nicolaiarocci.com/listening-to-purchased-music-is-the-way/","summary":"\u003cp\u003eHappy Easter, everyone. This morning, I completed the long-overdue move of all\nmy ripped CDs from my old 2012 MacBook Pro to the new one and, then, to my\niPhone. I\u0026rsquo;m using Doppler on both devices. I like Doppler, a simple yet elegant\nMP3 player app with few well-thought-out features.\u003c/p\u003e\n\u003cp\u003eI am increasingly convinced that \u003ca href=\"https://nicolaiarocci.com/sick-and-tired-of-spotifys-music-consuming-model/\"\u003ereturning to purchased music is the\nway\u003c/a\u003e.\nI\u0026rsquo;ve been listening to streaming services for so long that I almost forgot the\naccomplishment of listening to music I own. This music was so significant when I\nfirst listened to it that it was worth buying and carrying along over the years.\nIt\u0026rsquo;s tangible, too: it\u0026rsquo;s sitting right next to me, on my hard disk and my phone;\nI can look at it and, yes, touch and move it as I please, as I can with my\noriginal CDs. The same goes for the new music I buy on Bandcamp or elsewhere.\u003c/p\u003e","title":"Listening to purchased music is the way"},{"content":"I spent the day doing remote maintenance on multiple Linux machines via ssh. The revelation is that ChatGPT is the bomb for these tasks: What does that command option do? I am trying to remember. What syntax is to install that peculiar and rarely used package on Debian? I am getting this locale configuration error; what was the fix again? All this stuff is answered much sooner than searching online, no matter the search engine.\nThe feeling is having a good, untiring Linux connoisseur (and of all the various ancillary packages) sitting right next to you, always ready to lend a hand. I also think, and I\u0026rsquo;m probably wrong (but my experience seems to bear this out so far), that because these are all simple questions about stuff well carved in stone, hallucinations are unlikely to occur.\nMy assistant today was ChatGPT 3.5, which is very old by today\u0026rsquo;s LLM standards. It is also free to use, which makes it all even more impressive.\n","permalink":"https://nicolaiarocci.com/chatgpt-is-the-perfect-linux-assistant/","summary":"\u003cp\u003eI spent the day doing remote maintenance on multiple Linux machines via ssh. The\nrevelation is that ChatGPT is the bomb for these tasks: What does that command\noption do? I am trying to remember. What syntax is to install that peculiar and\nrarely used package on Debian? I am getting this locale configuration error;\nwhat was the fix again? All this stuff is answered much sooner than searching\nonline, no matter the search engine.\u003c/p\u003e","title":"ChatGPT is the perfect Linux assistant"},{"content":"I am not a fan of TV series. However, I have been following the Shogun miniseries with a fair amount of interest, mainly because I am intrigued by the setting and historical period covered. As is always the case with modern TV series, it started very well (the first two to three episodes). Then it slowed down, getting stuck in the main characters\u0026rsquo; fanciful and improbable personal affairs and agendas, straying from the main plot, essentially muddling along until, I assume, the last episode of the season that will end with a bang.\nIn any case, I thought the characters were more or less fictional until today, when I found that, no, the main ones are historical, and the story is, by and large, true.\nIn 1600 a Dutch galleon arrived on the shores of a small fief on Kyushu, the westernmost of Japan’s four main islands. It was the first Dutch ship to reach Japan. Among the crew was an English navigator, William Adams, who managed to gain the trust of Tokugawa Ieyasu, a powerful warlord who became a shogun (the military leader of the samurai caste) in 1603. Adams eventually rose to the rank of Hatamoto, the shogun’s direct retainer. How did an English navigator come to serve the shogun? To answer this, we must first look at the situation in Japan at the time and the policies of Ieyasu.\nThe History Today article, available here, confirms that the main plotline has solid historical roots. By the way, I just realized it\u0026rsquo;s Tuesday. A new episode is due today, at least in my part of the world.\n","permalink":"https://nicolaiarocci.com/william-adams-english-advisor-to-the-shogun/","summary":"\u003cp\u003eI am not a fan of TV series. However, I have been following the Shogun\nminiseries with a fair amount of interest, mainly because I am intrigued by the\nsetting and historical period covered. As is always the case with modern TV\nseries, it started very well (the first two to three episodes). Then it slowed\ndown, getting stuck in the main characters\u0026rsquo; fanciful and improbable personal\naffairs and agendas, straying from the main plot, essentially muddling along\nuntil, I assume, the last episode of the season that will end with a bang.\u003c/p\u003e","title":"William Adams: english advisor to the Shogun"},{"content":"Yesterday I went for a walk in the mountains. This tour starts from Bocconi (on the road to Muraglione Pass) and the nice humpback bridge that is just below the village (I think it\u0026rsquo;s called \u0026ldquo;della Brusia\u0026rdquo;).\nPonte della Brusia, Bocconi (FC)\nIt is a nice hike, with the ascent that becomes quite challenging in the final part, towards the ridge tops, which, once reached, you\u0026rsquo;ll follow for a long time, partially on a forest road, before plunging back downhill, initially following a lovely descending ridge da makes most of the descent quite pleasant. During the ascent, several detours were necessary to get around the landslides that originated during the infamous May floods (there are still several traffic lights on the roadway leading up from Forlì, all due to the restoration works following the flood). Hats off to the volunteers who maintain the trail: they have had to work hard this year. At some point, they had to \u0026lsquo;dug out\u0026rsquo; complete new sections to get around the more enormous landslides.\nPrimroses, wild saffron, and buttercup suggest that, yes, we are indeed entering spring. All of this botanic expertise is due to PlantNet, the app I installed the other day, which works well, except that it has to be online, which is only rarely possible on the trail. Fortunately, it can also be used on previously taken photos, which I did once I was back in Bocconi. I also installed an app to recognize birdsong; it\u0026rsquo;s called Merlin Bird ID, received a lot of praise, and should work offline, but I have yet to try it.\nAs is often the case in the Apennines, rural ruins are encountered on the trail.\nThe best moment was the twenty or so minutes I spent lying down to rest at the highest point before embarking on the descent. I listened to the silence that silence was not: the sounds of the forest, the birds, the wind, the heat of the sun on my skin. My mind wanted to divert to new paths, and I tended to fall asleep several times, but I consciously tried to bring my mind back to listening. A meditation exercise that restored my energy levels: I felt recharged and rested when I got up.\nA warm day for mid-March, and breezy with partly cloudy skies.\nAt the start, be careful not to take the trail in reverse (as I initially did): after crossing the beautiful humpback bridge known as the Brusia, do not take the trail directly in front of you, but turn sharply left, walk about 30 meters above the Montone river, then take the trail to the right, marked \u0026ldquo;Valbura\u0026rdquo;.\nGPX track and some photos here.\n","permalink":"https://nicolaiarocci.com/from-bocconi-to-the-twin-mountains/","summary":"\u003cp\u003eYesterday I went for a walk in the mountains. This tour starts from\n\u003ca href=\"https://maps.app.goo.gl/BSJnhQBuqgXFN2sA8\"\u003eBocconi\u003c/a\u003e (on the road to Muraglione\nPass) and the nice humpback bridge that is just below the village (I think it\u0026rsquo;s\ncalled \u0026ldquo;della Brusia\u0026rdquo;).\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/bocconi3.jpg\"\n         alt=\"Ponte della Brusia, Bocconi (FC)\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003ePonte della Brusia, Bocconi (FC)\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eIt is a nice hike, with the ascent that becomes quite challenging in the final\npart, towards the ridge tops, which, once reached, you\u0026rsquo;ll follow for a long\ntime, partially on a forest road, before plunging back downhill, initially\nfollowing a lovely descending ridge da makes most of the descent quite pleasant.\nDuring the ascent, several detours were necessary to get around the landslides\nthat originated during the infamous May floods (there are still several traffic\nlights on the roadway leading up from Forlì, all due to the restoration works\nfollowing the flood). Hats off to the volunteers who maintain the trail: they\nhave had to work hard this year. At some point, they had to \u0026lsquo;dug out\u0026rsquo; complete\nnew sections to get around the more enormous landslides.\u003c/p\u003e","title":"From Bocconi to the Twin Mountains"},{"content":" In a beautiful essay published in Waiting for God, Simone Weil reminds us that study serves to develop attention, and almost no matter what is studied, even a mathematical exercise that turns out to be incomprehensible is fine. \u0026ldquo;Without feeling or knowing it,\u0026rdquo; Weil writes, \u0026ldquo;that seemingly sterile and fruitless effort has brought more light into the soul. One day one will find the fruit of it (\u0026hellip;) in any sphere of intelligence, perhaps entirely unrelated to mathematics.\u0026rdquo;\n\u0026ndash; Alice Rohrwacher 🇮🇹\n","permalink":"https://nicolaiarocci.com/quoting-alice-rohrwacher/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIn a beautiful essay published in Waiting for God, Simone Weil reminds us that study serves to develop attention, and almost no matter what is studied, even a mathematical exercise that turns out to be incomprehensible is fine. \u0026ldquo;Without feeling or knowing it,\u0026rdquo; Weil writes, \u0026ldquo;that seemingly sterile and fruitless effort has brought more light into the soul. One day one will find the fruit of it (\u0026hellip;) in any sphere of intelligence, perhaps entirely unrelated to mathematics.\u0026rdquo;\u003c/p\u003e","title":"Quoting Alice Rohrwacher"},{"content":"As it appears, cannibalism was much more widespread than previously thought, and perhaps for more complex reasons than we think. To honor the dead, for example.\nOur ancestors have been eating each other for a million years or more. In fact, it seems that, down the ages, around a fifth of societies have practised cannibalism. While some of this people-eating may have been done simply to survive, in many cases, the reasons look more complex. In places like Gough’s cave, for example, consuming the bodies of the dead seems to have been part of a funerary ritual. Far from a monstrous affront to nature, cannibalism may be a way of showing respect and love for the dead, say some archaeologists.\nMore here.\n","permalink":"https://nicolaiarocci.com/cannibalism-as-a-way-to-honor-the-dead/","summary":"\u003cp\u003eAs it appears, cannibalism was much more widespread than previously thought, and perhaps for\nmore complex reasons than we think. To honor the dead, for example.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOur ancestors have been eating each other for a million years or more. In\nfact, it seems that, down the ages, around a fifth of societies have practised\ncannibalism. While some of this people-eating may have been done simply to\nsurvive, in many cases, the reasons look more complex. In places like Gough’s\ncave, for example, consuming the bodies of the dead seems to have been part of a\nfunerary ritual. Far from a monstrous affront to nature, cannibalism may be a\nway of showing respect and love for the dead, say some archaeologists.\u003c/p\u003e","title":"Cannibalism as a way to honor the dead"},{"content":" I wrote the Dune series because I had this idea that charismatic leaders ought to come with a warning label on their forehead: \u0026ldquo;May be dangerous to your health.\u0026rdquo; One of the most dangerous presidents we had in this century was John Kennedy because people said \u0026ldquo;Yes Sir Mr. Charismatic Leader what do we do next?\u0026rdquo; and we wound up in Vietnam. And I think probably the most valuable president of this century was Richard Nixon. Because he taught us to distrust government and he did it by example.\n\u0026ndash; Frank Herbert\n","permalink":"https://nicolaiarocci.com/quoting-frank-herbert/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI wrote the Dune series because I had this idea that charismatic leaders ought to come with a warning label on their forehead: \u0026ldquo;May be dangerous to your health.\u0026rdquo; One of the most dangerous presidents we had in this century was John Kennedy because people said \u0026ldquo;Yes Sir Mr. Charismatic Leader what do we do next?\u0026rdquo; and we wound up in Vietnam. And I think probably the most valuable president of this century was Richard Nixon. Because he taught us to distrust government and he did it by example.\u003c/p\u003e","title":"Quoting Frank Herbert"},{"content":" Take care of yourself. Sleep. Eat. Exercise. Rest. Relax. Take care of other people, as best you can. People are important. Software is just fun.\n\u0026ndash; Lars Wirzenius, in his noteworthy 40 years of programming\n","permalink":"https://nicolaiarocci.com/quoting-lars-wirzenius/","summary":"\u003cblockquote\u003e\n\u003cp\u003eTake care of yourself. Sleep. Eat. Exercise. Rest. Relax. Take care of other people, as best you can. People are important. Software is just fun.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; Lars Wirzenius, in his noteworthy \u003ca href=\"https://liw.fi/40/\"\u003e\u003cem\u003e40 years of programming\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e","title":"Quoting Lars Wirzenius"},{"content":"I recently bought Dirty Rat, the absolute banger from Orbital\u0026rsquo;s 2023 Optical Delusion. It couldn\u0026rsquo;t be anything different, given that it\u0026rsquo;s a collaboration between the seminal electronic duo that emerged from the rave era and one of my British favorites, Sleaford Mods.\nSleaford Mods\u0026rsquo; barbed lyrics perfectly augment Orbital\u0026rsquo;s concrete-heavy digitalism. Mods\u0026rsquo; James Williamson lambasts the people, \u0026ldquo;blaming everyone in the hospital, everyone at the bottom of the English Channel, and everyone who doesn\u0026rsquo;t look like a fried animal.\u0026rdquo;\nI guess it\u0026rsquo;s about telling people to take responsibility for their own actions, you know, all these politicians don\u0026rsquo;t come from out of nowhere. Somebody keeps voting them in. So who might that be? \u0026ndash;Paul Hartnoll, Orbital\nDirty Rat by Orbital, Sleaford Mods The official video is good, too.\n","permalink":"https://nicolaiarocci.com/dirty-rat-by-orbital-with-sleaford-mods-music/","summary":"\u003cp\u003eI recently bought \u003ca href=\"https://orbitalofficial.bandcamp.com/track/dirty-rat-2\"\u003eDirty\nRat\u003c/a\u003e, the absolute\nbanger from Orbital\u0026rsquo;s 2023 Optical Delusion. It couldn\u0026rsquo;t be anything different,\ngiven that it\u0026rsquo;s a collaboration between the seminal electronic duo that emerged\nfrom the rave era and one of my British favorites, Sleaford Mods.\u003c/p\u003e\n\u003cp\u003eSleaford Mods\u0026rsquo; barbed lyrics perfectly augment Orbital\u0026rsquo;s concrete-heavy\ndigitalism. Mods\u0026rsquo; James Williamson lambasts the people, \u0026ldquo;blaming everyone in the\nhospital, everyone at the bottom of the English Channel, and everyone who\ndoesn\u0026rsquo;t look like a fried animal.\u0026rdquo;\u003c/p\u003e","title":"Dirty Rat by Orbital, with Sleaford Mods [music]"},{"content":"Most people likely already know and use the voice dictation feature in iOS and macOS all day, but I\u0026rsquo;ve only now seen the light.\nYesterday, I discovered I could dictate text notes to my iPhone, even offline. It works with Obsidian, WhatsApp, and any other app where I need to enter text, like the Safari search box. I suck at entering text on the phone. I also hate WhatsApp audio messages, but I often recur to them as, again, I suck at typing text on the phone. I can instead dictate those messages, and they will render as text as if I typed them; what a revelation!\nIt\u0026rsquo;s not entirely a discovery; I knew I could do that and did it occasionally, primarily for quick lookups. However, I underestimated how good and valuable the feature is.\nThis morning, I discovered the obvious: I can do the same on the Mac. The MacBook keyboard has a microphone function key, and guess what? It\u0026rsquo;s for voice dictation, and it works seamlessly. I can even start typing on the keyboard, switch to dictation on the fly, and then go back to typing without interruption. It works offline and has built-in multi-language support, just like iOS. Voice dictation will likely change how I take notes, send messages, and perform other tasks. Take notes, for example; until today, I rarely write them down when away from the keyboard.\n","permalink":"https://nicolaiarocci.com/voice-dictation-on-ios-and-macos-is-underestimated/","summary":"\u003cp\u003eMost people likely already know and use the voice dictation feature in iOS and\nmacOS all day, but I\u0026rsquo;ve only now seen the light.\u003c/p\u003e\n\u003cp\u003eYesterday, I discovered I could dictate text notes to my iPhone, even offline.\nIt works with Obsidian, WhatsApp, and any other app where I need to enter text,\nlike the Safari search box. I suck at entering text on the phone. I also hate\nWhatsApp audio messages, but I often recur to them as, again, I suck at typing\ntext on the phone. I can instead dictate those messages, and they will render as\ntext as if I typed them; what a revelation!\u003c/p\u003e","title":"Voice dictation on iOS and macOS is underestimated"},{"content":"Medieval monks also needed help with focus and attention. Joel J Miller discusses this in What Monks Know About Focus, the latest issue of Miller\u0026rsquo;s Book Review, which I recently discovered and shows great promise.\nWhile technology has evolved in the last fifteen hundred years, the human brain has not. And few people in the ancient world cared as much about the challenges of attention and distraction as monks. Our reasons might differ today, but we have much to learn nonetheless.\nThe focus problem predates the advent of the modern age with all its continuous, unstoppable, but always alluring background noise. I wonder if ADHD was also a thing back then and how many were possibly affected. We will never know.\n","permalink":"https://nicolaiarocci.com/medieval-monks-also-had-focus-issues/","summary":"\u003cp\u003eMedieval monks also needed help with focus and attention. Joel J Miller\ndiscusses this in \u003ca href=\"https://www.millersbookreview.com/p/jamie-kreiner-how-to-focus\"\u003eWhat Monks Know About\nFocus\u003c/a\u003e, the\nlatest issue of Miller\u0026rsquo;s Book Review, which I recently discovered and shows\ngreat promise.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhile technology has evolved in the last fifteen hundred years, the human\nbrain has not. And few people in the ancient world cared as much about the\nchallenges of attention and distraction as monks. Our reasons might differ\ntoday, but we have much to learn nonetheless.\u003c/p\u003e","title":"Medieval monks also had focus issues"},{"content":"I am speaking about OAuth2 and Open ID Connect with ASP.NET Core 8 at Rome .NET Conference 2024 on March 22 and then, less than a week later, at WebDay 2024 in Milan.\nI am always particularly excited when I can present the stuff I\u0026rsquo;m currently working on. Being forced to share as I learn encourages me to go deeper into the topic to reinforce my comprehension and better explain it to the audience—a win-win situation.\nWhile the Rome conference is free, if you are considering WebDay in Milan (you should), feel free to use my speaker coupon P-SPEAKER10 for a 20% discount. If you come to any, don\u0026rsquo;t be shy and come to say Hi!\n","permalink":"https://nicolaiarocci.com/i-am-presenting-on-oauth2-at-two-conferences-this-month/","summary":"\u003cp\u003eI am speaking about OAuth2 and Open ID Connect with ASP.NET Core 8 at \u003ca href=\"https://www.dotnetconf.it\"\u003eRome .NET\nConference 2024\u003c/a\u003e on March 22 and then, less than a\nweek later, at \u003ca href=\"https://www.webdayconf.it\"\u003eWebDay 2024\u003c/a\u003e in Milan.\u003c/p\u003e\n\u003cp\u003eI am always particularly excited when I can present the stuff I\u0026rsquo;m currently\nworking on. Being forced to share as I learn encourages me to go deeper into the\ntopic to reinforce my comprehension and better explain it to the audience—a\nwin-win situation.\u003c/p\u003e","title":"I am presenting on OAuth2 at two conferences this month"},{"content":"","permalink":"https://nicolaiarocci.com/saturday-beach-walk/","summary":"","title":"Saturday beach walk"},{"content":" For those who have found their meaning, their place in the world, and what they feel they want to live for, death is just one part - inevitable, but not frightening - of a good life—a death all woven with life, which has the smile and soft touch of a newfound embrace. I wish myself, anyone, such a death.\n\u0026ndash; Benedetta Tobagi, La Resistenza delle donne\n","permalink":"https://nicolaiarocci.com/quoting-benedetta-tobagi/","summary":"\u003cblockquote\u003e\n\u003cp\u003eFor those who have found their meaning, their place in the world, and what they feel they want to live for, death is just one part - inevitable, but not frightening - of a good life—a death all woven with life, which has the smile and soft touch of a newfound embrace. I wish myself, anyone, such a death.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; Benedetta Tobagi, \u003ca href=\"https://www.einaudi.it/catalogo-libri/storia/storia-moderna/la-resistenza-delle-donne-benedetta-tobagi-9788806253660/\"\u003e\u003cem\u003eLa Resistenza delle donne\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e","title":"Quoting Benedetta Tobagi"},{"content":"I just came across this tweet by Aaron Levie:\nThe best founders I know — no matter their company’s scale — thrive on doing customer support directly. There’s literally no better way to understand the pulse of your customer base, what features to build next, or where systems are breaking down. It’s always upside.\nIt profoundly resonates with me. For context, we\u0026rsquo;ve been a small company in the market since 1991, making us quite the rare bird (we have seen so many software companies come and go that it is unbelievable).\nMy untiring co-founder, Stefano, still does customer support daily, while I chime in occasionally when needed. Every Friday at 2.30 pm, our dev and support teams have a joint call to assess what\u0026rsquo;s going on on the frontline, to get the pulse and to check if there are new and unexpected issues the customers are experiencing with our products. This call is complimentary to the live chat that both teams share daily. This continuous feedback cycle and the resulting quick release cycle have been the key that allowed us to stay relevant and endure for such a long time.\nOf course, founders doing customer support delays other fundamental activities, and sometimes that\u0026rsquo;s stressful, but it is worth it.\n","permalink":"https://nicolaiarocci.com/on-founders-doing-customer-support/","summary":"\u003cp\u003eI just came across this tweet by \u003ca href=\"https://twitter.com/levie/status/1763356362858430501\"\u003eAaron Levie\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe best founders I know — no matter their company’s scale — thrive on doing\ncustomer support directly. There’s literally no better way to understand the\npulse of your customer base, what features to build next, or where systems are\nbreaking down. It’s always upside.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eIt profoundly resonates with me. For context, we\u0026rsquo;ve been a small company in the\nmarket since 1991, making us quite the rare bird (we have seen so many software\ncompanies come and go that it is unbelievable).\u003c/p\u003e","title":"On founders doing customer support"},{"content":"Thanks to Giovanni Ansaldo\u0026rsquo;s convincing review on yesterday\u0026rsquo;s issue of Il Mondo podcast, my first Bandcamp purchase1 is the recently released Astral Gold album by Dean McPhee, a British guitarist who combines folk with experimental music and jazz using his telecaster guitar to create endless landscapes.\nAs the title suggests, McPhee\u0026rsquo;s latest album is a journey into outer space. The album consists of six instrumental pieces, all captivating, enjoyable, and cohesive; they all serve as each other\u0026rsquo;s natural continuation. Along with the sound of his guitar, the musician uses tape loops, small percussion sounds, and a few synthesizers here and there. The result is a hypnotic moonscape reminiscent of 2001: A Space Odyssey2.\nThe album avoids easy psychedelia and opts for a more meditative approach while meeting expectations perfectly. Sometimes, it sounds like Brian Eno\u0026rsquo;s early ambient phase and the more dilated Tangerine Dream. Dean McPhee has created an otherworldly experience with just a few elements; minimalism is key.\nAstral Gold by Dean McPhee Look here for my recent Spotify tirade and how I decided to return to purchased music.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nOn a lateral note, this music would fit perfectly as an EVE Online soundtrack. I vividly remember my space pirate days in that game, exploring far away and unknown solar systems, looking for prey while listening to Jón Hallur Haraldsson\u0026rsquo;s incredibly immersive original soundtrack (McPhee is on another level, and the two genres don\u0026rsquo;t compare, but hey.)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/astral-gold-by-dean-mcphee-music/","summary":"\u003cp\u003eThanks to Giovanni Ansaldo\u0026rsquo;s convincing review on yesterday\u0026rsquo;s issue of\n\u003ca href=\"https://www.internazionale.it/ilmondo\"\u003eIl Mondo\u003c/a\u003e podcast, my first Bandcamp\npurchase\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e is the recently released \u003ca href=\"https://deanmcphee.bandcamp.com/album/astral-gold\"\u003eAstral\nGold\u003c/a\u003e album by Dean McPhee, a\nBritish guitarist who combines folk with experimental music and jazz using his\ntelecaster guitar to create endless landscapes.\u003c/p\u003e\n\u003cp\u003eAs the title suggests, McPhee\u0026rsquo;s latest album is a journey into outer space. The\nalbum consists of six instrumental pieces, all captivating, enjoyable, and\ncohesive; they all serve as each other\u0026rsquo;s natural continuation. Along with the\nsound of his guitar, the musician uses tape loops, small percussion sounds, and\na few synthesizers here and there. The result is a hypnotic moonscape\nreminiscent of 2001: A Space Odyssey\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Astral Gold by Dean McPhee [music]"},{"content":"I\u0026rsquo;m growing sick and tired of Spotify\u0026rsquo;s music-consuming model. There are many compelling and sometimes conflicting reasons, most perfectly outlined in The day I canceled my Spotify subscription on Raed\u0026rsquo;s blog.\nI used to cherish music, I used to religiously collect, catalog and enjoy every album on my iPod. I could navigate the endless folders and find that exact song that I needed for that precise moment. Spotify killed that, I listen to what it suggests and just accept that it will go away when it decides to rotate it out. Spotify trained me not to look too hard, to let the flow be, and if that awesome song is gone or removed, don’t worry, we still have a million more.\nAnd also:\nThe main screen is littered with podcasts I don’t care about, nor have I ever listened to. It keeps pushing playlists that feel generic, bland, more based on demographics than my years of consistent listening history. And there is nothing I can do about it.\nI can\u0026rsquo;t cancel my subscription yet, as I would risk being lynched (we\u0026rsquo;re on the family plan), so I\u0026rsquo;m experimenting with digital purchases of selected music that I know I want to keep for the long run and that I deem worth sustaining directly. The current plan is to buy it on Bandcamp, immediately download it, and then listen to it, probably on Doppler. I will also drop a quick review on my website (if it is not exciting enough to share here, it\u0026rsquo;s probably not worth buying in the first place.) I\u0026rsquo;ve been gathering old-style music sources lately (I primarily follow music critics and websites I respect and listen to live stations like NTS, Radio Paradise, and Bandcamp Radio). For the time being, Spotify will stay and serve as a secondary discovery agent.\nYes, I will spend more on music, and it\u0026rsquo;s okay. I won\u0026rsquo;t buy everything I listen to anyway; the idea is to only invest in the true gems. In a way, this all looks like going back to old and brick-and-mortar music shop days but actualized, and I like it a lot.\n","permalink":"https://nicolaiarocci.com/sick-and-tired-of-spotifys-music-consuming-model/","summary":"\u003cp\u003eI\u0026rsquo;m growing sick and tired of Spotify\u0026rsquo;s music-consuming model. There are many\ncompelling and sometimes conflicting reasons, most perfectly outlined in \u003cem\u003e\u003ca href=\"https://blog.raed.dev/posts/goodbye_spotify\"\u003eThe\nday I canceled my Spotify\nsubscription\u003c/a\u003e\u003c/em\u003e on Raed\u0026rsquo;s blog.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI used to cherish music, I used to religiously collect, catalog and enjoy\nevery album on my iPod. I could navigate the endless folders and find that exact\nsong that I needed for that precise moment. Spotify killed that, I listen to\nwhat it suggests and just accept that it will go away when it decides to rotate\nit out. Spotify trained me not to look too hard, to let the flow be, and if that\nawesome song is gone or removed, don’t worry, we still have a million more.\u003c/p\u003e","title":"Sick and tired of Spotify's music-consuming model"},{"content":"Jordan Mechner (@jmechner, creator of Prince of Persia) has written and drawn a graphic novel memoir, REPLAY. It\u0026rsquo;s out in French and will be released in English on March 19. I pre-ordered a signed English copy. More info here.\n","permalink":"https://nicolaiarocci.com/replay-by-jordan-mechner/","summary":"\u003cp\u003eJordan Mechner (\u003ca href=\"https://twitter.com/jmechner\"\u003e@jmechner\u003c/a\u003e, creator of Prince of\nPersia) has written and drawn a graphic novel memoir, REPLAY. It\u0026rsquo;s out in French\nand will be released in English on March 19.  I pre-ordered a signed English\ncopy. More info \u003ca href=\"https://www.jordanmechner.com/en/books/replay/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"REPLAY by Jordan Mechner"},{"content":" “Coding” was never the source of value, and people shouldn’t get overly attached to it. Problem solving is the core skill. The discipline and precision demanded by traditional programming will remain valuable transferable attributes, but they won’t be a barrier to entry.\n\u0026ndash; John Carmack\nI\u0026rsquo;d be tempted to call bullshit on this one, but it\u0026rsquo;s coming from Carmack, so hey, let me think about it for a minute (it\u0026rsquo;s not the first time I\u0026rsquo;ve caught him endorsing AI).\n","permalink":"https://nicolaiarocci.com/quoting-john-carmack-on-ai/","summary":"\u003cblockquote\u003e\n\u003cp\u003e“Coding” was never the source of value, and people shouldn’t get overly\nattached to it. Problem solving is the core skill. The discipline and precision\ndemanded by traditional programming will remain valuable transferable\nattributes, but they won’t be a barrier to entry.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://twitter.com/ID_AA_Carmack/status/1762110222321975442\"\u003eJohn Carmack\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;d be tempted to call bullshit on this one, but it\u0026rsquo;s coming from Carmack, so\nhey, let me think about it for a minute (it\u0026rsquo;s not the first time I\u0026rsquo;ve\n\u003ca href=\"/quoting-john-carmack/\"\u003ecaught him\u003c/a\u003e endorsing AI).\u003c/p\u003e","title":"Quoting John Carmack on AI"},{"content":" In a brigh Sunday morning, we went on a lonely beach walk\nOur third kid turned eighteen yesterday; she\u0026rsquo;s an adult now, and we\u0026rsquo;re left with no teenagers in our family. She is on a celebrative short trip to Barcelona so we are alone at home, for the first time. It\u0026rsquo;s only temporary, but it\u0026rsquo;ll become the norm in just over a year when she leaves for University. What a strange feeling; the nest is going to be empty soon. It will take a while before we get used to it.\n","permalink":"https://nicolaiarocci.com/beach-walk/","summary":"\u003cp\u003e\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/lonely-beach-walk.jpg\"\n         alt=\"In a brigh Sunday morning, we went on a lonely beach walk\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003eIn a brigh Sunday morning, we went on a lonely beach walk\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\nOur third kid turned eighteen yesterday; she\u0026rsquo;s an adult now, and we\u0026rsquo;re left with no teenagers in our family. She is on a celebrative short trip to Barcelona so we are alone at home, for the first time. It\u0026rsquo;s only temporary, but it\u0026rsquo;ll become the norm in just over a year when she leaves for University. What a strange feeling; the nest is going to be empty soon. It will take a while before we get used to it.\u003c/p\u003e","title":"Beach walk"},{"content":" There\u0026rsquo;s a common belief that suffering is necessary for pleasure, or that evil is necessary for good, like the change of the seasons. It\u0026rsquo;s one of those ideas that sounds like wisdom, but when you think about it, it\u0026rsquo;s not actually true. There are some people who are happy all the time, and other people who are miserable all the time. I think suffering and evil are like taking a wrong turn on a journey. Taking a wrong turn sometimes happens, and some good can come of it. But it\u0026rsquo;s never necessary.\n\u0026ndash; Ran Prieur\n","permalink":"https://nicolaiarocci.com/quoting-ran-prieur/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThere\u0026rsquo;s a common belief that suffering is necessary for pleasure, or that evil is necessary for good, like the change of the seasons. It\u0026rsquo;s one of those ideas that sounds like wisdom, but when you think about it, it\u0026rsquo;s not actually true. There are some people who are happy all the time, and other people who are miserable all the time. I think suffering and evil are like taking a wrong turn on a journey. Taking a wrong turn sometimes happens, and some good can come of it. But it\u0026rsquo;s never necessary.\u003c/p\u003e","title":"Quoting Ran Prieur"},{"content":"Today, I learned that SQLite only enforces foreign-key constraints if explicitly instructed. I imagine this is well-known and trivial for the SQLite initiated, but we\u0026rsquo;re a Postgres shop; I have used SQLite sporadically, primarily for experiments like today\u0026rsquo;s, and this one amenity was certainly unexpected.\nAnyways. I had all my ON DELETE CASCADE constraints nicely configured, but related records in child tables were not being deleted when I deleted the parent. Perplexed, I looked it up.\nForeign key constraints are disabled by default (for backwards compatibility), so must be enabled separately for each database connection.\nThe quick fix was to add \u0026quot;foreign keys=true;\u0026quot; to our connection string. Alternatively, the application can also use a PRAGMA foreign keys = ON; statement to activate them once the connection is established, but it doesn\u0026rsquo;t make sense, as we need constraints active throughout the connection\u0026rsquo;s lifecycle.\n","permalink":"https://nicolaiarocci.com/sqlite-foreign-key-constraints-are-disabled-by-default/","summary":"\u003cp\u003eToday, I learned that SQLite only enforces foreign-key constraints if explicitly\ninstructed. I imagine this is well-known and trivial for the SQLite initiated,\nbut we\u0026rsquo;re a Postgres shop; I have used SQLite sporadically, primarily for\nexperiments like today\u0026rsquo;s, and this one amenity was certainly unexpected.\u003c/p\u003e\n\u003cp\u003eAnyways. I had all my \u003ccode\u003eON DELETE CASCADE\u003c/code\u003e constraints nicely configured, but\nrelated records in child tables were not being deleted when I deleted the\nparent. Perplexed, I \u003ca href=\"https://www.sqlite.org/foreignkeys.html\"\u003elooked it up\u003c/a\u003e.\u003c/p\u003e","title":"SQLite foreign key constraints are disabled by default"},{"content":" Many skeptics about the impact of AI are focused on the flaws that LLMs have today: hallucinations, short context windows, slow answers, and so on. These are legitimate concerns, and, if AI advancement were to stop, they might prove to be huge issues in the utility of AI. But AI is advancing rapidly, and some of these concerns may soon vanish, even if others (like hallucinations) are not completely solved.\nWhat that means is that it is fine to be focused on today, building working AI applications and prompts that take into account the limits of present AIs… but there is also a lot of value in building ambitious applications that go past what LLMs can do now. You want to build some applications that almost, but not quite, work. I suspect better LLM “brains” are coming soon, in the form of GPT-5 and Gemini 2.0 and many others. When they do, you can swap them into the almost-but-not-quite-working applications for a fast start. This is similar to the philosophy of the big AI labs, which build ambitious solutions (OpenAI\u0026rsquo;s GPT agents, Google\u0026rsquo;s connections to Gmail) which will benefit when the next version of their core LLMs are released.\nSo don’t just build for what is possible today, but what is possible in six months, if this pace of change continues. At this point, I think things are unlikely to slow down in the near future, and focusing on where things are heading, rather than where they are, prepares you for a world of continuing change.\n\u0026ndash; Ethan Mollick\n","permalink":"https://nicolaiarocci.com/quoting-ethan-mollick/","summary":"\u003cblockquote\u003e\n\u003cp\u003eMany skeptics about the impact of AI are focused on the flaws that LLMs have today: hallucinations, short context windows, slow answers, and so on. These are legitimate concerns, and, if AI advancement were to stop, they might prove to be huge issues in the utility of AI. But AI is advancing rapidly, and some of these concerns may soon vanish, even if others (like hallucinations) are not completely solved.\u003c/p\u003e","title":"Quoting Ethan Mollick"},{"content":"Today, I learned the hard way that the default port for ASP.NET Core 8 container images has been updated from port 80 to 8080, quite a remarkable breaking change.\nWe upgraded our web application from .NET 7 and let the CI pipeline do its work. Finally, we checked the application in the browser to ensure everything was okay, but unfortunately, we got a 502 Bad Gateway error. The Nginx logs revealed that the app was rejecting connections, which was unexpected because we didn\u0026rsquo;t make any changes there. Further investigation showed that the web app listened on port 8080 while Nginx was reverse-proxied to 80. So that was the problem. But why did the port change?\nThe change to the port number was made because of the need to provide a good usability experience when switching to a non-root user. Running as a non-root user requires the use of a non-privileged port in some environments. Since port 80, the previous default port, is a privileged port, the default was updated to port 8080, which is a non-privileged port (source)\nIt all makes sense now. In hindsight, it was our mistake. We should have explicitly declared the port in our launch settings anyway. As the Python Zen says, \u0026ldquo;Explicit is better than implicit.\u0026rdquo;\n","permalink":"https://nicolaiarocci.com/default-asp-net-core-8-port-changed-from-80-to-8080/","summary":"\u003cp\u003eToday, I learned the hard way that the default port for ASP.NET Core 8 container\nimages has been updated from port 80 to 8080, quite a remarkable breaking\nchange.\u003c/p\u003e\n\u003cp\u003eWe upgraded our web application from .NET 7 and let the CI pipeline do its work.\nFinally, we checked the application in the browser to ensure everything was\nokay, but unfortunately, we got a 502 Bad Gateway error. The Nginx logs revealed\nthat the app was rejecting connections, which was unexpected because we didn\u0026rsquo;t\nmake any changes there. Further investigation showed that the web app listened\non port 8080 while Nginx was reverse-proxied to 80. So that was the problem. But\nwhy did the port change?\u003c/p\u003e","title":"Default ASP NET Core 8 port changed from 80 to 8080"},{"content":"Yesterday, I went on a hiking trip to Monte Tiravento. This majestic loop tour is uncommon compared to the classic woody image of the Parco Nazionale del Foreste Casentinesi, as it takes place mainly on aerial and partly even barren ridges, resulting in magnificent views. Compared to other variants I did in the past, this one starts at a high altitude, offering lower elevation differences.\nIt is inadvisable on the hottest summer days when the nearby forests offer more cover from the scorching sun, but it is a real treat throughout the rest of the year.\nReasons for environmental interest, other than in individual uncommon botanical species (at least red juniper and turkey oak), lie mainly in the wild valleys overlooked by what is the \u0026ldquo;turnaround\u0026rdquo; as well as the highest point of the itinerary, Monte Tiravento (and even the name testifies to the splendid isolation of the site) and in the beautiful ruin of the medieval Montalto Tower. A final appendage to see monumental oaks further embellishes the hike. I met several groups on the trail, and we\u0026rsquo;re in February, so I\u0026rsquo;d expect these ridges to be crowded in spring and autumn.\nFor GPS track, photos, and stats click here.\n","permalink":"https://nicolaiarocci.com/monte-tiravento/","summary":"\u003cp\u003eYesterday, I went on a hiking trip to Monte Tiravento. This majestic loop tour\nis uncommon compared to the classic woody image of the Parco Nazionale del\nForeste Casentinesi, as it takes place mainly on aerial and partly even barren\nridges, resulting in magnificent views. Compared to other variants I did in the\npast, this one starts at a high altitude, offering lower elevation differences.\u003c/p\u003e\n\u003cp\u003eIt is inadvisable on the hottest summer days when the nearby forests offer more\ncover from the scorching sun, but it is a real treat throughout the rest of the\nyear.\u003c/p\u003e","title":"Monte Tiravento"},{"content":"From my experience as a maintainer of midly successful open-source projects, I have come to the conclusion that people who criticize accepting payment to work on such projects are either acting in bad faith or are incredibly naive.\nAnyway, Jacob Kaplan-Moss\u0026rsquo;s recent Paying people to work on open source is good is a stellar post on the topic of open-source sustainability.\nMy fundamental position is that paying people to work on open source is good, full stop, no exceptions. We need to stop criticizing maintainers getting paid, and start celebrating. Yes, all of the mechanisms are flawed in some way, but that’s because the world is flawed, and it’s not the fault of the people taking money. Yelling at maintainers who’ve found a way to make a living is wrong.\nFull article here.\n","permalink":"https://nicolaiarocci.com/paying-people-to-work-on-open-source-is-good-actually/","summary":"\u003cp\u003eFrom my experience as a maintainer of midly successful open-source projects, I\nhave come to the conclusion that people who criticize accepting payment to work\non such projects are either acting in bad faith or are incredibly naive.\u003c/p\u003e\n\u003cp\u003eAnyway, Jacob Kaplan-Moss\u0026rsquo;s recent \u003cem\u003ePaying people to work on open source is\ngood\u003c/em\u003e is a stellar post on the topic of open-source sustainability.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMy fundamental position is that paying people to work on open source is good, full stop, no exceptions. We need to stop criticizing maintainers getting paid, and start celebrating. Yes, all of the mechanisms are flawed in some way, but that’s because the world is flawed, and it’s not the fault of the people taking money. Yelling at maintainers who’ve found a way to make a living is wrong.\u003c/p\u003e","title":"Paying people to work on open source is good actually"},{"content":"My mountaineering days are mostly left behind, and I miss them, so now and then, I look at some YouTube videos from the field specialists. Today, the algorithm suggested I watch a truly phenomenal one by Colin Haley.\nWhat makes it so unique is the raw, unedited \u0026ldquo;I\u0026rsquo;m filming for my family\u0026rdquo; feeling that there is to it. He\u0026rsquo;s sweating, swearing, worrying and freezing like, you know, the rest of us. Colin seems a lovable, down-to-earth guy, I like his attitude. Oh, and I would\u0026rsquo;ve bailed much sooner than him.\n","permalink":"https://nicolaiarocci.com/solo-winter-attempt-at-cerro-torre/","summary":"\u003cp\u003eMy mountaineering days are mostly left behind, and I miss them, so now and then,\nI look at some YouTube videos from the field specialists. Today, the algorithm\nsuggested I watch a truly phenomenal one by \u003ca href=\"https://en.wikipedia.org/wiki/Colin_Haley\"\u003eColin Haley\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/Hg7VLCiUeGc?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eWhat makes it so unique is the raw, unedited \u0026ldquo;I\u0026rsquo;m filming for my family\u0026rdquo; feeling\nthat there is to it.  He\u0026rsquo;s sweating, swearing, worrying and freezing like, you\nknow, the rest of us. Colin seems a lovable, down-to-earth guy, I like his\nattitude. Oh, and I would\u0026rsquo;ve bailed much sooner than him.\u003c/p\u003e","title":"Solo winter attempt at Cerro Torre"},{"content":"Yesterday\u0026rsquo;s OpenAI launch of Sora is, as is always the case with OpenAI, mind-boggling. Marquees Browniee\u0026rsquo;s comment is spot-on, so much so as he\u0026rsquo;s obviously involved in the video-making scene.\nI don\u0026rsquo;t think content creators are at risk with Sora, not anytime soon, but, as Marquees repeatedly notes in the video above, just one year ago we thought AI-generated video was a joke.\n","permalink":"https://nicolaiarocci.com/ai-generated-videos-just-changed-forever/","summary":"\u003cp\u003eYesterday\u0026rsquo;s OpenAI launch of Sora is, as is always the case with OpenAI, mind-boggling. Marquees Browniee\u0026rsquo;s comment is spot-on, so much so as he\u0026rsquo;s obviously involved in the video-making scene.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/NXpdyAWLDas?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eI don\u0026rsquo;t think content creators are at risk with Sora, not anytime soon, but, as Marquees repeatedly notes in the video above, just one year ago we thought AI-generated video was a joke.\u003c/p\u003e","title":"AI generated videos just changed forever"},{"content":"I\u0026rsquo;m always fascinated by these in-depth bibliography efforts, and this one, with its unique 300-page catalog detailing 7,400 titles from Charles Darwin\u0026rsquo;s library, is nothing short of extraordinary.\nJohn van Wyhe, the academic who has led the “overwhelming” endeavour, said it showed the extraordinary extent of Darwin’s research into the work of others.\n“It also shows how insanely eclectic Darwin was,” Van Wyhe said. “There is this vast sea of things which might be an American or German news clipping about a duck or invasive grasshoppers. That’s been the fun part, not the formal books but the other things … all of which pool together to make the theories and publications we all know.”\nThe Guardian article is here. I had to dig a little to surface the actual catalog on the Darwin Online website. Many titles even have links to their text contents and images.\n","permalink":"https://nicolaiarocci.com/content-of-charles-darwins-personal-library-revealed-for-the-first-time/","summary":"\u003cp\u003eI\u0026rsquo;m always fascinated by these in-depth bibliography efforts, and this one, with\nits unique 300-page catalog detailing 7,400 titles from Charles Darwin\u0026rsquo;s\nlibrary, is nothing short of extraordinary.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eJohn van Wyhe, the academic who has led the “overwhelming” endeavour, said it showed the extraordinary extent of Darwin’s research into the work of others.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“It also shows how insanely eclectic Darwin was,” Van Wyhe said. “There is this vast sea of things which might be an American or German news clipping about a duck or invasive grasshoppers. That’s been the fun part, not the formal books but the other things … all of which pool together to make the theories and publications we all know.”\u003c/p\u003e","title":"Content of Charles Darwin's personal library revealed for the first time"},{"content":"Technically, The New Yorker\u0026rsquo;s Baruch Spinoza and the Art of Thinking in Dangerous Times reviews a book on Spinoza. It is so well conceived that it also offers a practical primer on the philosopher\u0026rsquo;s thoughts on God, nature, democracy, religion and their interaction.\nA few steps into his public philosopher career, Spinoza found himself exiled from his Jewish community in Amsterdam. That made him cautious and adept at avoiding an even worse fate, which was entirely possible in the mid-1600s.\nAlthough Spinoza was certainly a champion of political and intellectual freedom, he had no interest in being a martyr for them, and, if his life teaches anything about thinking in dangerous times, it is how prudence and boldness can go hand in hand. Not for nothing did he wear a ring inscribed with the Latin word “Caute”: “Be cautious.”\nFull article here.\n","permalink":"https://nicolaiarocci.com/spinoza-and-the-art-of-thinking-in-dangerous-times/","summary":"\u003cp\u003eTechnically, The New Yorker\u0026rsquo;s \u003cem\u003eBaruch Spinoza and the Art of Thinking in\nDangerous Times\u003c/em\u003e reviews a book on Spinoza. It is so well conceived that it\nalso offers a practical primer on the philosopher\u0026rsquo;s thoughts on God, nature,\ndemocracy, religion and their interaction.\u003c/p\u003e\n\u003cp\u003eA few steps into his public philosopher career, Spinoza found himself exiled\nfrom his Jewish community in Amsterdam. That made him cautious and adept at\navoiding an even worse fate, which was entirely possible in the mid-1600s.\u003c/p\u003e","title":"Spinoza and the art of thinking in dangerous times"},{"content":"Today I learned that GitHub wikis are not editable online and do not support pull requests. You can clone and edit a wiki locally but not return your change to the original repository.\nI don\u0026rsquo;t use wikis in my projects; I prefer documentation to stay with the project, usually in a dedicated directory, and publish it on a dedicated site through GitHub Pages. But today was different as I opened a pull request for PaperMod, the Hugo theme I use on this website. Someone asked if I could update the documentation too. Right, too bad it\u0026rsquo;s impossible to do that.\nThe first ticket on this goes back to 2016. This limitation makes GitHub wikis impractical for any team project (maybe 90% of those on the platform), confining them to personal projects or small experiments. No wonder so many Wikis appear as outdated on GitHub.\nIt would be better to withdraw the feature given that GitHub offers a much more compelling solution in Pages.\n","permalink":"https://nicolaiarocci.com/github-wikis-dont-allow-edits-or-pull-requests/","summary":"\u003cp\u003eToday I learned that GitHub wikis are not editable online and \u003ca href=\"https://github.com/orgs/community/discussions/50163\"\u003edo not support\npull requests\u003c/a\u003e. You can\nclone and edit a wiki locally but not return your change to the original\nrepository.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t use wikis in \u003ca href=\"/opensource/\"\u003emy projects\u003c/a\u003e; I prefer documentation to stay with the\nproject, usually in a dedicated directory, and publish it on a dedicated site\nthrough GitHub Pages. But today was different as I \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/pull/1419\"\u003eopened a pull\nrequest\u003c/a\u003e for PaperMod,\nthe Hugo theme I use on this website. Someone asked if I could update the\ndocumentation too. Right, too bad it\u0026rsquo;s impossible to do that.\u003c/p\u003e","title":"GitHub Wikis don't allow edits or pull requests"},{"content":" People living in remote Indigenous communities are as happy as those in wealthy developed countries despite having “very little money”, according to new scientific research that could challenge the widely held perception that “money buys happiness”.\nResearchers who interviewed 2,966 people in 19 Indigenous and local communities across the world found that on average they were as happy – if not happier – as the average person in high-income western countries.\nWho would have thought.\nFull article here.\n","permalink":"https://nicolaiarocci.com/isolated-indigenous-people-as-happy-as-wealthy-western-peers/","summary":"\u003cblockquote\u003e\n\u003cp\u003ePeople living in remote Indigenous communities are as happy as those in\nwealthy developed countries despite having “very little money”, according to new\nscientific research that could challenge the widely held perception that “money\nbuys happiness”.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eResearchers who interviewed 2,966 people in 19 Indigenous and local\ncommunities across the world found that on average they were as happy – if not\nhappier – as the average person in high-income western countries.\u003c/p\u003e","title":"Isolated indigenous people as happy as wealthy western peers"},{"content":"Ethan Mollick, one of my few LLM/AI sources, just dropped his first impressions on Gemini Advanced, released today, but which he\u0026rsquo;s been testing for a month in early access.\nLet me start with the headline: Gemini Advanced is clearly a GPT-4 class model. The statistics show this, but so does a month of our informal testing. And this is a big deal because OpenAI’s GPT-4 (the paid version of ChatGPT/Microsoft Copilot) has been the dominant AI for well over a year, and no other model has come particularly close. Prior to Gemini, we only had one advanced AI model to look at, and it is hard drawing conclusions with a dataset of one. Now there are two, and we can learn a few things.\nThings are getting hotter in the LLM space, and competition is always good.\nFull article here.\n","permalink":"https://nicolaiarocci.com/ethan-mollicks-first-impressions-on-gemini-advanced/","summary":"\u003cp\u003eEthan Mollick, one of my few \u003ca href=\"/some-hints-about-what-the-next-year-of-ai-looks-like/\"\u003eLLM/AI\nsources\u003c/a\u003e, just dropped\nhis first impressions on Gemini Advanced, released today, but which he\u0026rsquo;s been\ntesting for a month in early access.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eLet me start with the headline: Gemini Advanced is clearly a GPT-4 class\nmodel. The statistics show this, but so does a month of our informal testing.\nAnd this is a big deal because OpenAI’s GPT-4 (the paid version of\nChatGPT/Microsoft Copilot) has been the dominant AI for well over a year, and no\nother model has come particularly close. Prior to Gemini, we only had one\nadvanced AI model to look at, and it is hard drawing conclusions with a dataset\nof one. Now there are two, and we can learn a few things.\u003c/p\u003e","title":"Ethan Mollick's first impressions on Gemini Advanced"},{"content":"After yesterday\u0026rsquo;s, another article on the modern era of blogging surfaced on my RSS feed. In A Golden Era of Blogging, Jim Nielsen boldly proposes that we live in, you guessed it, a new golden era of blogging.\nHe argues that the advent of the ads market tainted the original blogging scene in the mid-2000s, and something similar is now happening in the YouTube scene. Today\u0026rsquo;s independent blogger is not in it for the money (there\u0026rsquo;s none to be had) but for passion and an (unconscious?) belief in indie web ideals, and these are precisely the forces that drove the first wave of bloggers in the 2000s.\nWe modern bloggers, however, inhabit a tiny self-indulging bubble that is not comparable with the original scene. But you know what, I feel comfortable in it.\n","permalink":"https://nicolaiarocci.com/a-new-golden-era-of-blogging/","summary":"\u003cp\u003eAfter \u003ca href=\"/the-20-year-indie-web-cycle-maybe/\"\u003eyesterday\u003c/a\u003e\u0026rsquo;s, another article on the\nmodern era of blogging surfaced on my RSS feed. In \u003ca href=\"https://blog.jim-nielsen.com/2024/golden-era-blogging/\"\u003eA Golden Era of\nBlogging\u003c/a\u003e, Jim Nielsen\nboldly proposes that we live in, you guessed it, a new golden era of blogging.\u003c/p\u003e\n\u003cp\u003eHe argues that the advent of the ads market tainted the original blogging scene\nin the mid-2000s, and something similar is now happening in the YouTube scene.\nToday\u0026rsquo;s independent blogger is not in it for the money (there\u0026rsquo;s none to be had)\nbut for passion and an (unconscious?) belief in indie web ideals, and these are\nprecisely the forces that drove the first wave of bloggers in the 2000s.\u003c/p\u003e","title":"A new golden era of blogging?"},{"content":"The History of the Web has an interesting take on the resurgence of blogging and the indie web that seems to be occurring these days.\nWith roots in the world of fashion, there exists a cyclical principle suggesting that every two decades, previously popular trends “every 20 years or so the trends that were once popular will begin to be on the forefront again.” What’s old is new again. However, these recurring trends aren’t just rip-offs. They are remixed and reinterpreted through the lens of a new generation. We are, perhaps, in a 20 year resurgence for the indie web and blogging.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-20-year-indie-web-cycle-maybe/","summary":"\u003cp\u003eThe History of the Web has an interesting take on the resurgence of blogging and\nthe indie web that seems to be occurring these days.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWith roots in the world of fashion, there exists a cyclical principle\nsuggesting that every two decades, previously popular trends “every 20 years or\nso the trends that were once popular will begin to be on the forefront again.”\nWhat’s old is new again. However, these recurring trends aren’t just rip-offs.\nThey are remixed and reinterpreted through the lens of a new generation. We are,\nperhaps, in a 20 year resurgence for the indie web and blogging.\u003c/p\u003e","title":"The 20-year indie web cycle, maybe"},{"content":"Just Tell Me cleverly leverages ChatGPT to provide short, insightful summaries of YouTube videos.\nHave you ever wasted some time watching a youtube video, that got you kind of interested because of the click-baity topic, but in the end turned out to be nothing more BUT click-bait? Or have you ever wanted to just quickly recall what a video that you\u0026rsquo;ve watched some time ago was about? Just Tell Me has you covered!\nYou can run it from the website or locally on the command line, with your OpenAPI key and the LLM model of choice. I have not looked at the code, but I understand it leverages the video transcript to do its magic1. I\u0026rsquo;ve been using it for a while, and it\u0026rsquo;s been good.\nI\u0026rsquo;ve now looked at the code and the actual ChatGPT prompt is \u0026ldquo;You will be provided with video captions. Summarize the video in one paragraph\u0026rdquo; (link).\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/youtube-video-summaries-via-chatgpt/","summary":"\u003cp\u003e\u003ca href=\"https://just-tell-me.deno.dev\"\u003eJust Tell Me\u003c/a\u003e cleverly leverages ChatGPT to\nprovide short, insightful summaries of YouTube videos.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHave you ever wasted some time watching a youtube video, that got you kind of\ninterested because of the click-baity topic, but in the end turned out to be\nnothing more BUT click-bait? Or have you ever wanted to just quickly recall what\na video that you\u0026rsquo;ve watched some time ago was about? Just Tell Me has you\ncovered!\u003c/p\u003e","title":"YouTube video summaries via ChatGPT"},{"content":"I\u0026rsquo;ve been reading Marcus Aurielius\u0026rsquo; Meditations and, very appropriately and scaringly, YouTube algorithm thought I would be interested in Marcus Aurelius, the Man Who Solved The Universe. The title is bombastic and misplaced, but the video is well executed and correctly summarizes some of the Emperor-Philosopher\u0026rsquo;s thoughts.\n","permalink":"https://nicolaiarocci.com/marcus-aurelius-the-man-who-solved-the-universe/","summary":"\u003cp\u003eI\u0026rsquo;ve been reading Marcus Aurielius\u0026rsquo; \u003cem\u003eMeditations\u003c/em\u003e and, very appropriately and\nscaringly, YouTube algorithm thought I would be interested in \u003ca href=\"https://www.youtube.com/watch?v=tv6W0Nv5ev0\"\u003eMarcus Aurelius,\nthe Man Who Solved The Universe\u003c/a\u003e.\nThe title is bombastic and misplaced, but the video is well executed and\ncorrectly summarizes some of the Emperor-Philosopher\u0026rsquo;s thoughts.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/tv6W0Nv5ev0?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e","title":"Marcus Aurelius the man who solved the universe"},{"content":"A lot of the things David describes in this post resonate with me.\nAs far as I’ve been able to figure out so far, the things my mind is best at are details and systems. It‘s part of what makes me a good programmer: I can hold a lot of detail in my head about how a system fits together, I can mess around with it more easily than most people, and I can pick up on details other people might miss, such as potential bugs. A lot of the things I enjoy (and seem to be pretty good at) are those where there’s an underlying system to figure out and master – computer games, martial arts, even cooking.\nThen there’s a few things my mind struggles to handle. Most of them revolve around people.\nI’m not always great at figuring out what someone else is thinking, or feeling, or even dropping hints about. I can take educated guesses, for sure, but I don’t necessarily get it right. It also takes a lot of work to keep track of all the social cues going on whenever there’s a conversation happening, and all the social conventions most people seem to follow without even thinking. I can think of several times when someone has asked me how my weekend went, and it’s completely slipped my mind that the appropriate response is to ask them about theirs too. It’s not that I don’t care; it’s that I’m having to concentrate so much on the rest of the social cues that I take longer to catch up with how the conversation is supposed to go.\nIt took some balls to write his next one: My brain, and how you can help me. Respect.\n","permalink":"https://nicolaiarocci.com/being-autistic/","summary":"\u003cp\u003eA lot of the things David describes in \u003ca href=\"https://dhwthompson.com/2018/being-autistic\"\u003ethis\npost\u003c/a\u003e resonate with me.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAs far as I’ve been able to figure out so far, the things my mind is best at\nare details and systems. It‘s part of what makes me a good programmer: I can\nhold a lot of detail in my head about how a system fits together, I can mess\naround with it more easily than most people, and I can pick up on details other\npeople might miss, such as potential bugs. A lot of the things I enjoy (and seem\nto be pretty good at) are those where there’s an underlying system to figure out\nand master – computer games, martial arts, even cooking.\u003c/p\u003e","title":"Being autistic"},{"content":" The footage, captured directly by NASA\u0026rsquo;s Mars rovers - Spirit, Opportunity, Curiosity, and Perseverance - unveils the red planet\u0026rsquo;s intricate details. These rovers, acting as robotic geologists, have traversed varied terrains, from ancient lake beds to towering mountains, uncovering Mars\u0026rsquo; complex geological history.\nAs viewers enjoy these images, they will notice informal place names assigned by NASA\u0026rsquo;s team, providing context to the Martian features observed. Each rover\u0026rsquo;s unique journey is highlighted, showcasing their contributions to Martian exploration.\nStunning, and mesmerizing.\nIn case you can\u0026rsquo;t see the embedded video (hi mailing list folks), here\u0026rsquo;s the link.\n","permalink":"https://nicolaiarocci.com/mars-in-4k/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe footage, captured directly by NASA\u0026rsquo;s Mars rovers - Spirit, Opportunity, Curiosity, and Perseverance - unveils the red planet\u0026rsquo;s intricate details. These rovers, acting as robotic geologists, have traversed varied terrains, from ancient lake beds to towering mountains, uncovering Mars\u0026rsquo; complex geological history.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAs viewers enjoy these images, they will notice informal place names assigned by NASA\u0026rsquo;s team, providing context to the Martian features observed. Each rover\u0026rsquo;s unique journey is highlighted, showcasing their contributions to Martian exploration.\u003c/p\u003e","title":"Mars in 4K"},{"content":"Today I learned that pg_dump can make a copy of a Postgres schema instead of the whole database. Likewise, if needed, pg_restore can restore the schema in either the original database or a different one.\nBackup of a Postgres schema:\npg_dump -h host -d source_database -U user -n schema_name -F c -f schema_dump_file.dump Restore of a Postgres schema:\npg_restore -h host -d dest_database -U user -n schema_name schema_dump_file.dump All primary and shared knowledge, I am sure. Another item of note: the DB name is hard-coded in pg_dumpall files, so if one wants to restore on a database named differently, one must go into the dump file and edit it by hand.\n","permalink":"https://nicolaiarocci.com/pg_dump-and-pg_restore-can-backup-and-restore-single-postgres-schemas/","summary":"\u003cp\u003eToday I learned that \u003ccode\u003epg_dump\u003c/code\u003e can make a copy of a Postgres schema instead of\nthe whole database. Likewise, if needed, \u003ccode\u003epg_restore\u003c/code\u003e can restore the schema in\neither the original database or a different one.\u003c/p\u003e\n\u003cp\u003eBackup of a Postgres schema:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epg_dump -h host -d source_database -U user -n schema_name -F c -f schema_dump_file.dump\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRestore of a Postgres schema:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epg_restore -h host -d dest_database -U user -n schema_name schema_dump_file.dump\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAll primary and shared knowledge, I am sure. Another item of note: the DB name\nis hard-coded in \u003ccode\u003epg_dumpall\u003c/code\u003e files, so if one wants to restore on a database\nnamed differently, one must go into the dump file and edit it by hand.\u003c/p\u003e","title":"pg_dump and pg_restore can backup and restore single Postgres schemas"},{"content":"Brewster Kahle, at The Internet Archive Blogs:\nEver try to read a physical book passed down in your family from 100 years ago? Probably worked well. Ever try reading an ebook you paid for 10 years ago? Probably a different experience. From the leasing business model of mega a publishers to physical device evolution to format obsolescence, digital books are fragile and threatened. [\u0026hellip;] Our paper books have lasted hundreds of years on our shelves and are still readable. Without active maintenance, we will be lucky if our digital books last a decade.\nFull article here.\n","permalink":"https://nicolaiarocci.com/digital-books-wear-out-faster-than-physical-books/","summary":"\u003cp\u003eBrewster Kahle, at The Internet Archive Blogs:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEver try to read a physical book passed down in your family from 100 years\nago?  Probably worked well. Ever try reading an ebook you paid for 10 years ago?\nProbably a different experience. From the leasing business model of mega\na publishers to physical device evolution to format obsolescence, digital books\nare fragile and threatened. [\u0026hellip;] Our paper books have lasted hundreds of years\non our shelves and are still readable. Without active maintenance, we will be\nlucky if our digital books last a decade.\u003c/p\u003e","title":"Digital books wear out faster than physical books"},{"content":"Wet, cold, and foggy winter day in the plains, I knew it would be splendid in the highlands. At the last minute and even a little late by my usual safety standards, I packed my backpack and dashed into the hills. To avoid being late or having to return in the dark, I didn\u0026rsquo;t even stop eating, munching on two bars as I walked, but it was worth it.\nRio Petroso is a rather complex and articulated circular tour, with frequent environmental changes, configuring itself among the most arid of the entire Park territory; I wouldn\u0026rsquo;t do this route at the height of summer.\nAnother peculiarity of this hike is the dense presence of ruined houses, precious testimonies of the glorious Apennine civilization history that lasted until the late 1960s, with the departure of the population to the valley floors or, more often than not, the plains.\nThe geological peculiarity is constituted by the so-called \u0026ldquo;Verghereto marls\u0026rdquo; (named after the typical locality where they, in fact, overbearingly characterize the landscape), which appear especially along the ridge of Rio Petroso: they give rise to a barren environment, with erosion phenomena reminiscent of those of gullies but with, in addition, an almost exotic suggestion in their lunar nudity.\nWhen I got to the car, I realized I had forgotten the headlights on. It\u0026rsquo;s a good thing I hurried on the route (and recently changed the battery), or I would have been stuck there, 10 km from civilization, with no phone signal—an adventure I gladly spared myself.\nGPS track, map, pics and all the frills are here.\n","permalink":"https://nicolaiarocci.com/rio-petroso/","summary":"\u003cp\u003eWet, cold, and foggy winter day in the plains, I knew it would be splendid in\nthe highlands. At the last minute and even a little late by my usual safety\nstandards, I packed my backpack and dashed into the hills. To avoid being late\nor having to return in the dark, I didn\u0026rsquo;t even stop eating, munching on two bars\nas I walked, but it was worth it.\u003c/p\u003e\n\u003cp\u003eRio Petroso is a rather complex and articulated circular tour, with frequent\nenvironmental changes, configuring itself among the most arid of the entire Park\nterritory; I wouldn\u0026rsquo;t do this route at the height of summer.\u003c/p\u003e","title":"Rio Petroso"},{"content":"The video and slides of my C# 12 session at .NET Conference Italia 2023 is finally available online. Unfortunately it\u0026rsquo;s just my voice and my laptop screen, and that\u0026rsquo;s too bad because the location was as cool as it can get, and the room was packed.\nIt is in Italian1 and you need to login in order to see it (sorry, I don\u0026rsquo;t have control over it.)\nI also submitted to several international conferences; let\u0026rsquo;s see what happens. Since the COVID hiatus, I\u0026rsquo;ve had no luck with international events.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/video-of-my-csharp-12-session-at-dotnet-conference-italia-2023/","summary":"\u003cp\u003eThe video and slides of my C# 12 session at .NET Conference Italia 2023 is\nfinally \u003ca href=\"https://www.ugidotnet.org/e/sessione/3295/C-12-Cosa-c-e-di-nuovo-e-interessante\"\u003eavailable\nonline\u003c/a\u003e.\nUnfortunately it\u0026rsquo;s just my voice and my laptop screen, and that\u0026rsquo;s too bad\nbecause the location was as cool as it can get, and the room was packed.\u003c/p\u003e\n\u003cp\u003eIt is in Italian\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e and you need to login in order to see it (sorry, I\ndon\u0026rsquo;t have control over it.)\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eI also submitted to several international conferences; let\u0026rsquo;s see what\nhappens. Since the COVID hiatus, I\u0026rsquo;ve had no luck with international events.\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e","title":"Video of my C# 12 session at .NET Conference Italia 2023"},{"content":" Dungeons \u0026amp; Dragons played an outsize role in popularizing fantasy literature, ideas, and themes, as well as inspiring many of its devotees to create their own. Roleplaying, as a formal activity, owes nearly its entire existence to the phenomenal success of D\u0026amp;D. Even more remarkable is the extent to which the computer and video game industry, which is bigger and more profitable than the music and movie industries combined, owes a huge debt to the example set by D\u0026amp;D. If you play any game with classes or levels or experience or hit points today, that\u0026rsquo;s because of Dungeons \u0026amp; Dragons.\nMore here.\nI started playing D\u0026amp;D in high school in the mid-80s. Does that make me a Stranger Things kid? I\u0026rsquo;m still trying to figure that out, but D\u0026amp;D significantly impacted me growing up. It probably didn\u0026rsquo;t save my life like it did for others, but to an introvert like me, it offered an incredible opportunity to go out, meet and talk to people, challenging myself and my imagination.\nRight before Christmas, I presented myself with an AD\u0026amp;D 5th edition complete set, partly out of curiosity but also nostalgia. I loved browsing the modern editions of the Player Handbook, Master Manual, and Monsters Book—so many good memories. I later bought the Starter Kit, hoping to play at least an evening session with my \u0026ldquo;kids,\u0026rdquo; as two of them were about to return home from University (the third is still with us.) We never played that session. In hindsight, it was a stupid idea.\n","permalink":"https://nicolaiarocci.com/dungeons-and-dragons-turns-50-today/","summary":"\u003cblockquote\u003e\n\u003cp\u003eDungeons \u0026amp; Dragons played an outsize role in popularizing fantasy literature,\nideas, and themes, as well as inspiring many of its devotees to create their\nown. Roleplaying, as a formal activity, owes nearly its entire existence to the\nphenomenal success of D\u0026amp;D. Even more remarkable is the extent to which the\ncomputer and video game industry, which is bigger and more profitable than the\nmusic and movie industries combined, owes a huge debt to the example set by D\u0026amp;D.\nIf you play any game with classes or levels or experience or hit points today,\nthat\u0026rsquo;s because of Dungeons \u0026amp; Dragons.\u003c/p\u003e","title":"Dungeons and Dragons turns 50 today"},{"content":"Another day, another unexpected problem. Launching a .NET 8 app from a docker container, I got this error: Failed to create CoreCLR, HRESULT: 0x80070008.\nI was puzzled as the same container ran smoothly in our test environment but not in production. I ruled out resource problems (memory or disk full, maybe?) but then compared the Docker Engine versions we run in test and production. Both were old (20. xx when 25 is available), but interestingly, the production version was older. I searched online and found a two years-old ticket hinting at some problems between .NET 8 and older Docker versions.\nI updated the Docker Engine to the latest version, and guess what? The .NET 8 container now starts without making a dent.\n","permalink":"https://nicolaiarocci.com/fixing-the-failed-to-create-coreclr-error-0x80070008-error-when-starting-a-dotnet-docker-container/","summary":"\u003cp\u003eAnother day, another unexpected problem. Launching a .NET 8 app from a docker\ncontainer, I got this error: \u003ccode\u003eFailed to create CoreCLR, HRESULT: 0x80070008\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eI was puzzled as the same container ran smoothly in our test environment but not\nin production. I ruled out resource problems (memory or disk full, maybe?) but\nthen compared the Docker Engine versions we run in test and production. Both\nwere old (20. xx when 25 is available), but interestingly, the production\nversion was older. I searched online and found a two years-old\n\u003ca href=\"https://github.com/PowerShell/PowerShell/issues/17624\"\u003eticket\u003c/a\u003e hinting at some\nproblems between .NET 8 and older Docker versions.\u003c/p\u003e","title":"Fixing the \"Failed to create CoreCLR error 0x80070008\" error when starting a .NET 8 docker container"},{"content":"Today, something unexpected happened while I was working on one of our Linux machines. I issued the crontab -e command to add a cron job to my user\u0026rsquo;s crontab file, modified and saved it, only to the following error:\ncrontab: installing new crontab crontab: crontabs/\u0026lt;user\u0026gt;: rename: Operation not permitted crontab: edits left in /tmp/crontab.hgmsOH/crontab Puzzled, I checked whether my user permissions were all right, if the disk was full, and several other things. Long story short, the fix was this one:\nsudo chattr -i /var/spool/cron/crontabs/\u0026lt;user\u0026gt; sudo chown \u0026lt;user\u0026gt;:crontab /var/spool/cron/crontabs/\u0026lt;user\u0026gt; Somehow, the user\u0026rsquo;s crontab file had become immutable.\n","permalink":"https://nicolaiarocci.com/how-to-fix-the-crontab-error-rename-operation-not-permitted/","summary":"\u003cp\u003eToday, something unexpected happened while I was working on one of our Linux\nmachines. I issued the \u003ccode\u003ecrontab -e\u003c/code\u003e command to add a cron job to my user\u0026rsquo;s\ncrontab file, modified and saved it, only to the following error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecrontab: installing new crontab\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecrontab: crontabs/\u0026lt;user\u0026gt;: rename: Operation not permitted\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecrontab: edits left in /tmp/crontab.hgmsOH/crontab\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePuzzled, I checked whether my user permissions were all right, if the disk was\nfull, and several other things. Long story short, the fix was this one:\u003c/p\u003e","title":"How to fix the crontab error `rename: Operation not permitted`"},{"content":"Powerful and cautionary story.\nI wondered for many years, how all of this could have happened. How people like my grandpa turned into monsters and people around him watched or turned into monsters with him. The last years made this very clear.\nMore here.\n","permalink":"https://nicolaiarocci.com/my-grandpa-was-a-nazi/","summary":"\u003cp\u003ePowerful and cautionary story.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI wondered for many years, how all of this could have happened. How people\nlike my grandpa turned into monsters and people around him watched or turned\ninto monsters with him. The last years made this very clear.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://bastianallgeier.com/notes/grandpa\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"My grandpa was a Nazi"},{"content":"I think I like his take on the topic.\n","permalink":"https://nicolaiarocci.com/linus-torvalds-on-the-impact-of-llms-and-ai-on-programming/","summary":"\u003cp\u003eI think I like \u003ca href=\"https://www.youtube.com/watch?v=VHHT6W-N0ak\"\u003ehis take\u003c/a\u003e on the topic.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/VHHT6W-N0ak?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e","title":"Linus Torvalds on the impact of LLMs and AI on programming"},{"content":"If you are one of the few following me on Substack, I have news: I\u0026rsquo;m leaving Substack and moving to a different platform. I actually left a couple of weeks ago; my latest posts are not on Substack and you can find them on my website (the source of all my content), or you can subscribe to the new newsletter or the RSS feed like hackers do.\nIf you\u0026rsquo;re an old-time Substack subscriber, you already know because I transferred all the active subscriptions to the new platform. I\u0026rsquo;m writing for the occasional passerby looking for fresh content.\nWhy I left Substack? Two reasons:\nIt\u0026rsquo;s full of garbage, has a nazi problem, and it is monetizing on all this stuff. I don\u0026rsquo;t want to be associated in any possible way with an enterprise like this, and I certainly don\u0026rsquo;t want to offer them visibility, no matter how little.\nSubstack does not support RSS-alimented campaigns, so I had to copy \u0026amp; paste every single post from my website manually. That is tiring and error-prone.\nBecause of 2, Substack was not my platform from the get-go. I knew, but I was willing, as an experiment, to put in some extra work in exchange for the visibility.\nI\u0026rsquo;m not willing to compromise on 1.\n","permalink":"https://nicolaiarocci.com/im-leaving-substack/","summary":"\u003cp\u003eIf you are one of the few following me on Substack, I have news: I\u0026rsquo;m\nleaving Substack and moving to a \u003ca href=\"https://buttondown.email/refer/nicolaiarocci\"\u003edifferent\nplatform\u003c/a\u003e. I actually left a\ncouple of weeks ago; my latest posts are not on Substack and you can find them\non \u003ca href=\"https://nicolaiarocci.com\"\u003emy website\u003c/a\u003e (the source of all my content), or\nyou can subscribe to the \u003ca href=\"https://buttondown.email/nicolaiarocci\"\u003enew\nnewsletter\u003c/a\u003e or the \u003ca href=\"https://nicolaiarocci.com/index.xml\"\u003eRSS\nfeed\u003c/a\u003e like hackers do.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re an old-time Substack subscriber, you already know because I\ntransferred all the active subscriptions to the new platform. I\u0026rsquo;m writing for\nthe occasional passerby looking for fresh content.\u003c/p\u003e","title":"I'm leaving Substack"},{"content":"Today\u0026rsquo;s fun was implementing OAuth2\u0026rsquo;s RFC 7636\u0026rsquo;s PKCE (Proof Key for Code Exchange) in C#. It\u0026rsquo;s relatively straightforward, but I decided to share my implementation should it be helpful to someone else out there.\nPKCE is an extension to the Authorization Code flow to prevent CSRF and authorization code injection attacks. [..] It was originally designed to protect the authorization code flow in mobile apps, but its ability to prevent authorization code injection makes it useful for every type of OAuth client, even web apps that use client authentication (source).\nIn a nutshell:\nThe client requests a single-use authorization code to an authorization server. In doing that, it includes a code_challenge with the request. The server responds with the authorization code if the client is recognized and authorized. The client requests an access token in exchange for the authorization code. It includes the code_verifier used to generate the original code_challenge; The server confirms that the verifier is the same one used to generate the code challenge; hence, the client is the same. Plenty of excellent documentation is online (like here.)\nI was interested in code_verifier and code_challenge generation. Here\u0026rsquo;s my implementation:\n/// \u0026lt;summary\u0026gt; /// Provides a randomly generating PKCE code verifier and it\u0026#39;s corresponding code challenge. /// \u0026lt;/summary\u0026gt; public static class Pkce { /// \u0026lt;summary\u0026gt; /// Generates a code_verifier and the corresponding code_challenge, as specified in the rfc-7636. /// \u0026lt;/summary\u0026gt; /// \u0026lt;remarks\u0026gt;See https://datatracker.ietf.org/doc/html/rfc7636#section-4.1 and https://datatracker.ietf.org/doc/html/rfc7636#section-4.2\u0026lt;/remarks\u0026gt; public static (string code_challenge, string verifier) Generate(int size = 32) { using var rng = RandomNumberGenerator.Create(); var randomBytes = new byte[size]; rng.GetBytes(randomBytes); var verifier = Base64UrlEncode(randomBytes); var buffer = Encoding.UTF8.GetBytes(verifier); var hash = SHA256.Create().ComputeHash(buffer); var challenge = Base64UrlEncode(hash); return (challenge, verifier); } private static string Base64UrlEncode(byte[] data) =\u0026gt; Convert.ToBase64String(data) .Replace(\u0026#34;+\u0026#34;, \u0026#34;-\u0026#34;) .Replace(\u0026#34;/\u0026#34;, \u0026#34;_\u0026#34;) .TrimEnd(\u0026#39;=\u0026#39;); } Usage is as simple as:\nvar (challenge, verifier) = Pkce.Generate(); In ASP.NET Core you don\u0026rsquo;t usually need to mess with PKCE as the framework supports it very transparently, but the project I\u0026rsquo;m working on right now is bare and to the bones, with no ASP.NET Core in sight, so I had to bring my own implementation. Fun stuff.\n","permalink":"https://nicolaiarocci.com/how-to-implement-pkce-code-challenge-in-csharp/","summary":"\u003cp\u003eToday\u0026rsquo;s fun was implementing OAuth2\u0026rsquo;s \u003ca href=\"http://tools.ietf.org/html/rfc7636\"\u003eRFC\n7636\u003c/a\u003e\u0026rsquo;s PKCE (Proof Key for Code Exchange)\nin C#. It\u0026rsquo;s relatively straightforward, but I decided to share my implementation\nshould it be helpful to someone else out there.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePKCE  is an extension to the Authorization Code flow to prevent CSRF and\nauthorization code injection attacks. [..] It was originally designed to protect\nthe authorization code flow in mobile apps, but its ability to prevent\nauthorization code injection makes it useful for every type of OAuth client,\neven web apps that use client authentication\n(\u003ca href=\"https://oauth.net/2/pkce/\"\u003esource\u003c/a\u003e).\u003c/p\u003e","title":"How to implement a PKCE code challenge in C#"},{"content":" The structure [of most Miyazaki\u0026rsquo;s works] is not bound by the western-culture Aristotelean three act setup, conflict, pay-off, and resolution\u0026hellip; its about showing you the sweet and sour of life. The loss and the love and the beauty all at the same time.\n\u0026ndash; Guillermo del Toro\nFor more context, see: Move review: The Boy and the Heron.\n","permalink":"https://nicolaiarocci.com/quoting-guillermo-del-toro/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe structure [\u003cem\u003eof most Miyazaki\u0026rsquo;s works\u003c/em\u003e] is not bound by the western-culture Aristotelean three act setup, conflict, pay-off, and resolution\u0026hellip; its about showing you the sweet and sour of life. The loss and the love and the beauty all at the same time.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://www.youtube.com/watch?v=6gQTZMG-sZg\"\u003eGuillermo del Toro\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFor more context, see: \u003cem\u003e\u003ca href=\"/movie-review-the-boy-and-the-heron/\"\u003eMove review: The Boy and the Heron\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e","title":"Quoting Guillermo del Toro"},{"content":" NTS Radio is a family of like-minded and passionate individuals, dedicated to supporting exciting music and culture through online radio and events. NTS uncovers the best of the musical past, celebrates the present and cultivates the future of the underground music scene, and prides itself on being open-minded and experimental. (source)\nI\u0026rsquo;m certainly a latecomer, but NTS Radio is the bomb. I have not opened Spotify (whose algorithm I find dull and repetitive) in the last week, not even once. I go straight to NTS to find the best and most diverse music from all genres, played by DJs and independent radio stations worldwide. Absolute banger.\n","permalink":"https://nicolaiarocci.com/nts-radio/","summary":"\u003cblockquote\u003e\n\u003cp\u003eNTS Radio is a family of like-minded and passionate individuals, dedicated to\nsupporting exciting music and culture through online radio and events. NTS\nuncovers the best of the musical past, celebrates the present and cultivates the\nfuture of the underground music scene, and prides itself on being open-minded\nand experimental. \u003cem\u003e(\u003ca href=\"https://en.wikipedia.org/wiki/NTS_Radio\"\u003esource\u003c/a\u003e)\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI\u0026rsquo;m certainly a latecomer, but \u003ca href=\"https://www.nts.live\"\u003eNTS Radio\u003c/a\u003e is the bomb. I\nhave not opened Spotify (whose algorithm I find dull and repetitive) in the last\nweek, not even once. I go straight to NTS to find the best and most diverse\nmusic from all genres, played by DJs and independent radio stations worldwide.\nAbsolute banger.\u003c/p\u003e","title":"NTS Radio"},{"content":"Last night, I was preparing dinner while waiting for Serena to return home when I received an unexpected call from her: she was in her parked car, petrified as the car\u0026rsquo;s headlights had illuminated a person lying on the floor of our building\u0026rsquo;s entrance, right in front of the elevator1. I told her to stay in the car and rushed down the stairs. When I got to the ground floor, no one was there; I checked the basement, and it was empty, too. On my way back, I found Serena entering from the front door. She told me the person had quickly risen and walked away when the lights turned on in the staircase.\nI took a few steps outside and saw an aged, bald man on the porch, more or less twenty meters away. He was standing still, looking back at me. He had nothing going on, no jacket, scarf, or cap, just a sweater, cargo pants with summer shorts on top, canvas shoes, and half gloves, and that was it. It must have been 0 or 1 degree Celsius. It was so cold. Since he wasn\u0026rsquo;t fleeing, I approached him and asked if everything was okay and if he needed any help2. He nodded and said, \u0026ldquo;Yes.\u0026rdquo; That broke my heart.\nHe then told me, \u0026ldquo;My teeth hurt\u0026rdquo;. From what I could see, he was utterly toothless. I asked if he had entered the building looking for warmth, and he nodded again. I told him we could get him something warm, and then, if he allowed us, we would call for help. \u0026ldquo;Yes, he again answered. I told him to wait a few minutes, and then we went to our apartment to get an old jacket, an oversized, warm scarf and a woolen cap. \u0026ldquo;He must have run away by now,\u0026rdquo; I thought as I went down with everything tucked under my arm, but when the elevator door opened, I found he had made his way into the building again and was waiting for me. I helped him wear the jacket and wrap his scarf around his neck. As I called for an ambulance, he laid down again on the floor; all gathered up to keep what little warmth the new clothes could give within.\nWe waited about 20 minutes. The ambulance driver made him get up abruptly, pulling him by the arm and scolding him because \u0026ldquo;you don\u0026rsquo;t go into buildings; it\u0026rsquo;s forbidden.\u0026rdquo; The nurse wanted to return our clothes because \u0026ldquo;we have blankets\u0026rdquo;; it took a while to explain that we didn\u0026rsquo;t want them back and that he would need them the following day anyway when he inevitably ended up back on the street.\nHis name is Fabio, and he is 60 years old.\nThe return spring of the building\u0026rsquo;s front door has been broken for some time. As a result, the door only closes if accompanied, and no one does.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSilly questions. I wanted to be reassuring, and I couldn\u0026rsquo;t develop anything better.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/fabio-the-tramp/","summary":"\u003cp\u003eLast night, I was preparing dinner while waiting for Serena to return home when\nI received an unexpected call from her: she was in her parked car, petrified as\nthe car\u0026rsquo;s headlights had illuminated a person lying on the floor of our\nbuilding\u0026rsquo;s entrance, right in front of the elevator\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. I told her to stay in the\ncar and rushed down the stairs. When I got to the ground floor, no one was\nthere; I checked the basement, and it was empty, too. On my way back, I found\nSerena entering from the front door. She told me the person had quickly risen\nand walked away when the lights turned on in the staircase.\u003c/p\u003e","title":"Fabio the tramp"},{"content":" Upon his death in 1543 in Frombork, Poland, Copernicus was buried in the local cathedral. Over the subsequent centuries, the location of his grave was lost to history. There were several unsuccessful attempts to locate Copernicus’s remains, dating as far back as the 16th and 17th centuries. Another failed attempt was made by the French emperor Napoleon after the 1807 Battle of Eylau. Napoleon held Copernicus in high regard as a polymath, mathematician and astronomer. In 2005, a group of Polish archaeologists took up the search.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-strage-story-of-the-grave-of-copernicus/","summary":"\u003cblockquote\u003e\n\u003cp\u003eUpon his death in 1543 in Frombork, Poland, Copernicus was buried in the local\ncathedral. Over the subsequent centuries, the location of his grave was lost to\nhistory. There were several unsuccessful attempts to locate Copernicus’s\nremains, dating as far back as the 16th and 17th centuries. Another failed\nattempt was made by the French emperor Napoleon after the 1807 Battle of Eylau.\nNapoleon held Copernicus in high regard as a polymath, mathematician and\nastronomer. In 2005, a group of Polish archaeologists took up the search.\u003c/p\u003e","title":"The strage story of the grave of Copernicus"},{"content":" The goal of the pg_rman project is to provide a method for online backup and PITR that is as easy as pg_dump. Also, it maintains a backup catalog per database cluster. Users can maintain old backups including archive logs with one command.\nWe\u0026rsquo;ve always been doing our Postgres backups the rudimentary way via pg_dumpall, which works and is purely logical (one can restore across different Postgres versions), but pg_rman maintains a catalog and has point-in-time recovery.\nI might want to look into it at some point.\n","permalink":"https://nicolaiarocci.com/pg_rman-a-backup-and-restore-management-tool-for-postgresql/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe goal of the pg_rman project is to provide a method for online backup and\nPITR that is as easy as pg_dump. Also, it maintains a backup catalog per\ndatabase cluster. Users can maintain old backups including archive logs with one\ncommand.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe\u0026rsquo;ve always been doing our Postgres backups the rudimentary way via\n\u003ccode\u003epg_dumpall\u003c/code\u003e, which works and is purely logical (one can restore across different\nPostgres versions), but \u003ccode\u003epg_rman\u003c/code\u003e maintains a catalog and has point-in-time\nrecovery.\u003c/p\u003e","title":"pg_rman: a backup and restore management tool for PostgreSQL"},{"content":"Today I released Fattura Elettronica for .NET v3.4.13. The Fattura Elettronica project allows for the validation and de/serialization of electronic invoices that adhere to the standard defined by Italian Revenue Agency (Agenzia Entrate). See the changelog for details (Italian).\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v3.4.13/","summary":"\u003cp\u003eToday I released \u003ca href=\"https://fatturaelettronicaopensource.org/docs\"\u003eFattura Elettronica for .NET\u003c/a\u003e v3.4.13. The Fattura\nElettronica project allows for the validation and de/serialization of electronic\ninvoices that adhere to the standard defined by Italian Revenue Agency\n(\u003ca href=\"https://www.agenziaentrate.gov.it/portale/web/guest/specifiche-tecniche-versione-1.8\"\u003eAgenzia Entrate\u003c/a\u003e). See the \u003ca href=\"https://fatturaelettronicaopensource.org/docs/changelog.html#v-3413\"\u003echangelog\u003c/a\u003e for details (Italian).\u003c/p\u003e","title":"FatturaElettronica for .NET v3.4.13"},{"content":"We watched Hayao Miyazaki\u0026rsquo;s The Boy and the Heron yesterday at the theatre, and I liked it. The official plot goes like this:\nA young boy named Mahito yearning for his mother ventures into a world shared by the living and the dead. There, death comes to an end, and life finds a new beginning.\nUnsurprisingly, the animation is stunning, and the complex story is beautifully narrated. Mahito Maki, the protagonist, is a kid grappling with inner conflicts and insecurities who recently lost his beloved mother in a dramatic accident. The fantastic and very \u0026ldquo;Miyazakiest\u0026rdquo; events that unfold once he and his father reach his mother\u0026rsquo;s family\u0026rsquo;s rural residence will help him cope with his loss. This movie\u0026rsquo;s central themes are dealing with strife and loss, letting go of selfishness, and embracing living for and with others. As is often the case with Miyazaki, while the protagonist is a kid (and a young audience may appreciate the content, possibly on a more superficial level), the target audience is adults.\nI read that The Boy and the Heron has autobiographical features. Like Mahito, Miyazaki lost his mother as a kid and was forced to evacuate from the city to the countryside during the war. His works commonly find children leaving the city for the rural areas, only to meet the magic and fantastic once they get there. I cannot help but draw a parallel with J.R.R. Tolkien, who devoted much of his youth exploring the outskirts of Birmingham with his brother Hillary. That \u0026ldquo;kind of lost paradise\u0026rdquo; and the rural people who inhabited it were instrumental in inspiring the Hobbits and Hobbiton\u0026hellip; but I\u0026rsquo;m getting off-topic.\n","permalink":"https://nicolaiarocci.com/movie-review-the-boy-and-the-heron/","summary":"\u003cp\u003eWe watched Hayao Miyazaki\u0026rsquo;s \u003cem\u003eThe Boy and the Heron\u003c/em\u003e yesterday at the theatre,\nand I liked it. The official plot goes like this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA young boy named Mahito yearning for his mother ventures into a world shared\nby the living and the dead. There, death comes to an end, and life finds a new\nbeginning.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eUnsurprisingly, the animation is stunning, and the complex story is beautifully\nnarrated. Mahito Maki, the protagonist, is a kid grappling with inner conflicts\nand insecurities who recently lost his beloved mother in a dramatic accident.\nThe fantastic and very \u0026ldquo;Miyazakiest\u0026rdquo; events that unfold once he and his father\nreach his mother\u0026rsquo;s family\u0026rsquo;s rural residence will help him cope with his loss.\nThis movie\u0026rsquo;s central themes are dealing with strife and loss, letting go of\nselfishness, and embracing living for and with others. As is often the case with\nMiyazaki, while the protagonist is a kid (and a young audience may appreciate\nthe content, possibly on a more superficial level), the target audience is\nadults.\u003c/p\u003e","title":"Movie review: The Boy and the Heron"},{"content":"Professor Ethan Mollick\u0026rsquo;s Signs and Portents analyzes what AI has achieved, what the effects have been so far, and what we might expect in 2024.\nTo ground ourselves, we can start with two quotes that should inform any estimates about the future. The first is Amara\u0026rsquo;s Law: \u0026ldquo;We tend to overestimate the effect of a technology in the short run and underestimate the effect in the long run.\u0026rdquo; Social change is slower than technological change. We should not expect to see immediate global effects of AI in a major way, no matter how fast its adoption (and it is remarkably fast), yet we certainly will see it sooner than many people think.\nIt\u0026rsquo;s an insightful read that pairs well with Simon Wilson\u0026rsquo;s 2023 round-up. Also, his 30-second fake video of himself telling things he never told is impressive.\n","permalink":"https://nicolaiarocci.com/some-hints-about-what-the-next-year-of-ai-looks-like/","summary":"\u003cp\u003eProfessor Ethan Mollick\u0026rsquo;s \u003ca href=\"https://www.oneusefulthing.org/p/signs-and-portents\"\u003eSigns and\nPortents\u003c/a\u003e analyzes what AI\nhas achieved, what the effects have been so far, and what we might expect in\n2024.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo ground ourselves, we can start with two quotes that should inform any\nestimates about the future. The first is Amara\u0026rsquo;s Law: \u0026ldquo;We tend to overestimate\nthe effect of a technology in the short run and underestimate the effect in the\nlong run.\u0026rdquo; Social change is slower than technological change. We should not\nexpect to see immediate global effects of AI in a major way, no matter how fast\nits adoption (and it is remarkably fast), yet we certainly will see it sooner\nthan many people think.\u003c/p\u003e","title":"Some hints about what the next year of AI looks like"},{"content":"Another achievement I unlocked with the recent website update is the newsletter switch from Substack to a fantastic and independent provider, Buttondown. That required updating all the \u0026ldquo;subscribe to my newsletter\u0026rdquo; links. We\u0026rsquo;re talking 5K posts, all saved as individual files in the same directory. The bash command that did that for me is:\nfind content/post/*.md -type f -exec \\ sed -i .bak \u0026#39;s|https://nicolaiarocci.substack.com|https://buttondown.email/nicolaiarocci|g\u0026#39; {} + It is pretty straightforward. find looks for all markdown files in the content/post/ directory. On each file, sed performs a search-and-replace action. Notice that I use | instead of the standard / as a separator for the search-and-replace pattern , and that\u0026rsquo;s because the pattern itself has /s in the URLs so I need to differentiate. Also, on macOS, the -i parameter requires a backup file argument (\u0026quot;*.bak\u0026quot;) to make a backup copy before the update. This argument is unnecessary in newer sed versions and will perform an in-place update if not provided.\nLater, I realized I would be better off if I removed the call to action from my posts and added it to the footer template instead. That way, I\u0026rsquo;d only have one place to edit or update it in the future, and my RSS feed (and newsletter updates, as they draw from the RSS feed) would be clean of unnecessary spam. In hindsight, this a move I could\u0026rsquo;ve made many years ago (2010?) when I installed Hugo for the first time, but hey, better late than never. But how could I delete calls to action from all my 5K posts? With a variation of the above command, of course:\nfind content/post/*.md -type f -exec sed -i .bak \u0026#39;/ It is the same logic as above, but we\u0026rsquo;re replacing the matched string with a \u0026ldquo;delete all lines till the end of the file\u0026rdquo; pattern this time. I must admit that this one was trickier to pull off and required a discrete amount of trial and error.\n","permalink":"https://nicolaiarocci.com/how-to-use-bash-to-recursively-search-and-replace-a-string-in-all-directory-files/","summary":"\u003cp\u003eAnother achievement I unlocked with the \u003ca href=\"/new-website-finally-with-no-analytics/\"\u003erecent website\nupdate\u003c/a\u003e is the newsletter switch from Substack to\na fantastic and independent provider,\n\u003ca href=\"https://buttondown.email/refer/nicolaiarocci\"\u003eButtondown\u003c/a\u003e. That required\nupdating all the \u0026ldquo;subscribe to my newsletter\u0026rdquo; links. We\u0026rsquo;re talking 5K posts, all\nsaved as individual files in the same directory. The bash command that did that\nfor me is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efind content/post/*.md -type f -exec \u003cspan style=\"font-weight:bold;font-style:italic\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"font-weight:bold;font-style:italic\"\u003e\u003c/span\u003e    sed -i .bak \u003cspan style=\"font-style:italic\"\u003e\u0026#39;s|https://nicolaiarocci.substack.com|https://buttondown.email/nicolaiarocci|g\u0026#39;\u003c/span\u003e {} +\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt is pretty straightforward. \u003ccode\u003efind\u003c/code\u003e looks for all markdown files in the\n\u003ccode\u003econtent/post/\u003c/code\u003e directory. On each file, \u003ccode\u003esed\u003c/code\u003e performs a search-and-replace\naction. Notice that I use \u003ccode\u003e|\u003c/code\u003e instead of the standard \u003ccode\u003e/\u003c/code\u003e as a separator for the\nsearch-and-replace pattern , and that\u0026rsquo;s because the pattern itself has \u003ccode\u003e/\u003c/code\u003es in\nthe URLs so I need to differentiate. Also, on macOS, the \u003ccode\u003e-i\u003c/code\u003e parameter requires\na backup file argument (\u0026quot;*.bak\u0026quot;) to make a backup copy before the update. This\nargument is unnecessary in newer sed versions and will perform an in-place\nupdate if not provided.\u003c/p\u003e","title":"How to use bash to recursively search and replace a string in all directory files"},{"content":" I have to say, I\u0026rsquo;ve found no greater professional joy than working with a tight group of people to ship and support our own products. And for those products to find people willing to trade their own hard earned treasure for a little bit of ours. Betting on an idea — and seeing it through — is enormously fulfilling. The creative and intellectual stimulation is beyond compare. Especially when you\u0026rsquo;re the first customer for anything you make.\n\u0026ndash; Jason Fried\n","permalink":"https://nicolaiarocci.com/quoting-jason-fried/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI have to say, I\u0026rsquo;ve found no greater professional joy than working with a tight group of people to ship and support our own products. And for those products to find people willing to trade their own hard earned treasure for a little bit of ours.  Betting on an idea — and seeing it through — is enormously fulfilling. The creative and intellectual stimulation is beyond compare. Especially when you\u0026rsquo;re the first customer for anything you make.\u003c/p\u003e","title":"Quoting Jason Fried"},{"content":"During the Christmas/New Year break, I achieved my goal of updating my website with a new theme. I loved Casper, the previous one I ran for a very long time, but it has not been updated in years and looks abandoned. I wanted new features like fuzzy search, archive and tags pages, cover images, table of contents, title anchors, and more. Also, the old theme kept me anchored to an ancient Hugo version, something I felt uncomfortable with. There are still a few loose parts, but I\u0026rsquo;m confident I made the right call by switching to PaperMod; it offers all the needed features (and plenty more), and it\u0026rsquo;s frequently updated, which allows me to open tickets and offer improvements confidently.\nI also dropped web analytics. I\u0026rsquo;ve not counted visits or any other metric for years; I realized I\u0026rsquo;m not interested and certainly don\u0026rsquo;t need metrics for motivation. I happen to hate Google Analytics UX so much that I always wanted to replace it, but never got around to doing that. Besides, from my small experiments, web metrics are unreliable. Just today, Manuel Moreale\u0026rsquo;s little analytics experiment surfaced on my RSS reader:\n[\u0026hellip;] we were discussing the discrepancy between log numbers and the ones coming out of the various analytics platforms and were noticing how they all spit out different data. Which to me makes no sense. Still, it\u0026rsquo;s an interesting topic and I decided to run a little experiment to gather more info on the subject.\nHis article is worth reading. He ran four different GA-alternative analytics platforms on his website for a short period and obtained unpredictable and differentiated results. His conclusions corroborate my impression: trust web analytics sparingly, if at all. They might make sense on professional websites (and I\u0026rsquo;d like to argue against that, too, but maybe in another post), but for blogs? They do not serve any useful purpose other than slowing down the whole thing.\n","permalink":"https://nicolaiarocci.com/new-website-finally-with-no-analytics/","summary":"\u003cp\u003eDuring the Christmas/New Year break, I achieved my goal of updating my website\nwith a new theme. I loved\n\u003ca href=\"https://github.com/vjeantet/hugo-theme-casper\"\u003eCasper\u003c/a\u003e, the previous one I ran\nfor a very long time, but it has not been updated in years and looks abandoned.\nI wanted new features like \u003ca href=\"/search/\"\u003efuzzy search\u003c/a\u003e, \u003ca href=\"/archives/\"\u003earchive\u003c/a\u003e and\n\u003ca href=\"/tags/\"\u003etags\u003c/a\u003e pages, \u003ca href=\"/the-wilderness-of-poggio-montironi/\"\u003ecover images\u003c/a\u003e,\n\u003ca href=\"/books-i-have-read/\"\u003etable of contents\u003c/a\u003e, title anchors, and more. Also, the\nold theme kept me anchored to an ancient Hugo version, something I felt\nuncomfortable with. There are still a few loose parts, but I\u0026rsquo;m confident I made\nthe right call by switching to \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod\"\u003ePaperMod\u003c/a\u003e; it offers all the\nneeded features (and plenty more), and it\u0026rsquo;s frequently updated, which allows me\nto \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/issues/1367\"\u003eopen tickets\u003c/a\u003e\nand offer improvements confidently.\u003c/p\u003e","title":"New website, finally with no analytics"},{"content":" Bring back self-hosted blogs, reinstall a feed reader, make your feed icon prominent on your blog. Blogs + Atom/RSS is the best decentralized social media system we\u0026rsquo;ve ever had! And yes I am saying that as co-author of ActivityPub: self hosted blogs is the best decentralized social networking we\u0026rsquo;ve had.\n\u0026ndash; Christine Lemmer-Webber\n","permalink":"https://nicolaiarocci.com/quoting-christine-lemmer-webber/","summary":"\u003cblockquote\u003e\n\u003cp\u003eBring back self-hosted blogs, reinstall a feed reader, make your feed icon prominent on your blog.  Blogs + Atom/RSS is the best decentralized social media system we\u0026rsquo;ve ever had!  And yes I am saying that as co-author of ActivityPub: self hosted blogs is the best decentralized social networking we\u0026rsquo;ve had.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ndash; \u003ca href=\"https://octodon.social/@cwebber/111647596861000656\"\u003eChristine Lemmer-Webber\u003c/a\u003e\u003c/p\u003e","title":"Quoting Christine Lemmer-Webber"},{"content":"Simon Wilson, who\u0026rsquo;s recently been my go-to person for all AI-related stuff, has an excellent 2023 AI round-up on his website.\n2023 was the breakthrough year for Large Language Models (LLMs). I think it\u0026rsquo;s OK to call these AI—they\u0026rsquo;re the latest and (currently) most \u0026ldquo;interesting development in the academic field of Artificial Intelligence that dates back to the 1950s. Here\u0026rsquo;s my attempt to round up the highlights in one place!\nThe links contained within the post are also valuable. You may know Simon\u0026rsquo;s website if you are interested in LLMs and AI. If you don\u0026rsquo;t, I suggest you start following him, preferably via his RSS feed like real hackers do.\n","permalink":"https://nicolaiarocci.com/stuff-we-figured-out-about-ai-in-2023/","summary":"\u003cp\u003eSimon Wilson, who\u0026rsquo;s recently been my go-to person for all AI-related stuff, has\nan excellent \u003ca href=\"https://simonwillison.net/2023/Dec/31/ai-in-2023/\"\u003e2023 AI\nround-up\u003c/a\u003e on his website.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e2023 was the breakthrough year for Large Language Models (LLMs). I think it\u0026rsquo;s\nOK to call these AI—they\u0026rsquo;re the latest and (currently) most \u0026ldquo;interesting\ndevelopment in the academic field of Artificial Intelligence that dates back to\nthe 1950s. Here\u0026rsquo;s my attempt to round up the highlights in one place!\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThe links contained within the post are also valuable. You may know Simon\u0026rsquo;s\nwebsite if you are interested in LLMs and AI. If you don\u0026rsquo;t, I suggest you start\nfollowing him, preferably via his RSS feed like real hackers do.\u003c/p\u003e","title":"Stuff we figured out about AI in 2023"},{"content":"Yesterday evening, we watched The Vast of the Night, and what a pleasant surprise it was.\nOne night, in a small New Mexico town, a girl who works at a local radio station and an older reporter boy listen to a recording of some strange noises. Through the radio and its listeners, throughout a single night, they uncover a series of sighting stories that, from clue to clue and radio testimony to radio testimony, bring them close to uncovering something big.\nIt has a distinctive retro soundtrack, and its beauty is the pleasure of the stories told. At the center of everything always remains the mystery the two protagonists try to investigate in one night, approaching the truth from testimony to testimony. A good part of the film lies in the classic elements of science fiction, namely the discovery (perhaps) of something from another planet; another part, however, is the creation of the overwhelming sense of excitement of two people from a small provincial town who increasingly feel they are part of something important.\nThe photography, lighting, and camerawork are stellar:\nAt the midpoint, Patterson wows with a tracking shot that seems to race a half-mile down a quiet street, take a left-hook through a parking lot, sprint through an ongoing basketball game, and zip up the crowded bleachers before plunging out of a window. It\u0026rsquo;s effective razzle-dazzle that will probably get the young Oklahoman hired to make something 20 times The Vast of Night\u0026rsquo;s budget. Yet, the ambition behind it is just as impressive – as is the crew\u0026rsquo;s creativity at spinning financial limitations into magic.\u0026quot; \u0026ndash;Amy Nicholson, Variety.\n\u0026ldquo;The Vast of the Night\u0026rdquo; is a small, independent, character-driven debut film that perfectly captures America\u0026rsquo;s province life in the 50s and cleverly leverages those atmospheres. Inventive and charming, it is also a homage to The Twilight Zone, The War Of The Worlds (the radio station name is WOTW), and others.\nSerena found it slow, especially at the beginning. I can understand that: the first twenty minutes are a long walk-and-talk between the two protagonists, but oh boy, look the world-building (and camera work) happening right there!\n","permalink":"https://nicolaiarocci.com/movie-review-the-vast-of-the-night/","summary":"\u003cp\u003eYesterday evening, we watched \u003cem\u003eThe Vast of the Night\u003c/em\u003e, and what a pleasant\nsurprise it was.\u003c/p\u003e\n\u003cp\u003eOne night, in a small New Mexico town, a girl who works at a local radio station\nand an older reporter boy listen to a recording of some strange noises. Through\nthe radio and its listeners, throughout a single night, they uncover a series of\nsighting stories that, from clue to clue and radio testimony to radio testimony,\nbring them close to uncovering something big.\u003c/p\u003e","title":"Movie review: The Vast of the Night"},{"content":"I read 24 books for a total of 7070 pages in 2023. That\u0026rsquo;s seven more books than last year, which is quite an outstanding result considering the seemingly unstoppable decline in book reading I have suffered in recent years. Most have been fiction books, and that\u0026rsquo;s something new and influential with the final result, as I tend to read non-fiction more slowly. The bad news is that I did not review most of the books I read this year, and that sucks. The last review was in August, a catch-up review of several books clearly showing I was in trouble.\nInspired by Adactio, I am considering a different, less demanding approach. Instead of one review for every book, I may post one general review at the end of the year. I plan to start the article with the first book of the year, keep it as a draft, update it with every new book I read, and publish it by the end of the year. Individual notes should be short, one or two paragraphs at most, maybe with a rating. This solution would reduce the number of book-related posts, also benefitting, I suspect, most of my readers. Also, this allows me to leverage a couple of new features on my website: the table of contents and active title links (which I can then use in my library page).\nI might as well adopt Adactio\u0026rsquo;s scoring system:\nOne star means a book is meh. Two stars mean a book is perfectly fine. Three stars mean a book is good—consider it recommended. Four stars mean a book is exceptional. Five stars is pretty much unheard of. Most ratings would fall in the two- to three-star range.\nI\u0026rsquo;m starting this year. When a previously posted, more detailed review is available, I\u0026rsquo;ll link it, and only repost the first paragrafe in this page.\nThe sorrows of young Werther, by J.W. von Goethe (I dolori del giovane Werther, Einaudi, traduzione di E. Ganni)\n★★★☆☆\n\u0026ldquo;The first Dandy in European literature, Werther ignited the sensibilities of an entire generation, that of the Sturm und Drang, which made him a timeless hero of the rebellious culture that prefers the intensity of feeling to the aridity of reason\u0026rdquo;. To modern eyes, the reading is sometimes disturbing, preconfiguring Werther as the prototype of today\u0026rsquo;s stalker (he goes so far as to consider the suppression of the now unattainable love). Still, one has to refrain from judging a text out of the context and period in which it was written. The writing is superb, fluent, and accessible for a text published in 1774—Enrico Ganni\u0026rsquo;s Italian translation is excellent.\nHappiness, as such by Natalia Ginzburg (Caro Michele, Einaudi)\n★★★☆☆\nA mother already advanced in years but still young, and a son physically distant and even more distant in ideas, needs, affections, and sorrows. A son for whom the mother resents but from whom she cannot detach herself, and the last, unbreakable umbilical cord is made of letters alone. It is a novel of many scattered characters, divided by incommunicability and destined for loneliness. I was struck by the precise description of society and culture in the early 1970s (the novel was published in 1973) and the non-trivial (for the time) theme of homosexuality, treated effectively.\nThe ancient hours, by Michael Bible (L\u0026rsquo;ultima cosa bella sulla faccia delle terra, Adelphi)\n★★★★☆\nA few troubled characters move through the area south of the Appalachians, one of America\u0026rsquo;s poorest and most religious (evangelical) areas. Though tormented, the characters refuse to admit their defeats. They seek redemption in love in memory and drugs, trying to bridge frailties and family conflicts, coming to terms with God\u0026rsquo;s cumbersome presence, and accompanied by the feeling that they are moving forward but can only look backward. There is much poetry and poignancy in this beautiful and passionate tale. Micheal Bible is a talented writer who knows the places, culture and society he narrates, and it shows.\nMilano calibro 9, by Giorgio Scerbanenco (La nave di Teseo)\n★★☆☆☆\nA collection of twenty-two noir tales about the ruthless Milan of the 1960s: the sacred triad of crime, sex, money, and power is present on every page. The characters in these tales are driven by aching and losing loves, vices and addictions, or fatal sexual attractions. The stories were originally published in weekly magazines that were then in vogue, first and foremost Novella 2000, of which Scerbanenco was a longtime editor. At the time, Novella 2000 was not the tabloid magazine we know today but a popular literature magazine (hence the name). Only some of the stories are captivating; some are not well written, and noir is not a genre that interests me, but I got this book to understand the literary Milan of those times better, and I got what I wanted.\nFerrovie del messico, by Gian Marco Griffi (Laurana)\n★★★★☆\nIf you are looking for adventure, you will find plenty and taste great literature with this novel. There are so many characters to follow between Asti, Italian Social Republic, February 1944 and then up and down the railroads of Mexico between the 1920s and 1930s, all rich and exciting, never flat or predictable, masterfully orchestrated by an author who manages to keep the events narrated in perfect balance between comedy and tragedy, never dull despite the length (824 pages). Gian Marco Griffi is the best modern Italian author I discovered this year.\nADHD workbook for adults, by Tara Wilson (ADHD negli adulti, independently published)\n★★☆☆☆\nA relative of mine was recently diagnosed with ADHD and this short introductory book allowed me to learn more about it. I didn\u0026rsquo;t find it particularly enlightening (much of what it contains can be found online), nor is the author particularly titled to talk about it (she is a professional coach), but perhaps because of this the content remains simple, and serve its purpose.\nHigh, by Erica Fatland (La vita in alto. Una stagione sull\u0026rsquo;Himalaya, Marisilio)\n★★★☆☆\nHimalayan fiction has accustomed us to stories of climbers tackling Everest and travelers seeking spiritual experiences in Buddhist monasteries. But what do we know about the people living in that region? Erica Flatland tells of the peoples, cultures, and societies that have inhabited the high areas in the Himalayas since time immemorial, and to do so, she takes a long, slow journey through these remote areas, encountering characters and places full of stories to discover. High is an excellent reportage that I thoroughly enjoyed.\nCodice Jury, by Jury Chechi (Longanesi)\n★★☆☆☆\nJury Chechi won the Olympic title in the rings at Atlanta in 1996 and was third at Athens in 2004. Chechi\u0026rsquo;s bronze resulted from his attempted comeback into the sport at 35, well above the average age of a male gymnast. Even at 54 (his current age), he\u0026rsquo;s astoundingly in shape. He\u0026rsquo;s one of my idols. The news that he authored a book on calisthenics primarily dedicated to older adults couldn\u0026rsquo;t be ignored by me. I recommend this work if you\u0026rsquo;re starting and looking for guidance, motivation, and solid routines, not so much for the expert.\nThe Passenger, by Cormac McCarthy (Einaudi)\n★★★★☆\nIn the middle of a cold night in 1980, Bobby Western dons his wetsuit and dives into the black depths of Mississippi Bay. There, he catches sight of the outline of a plane with nine bodies in the cabin, their eyes empty and their arms outstretched in an icy embrace. What happened to the phantom\u0026rsquo;s tenth passenger? It sounds like a thriller and is also that, but also much, much more. The author\u0026rsquo;s classic themes are all present, only disguised in a story that is only seemingly and partially different. The Passenger requires commitment and concentration: there are many closed discussions, varied and more or less recurring characters, numerous flashbacks and juxtapositions, but it is amply worth it.\nMcCarthy\u0026rsquo;s final diarchy consists of this work and its natural continuation, Stella Maris, centered on Bobby\u0026rsquo;s schizophrenic sister, Alice. Together, the two volumes make a modern masterpiece.\nStella Maris, by Cormac McCarthy (Einaudi)\n★★★★☆\nIn The Passenger, we hear the story of Bobby Western, salvage diver, physics expert, former race car driver, and grieving brother who is still in love with his beautiful sister who killed herself. This very sister is the protagonist of Stella Maris, the book\u0026rsquo;s title being the name of the psychiatric facility she admitted herself to. The text is set in 1972, and here (spoiler alert), we discover that ten years before The Passenger events, Bobby was in a coma after a car accident and brain dead. The doctors wanted Alice to agree to stop life-support. Mind-blowing. The whole text comprises seven sessions with her therapist, Dr. Cohen, rendered in pure dialogue and, therefore, more linear than The Passenger. Stella Maris can be read without its companion, but I would not advice doing that.\nBorn to run 2, by Chris McDougall and Eric Orton ★★☆☆☆\nI\u0026rsquo;ve been back to running after a long hiatus, and this book helped me get back on track with the right, lightly-hearted approach. The fundamentals are solid (the barefoot-like technique is the way), the 90-day training plan is a good platform, the nutrition hints are remarkable, and I appreciated the injury-treatment segments. There\u0026rsquo;s too much chitchat for my liking, though, with many stories, anecdotes, and non-technical, gospel-like content. Some chapters are unattractive to the experienced runner (running with dogs, the music while running debate, and training with scooters?). This book targets the newcomer and the veteran runner switching to the barefoot technique. The first book in the series, Born to Run, was the commercial hit introducing barefoot running to the masses. This one is trying to be both a sequel and something different that can live independently. Meeting all these goals was a complicated bet.\nBlind’s man bluff, by Susan Sontag (Immersione rapida, Net)\n★★★☆☆\nThis book made a lot of noise when it came out in 1998. Back then, most of the events narrated were unknown to the general public. The cold-war stories contained within are as enthralling as spy, maritime and Cold War stories can get. This book is still relevant today, as it does an excellent job of recounting the Cold War craziness and revealing how close humanity got to shooting his own feet, and we never knew.\nWuthering Heights, by Emily Bronte (Cime Tempestose, BUR)\n★★★★☆\nWhat a weird work of fiction. I was expecting the usual romantic story between noble landowners in late 19th-century England, full of heartbreak and probably opposed by their respective families, the difficulties of rural life, or both. I found myself immersed in a much darker, twisted and sick version of the story, in which every single character is flawed, and there is not a single light of hope. A few weeks passed since I read it, and I\u0026rsquo;m still trying to come to terms with it. This book was well ahead of its time (1847) and still challenges the readers today. As I read, I could not help but think, \u0026ldquo;What kind of sick author would write a thing like this?\u0026rdquo; Emily Brontë\u0026rsquo;s life was not easy, and many experiences of her and her family percolated in the novel in one way or another. I found an [excellent review][1] on Goodreads, and I\u0026rsquo;m using it as a guideline for pondering this novel. For as an oddball as it is, this book is a must-read.\nL\u0026rsquo;umanità è un tirocinio, by Domenico Starnone (Einaudi)\n★★☆☆☆\nGetting to know my beloved Starnone better through the literary fascinations that turned him on, the sharp reflections on authors and texts, and his very personal \u0026ldquo;shattering\u0026rdquo; of articles representing a lifetime\u0026rsquo;s thoughts on writing and writing was terrific. \u0026ldquo;The texts collected here owe what little good they possibly hold to the forty-five years of passionate, enjoyable daily conversation with Anita; time has passed too quickly.\u0026rdquo; It was not an easy read, mainly because most of the mentioned texts I had never read before, but worth it. My to-read list has surely grown much longer now.\nThe overstory, by Richard Powers (Il sussurro del mondo, La nave di Teseo)\n★☆☆☆☆\nI found it overly dull and did not finish it. Strange, because it sounds like a book I\u0026rsquo;d love. Maybe I\u0026rsquo;ll try again in a few years.\nLa mossa del matto, by Alessandro Barbaglia (Mondadori)\n★★★☆☆\nAlessandro Barbaglia’s La mossa del matto (The fool’s move) tries to be three things in one: the life story of chess champion Bobby Fischer, a reconciliation dialogue between author and father, who died too soon, as well the tracing of a daring parallel between Fischer’s relationship with Russian champion Boris Spasskij and that of Achilles and Ulysses of Homeric memory. In our neck of the woods, we say that too much is crippling, and this work runs the risk. More here.\nDisasters, by Daniil Charms (Disastri, UTET)\n★★★☆☆\nDaniil Charms was considered a children’s author and could not stand children all his life. While his whimsical fairy tales populated illustrated books and magazines, giving him something to live on in the silence of his room, he also feverishly wrote tales for adults, equally imaginative but inhabited by an excruciating melancholy, as in fairy tales went wrong. More here.\nLand and sea, by Carl Schmitt (Terra e mare, Adelphi)\n★★☆☆☆\nLand and Sea is an essay in short story form written in 1942 by Carl Schmitt. Subtitled “A consideration of world history told to my daughter Anna,” this essay recounts and summarizes the geo-historical-legal evolution of our planet since the discovery of the New World. The originality of the work lies in the author’s identification of the Earth-Sea dichotomy as the driving force of human history. More here.\nMedieval callings, by Jacques Le Goff (L\u0026rsquo;uomo medievale, Laterza)\n★★★☆☆\nMedieval Callings comprises eleven essays by internationally renowned medieval historians. Somewhat deceptively, only Jacques Le Goff’s prestigious name appears on the front page, as he authored the introductive essay and handpicked and curated the collection. Each piece presents a nuanced profile of a significant social or professional Middle Ages group. Warrior knights, monks, high churchmen, criminals, lepers, shepherds, artists, and prostitutes, all prominent figures of medieval society, are depicted here with great detail. More here.\nBeing wolf, by Kerstin Ekman (Essere lupo, Iperborea)\n★★★☆☆\nI saw a wolf: that’s the phrase Ulf, a hunter and former forestry inspector now in his seventies, has been brooding, unable to confess to anyone since he spotted a majestic specimen at dawn on the first day of the year. Something clicks inside him, and Ulf, one of the most respected men in the village in deep Sweden where he lives, feels an increasingly solid and intimate connection with the creature. They both are hunters and loners, but why does he feel like an intruder? More here.\nNo sleep till Shengal, by Zerocalcare (Bao)\n★★☆☆☆\nZerocalcare is an Italian cartoonist whose strips, especially in the form of illustrated books, have surged to an iconic level in the last decade. His drawing is excellent, but it is with his writing that, I think, he conquered fame. His stories are fun to read and yet profound and vibrant, all at the same time. Also, he often touches on themes nobody else covers, at least not in the comics world. It was the case with Kobane Calling: Greetings from Northern Syria, his graphic reportage from Syrian Kurdistan and the Syria-Turkey border. The author visited the area with other volunteers to support the Kurdish resistance. I think Kobane Calling did a lot in raising awareness of the Kurdish situation, at least here in Italy (an English edition was published too.) More here.\nRed Mars, by Kim Stanley Robinson (Il rosso di marte, Fanucci)\n★★☆☆☆\nRegarding space-related topics and scientific research, Casey Handmer’s blog is one of my references. So when Casey started his Mars Trilogy Technical Commentary and I learned about Kim Stanley Robinson’s masterpiece, I was instantly intrigued. In Casey’s opinion, KSR’s Mars Trilogy is “one of the finest works of literature ever composed.” It took a couple of weeks of futile resistance before I gave in and ordered the first book in the series, Red Mars, a 420 pages tome that attempts to depict a scientifically credible human colonization of Mars. More here.\nSanguina ancora, by Paolo Nori (Mondadori)\n★★★☆☆\nSanguina Ancora (Still Bleeding) is not a biography but a passionate and informative tribute to Dostoevsky. The nonlinear, not literary style works and the continuous back and forth between Dostoevsky’s epic and the author’s own experiences as a scholar and Russian literature enthusiast is probably a good idea as it helps stress the actualness of Dostoevsky’s opus. More here.\nUomini, boschi e api, by Mario Rigoni Stern (Einaudi)\n★★☆☆☆\n\u0026ldquo;I wish everyone could listen to the song of the partridges as the sun rises, see the deer on pastures in spring, the larch trees reddened by autumn on the edges of rocks, the darting of fish among the clear waters of streams, and the bees gathering nectar from the flowering cherry trees. In these stories, I write about village places. These natural environments are still livable, about the beautiful social insects that are bees, but also about ancient jobs that are slowly and inexorably disappearing.\u0026rdquo; More here.\n","permalink":"https://nicolaiarocci.com/books-i-read-in-2023/","summary":"\u003cp\u003eI read 24 books for a total of 7070 pages in 2023. That\u0026rsquo;s seven more books than\nlast year, which is quite an outstanding result considering the seemingly\nunstoppable decline in book reading \u003ca href=\"/my-favorite-books-of-2022/\"\u003eI have suffered in recent\nyears\u003c/a\u003e. Most have been fiction books, and that\u0026rsquo;s\nsomething new and influential with the final result, as I tend to read\nnon-fiction more slowly. The bad news is that I did not review most of the books\nI read this year, and that sucks. The last review was in August, a \u003ca href=\"/a-few-late-book-reviews/\"\u003ecatch-up\nreview of several books\u003c/a\u003e clearly showing I was in\ntrouble.\u003c/p\u003e","title":"Books I read in 2023"},{"content":"Yesterday was a beautiful, sunny, cold winter Sunday. I felt like going out and enjoying nature, so I took a solo hike in the Foreste Casentinesi National Park, about an hour\u0026rsquo;s drive from home.\nThis one marks my very first technology-assisted hiking adventure. It may seem weird for someone who\u0026rsquo;s been hiking for so long, is a notorious geek and is a professional computer programmer to have never used technology before. A trail map and sometimes a compass were all I was used to, and deliberately. I wanted to avoid technology in this aspect of my life. I welcomed the orientation challenges and superbly looked down at the crowds of phone-smartwatch-compulsive hikers I met on the route. Alas, 2023 was the year I surrendered my motorcycling habits to intercom systems and GPS navigation, and that spoiled me. In a couple of situations yesterday, the app spared me some trouble by warning me of the wrong direction I was going. Nothing major. I would\u0026rsquo;ve realized the error and backtracked, but being these the shortest and coldest days of the year, I appreciated not risking getting caught by dusk. Also, I found that I can turn on voice-assisted navigation as I do on my motorcycle, and that\u0026rsquo;s nice (albeit surreal - walking alone in the wilderness, miles from anybody, with a voice coming out of nowhere and whispering when I should take turns on the trail): it avoids looking at the cellphone all the time so I can stay focused on the experience even more, I suspect, than before when the don\u0026rsquo;t-get-lost alarm bell was constantly ringing in the back of my head.\nAnd then, of course, there\u0026rsquo;s the selfish and ego-boosting pleasure of sharing your achievement with the masses. I mean, look at this beauty!\nThe Poggio Montironi hike was an excellent circular tour, advisable all year round and especially suggestive in winter because of the barren and scenic ridge (perhaps too sunny in midsummer) that culminates with the more than 1,000 meters of Poggio Montironi. Near the destination stands an always-open bivouac that can be useful as shelter. At the same time, the ancient castle of Spescia, reduced to ruins but with considerable environmental value, on the return ridge gives the hike additional reasons for interest.\nCaution on the descent: Two or three turns could be more noticeable, but they are well reported in the GPX track. A fallen tree (surmountable) interrupts the trail near the ford of the Rio Sasso.\n","permalink":"https://nicolaiarocci.com/the-wilderness-of-poggio-montironi/","summary":"\u003cp\u003eYesterday was a beautiful, sunny, cold winter Sunday. I felt like going out and\nenjoying nature, so I took a solo hike in the Foreste Casentinesi National Park,\nabout an hour\u0026rsquo;s drive from home.\u003c/p\u003e\n\u003cp\u003eThis one marks my very first technology-assisted hiking adventure. It may seem\nweird for someone who\u0026rsquo;s been hiking for so long, is a notorious geek and is a\nprofessional computer programmer to have never used technology before. A trail\nmap and sometimes a compass were all I was used to, and deliberately. I wanted\nto avoid technology in this aspect of my life. I welcomed the orientation\nchallenges and superbly looked down at the crowds of phone-smartwatch-compulsive\nhikers I met on the route. Alas, 2023 was the year I surrendered my motorcycling\nhabits to intercom systems and GPS navigation, and that spoiled me. In a couple\nof situations yesterday, the app spared me some trouble by warning me of the\nwrong direction I was going. Nothing major. I would\u0026rsquo;ve realized the error and\nbacktracked, but being these the shortest and coldest days of the year, I\nappreciated not risking getting caught by dusk. Also, I found that I can turn on\nvoice-assisted navigation as I do on my motorcycle, and that\u0026rsquo;s nice (albeit\nsurreal - walking alone in the wilderness, miles from anybody, with a voice\ncoming out of nowhere and whispering when I should take turns on the trail): it\navoids looking at the cellphone all the time so I can stay focused on the\nexperience even more, I suspect, than before when the don\u0026rsquo;t-get-lost alarm bell\nwas constantly ringing in the back of my head.\u003c/p\u003e","title":"The wilderness of Poggio Montironi"},{"content":" For those who don’t know me, I’m a demographer. I study population. And my first love in fantasy was, of course, Middle Earth. How many people live in Middle Earth? Being a demographer, I was mainly interested in the data side of things.\nTolkien is frustratingly vague about population. He almost never gives us estimates of settlement sizes, and many of the larger metropolises of Middle Earth (like Pelargir) never actually appear on the page. Sizable armies make frequent appearances, yet because his adventurers almost exclusively traverse the wilds of Middle Earth, we rarely see where those soldiers are coming from.\nAlmost every attempt to estimate population in Middle Earth extrapolates from army sizes. This is no surprise since those are some of the only numbers Tolkien does provide and, furthermore, historically, this is also how ancient populations in the real world are often estimated, so there are some credible rules-of-thumb out there.\nI wanted to take a new approach.\nAs a long time Tolkien fan, I truly enjoyed How Many Hobbits? A Demographic Analysis of Middle Earth.\n","permalink":"https://nicolaiarocci.com/how-many-hobbits/","summary":"\u003cblockquote\u003e\n\u003cp\u003eFor those who don’t know me, I’m a demographer. I study population. And my first love in fantasy was, of course, Middle Earth. How many people live in Middle Earth? Being a demographer, I was mainly interested in the data side of things.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTolkien is frustratingly vague about population. He almost never gives us estimates of settlement sizes, and many of the larger metropolises of Middle Earth (like Pelargir) never actually appear on the page. Sizable armies make frequent appearances, yet because his adventurers almost exclusively traverse the wilds of Middle Earth, we rarely see where those soldiers are coming from.\u003c/p\u003e","title":"How Many Hobbits?"},{"content":"The Guardian\u0026rsquo;s The Winterkeeper: A Lifetime Spent Protecting Yellowstone National Park is a beautiful short documentary I truly enjoyed watching.\nA little research on Steven Fuller, the protagonist, allowed me to dig out some promising reading material.\n","permalink":"https://nicolaiarocci.com/the-winterkeeper/","summary":"\u003cp\u003eThe Guardian\u0026rsquo;s \u003cem\u003eThe Winterkeeper: A Lifetime Spent Protecting Yellowstone National Park\u003c/em\u003e is a beautiful short documentary I truly enjoyed watching.\u003c/p\u003e\n\u003cp\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/9OwLLNPRbUw?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\nA little research on Steven Fuller, the protagonist, allowed me to dig out some promising \u003ca href=\"https://mountainjournal.org/a-winterkeeper-remembers-his-piece-in-natgo\"\u003ereading material\u003c/a\u003e.\u003c/p\u003e","title":"The Winterkeeper"},{"content":" I always struggle a bit with I\u0026rsquo;m asked about the \u0026ldquo;hallucination problem\u0026rdquo; in LLMs. Because, in some sense, hallucination is all LLMs do. They are dream machines.\nWe direct their dreams with prompts. The prompts start the dream, and based on the LLM\u0026rsquo;s hazy recollection of its training documents, most of the time the result goes someplace useful.\nIt\u0026rsquo;s only when the dreams go into deemed factually incorrect territory that we label it a \u0026ldquo;hallucination\u0026rdquo;. It looks like a bug, but it\u0026rsquo;s just the LLM doing what it always does.\n\u0026ndash; Andrej Karpathy\n","permalink":"https://nicolaiarocci.com/quoting-andrej-karpathy/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI always struggle a bit with I\u0026rsquo;m asked about the \u0026ldquo;hallucination problem\u0026rdquo; in LLMs. Because, in some sense, hallucination is all LLMs do. They are dream machines.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe direct their dreams with prompts. The prompts start the dream, and based on the LLM\u0026rsquo;s hazy recollection of its training documents, most of the time the result goes someplace useful.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt\u0026rsquo;s only when the dreams go into deemed factually incorrect territory that we label it a \u0026ldquo;hallucination\u0026rdquo;. It looks like a bug, but it\u0026rsquo;s just the LLM doing what it always does.\u003c/p\u003e","title":"Quoting Andrej Karpathy"},{"content":"Andrej Karpathy has a very well-done Intro to Large Language Models video on YouTube. As a founding member and research scientist at OpenAI and with a two-year hiatus working on Tesla Autopilot, Karpathy is an authority in the field. He is also good at explaining hard things.\nAs a Kahneman reader, I appreciated the Thinking Fast and Slow analogy proposed at about half-length in the video: \u0026ldquo;System 1\u0026rdquo; (fast automatic thinking, rapid decisions) is where we\u0026rsquo;re now; \u0026ldquo;System 2\u0026rdquo; (rational, slow thinking, complex decisions) is LLMs next goal. Also, I suspect Karpathy\u0026rsquo;s intriguing idea of LLMs as the center of a new \u0026ldquo;operating system style\u0026rdquo; is not too far off from what will emerge soon. The final segment on AI security and known attack vectors (jailbreaking, prompt injection, data poisoning) is also super interesting.\nOn his website, Karpathy also has a promising zero-to-hero video series, \u0026ldquo;a course on building neural networks from scratch, in code.\u0026rdquo;\n","permalink":"https://nicolaiarocci.com/intro-to-large-language-models-video/","summary":"\u003cp\u003eAndrej Karpathy has a very well-done \u003ca href=\"https://youtu.be/zjkBMFhNj_g?si=5tJNFaDcK-FBWnWK\"\u003eIntro to Large Language Models\u003c/a\u003e\nvideo on YouTube. As a founding member and research scientist at OpenAI and with a two-year hiatus working on Tesla\nAutopilot, Karpathy is an authority in the field. He is also good at explaining hard things.\u003c/p\u003e\n\u003cp\u003eAs a Kahneman reader, I appreciated the \u003cem\u003eThinking Fast and Slow\u003c/em\u003e analogy proposed at about half-length in the video:\n\u0026ldquo;System 1\u0026rdquo; (fast automatic thinking, rapid decisions) is where we\u0026rsquo;re now; \u0026ldquo;System 2\u0026rdquo; (rational, slow thinking, complex\ndecisions) is LLMs next goal. Also, I suspect Karpathy\u0026rsquo;s intriguing idea of LLMs as the center of a new \u0026ldquo;operating\nsystem style\u0026rdquo; is not too far off from what will emerge soon. The final segment on AI security and known attack vectors\n(jailbreaking, prompt injection, data poisoning) is also super interesting.\u003c/p\u003e","title":"Intro to Large Language Models (video)"},{"content":"In a few days, on Monday, December 4, at 10 a.m., I will present at the .NET Conference Italia 2023, which will be held at the Microsoft House in Milan. My session is titled \u0026ldquo;C#12 What\u0026rsquo;s new and interesting\u0026rdquo; and is part of a rich agenda focused on the recent release of .NET 8.\nI presented on the same subject at a DevRomagna meetup a few months ago when C# 12 was in preview and still had several moving parts. Now that the final release is out, it will be interesting to return to the topic to consolidate my knowledge. I suspect that of the many reasons I challenge myself to speak publicly, enriching my knowledge is prevalent. As the adage goes, for learning a subject, nothing beats explaining it in front of a knowledgeable audience.\nIf you will attend the conference (you should!), remember to meet me and say hi!\nUpdate: the session is now available online.\n","permalink":"https://nicolaiarocci.com/i-am-speaking-at-the-dotnet-conference-italia-2023/","summary":"\u003cp\u003eIn a few days, on Monday, December 4, at 10 a.m., I will present at the .NET Conference Italia 2023, which will be held\nat the Microsoft House in Milan. My session is titled \u0026ldquo;C#12 What\u0026rsquo;s new and interesting\u0026rdquo; and is part of a \u003ca href=\"https://dotnetconference.it/e/3281/dotNET-Conference-Italia-2023\"\u003erich agenda\u003c/a\u003e\nfocused on the recent release of .NET 8.\u003c/p\u003e\n\u003cp\u003eI presented on the same subject at a \u003ca href=\"https://www.meetup.com/it-IT/devromagna/\"\u003eDevRomagna\u003c/a\u003e meetup a few months ago when C# 12 was in preview and still had\nseveral moving parts. Now that the final release is out, it will be interesting to return to the topic to consolidate my\nknowledge. I suspect that of the many reasons I challenge myself to speak publicly, enriching my knowledge is prevalent.\nAs the adage goes, for learning a subject, nothing beats explaining it in front of a knowledgeable audience.\u003c/p\u003e","title":"I am speaking at the .NET Conference Italia 2023"},{"content":"Today, I (re)learned how to serialize an XML to a UTF-8 string. Like all the other times I did this, I got backstabbed by StringWriter, which only supports UTF-16. A simple code snippet like this:\nawait using var sw = new StringWriter(); await using var w = XmlWriter.Create(sw, new() { Async = true }); ... await w.FlushAsync(); return sw.ToString(); Will emit this output:\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-16\u0026#34;?\u0026gt;\u0026lt;... There\u0026rsquo;s nothing inherently wrong with UTF-16, but XML is usually UTF-8, so one must do something about it. StringWriter exposes an Encoding property, but it is read-only for unknown reasons. One might think that given that the XmlWriter allows setting its own Encoding value, something like this would work:\nawait using var sw = new StringWriter(); await using var w = XmlWriter.Create(sw, new() { Async = true , Encoding = Encoding.UTF8}); ... await w.FlushAsync(); return sw.ToString(); But it doesn’t. Over time, I’ve seen a few different ways to get out of this dead end, some more performant and or less verbose than others, but my favorite is resorting to a custom StringWriter:\npublic class Utf8StringWriter : StringWriter { public override Encoding Encoding =\u0026gt; Encoding.UTF8; } Armed with this, it is trivial, as it should have been from the get-go, to obtain the desired output:\nawait using var sw = new Utf8StringWriter(); await using var w = XmlWriter.Create(sw, new() { Async = true }); ... await w.FlushAsync(); return sw.ToString(); // returns \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt;\u0026lt;... The whole .NET framework has seen fantastic performance improvements, top-class multi-platform support, and remarkable streamlining, but some baffling pitfalls are still hidden in some of its less obvious parts. StringWriter not supporting UTF-8 out-of-the-box is one of them.\n","permalink":"https://nicolaiarocci.com/how-to-use-xmlwriter-along-with-stringwriter-to-properly-serialize-a-utf-8-string/","summary":"\u003cp\u003eToday, I (re)learned how to serialize an XML to a UTF-8 string. Like all the other times I did this, I got backstabbed\nby StringWriter, which only supports UTF-16. A simple code snippet like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-gdscript3\" data-lang=\"gdscript3\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    await using \u003cspan style=\"font-weight:bold\"\u003evar\u003c/span\u003e sw = new StringWriter();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    await using \u003cspan style=\"font-weight:bold\"\u003evar\u003c/span\u003e w = XmlWriter.Create(sw, new() { Async = true });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    await w.FlushAsync();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold\"\u003ereturn\u003c/span\u003e sw.ToString();\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWill emit this output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-16\u0026#34;?\u0026gt;\u0026lt;...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThere\u0026rsquo;s nothing inherently wrong with UTF-16, but XML is usually UTF-8, so one must do something about it. StringWriter\nexposes an \u003ccode\u003eEncoding\u003c/code\u003e property, but it is read-only for unknown reasons. One might think that given that the XmlWriter\nallows setting its own \u003ccode\u003eEncoding\u003c/code\u003e value, something like this would work:\u003c/p\u003e","title":"How to use XmlWriter along with StringWriter to properly serialize a UTF-8 string"},{"content":"Fattura Elettronica for .NET v3.4.11 was released on NuGet today. The Fattura Elettronica project allows for the fixes a missing validation point. See the changelog for details (Italian). validation and de/serialization of electronic invoices following the Italian Revenue Agency standards.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v3.4.11/","summary":"\u003cp\u003e\u003ca href=\"https://fatturaelettronicaopensource.org/docs\"\u003eFattura Elettronica\u003c/a\u003e for .NET v3.4.11 was released on NuGet today. The Fattura Elettronica project allows for the\nfixes a missing validation point. See the \u003ca href=\"https://fatturaelettronicaopensource.org/docs/changelog.html#v-3411\"\u003echangelog\u003c/a\u003e for details (Italian). validation and de/serialization of\nelectronic invoices following the Italian Revenue Agency standards.\u003c/p\u003e","title":"FatturaElettronica for .NET v3.4.11"},{"content":"Today I learned how to implement a custom Enumerable.DistinctBy extension method that returns distinct elements from a sequence according to a specified key selector function.\n.NET 6 and its successors have the method built in within LINQ, but I needed it in a .NET Standard 2.0 class library, so I was out of luck. My implementation is simple, not different from others I found online, and should also work fine with old .NET releases. Here it is:\npublic static IEnumerable\u0026lt;TSource\u0026gt; DistinctBy\u0026lt;TSource, TKey\u0026gt;(this IEnumerable\u0026lt;TSource\u0026gt; source, Func\u0026lt;TSource, TKey\u0026gt; keySelector) { var keys = new HashSet\u0026lt;TKey\u0026gt;(); foreach (var element in source) { if (keys.Contains(keySelector(element))) continue; keys.Add(keySelector(element)); yield return element; } } In the following usage example, I will get back all unique objects from the original sequence, distinct by their Name property:\nvar uniques = mySequenceOfObjects.DistinctBy(x =\u0026gt; x.Name); I later went to check the official .NET 6+ implementation. They support an optional equality comparer , which I don\u0026rsquo;t need, but their base implementation is similar to mine (they use deferred execution as well).\nBy the way, years after its open-sourcing, I still get thrills when I realize I can always look at, let alone contribute to, the .NET source code.\n","permalink":"https://nicolaiarocci.com/linq-distinctby-on-a-property-for-dotnet-standard-and-old-dotnet-versions/","summary":"\u003cp\u003eToday I learned how to implement a custom \u003ccode\u003eEnumerable.DistinctBy\u003c/code\u003e extension method that returns distinct elements from a\nsequence according to a specified key selector function.\u003c/p\u003e\n\u003cp\u003e.NET 6 and its successors have the method \u003ca href=\"https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.distinctby?view=net-6.0\"\u003ebuilt in\u003c/a\u003e within LINQ, but I needed it in a .NET Standard 2.0 class\nlibrary, so I was out of luck. My implementation is simple, not different from \u003ca href=\"https://stackoverflow.com/a/489421/323269\"\u003eothers\u003c/a\u003e I found online, and should\nalso work fine with old .NET releases. Here it is:\u003c/p\u003e","title":"LINQ DistinctBy on a property for .NET Standard and older .NET versions"},{"content":"I\u0026rsquo;ve been reading a few books throughout the summer and needed to be more active in reviewing them here. Rather than writing five individual posts in a row (too lazy for that), I will catch up with this single post.\nBorn to Run 2 I\u0026rsquo;ve been back to running after a long hiatus, and this book helped me get back on track with the right, lightly-hearted approach. The fundamentals are solid (the barefoot-like technique is the way), the 90-day training plan is a good platform, the nutrition hints are remarkable, and I appreciated the injury-treatment segments. There\u0026rsquo;s too much chitchat for my liking, though, with many stories, anecdotes, and non-technical, gospel-like content. Some chapters are unattractive to the experienced runner (running with dogs, the music while running debate, and training with scooters?). This book targets the newcomer and the veteran runner switching to the barefoot technique. The first book in the series, Born to Run, was the commercial hit introducing barefoot running to the masses. This one is trying to be both a sequel and something different that can live independently. Meeting all these goals was a complicated bet. Authors: Chris McDougall, Eric Orton.\nImmersione rapida (Blind\u0026rsquo;s Man Bluff) For decades, American submarines have roamed the depths in a dangerous battle for information and advantage in missions known only to a select few. Now, after six years of research, those missions are told in Blind Man\u0026rsquo;s Bluff, a magnificent achievement in investigative reporting.\nThis book made a lot of noise when it came out in 1998. Back then, most of the events narrated were unknown to the general public. The cold-war stories contained within are as enthralling as spy, maritime and Cold War stories can get. This book is still relevant today, as it does an excellent job of recounting the Cold War craziness and revealing how close humanity got to shooting his own feet, and we never knew. Authors: Sherry Sontag, Christopher Drew, Annette L. Drew.\nCime tempestose (Wuthering Heights) What a weird work of fiction. I was expecting the usual romantic story between noble landowners in late 19th-century England, full of heartbreak and probably opposed by their respective families, the difficulties of rural life, or both. I found myself immersed in a much darker, twisted and sick version of the story, in which every single character is flawed, and there is not a single light of hope. A few weeks passed since I read it, and I\u0026rsquo;m still trying to come to terms with it. This book was well ahead of its time (1847) and still challenges the readers today. As I read, I could not help but think, \u0026ldquo;What kind of sick author would write a thing like this?\u0026rdquo; Emily Brontë\u0026rsquo;s life was not easy, and many experiences of her and her family percolated in the novel in one way or another. I found an excellent review on Goodreads, and I\u0026rsquo;m using it as a guideline for pondering this novel. For as an oddball as it is, this book is a must-read. Author: Emily Brontë.\nL\u0026rsquo;umanità è un tirocinio (Life is an apprenticeship) Getting to know my beloved Starnone better through the literary fascinations that turned him on, the sharp reflections on authors and texts, and his very personal \u0026ldquo;shattering\u0026rdquo; of articles representing a lifetime\u0026rsquo;s thoughts on writing and writing was terrific. \u0026ldquo;The texts collected here owe what little good they possibly hold to the forty-five years of passionate, enjoyable daily conversation with Anita; time has passed too quickly.\u0026rdquo; It was not an easy read, mainly because most of the mentioned texts I had never read before, but worth it. My to-read list has surely grown much longer now. Author: Domenico Starnone.\nIl sussurro del mondo (The Overstory) The Overstory is a sweeping, impassioned work of activism and resistance that is also a stunning evocation of - and paean to - the natural world. From the roots to the crown and back to the seeds, Richard Powers\u0026rsquo;s twelfth novel unfolds in concentric rings of interlocking fables that range from antebellum New York to the late twentieth-century Timber Wars of the Pacific Northwest and beyond. There is a world alongside ours—vast, slow, interconnected, resourceful, magnificently inventive, and almost invisible to us. This is the story of a handful of people who learn how to see that world and who are drawn up into its unfolding catastrophe.\nI found it overly dull and did not finish it. Strange, because it sounds like a book I\u0026rsquo;d love. Maybe I\u0026rsquo;ll try again in a few years. Author: Richard Powers.\n","permalink":"https://nicolaiarocci.com/a-few-late-book-reviews/","summary":"\u003cp\u003eI\u0026rsquo;ve been reading a few books throughout the summer and needed to be more active in reviewing them here. Rather than\nwriting five individual posts in a row (too lazy for that), I will catch up with this single post.\u003c/p\u003e\n\u003ch2 id=\"born-to-run-2\"\u003eBorn to Run 2\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;ve been back to running after a long hiatus, and this book helped me get back on track with the right, lightly-hearted\napproach. The fundamentals are solid (the barefoot-like technique is the way), the 90-day training plan is a good\nplatform, the nutrition hints are remarkable, and I appreciated the injury-treatment segments. There\u0026rsquo;s too much chitchat\nfor my liking, though, with many stories, anecdotes, and non-technical, gospel-like content. Some chapters are\nunattractive to the experienced runner (running with dogs, the music while running debate, and training with scooters?).\nThis book targets the newcomer and the veteran runner switching to the barefoot technique. The first book in the series,\nBorn to Run, was the commercial hit introducing barefoot running to the masses. This one is trying to be both a sequel\nand something different that can live independently. Meeting all these goals was a complicated bet. \u003cem\u003eAuthors: Chris\nMcDougall, Eric Orton.\u003c/em\u003e\u003c/p\u003e","title":"A few late book reviews"},{"content":"Today I learned how to rsync with a user different than the one connected to the remote. Why would one want to do such a thing? The data I need to download from that server is owned by \u0026lsquo;backup,\u0026rsquo; a different, service-only user. I wanted to avoid going the change-permissions slippery route and allow my user direct access to the data.\nLooking at the rsync documentation, I learned about the nifty --rsync-path=PROGRAM option:\nUse this to specify what program is to be run on the remote machine to start-up rsync. Often used when rsync is not in the default remote-shell\u0026rsquo;s path (e.g. \u0026ndash;rsync-path=/usr/local/bin/rsync).\nThe example caught my attention. I could perhaps leverage this option to perform a user switch before executing rsync (now performed on the remote machine). As further research confirmed, it can be done:\nrsync --rsync-path \u0026#39;sudo -u backup rsync\u0026#39; -a --delete host:source destination It didn\u0026rsquo;t work immediately because my user was not a sudoer, but that was an easy fix:\ncat \u0026gt; /etc/sudoers.d/myuser \u0026lt;\u0026lt; EOF myuser ALL=(ALL) NOPASSWD:/usr/bin/rsync EOF As you can see, not only must the user be a sudoer, but it also needs to be able to sudo with no password. One last minor issue was that \u0026lsquo;backup\u0026rsquo;, being a service user, had no shell access. That was another easy fix:\nsudo usermod -s /bin/bash backup Now my rsync-with-a-different-user command works like a charm. I do have some mild security concerns, though. My user is a sudoer (can only sudo rsync, though1), and \u0026lsquo;backup\u0026rsquo; now has shell access. As password logins are turned off, and SSH keys-only access is allowed to the machine (and I\u0026rsquo;m the only person holding those keys), everything\u0026rsquo;s still reasonably safe. Are there better ways? Please let me know.\nThanks to Sebastian on Mastodon for pointing out that I should limit the sudoer to just rsync itself. I updated the post accordingly. By the way, this is why I love posting TILs in public. [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/rsync-with-a-different-user/","summary":"\u003cp\u003eToday I learned how to rsync with a user different than the one connected to the remote. Why would one want to do such a\nthing? The data I need to download from that server is owned by \u0026lsquo;backup,\u0026rsquo; a different, service-only user. I wanted to\navoid going the change-permissions slippery route and allow my user direct access to the data.\u003c/p\u003e\n\u003cp\u003eLooking at the rsync documentation, I learned about the nifty \u003ccode\u003e--rsync-path=PROGRAM\u003c/code\u003e \u003ca href=\"https://download.samba.org/pub/rsync/rsync.1#opt--rsync-path\"\u003eoption\u003c/a\u003e:\u003c/p\u003e","title":"rsync with a different user"},{"content":"Quoting Jan van den Berg:\nThis weekend we learned that Bram Moolenaar had passed away at the age of 62. And this news affected me more than I expected. Like so many: I did not know Bram personally. But I’ve been using a tool made by Bram for more than half my life — at least weekly, sometimes daily. That tool is a text editor. The best one there is: Vim.\n","permalink":"https://nicolaiarocci.com/the-legacy-of-bram-moolenaar/","summary":"\u003cp\u003eQuoting \u003ca href=\"https://j11g.com/2023/08/07/the-legacy-of-bram-moolenaar/\"\u003eJan van den Berg\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis weekend we learned that Bram Moolenaar had passed away at the age of 62. And this news affected me more than I\nexpected. Like so many: I did not know Bram personally. But I’ve been using a tool made by Bram for more than half my\nlife — at least weekly, sometimes daily. That tool is a text editor. The best one there is: Vim.\u003c/p\u003e","title":"The Legacy of Bram Moolenaar"},{"content":"Thanks to funkyfuture\u0026rsquo;s tireless work, yesterday we released version 1.3.5 of Cerberus, the data validation package for Python. This release officially supports Python 3.10 and 3.11, fixes a few issues, and proudly displays a new documentation theme which I dig, and I hope you\u0026rsquo;ll do the same. As usual, see the changelog for details.\n","permalink":"https://nicolaiarocci.com/cerberus-v1.3.5-released/","summary":"\u003cp\u003eThanks to \u003ca href=\"https://github.com/funkyfuture\"\u003efunkyfuture\u003c/a\u003e\u0026rsquo;s tireless work, yesterday we released \u003ca href=\"https://pypi.org/project/Cerberus/1.3.5/\"\u003eversion 1.3.5\u003c/a\u003e of \u003ca href=\"https://docs.python-cerberus.org\"\u003eCerberus\u003c/a\u003e, the data\nvalidation package for Python. This release officially supports Python 3.10 and 3.11, fixes a few issues, and proudly\ndisplays a new documentation theme which I dig, and I hope you\u0026rsquo;ll do the same. As usual, see the \u003ca href=\"https://docs.python-cerberus.org/changelog.html#version-1-3-5\"\u003echangelog\u003c/a\u003e for\ndetails.\u003c/p\u003e","title":"Cerberus v1.3.5 released"},{"content":"Fattura Elettronica for .NET v3.4.10 was released on NuGet today. The Fattura Elettronica project allows for the validation and de/serialization of electronic invoices following the Italian Revenue Agency standards. This release adds a missing validation point. See the changelog for details (Italian).\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-for-dotnet-v3.4.10/","summary":"\u003cp\u003e\u003ca href=\"https://fatturaelettronicaopensource.org/docs\"\u003eFattura Elettronica\u003c/a\u003e for .NET v3.4.10 was released on NuGet today. The Fattura Elettronica project allows for the\nvalidation and de/serialization of electronic invoices following the Italian Revenue Agency standards. This release\nadds a missing validation point. See the \u003ca href=\"https://fatturaelettronicaopensource.org/docs/changelog.html#v-3410\"\u003echangelog\u003c/a\u003e for details (Italian).\u003c/p\u003e","title":"FatturaElettronica for .NET v3.4.10"},{"content":" Imagine, for a moment, that you are walking along a dirt road in the seventh century Middle East. The sun is hot, the air is dry, your feet are tired. It’s been a long journey, by boat and foot, from your home in Constantinople to where you find yourself now: outside of the walls of the mountainous river city of Antioch. In the bright sunlight, you strain your eyes to catch a distant glimpse of the sight you’ve come all this way to see – and then suddenly, you do. A bright stone pillar, stretching as tall as a church dome with an unsteady-looking wooden platform; and atop it a tiny, bedraggled, flinty old man.\nYou’ve found him: the Pillar Saint.\nTo our modern eyes, this is a profoundly weird image – but it would have been a recognisable, even iconic, one if we were living in the early medieval Middle East. To explain how we got here – and how that guy got on that pillar - we need to step back and tell the origin story of one of the most recognisable characters in medieval life: the monk.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-medieval-monks-who-lived-on-top-of-giant-pillars/","summary":"\u003cblockquote\u003e\n\u003cp\u003eImagine, for a moment, that you are walking along a dirt road in the seventh century Middle East. The sun is hot, the\nair is dry, your feet are tired. It’s been a long journey, by boat and foot, from your home in Constantinople to where\nyou find yourself now: outside of the walls of the mountainous river city of Antioch. In the bright sunlight, you\nstrain your eyes to catch a distant glimpse of the sight you’ve come all this way to see – and then suddenly, you do.\nA bright stone pillar, stretching as tall as a church dome with an unsteady-looking wooden platform; and atop it a\ntiny, bedraggled, flinty old man.\u003c/p\u003e","title":"The Medieval Monks Who Lived on Top of Giant Pillars"},{"content":"Today I released Events 0.5. Thanks to Cailean Parker\u0026rsquo;s contribution, we added support for the __getitem__ dunder (aka Python magic method.) This allows the calling of events from strings, thus enabling dynamic events. For instance:\nevents = Events(tuple(f\u0026#34;on_{i}\u0026#34; for i in range(5))) for i in range(5): events[f\u0026#34;on_{i}\u0026#34;](i) The C# language provides a handy way to declare, subscribe to and fire events. In C#, an event is a \u0026ldquo;slot\u0026rdquo; to which callback functions (event handlers) can be attached - a process referred to as subscribing to an event. Events adds this mechanism to Python. It originated as a side experiment (I was a C# transfugee then) that I later adopted as an Eve dependency. It slowly got some traction besides my projects. Read more on the project\u0026rsquo;s GitHub page.\n","permalink":"https://nicolaiarocci.com/events-0.5-released/","summary":"\u003cp\u003eToday I released \u003ca href=\"https://pypi.org/project/Events/0.5/\"\u003eEvents 0.5\u003c/a\u003e. Thanks to \u003ca href=\"https://github.com/CaileanMParker\"\u003eCailean\nParker\u003c/a\u003e\u0026rsquo;s contribution, we added support for the \u003ccode\u003e__getitem__\u003c/code\u003e dunder (aka Python\nmagic method.) This allows the calling of events from strings, thus enabling dynamic events. For instance:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eevents = Events(tuple(f\u0026#34;on_{i}\u0026#34; for i in range(5)))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efor i in range(5):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    events[f\u0026#34;on_{i}\u0026#34;](i)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe C# language provides a handy way to declare, subscribe to and fire events. In C#, an event is a \u0026ldquo;slot\u0026rdquo; to which\ncallback functions (event handlers) can be attached - a process referred to as subscribing to an event. \u003cem\u003eEvents\u003c/em\u003e adds\nthis mechanism to Python. It originated as a side experiment (I was a C# transfugee then) that I later adopted as an\n\u003ca href=\"https://github.com/pyeve/eve\"\u003eEve\u003c/a\u003e dependency. It slowly got some traction besides my projects. Read more on the project\u0026rsquo;s \u003ca href=\"https://github.com/pyeve/events\"\u003eGitHub\npage\u003c/a\u003e.\u003c/p\u003e","title":"Events 0.5 released"},{"content":"I\u0026rsquo;ve just received news that I\u0026rsquo;ve been awarded the Microsoft Most Valuable Professional (MVP) Award in the Software Development category. It is an honor and a pleasure to be renewed for the eighth time. Being a Microsoft MVP means a lot to me; I remember how intimidated I felt when I met MVPs at various events and how totally out of reach the title seemed for someone like me. Besides my everyday work, I kept doing the things I loved:\nWork on my open-source projects Present at conferences and local meetups Write some articles here and there Blog as usual Then, one day, someone nominated me for the award. I was surprised, baffled and thankful, and I did not expect to pass the selection process. I was genuinely shocked when I received the first award. Being in the MVP program has been a happy and rewarding ride, and I\u0026rsquo;m glad the journey continues for another year.\n","permalink":"https://nicolaiarocci.com/i-won-the-microsoft-mvp-award/","summary":"\u003cp\u003eI\u0026rsquo;ve just received news that I\u0026rsquo;ve been awarded the Microsoft Most Valuable Professional (MVP) Award in the Software\nDevelopment category. It is an honor and a pleasure to be renewed for the eighth time. Being a Microsoft MVP means a lot\nto me; I remember how intimidated I felt when I met MVPs at various events and how totally out of reach the title seemed\nfor someone like me. Besides my everyday work, I kept doing the things I loved:\u003c/p\u003e","title":"I won the Microsoft MVP Award"},{"content":"Another day another Homebrew incompatibility emerges, this time with docfx, the technical documentation building tool of reference in .NET space. I\u0026rsquo;ve been using docfx for years to build the FatturaElettronica.NET website, and it\u0026rsquo;s always been working without a glitch. Lately, however, my builds have been failing with strange errors I was too lazy to diagnose until today when I decided to grasp the nettle and sort the whole thing out.\nIt took me an embarrassing time to realize that, while successful, my docfx updates (dotnet tool update -g docfx) were being ignored. An old, Homebrew-installed version of docfx was being executed at my launches —a simple which docfx revealed the issue. brew uninstall docfx finally set the updated, dotnet-installed version free of its chains, and it is now merrily churning websites.\nA similar issue emerged between Homebrew and .NET 8 Preview only a few days ago. Lesson learned I\u0026rsquo;m not installing dotnet tools via Homebrew anymore. Or maybe, I might stay clear of Homebrew altogether.\n","permalink":"https://nicolaiarocci.com/homebrew-and-docfx-dont-like-each-other-too/","summary":"\u003cp\u003eAnother day another Homebrew incompatibility emerges, this time with \u003ca href=\"https://dotnet.github.io/docfx/index.html\"\u003edocfx\u003c/a\u003e, the technical documentation building\ntool of reference in .NET space. I\u0026rsquo;ve been using docfx for years to build the \u003ca href=\"https://fatturaelettronicaopensource.org\"\u003eFatturaElettronica.NET\u003c/a\u003e website, and it\u0026rsquo;s\nalways been working without a glitch. Lately, however, my builds have been failing with strange errors I was too lazy to\ndiagnose until today when I decided to grasp the nettle and sort the whole thing out.\u003c/p\u003e\n\u003cp\u003eIt took me an embarrassing time to realize that, while successful, my docfx updates (\u003ccode\u003edotnet tool update -g docfx\u003c/code\u003e) were\nbeing ignored. An old, Homebrew-installed version of docfx was being executed at my launches —a simple \u003ccode\u003ewhich docfx\u003c/code\u003e\nrevealed the issue. \u003ccode\u003ebrew uninstall docfx\u003c/code\u003e finally set the updated, dotnet-installed version free of its chains, and it\nis now merrily churning websites.\u003c/p\u003e","title":"Homebrew and docfx don't like each other too"},{"content":"Today I learned that .NET 8 Preview could play better with Homebrew (or vice-versa). I\u0026rsquo;m working on a C# 12 presentation for our local developer meetup, and for that, I wanted .NET 8 Preview to run side by side with version 7 on my Mac. As version 7 was initially installed with Homebrew, I also wanted to install version 8 Preview with Homebrew, but that recipe was unavailable. Not perfectly happy with that, I fell back to the stand-alone installer, expecting problems.\nInstallation went well, but then I turned to the command line only to find that dotnet --list-sdks was still and only showing version 7. Yet, the 8 Preview was sitting there at its canonical location at /usr/local/share/dotnet/sdk, where the v7 was also listed.\nPuzzled, I tried a few things, but the quick fix was to simply brew uninstall --ignore-dependencies dotnet and, boom, both versions 8 Preview and 7 became immediately available. I suspect that brew uninstall only removed the symlink from .NET canonical location to the Homebrew cellar, which magically solved the SDK visibility problem.\nTL; DR. Homebrew recipes don\u0026rsquo;t play nicely with .NET canonical installer. To make all my SDK versions visible to .NET, I had to forego the Homebrew installation, which did not uninstall the SDK itself, but simply unlinked it.\n","permalink":"https://nicolaiarocci.com/homebrew-and-dotnet-8-preview-dont-like-each-other/","summary":"\u003cp\u003eToday I learned that .NET 8 Preview could play better with Homebrew (or vice-versa). I\u0026rsquo;m working on a \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/293340671/\"\u003eC# 12 presentation\nfor our local developer meetup\u003c/a\u003e, and for that, I wanted .NET 8 Preview to run side by side with version 7 on my Mac. As\nversion 7 was initially installed with Homebrew, I also wanted to install version 8 Preview with Homebrew, but that\nrecipe was unavailable. Not perfectly happy with that, I fell back to the stand-alone installer, expecting\nproblems.\u003c/p\u003e","title":"Homebrew and .NET 8 Preview don't like each other"},{"content":"I have been working on a side project for which I\u0026rsquo;m using bpython, a \u0026ldquo;fancy interface to the Python interpreter.\u0026rdquo; If you use the Python REPL often, you should check it out. It offers unique features like in-line syntax highlighting, readline-like autocomplete, a \u0026ldquo;rewind\u0026rdquo; function to pop the last line of code from memory, auto-indentation and more.\nAnyway, today I found a bug in bpython, and that\u0026rsquo;s that Python\u0026rsquo;s decimal.getcontext() does not work with it.\nbpython version 0.24 on top of Python 3.11.3 \u0026gt;\u0026gt;\u0026gt; import decimal \u0026gt;\u0026gt;\u0026gt; decimal.getcontext().prec = 6 \u0026gt;\u0026gt;\u0026gt; decimal.Decimal(1) / decimal.Decimal(7) Decimal(\u0026#39;0.1428571428571428571428571429\u0026#39;) If you run the same lines in the standard Python REPL, what you get instead is:\nbpython version 0.24 on top of Python 3.11.3 \u0026gt;\u0026gt;\u0026gt; import decimal \u0026gt;\u0026gt;\u0026gt; decimal.getcontext().prec = 6 \u0026gt;\u0026gt;\u0026gt; decimal.Decimal(1) / decimal.Decimal(7) Decimal(\u0026#39;0.142857\u0026#39;) Further experimenting revealed that, as a workaround, setting DefaultContext works as expected:\nbpython version 0.24 on top of Python 3.11.3 \u0026gt;\u0026gt;\u0026gt; decimal.DefaultContext.prec = 6 \u0026gt;\u0026gt;\u0026gt; decimal.Decimal(1) / decimal.Decimal(7) Decimal(\u0026#39;0.142857\u0026#39;) I suspect this has something to do with threads, as decimal.getcontext targets the current thread while DefaultContext is global. I went to the bpython repository only to find that a ticket was already opened in 2021. I added my DefaultContext observation there.\n","permalink":"https://nicolaiarocci.com/python-decimal.getcontext-does-not-work-with-bpython/","summary":"\u003cp\u003eI have been working on a side project for which I\u0026rsquo;m using \u003ca href=\"https://bpython-interpreter.org\"\u003ebpython\u003c/a\u003e, a \u0026ldquo;fancy interface to the Python interpreter.\u0026rdquo;\nIf you use the Python REPL often, you should check it out. It offers unique features like in-line syntax\nhighlighting, readline-like autocomplete, a \u0026ldquo;rewind\u0026rdquo; function to pop the last line of code from memory, auto-indentation\nand more.\u003c/p\u003e\n\u003cp\u003eAnyway, today I found a bug in bpython, and that\u0026rsquo;s that Python\u0026rsquo;s \u003ccode\u003edecimal.getcontext()\u003c/code\u003e does not work with it.\u003c/p\u003e","title":"Python `decimal.getcontext` does not work with bpython"},{"content":"Julian Casablancas (The Strokes, The Voidz) says Infinity Repeating is \u0026ldquo;the last Daft Punk song, ever.\u0026rdquo; The song was recorded in 2013 as a demo and left unpublished until it was included in the 10th-anniversary edition of Random Access Memories released a few weeks ago.\nThe video is a highly addictive masterpiece. Digging into the comments on YouTube, I found that someone attempted a reconstruction of all the citations included. I\u0026rsquo;m especially fond of the 8-16-32-bit graphics animation section. Another thing I learned is that Thomas Bangalter, formerly one-half of Daft Punk, said that his fear of artificial intelligence was a factor in why the group split in 2021.\n","permalink":"https://nicolaiarocci.com/daft-punks-infinity-repeating-music-video/","summary":"\u003cp\u003eJulian Casablancas (The Strokes, The Voidz) says Infinity Repeating is \u0026ldquo;the last Daft Punk song, ever.\u0026rdquo; The song was\nrecorded in 2013 as a demo and left unpublished until it was included in the 10th-anniversary edition of Random Access\nMemories released a few weeks ago.\u003c/p\u003e\n\u003cp\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/imBlPXbAv6E?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\nThe video is a highly addictive masterpiece. Digging into the comments on YouTube, I found that someone attempted a\nreconstruction of \u003ca href=\"https://www.youtube.com/watch?v=imBlPXbAv6E\u0026amp;lc=UgzaNoEwyYOxNyc53cB4AaABAg\"\u003eall the citations included\u003c/a\u003e. I\u0026rsquo;m especially fond of the 8-16-32-bit graphics animation section.\nAnother thing I learned is that Thomas Bangalter, formerly one-half of Daft Punk, \u003ca href=\"https://www.latimes.com/entertainment-arts/story/2023-04-04/daft-punk-member-thomas-bangalter-terrified-ai\"\u003esaid\u003c/a\u003e that his fear of artificial\nintelligence was a factor in why the group split in 2021.\u003c/p\u003e","title":"Daft Punk's Infinity Repeating music video"},{"content":"Donald Knuth challenged ChatGPT-4 with 20 questions and then submitted the results and his comments to Stephen Wolfram. The whole thing is fascinating in many ways and worth reading.\nSome remarkable quotes:\nOf course these are extremely impressive responses, sometimes astonishingly so; thus I totally understand why you and others have been paying attention to it.\nThe most immediate impression is the quality of the wordsmithing. It\u0026rsquo;s way better than 99% of copy that people actually write. It\u0026rsquo;s definitely not like a Markov model that uses the most predictable way to continue what\u0026rsquo;s already been said. On the other hand there are surprising lapses there too, as typical of any large system.\nAnswer #10 reads as though it\u0026rsquo;s the best answer yet. But it\u0026rsquo;s almost totally wrong!\nIt\u0026rsquo;s amazing how the confident tone lends credibility to all of that made-up nonsense. Almost impossible for anybody without knowledge of the book to believe that those \u0026ldquo;facts\u0026rdquo; aren\u0026rsquo;t authorititative and well researched.\nI find it fascinating that novelists galore have written for decades about scenarios that might occur after a \u0026ldquo;singularity\u0026rdquo; in which superintelligent machines exist. But as far as I know, not a single novelist has realized that such a singularity would almost surely be preceded by a world in which machines are 0.01% intelligent (say), and in which millions of real people would be able to interact with them freely at essentially no cost.\nI myself shall certainly continue to leave such research to others, and to devote my time to developing concepts that are authentic and trustworthy. And I hope you do the same.\n","permalink":"https://nicolaiarocci.com/quoting-donald-knuth/","summary":"\u003cp\u003eDonald Knuth challenged ChatGPT-4 with 20 questions and then submitted the results and his comments to Stephen Wolfram. The\n\u003ca href=\"https://cs.stanford.edu/~knuth/chatGPT20.txt\"\u003ewhole thing\u003c/a\u003e is fascinating in many ways and worth reading.\u003c/p\u003e\n\u003cp\u003eSome remarkable quotes:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOf course these are extremely impressive responses, sometimes astonishingly so; thus I totally understand why you and\nothers have been paying attention to it.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe most immediate impression is the quality of the wordsmithing. It\u0026rsquo;s way better than 99% of copy that people\nactually write. It\u0026rsquo;s definitely not like a Markov model that uses the most predictable way to continue what\u0026rsquo;s already\nbeen said. On the other hand there are surprising lapses there too, as typical of any large system.\u003c/p\u003e","title":"Quoting Donald Knuth"},{"content":"The latest .NET 8 Preview is out, and I love that they\u0026rsquo;re finally changing how MSBuild logs are printed to the terminal. The new Terminal Logger ditches the infamous \u0026ldquo;wall of text\u0026rdquo; that is a nightmare to parse in favor of a cleaner, leaner, and more organized output.\nOnce enabled, the new logger shows you the restore phase, followed by the build phase. During each phase, the currently-building projects are at the bottom of the terminal, and each building project tells you both the MSBuild Target currently being built, as well as the amount of time spent on that target.\nThe new MSBuild terminal logger is not the default. It must be opted-in with the tl option of the dotnet build command. Here\u0026rsquo;s what it looks like for a complex, multi-project and multi-target solution:\nNow, if you\u0026rsquo;re doing .NET programming within an IDE like Rider of Visual Studio, this all might seem of little importance to you, but rest assured as soon as you have to look at CI logs or if you use the command line in your workflow a lot as I do, this is pure bliss.\nInterestingly, this marks only the first step in a series of upcoming MSBuild UX improvements: \u0026ldquo;We hope to use this logger as the foundation for a new batch of UX improvements for MSBuild, including aspects like progress reporting and structured errors in the future.\u0026rdquo; Color me excited.\n","permalink":"https://nicolaiarocci.com/a-new-modern-msbuild-terminal-logger-is-coming-with-dotnet-8/","summary":"\u003cp\u003eThe \u003ca href=\"https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-4/\"\u003elatest .NET 8 Preview\u003c/a\u003e is out, and I love that they\u0026rsquo;re finally changing how MSBuild logs are printed to the terminal.\nThe new Terminal Logger ditches the infamous \u0026ldquo;wall of text\u0026rdquo; that is a nightmare to parse in favor of a cleaner, leaner,\nand more organized output.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOnce enabled, the new logger shows you the restore phase, followed by the build phase. During each phase, the\ncurrently-building projects are at the bottom of the terminal, and each building project tells you both the MSBuild\nTarget currently being built, as well as the amount of time spent on that target.\u003c/p\u003e","title":"A new modern MSBuild terminal logger is coming with .NET 8"},{"content":"Alessandro Barbaglia\u0026rsquo;s La mossa del matto (The fool\u0026rsquo;s move) tries to be three things in one: the life story of chess champion Bobby Fischer, a reconciliation dialogue between author and father, who died too soon, as well the tracing of a daring parallel between Fischer\u0026rsquo;s relationship with Russian champion Boris Spasskij and that of Achilles and Ulysses of Homeric memory. In our neck of the woods, we say that too much is crippling, and this work runs the risk.\nI appreciated the accurate and skillfully woven account of Bobby Fischer\u0026rsquo;s incredibly successful yet troubled life. The intersection between Fischer\u0026rsquo;s biography and actual episodes of the author\u0026rsquo;s and his dad\u0026rsquo;s lives works well, too. The attempt to bind the Fischer/Spasskij relationship to that of Achilles and Ulysses, albeit intriguing and often fitting, seems unnecessary, always risking breaking the fragile balance between the three narratives. Somehow Barbaglia manages to keep it all together.\nBefore getting into this book, I knew very little about Bobby Fischer. He\u0026rsquo;s known as the American genius who beat the unbeatable Russians at chess, but there\u0026rsquo;s much more to him than that, and this book does a great job at telling.\n","permalink":"https://nicolaiarocci.com/book-review-la-mossa-del-matto-the-fools-move/","summary":"\u003cp\u003eAlessandro Barbaglia\u0026rsquo;s \u003cem\u003eLa mossa del matto (The fool\u0026rsquo;s move)\u003c/em\u003e tries to be three things in one: the life story of chess\nchampion Bobby Fischer, a reconciliation dialogue between author and father, who died too soon, as well the tracing of a\ndaring parallel between Fischer\u0026rsquo;s relationship with Russian champion Boris Spasskij and that of Achilles and Ulysses of\nHomeric memory. In our neck of the woods, we say that too much is crippling, and this work runs the risk.\u003c/p\u003e","title":"Book Review: La Mossa del Matto (The Fool's Move)"},{"content":"Adorable, functional, often internet-connected desktop bots like those below are hand-crafted by Mohit Bhoite in San Francisco, California.\nIt pleasantly surprised me that they\u0026rsquo;re built as a purely artistic expression. All sculptures (as Mohit rightfully refers to them) are unique and not for sale. Check them all out on his website (via).\n","permalink":"https://nicolaiarocci.com/tiny-electronic-desktop-sculptures/","summary":"\u003cp\u003eAdorable, functional, often internet-connected desktop bots like those below are hand-crafted by Mohit Bhoite in San\nFrancisco, California.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/bhoite-sculptures-01.jpg\"\u003e\n\u003cimg loading=\"lazy\" src=\"/images/bhoite-sculptures-02.jpg\"\u003e\nIt pleasantly surprised me that they\u0026rsquo;re built as a purely artistic expression. All sculptures (as Mohit rightfully refers\nto them) are unique and not for sale. Check them all out on \u003ca href=\"https://www.bhoite.com\"\u003ehis website\u003c/a\u003e \u003cem\u003e(\u003ca href=\"https://kottke.org/23/05/tiny-electronic-desktop-sculptures\"\u003evia\u003c/a\u003e)\u003c/em\u003e.\u003c/p\u003e","title":"Tiny electronic desktop sculptures"},{"content":"Today I learned about a precious little macOS command line tool, networkQuality.\nThe networkQuality tool is a built-in tool released in macOS Monterey that can help diagnose network issues and measure network performance.\nUsage:\nnetworkQuality -v Example output:\n==== SUMMARY ==== Uplink capacity: 44.448 Mbps (Accuracy: High) Downlink capacity: 162.135 Mbps (Accuracy: High) Responsiveness: Low (73 RPM) (Accuracy: High) Idle Latency: 50.125 milliseconds (Accuracy: High) Interface: en0 Uplink bytes transferred: 69.921 MB Downlink bytes transferred: 278.340 MB Uplink Flow count: 16 Downlink Flow count: 12 Start: 13/05/2023, 15:04:13 End: 13/05/2023, 15:04:27 OS Version: Version 13.3.1 (a) (Build 22E772610a) It supports Apple\u0026rsquo;s Private Relay, offers some configuration options and allows setting up your own server. More info here.\n","permalink":"https://nicolaiarocci.com/macos-networkquality-tool/","summary":"\u003cp\u003eToday I learned about a precious little macOS command line tool, \u003ccode\u003enetworkQuality\u003c/code\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe networkQuality tool is a built-in tool released in macOS Monterey that can help diagnose network issues and\nmeasure network performance.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eUsage:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enetworkQuality -v\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eExample output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e==== SUMMARY ====\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUplink capacity: 44.448 Mbps (Accuracy: High)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDownlink capacity: 162.135 Mbps (Accuracy: High)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eResponsiveness: Low (73 RPM) (Accuracy: High)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eIdle Latency: 50.125 milliseconds (Accuracy: High)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eInterface: en0\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUplink bytes transferred: 69.921 MB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDownlink bytes transferred: 278.340 MB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUplink Flow count: 16\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDownlink Flow count: 12\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eStart: 13/05/2023, 15:04:13\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eEnd: 13/05/2023, 15:04:27\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eOS Version: Version 13.3.1 (a) (Build 22E772610a)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt supports Apple\u0026rsquo;s Private Relay, offers some configuration options and allows setting up your own server. More info\n\u003ca href=\"https://cyberhost.uk/the-hidden-macos-speedtest-tool-networkquality/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"macOS networkQuality tool"},{"content":"Daniil Charms was considered a children\u0026rsquo;s author and could not stand children all his life. While his whimsical fairy tales populated illustrated books and magazines, giving him something to live on in the silence of his room, he also feverishly wrote tales for adults, equally imaginative but inhabited by an excruciating melancholy, as in fairy tales went wrong.\nAt the dawn of the USSR, this desperate fantasy of his was tolerable only if it was confined where it was least dangerous, in children\u0026rsquo;s literature. Back then, adults were the children to be motivated and consoled with uplifting novels aimed at glorifying the rise of the proletariat, a literature Charms refused to adhere to.\nThus, while socialist realism raged outside, Daniil Charms uncovered impossible worlds in the folds of reality. Gossipy older women tipping over the window, curious people breaking their watches trying to seize the moment, men buried alive rejoicing at the beautiful funeral, birds equipped with teeth (or maybe not), deadly challenges at cucumber blows, caterpillars with their snouts covered in dust.\nThis book is an arsenal of incredible stories circling for a long time, only clandestinely in samizdats, illegal books recopied by hand or typed in secret. Credit goes to Paolo Nori, who revealed to the Italian readers the greatness of this pioneer of the literature of the absurd. Nori selects and assembles hundreds of narrative fragments, alternating with excerpts from the diaries, in which Charms lays bare his tragic everyday life. The fresco of tightrope walking characters and unbelievable animals is thus interwoven with the minute account of a sour life lived on the fringes of literary society until the gloomy eye of the Party rests on this wacky dissident.\nThe Soviet Union tried multiple times to erase Charms by letting him die in an asylum. They finally succeeded on February 2, 1942, when famine killed him in the psychiatric clinic in which he was confined.\nMost of these things were written when socialist realism triumphed around, and their author knew very well that he could never publish them in his lifetime. Yet, by reading his diaries, all this \u0026ldquo;nonsense,\u0026rdquo; as Charmes defined his crazy writing assembly, clearly emerges as the most crucial thing in his life.\nI found the book cover excellent and perfectly fit, with this dandy figure seemingly strolling amongst imposing orthodox buildings. According to Wikipedia, Charms loved to appear dressed like an English dandy and with a calabash pipe.\n","permalink":"https://nicolaiarocci.com/book-review-disastri/","summary":"\u003cp\u003eDaniil Charms was considered a children\u0026rsquo;s author and could not stand children all his life. While his whimsical fairy\ntales populated illustrated books and magazines, giving him something to live on in the silence of his room, he also\nfeverishly wrote tales for adults, equally imaginative but inhabited by an excruciating melancholy, as in fairy tales went\nwrong.\u003c/p\u003e\n\u003cp\u003eAt the dawn of the USSR, this desperate fantasy of his was tolerable only if it was confined where it was least\ndangerous, in children\u0026rsquo;s literature. Back then, adults were the children to be motivated and consoled with uplifting\nnovels aimed at glorifying the rise of the proletariat, a literature Charms refused to adhere to.\u003c/p\u003e","title":"Book Review: Disastri (Disasters)"},{"content":"I read a well-researched story about Redis and its creator Salvatore Sanfilippo, also known as antirez. I was already familiar with many details as I have been following him since OKNotizie and Segnalo, of which I was a user. At the time, as a user, I exchanged a few emails with Salvatore, whom years later I had the pleasure of meeting in person, as we were both speakers at several conferences.\nOn his website, he apologizes for being unable to respond to all the mail he receives. Well, my experience is the opposite. I remember one of our several mail exchanges. In 2013 I asked him for git help, and minutes later, he replied with a custom script he had put together for dealing with that exact problem. Later on, as I was working on a git presentation for Codemotion (I think), I fired a quick email asking permission to feature his script in my session. The green light landed seconds later. Salvatore is the epitome of kindness and helpfulness.\nAs if his pronounced computer skills were not enough, with his latest sci-fi novel Wohpe (on my reading list), he proves to be endowed with the most diverse capabilities.\nAnyway, here\u0026rsquo;s the antirez \u0026amp; Redis story I mentioned. Worth reading it.\n","permalink":"https://nicolaiarocci.com/story-of-redis-and-its-creator-antirez/","summary":"\u003cp\u003eI read a well-researched story about Redis and its creator Salvatore Sanfilippo, also known as antirez. I was already\nfamiliar with many details as I have been following him since OKNotizie and Segnalo, of which I was a user. At the time,\nas a user, I exchanged a few emails with Salvatore, whom years later I had the pleasure of meeting in person, as we were\nboth speakers at several conferences.\u003c/p\u003e","title":"Story of Redis and its creator antirez"},{"content":"Last weekend I attended Eroica 2023, a motorcycling event organized by the Italian branch of the Triumph Owners Motorcycle Club I currently preside. We rode the Eroica route, a legendary gravel bicycle race that runs through the most beautiful territories of the Tuscan Chianti region. It was glorious. The weather was perfect, the food was incredible, and the close-knit party of thirty T.O.M.C.C. bikers had great fun. We all ended up covered in an astonishing amount of powder.\nEroica 2023 was the first in a series of events we\u0026rsquo;ll run throughout the summer and fall. I\u0026rsquo;m looking forward to the next ones.\n","permalink":"https://nicolaiarocci.com/motorcycling-the-tuscan-chianti/","summary":"\u003cp\u003eLast weekend I attended \u003cem\u003eEroica 2023\u003c/em\u003e, a motorcycling event organized by the Italian branch of the \u003ca href=\"https:/tomccitalia.org\"\u003eTriumph Owners\nMotorcycle Club\u003c/a\u003e I currently preside. We rode the \u003ca href=\"https://eroica.cc/en\"\u003eEroica\u003c/a\u003e route, a legendary gravel bicycle race that runs\nthrough the most beautiful territories of the Tuscan Chianti region. It was glorious. The weather was perfect, the food\nwas incredible, and the close-knit party of thirty T.O.M.C.C. bikers had great fun. We all ended up covered in an\nastonishing amount of powder.\u003c/p\u003e","title":"Motorcycling the Tuscan Chianti"},{"content":"Minimalist News is the first LLM project that excites me but in a nervous way. Quoting the About page:\nWe only publish significant news. To find them we use AI (ChatGPT-4) to read and analyze 1000 top news every day. For each article it estimates magnitude, scale, potential and credibility. Then we combine these estimates to get the final Significance score from 0 to 10. And now the best part: We\u0026rsquo;ll only send you the news scored 6.5 or higher. Sometimes it\u0026rsquo;s 5 articles, sometimes 2, sometimes 8. And sometimes — none at all. But one thing is constant — you can be sure that you haven\u0026rsquo;t missed anything important.\nThe concept is brilliant and well executed, but I can\u0026rsquo;t help but feel uncomfortable at the notion of an AI curating news for me. Yet, this is the best use case for LLM/AI I\u0026rsquo;ve seen until now.\n","permalink":"https://nicolaiarocci.com/ai-curated-minimalist-news/","summary":"\u003cp\u003e\u003ca href=\"https://www.newsminimalist.com\"\u003eMinimalist News\u003c/a\u003e is the first LLM project that excites me but in a nervous way. Quoting the About page:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe only publish significant news. To find them we use AI (ChatGPT-4) to read and analyze 1000 top news every day. For\neach article it estimates magnitude, scale, potential and credibility. Then we combine these estimates to get the\nfinal Significance score from 0 to 10. And now the best part: We\u0026rsquo;ll only send you the news scored 6.5 or higher.\nSometimes it\u0026rsquo;s 5 articles, sometimes 2, sometimes 8. And sometimes — none at all. But one thing is constant — you can\nbe sure that you haven\u0026rsquo;t missed anything important.\u003c/p\u003e","title":"AI-curated minimalist news"},{"content":"Fattura Elettronica for .NET v3.4.8 was released on NuGet today. The Fattura Elettronica project allows for the validation and de/serialization of electronic invoices following the Italian Revenue Agency standards. As with the previous one, this release also addresses a small undocumented behavior in validating the invoice. See the relevant ticket for the details.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v3.4.8/","summary":"\u003cp\u003eFattura Elettronica for .NET v3.4.8 was \u003ca href=\"https://www.nuget.org/packages/FatturaElettronica/3.4.8\"\u003ereleased\u003c/a\u003e on NuGet today. The \u003ca href=\"https://fatturaelettronicaopensource.org/\"\u003eFattura Elettronica\u003c/a\u003e project allows for the\nvalidation and de/serialization of electronic invoices following the Italian Revenue Agency standards. As with the\nprevious one, this release also addresses a small undocumented behavior in validating the invoice. See the \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET/issues/396\"\u003erelevant\nticket\u003c/a\u003e for the details.\u003c/p\u003e","title":"FatturaElettronica for .NET v3.4.8"},{"content":"Land and Sea is an essay in short story form written in 1942 by Carl Schmitt. Subtitled \u0026ldquo;A consideration of world history told to my daughter Anna,\u0026rdquo; this essay recounts and summarizes the geo-historical-legal evolution of our planet since the discovery of the New World. The originality of the work lies in the author\u0026rsquo;s identification of the Earth-Sea dichotomy as the driving force of human history.\nI went into this book knowing very little about the author, Carl Schmitt, and the contents. From the first pages, I considered it a bizarre work, wondering whether a solid basis existed behind some of the assumptions and events narrated. Quoting the back cover of my Italian edition (Adelphi):\nIn a dazzling interweaving of historical interpretation and political theory, mythography and theology, philosophy and esotericism, the great jurist thus enters a fascinating territory on the borderline between speculation and imagination, where the search for the \u0026ldquo;elemental\u0026rdquo; goes \u0026ldquo;to the threshold of eschatology.\u0026rdquo; With a few strokes, Schmitt traces millennia of history, unraveling its invisible plot, until he arrives at the decisive event: that \u0026ldquo;planetary spatial revolution\u0026rdquo; from which the nomos of modern Europe was born. To then look beyond - and foreshadow, with prophecy, the scenarios of the future world where we will be able to recognize our present.\nLand and Sea is an essay written in 1942 by a then-eminent and internationally acclaimed jurist, who convincingly joined the german nazi party in 1933. Historical events in the text are inevitably narrated from an opinionated (and sometimes distorted) point of view. This bizarre work left me unconvinced. I don\u0026rsquo;t regret reading it, though.\n","permalink":"https://nicolaiarocci.com/book-review-land-and-sea/","summary":"\u003cp\u003eLand and Sea is an essay in short story form written in 1942 by Carl Schmitt. Subtitled \u0026ldquo;A consideration of world\nhistory told to my daughter Anna,\u0026rdquo; this essay recounts and summarizes the geo-historical-legal evolution of our planet\nsince the discovery of the New World. The originality of the work lies in the author\u0026rsquo;s identification of the Earth-Sea\ndichotomy as the driving force of human history.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Land and Sea book cover\" loading=\"lazy\" src=\"/images/terra-e-mare-book-cover.jpeg#center\"\u003e\nI went into this book knowing very little about the author, Carl Schmitt, and the contents. From the first pages, I\nconsidered it a bizarre work, wondering whether a solid basis existed behind some of the assumptions and events\nnarrated. Quoting the back cover of my Italian edition (Adelphi):\u003c/p\u003e","title":"Book Review: Land and Sea"},{"content":"A fascinating article surfaced on Nautilus last week. Mary-Jane Rubenstein, a professor of religion and science in society at Wesleyan University, shares her concerns about the technical strides and aspirations of Elon Musk\u0026rsquo;s SpaceX, the company\u0026rsquo;s mission to enable thousands of people to live on Mars, and the ethics of terraforming the planet to be more like Earth. What\u0026rsquo;s intriguing, though, is Rubenstein\u0026rsquo;s thoughts about the religious underpinnings of the United States space program and how even modern science is still hostage to imperialistic Christian ideas.\n“I started realizing that religion shows up in the natural sciences and the contemporary world in a funny and alarming way,” Rubenstein said. “Because sciences tend to think of themselves as something as far away as possible from religion, as having freed themselves from God. To an extent that’s true. But in the process, they tend to generate these big stories, big mythologies, about the origins and the ends of the world. And conjure characters who are heroes, gods, and monsters. I started tracking the way that the natural sciences themselves generate new ways of understanding the world that, a couple centuries ago, we would have called religion.”\nMore here.\n","permalink":"https://nicolaiarocci.com/the-religious-aspects-of-the-corporate-space-race/","summary":"\u003cp\u003eA fascinating article surfaced on Nautilus last week. Mary-Jane Rubenstein, a professor of religion and science in\nsociety at Wesleyan University, shares her concerns about the technical strides and aspirations of Elon Musk\u0026rsquo;s SpaceX,\nthe company\u0026rsquo;s mission to enable thousands of people to live on Mars, and the ethics of terraforming the planet to be\nmore like Earth. What\u0026rsquo;s intriguing, though, is Rubenstein\u0026rsquo;s thoughts about the religious underpinnings of the United\nStates space program and how even modern science is still hostage to imperialistic Christian ideas.\u003c/p\u003e","title":"The religious aspects of the corporate space race"},{"content":" Not to know what happened before one was born is always to be a child.\nI found this Cicero quote on Lapham\u0026rsquo;s Quarterly\u0026rsquo;s about page. A little research dug out the supposedly original version found in Orator Ad M. Brutum (46 BC). It goes like this:\nTo be ignorant of what occurred before you were born is to remain always a child. For what is the worth of human life, unless it is woven into the life of our ancestors by the records of history?\n","permalink":"https://nicolaiarocci.com/quoting-cicero/","summary":"\u003cblockquote\u003e\n\u003cp\u003eNot to know what happened before one was born is always to be a child.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI found this Cicero quote on \u003cem\u003eLapham\u0026rsquo;s Quarterly\u003c/em\u003e\u0026rsquo;s \u003ca href=\"https://www.laphamsquarterly.org/about\"\u003eabout page\u003c/a\u003e. A little \u003ca href=\"https://en.wikiquote.org/wiki/Cicero\"\u003eresearch\u003c/a\u003e dug out the supposedly\noriginal version found in \u003cem\u003eOrator Ad M. Brutum\u003c/em\u003e (46 BC). It goes like this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo be ignorant of what occurred before you were born is to remain always a child. For what is the worth of human life,\nunless it is woven into the life of our ancestors by the records of history?\u003c/p\u003e","title":"Quoting Cicero"},{"content":"Medieval Callings comprises eleven essays by internationally renowned medieval historians. Somewhat deceptively, only Jacques Le Goff\u0026rsquo;s prestigious name appears on the front page, as he authored the introductive essay and handpicked and curated the collection. Each piece presents a nuanced profile of a significant social or professional Middle Ages group. Warrior knights, monks, high churchmen, criminals, lepers, shepherds, artists, and prostitutes, all prominent figures of medieval society, are depicted here with great detail.\nThe style varies according to the piece (and its author); some will inevitably be more fluent than others. Fundamental is the introductory essay by Le Goff himself, which provides a useful general overview of the work and also clarifies its stylistic choices. The Monk essay was crucial to me, as it surfaced abbeys and monasteries\u0026rsquo; relevance and incredible influence on medieval society.\nMedieval Callings\u0026rsquo; innovative approach offers a valuable and intriguing perspective on the complex social dynamics of feudal Europe. The work shows signs of age, having passed more than 30 years since its publication. There are probably newer, modern studies that improve on these texts, but it still serves as a fundamental resource for uneducated readers such as myself.\n","permalink":"https://nicolaiarocci.com/book-review-medieval-callings/","summary":"\u003cp\u003e\u003cem\u003eMedieval Callings\u003c/em\u003e comprises eleven essays by internationally renowned medieval historians. Somewhat deceptively, only\nJacques Le Goff\u0026rsquo;s prestigious name appears on the front page, as he authored the introductive essay and handpicked and\ncurated the collection. Each piece presents a nuanced profile of a significant social or professional Middle Ages group.\nWarrior knights, monks, high churchmen, criminals, lepers, shepherds, artists, and prostitutes, all prominent figures of\nmedieval society, are depicted here with great detail.\u003c/p\u003e","title":"Book Review: Medieval Callings"},{"content":"Pitchfork has a great piece on Sun Ra and his legacy. It\u0026rsquo;s worth reading if you\u0026rsquo;re a fan, even more so if you know nothing about him.\nBut what Sun Ra had done, and done best, was reminding earthlings everywhere that he wasn’t mortal. He was a signifier of a life beyond the reality of this one. He was a visual reassurance of the presence of another world. He brought the cosmos to the streets, and, most importantly, he was a reminder that one does not have to subscribe to the status quo—musically, stylistically, politically, ideologically.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-interstellar-style-of-sun-ra/","summary":"\u003cp\u003ePitchfork has a great piece on Sun Ra and his legacy. It\u0026rsquo;s worth reading if you\u0026rsquo;re a fan, even more so if you know\nnothing about him.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBut what Sun Ra had done, and done best, was reminding earthlings everywhere that he wasn’t mortal. He was a\nsignifier of a life beyond the reality of this one. He was a visual reassurance of the presence of another world. He\nbrought the cosmos to the streets, and, most importantly, he was a reminder that one does not have to subscribe to\nthe status quo—musically, stylistically, politically, ideologically.\u003c/p\u003e","title":"The Interstellar Style of Sun Ra"},{"content":"In the mid-to-late 80s, my excitement used to culminate by the end of the month when BYTE\u0026rsquo;s new issue would hit the newsstands1. In my small Italian hometown, only one, sometimes two, newsstands would sometime get a copy (BYTE was published in the US and copies sent abroad were scarce; only major, close-to-the-train-station stands had a chance to receive it). I wasn\u0026rsquo;t the only kid in town interested in that elusive one issue; I had an anonymous competitor. The race was on every third week of the month, give or take. You see, the thing is, back then, computer magazines were the only source of reliable, precious information on everything hardware and software. I could barely read English at that age. Yet, I spent whole afternoons stubbornly reading the magazine cover to cover, probably understanding only fifty percent of its content. Rather than at school, I learned most of my English by reading computer magazines.\nThis morning, these memories were brought back to me while reading The End of Computer Magazines in America by Harry McCracken. He was involved with the computer magazine industry in its golden age, so the article has exciting insights. I also appreciated the several former colleagues and competitors who commented, helping frame the period. Computer magazines are dead indeed, and it\u0026rsquo;s a bittersweet sensation. Quoting McCracken\u0026rsquo;s closing words:\nI do remain grateful that computer magazines existed. Their time has passed—but what a time it was.\nThis is a story I probably already mentioned on this site, but hey, it\u0026rsquo;s my site; I can afford to repeat myself. [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-end-of-computer-magazines-in-america-and-elsewhere/","summary":"\u003cp\u003eIn the mid-to-late 80s, my excitement used to culminate by the end of the month when BYTE\u0026rsquo;s new issue would hit the\nnewsstands\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. In my small Italian hometown, only one, sometimes two, newsstands would sometime get a copy (BYTE was\npublished in the US and copies sent abroad were scarce; only major, close-to-the-train-station stands had a chance to\nreceive it). I wasn\u0026rsquo;t the only kid in town interested in that elusive one issue; I had an anonymous competitor. The race\nwas on every third week of the month, give or take. You see, the thing is, back then, computer magazines were the only\nsource of reliable, precious information on everything hardware and software. I could barely read English at that age.\nYet, I spent whole afternoons stubbornly reading the magazine cover to cover, probably understanding only fifty percent\nof its content. Rather than at school, I learned most of my English by reading computer magazines.\u003c/p\u003e","title":"The end of computer magazines in America (and elsewhere)"},{"content":"Noam Chomsky\u0026rsquo;s essays are always worth reading, no matter the topic he decides to address, because, well, frankly, he\u0026rsquo;s one of the brightest and most well-informed minds of our time. His criticism of OpenAI\u0026rsquo;s ChatGPT makes no exception. It does an excellent job of explaining how LLMs work, the differences with human reasoning, and why, in his opinion, the advent of artificial general intelligence is a long way to go, if ever.\nHowever useful these programs may be in some narrow domains (they can be helpful in computer programming, for example, or in suggesting rhymes for light verse), we know from the science of linguistics and the philosophy of knowledge that they differ profoundly from how humans reason and use language. These differences place significant limitations on what these programs can do, encoding them with ineradicable defects.\nMore here.\n","permalink":"https://nicolaiarocci.com/noam-chomsky-on-chatgpt/","summary":"\u003cp\u003eNoam Chomsky\u0026rsquo;s essays are always worth reading, no matter the topic he decides to address, because, well, frankly, he\u0026rsquo;s\none of the brightest and most well-informed minds of our time. His criticism of OpenAI\u0026rsquo;s ChatGPT makes no exception. It\ndoes an excellent job of explaining how LLMs work, the differences with human reasoning, and why, in his opinion, the\nadvent of artificial general intelligence is a long way to go, if ever.\u003c/p\u003e","title":"Noam Chomsky on ChatGPT"},{"content":"I\u0026rsquo;m just back from reading Programmer Interrupted: The Real Cost of Interruption and Context Switching, an interesting short piece in which I learned about at least two new things.\nFirst, The Parable of the Two Watchmakers, introduced by Nobel Prize winner Herbert Simon, describes the complex relationship between sub-systems and their larger wholes. In the context of the article, it helps explain, even for non-programmers, the cost of an interruption. It also hints at a possible mitigation technique:\nThere once were two watchmakers, named Hora and Tempus, who made very fine watches. The phones in their workshops rang frequently and new customers were constantly calling them. However, Hora prospered while Tempus became poorer and poorer. In the end, Tempus lost his shop. What was the reason behind this?\nThe watches consisted of about 1000 parts each. The watches that Tempus made were designed such that, when he had to put down a partly assembled watch, it immediately fell into pieces and had to be reassembled from the basic elements. Hora had designed his watches so that he could put together sub-assemblies of about ten components each, and each sub-assembly could be put down without falling apart. Ten of these sub-assemblies could be put together to make a larger sub-assembly, and ten of the larger sub-assemblies constituted the whole watch.\nSecond, larger computer screens help a programmer keep his mental model (and context) together. I\u0026rsquo;m still deciding on this one. Focusing on a single window or not having a lot of cruft around the screen helps solve complex code for me. But toss anything John Carmack at me, and I will abide.\nThe 640 x 480 resolution was the standard from 1990 to around 1996, but it was possible to get more screen real estate back then. There is a famous photo of John Carmack working on Quake using a 28-inch 1080p monitor in 1995.\nWhy did he choose 45 kg monitor for about $10k in 1995? The higher screen real estate allowed for more code to be visible at once, resulting in a more dense context. Productivity greatly increases when you have the ability to store and access more detailed context. It\u0026rsquo;s like having a larger desk to hold documents when studying for an exam or doing any task that requires the use of multiple sources of information from a common domain, such as solving puzzles.\nThe brilliant comic that opens the article is the perfect TL;DR for the Watchmakers parable.\n","permalink":"https://nicolaiarocci.com/the-real-cost-of-interruption/","summary":"\u003cp\u003eI\u0026rsquo;m just back from reading \u003ca href=\"https://contextkeeper.io/blog/the-real-cost-of-an-interruption-and-context-switching/\"\u003eProgrammer Interrupted: The Real Cost of Interruption and Context Switching\u003c/a\u003e, an interesting\nshort piece in which I learned about at least two new things.\u003c/p\u003e\n\u003cp\u003eFirst, \u003cem\u003eThe Parable of the Two Watchmakers\u003c/em\u003e, introduced by Nobel Prize winner Herbert Simon, describes the complex\nrelationship between sub-systems and their larger wholes. In the context of the article, it helps explain, even for\nnon-programmers, the cost of an interruption. It also hints at a possible mitigation technique:\u003c/p\u003e","title":"The real cost of interruption"},{"content":"Chris Moran, the Guardian’s head of editorial innovation:\nLast month one of our journalists received an interesting email. A researcher had come across mention of a Guardian article, written by the journalist on a specific subject from a few years before. But the piece was proving elusive on our website and in search. Had the headline perhaps been changed since it was launched? Had it been removed intentionally from the website because of a problem we’d identified? Or had we been forced to take it down by the subject of the piece through legal means?\nThe reporter couldn’t remember writing the specific piece, but the headline certainly sounded like something they would have written. It was a subject they were identified with and had a record of covering. Worried that there may have been some mistake at our end, they asked colleagues to go back through our systems to track it down. Despite the detailed records we keep of all our content, and especially around deletions or legal issues, they could find no trace of its existence.\nWhy? Because it had never been written.\nMore here.\n","permalink":"https://nicolaiarocci.com/chatgpt-is-making-up-fake-guardian-articles/","summary":"\u003cp\u003eChris Moran, the Guardian’s head of editorial innovation:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eLast month one of our journalists received an interesting email. A researcher had come across mention of a Guardian\narticle, written by the journalist on a specific subject from a few years before. But the piece was proving elusive on\nour website and in search. Had the headline perhaps been changed since it was launched? Had it been removed\nintentionally from the website because of a problem we’d identified? Or had we been forced to take it down by the\nsubject of the piece through legal means?\u003c/p\u003e","title":"ChatGPT is making up fake Guardian articles"},{"content":"Fattura Elettronica for .NET v3.4.7 was released on NuGet today. The Fattura Elettronica project allows for the validation and de/serialization of electronic invoices adhering to the canon defined by the Italian Revenue Agency.\nThis release refines how the one-cent tolerance is accounted for in validation checks of types 00421 and 00423. As is often the case, there are subtle differences between the theoretical implementation defined in the official specs and the actual validation implemented by the same Agency that released said specs. See the relevant ticket for the details.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v3.4.7/","summary":"\u003cp\u003eFattura Elettronica for .NET v3.4.7 was \u003ca href=\"https://www.nuget.org/packages/FatturaElettronica/3.4.7\"\u003ereleased\u003c/a\u003e on NuGet today. The \u003ca href=\"https://fatturaelettronicaopensource.org\"\u003eFattura Elettronica project\u003c/a\u003e allows for\nthe validation and de/serialization of electronic invoices adhering to the canon defined by the Italian Revenue Agency.\u003c/p\u003e\n\u003cp\u003eThis release refines how the one-cent tolerance is accounted for in validation checks of types 00421 and 00423. As is\noften the case, there are subtle differences between the theoretical implementation defined in the official specs and\nthe actual validation implemented by the same Agency that released said specs. See the \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET/issues/394\"\u003erelevant ticket\u003c/a\u003e for the\ndetails.\u003c/p\u003e","title":"FatturaElettronica for .NET v3.4.7"},{"content":"I saw a wolf: that\u0026rsquo;s the phrase Ulf, a hunter and former forestry inspector now in his seventies, has been brooding, unable to confess to anyone since he spotted a majestic specimen at dawn on the first day of the year. Something clicks inside him, and Ulf, one of the most respected men in the village in deep Sweden where he lives, feels an increasingly solid and intimate connection with the creature. They both are hunters and loners, but why does he feel like an intruder? Even the memory of his early experiences in the woods with his father, once a source of joy, changes in flavor, just as pride in his hunting diaries fades, as they now only appear as a cold kill list. And his wife\u0026rsquo;s dry and practical empathy, their comfortable daily routine of love and habits, the faithful companionship of his dog Zenta and the many chases made with her in the snow are not enough: Ulf feels as lost among his stuffed trophies as among the traditions and customs of a community whose violence he now perceives. A society that, he will discover to his cost, is quick at oppressing when one is not aligned with its most deeply rooted values.\nThe tension of the stakeouts, the contemplation of the woods in the long waits, the excitement of a trail to follow, the scents and sounds of a wilderness where everyone is alone in front of himself: Being Wolf tells of a predator in harmony with his world and of the human who, inspired by it, questions and rethinks his place in nature. I found two other themes well addressed: the hate and malice that often lurk beneath the surface of small, seemingly idyllic communities and the comfort and serenity that a relationship of mutual trust, respect and love offers to aged partners who stubbornly insist on loving and respect each other despite adversity, misunderstanding and betrayal.\nThis novel has yet to see an English edition, so as for the English title, I made it up from Essere Lupo of the Italian edition. These quick notes offer me a chance to express my gratitude to Iperborea for their incredible work in publishing so many exceptionally translated Northen-Europe works over the years.\n","permalink":"https://nicolaiarocci.com/book-review-essere-lupo-being-wolf/","summary":"\u003cp\u003eI saw a wolf: that\u0026rsquo;s the phrase Ulf, a hunter and former forestry inspector now in his seventies, has been brooding,\nunable to confess to anyone since he spotted a majestic specimen at dawn on the first day of the year. Something clicks\ninside him, and Ulf, one of the most respected men in the village in deep Sweden where he lives, feels an increasingly\nsolid and intimate connection with the creature. They both are hunters and loners, but why does he feel like an\nintruder? Even the memory of his early experiences in the woods with his father, once a source of joy, changes in\nflavor, just as pride in his hunting diaries fades, as they now only appear as a cold kill list. And his wife\u0026rsquo;s dry and\npractical empathy, their comfortable daily routine of love and habits, the faithful companionship of his dog Zenta and\nthe many chases made with her in the snow are not enough: Ulf feels as lost among his stuffed trophies as among the\ntraditions and customs of a community whose violence he now perceives. A society that, he will discover to his cost, is\nquick at oppressing when one is not aligned with its most deeply rooted values.\u003c/p\u003e","title":"Book Review: Essere Lupo (Being Wolf)"},{"content":"A dad reunites with his three kids, ages 26, 23 and 15, and they decide to do a D\u0026amp;D campaign together. Now, this alone would be enough to catch my attention: I\u0026rsquo;ve been an avid D\u0026amp;D player as a boy, my older son has been playing too, and I always dreamed of playing one day with my three kids and maybe my wife. But there\u0026rsquo;s more to this story. Tenzin, the youngest son and long-time tabletop RPG gamer and DM, proposes to let OpenAI\u0026rsquo;s ChatGPT 4 be their DM.\nI feel like the transcript speaks for itself, but before reproducing it I will state for the historical record that my mind is still exploding from from all the inevitable innovation and legal controversies this kind of usage of LLM (Large Language Model) technologies will provoke in the coming months and years. Software development for this kind of use case will never be the same again.\nThe whole gaming session\u0026rsquo;s transcript is available here.\n","permalink":"https://nicolaiarocci.com/playing-dnd-with-chatgpt-as-the-dm/","summary":"\u003cp\u003eA dad reunites with his three kids, ages 26, 23 and 15, and they decide to do a D\u0026amp;D campaign together. Now, this alone\nwould be enough to catch my attention: I\u0026rsquo;ve been an avid D\u0026amp;D player as a boy, my older son has been playing too, and I\nalways dreamed of playing one day with my three kids and maybe my wife. But there\u0026rsquo;s more to this story. Tenzin, the\nyoungest son and long-time tabletop RPG gamer and DM, proposes to let OpenAI\u0026rsquo;s ChatGPT 4 be their DM.\u003c/p\u003e","title":"Playing D\u0026D with ChatGPT as the DM"},{"content":"Steve Sanderson is experimenting again, and when Steve plays with his toys, I pay attention. In a new video on his YouTube channel, Steve introduces an experimental new .NET package that allows the creation of isolated instances of the .NET runtime that will safely run code in a sandbox.\n","permalink":"https://nicolaiarocci.com/running-dotnet-code-in-an-isolated-sandbox/","summary":"\u003cp\u003eSteve Sanderson is experimenting \u003ca href=\"/a-quick-preview-of-the-blazor-united-prototype-for-.net8/\"\u003eagain\u003c/a\u003e, and when Steve plays with his toys, I pay attention. In a new video on his\nYouTube channel, Steve introduces an experimental new .NET package that allows the creation of isolated instances of the\n.NET runtime that will safely run code in a sandbox.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Running .NET code in an isolated sandbox"},{"content":"I know this is coming in a bit late; apologies, but\u0026hellip; We\u0026rsquo;re doing a Web Performance meetup at DevRomagna today. Andrea \u0026lsquo;Verlok\u0026rsquo; Verlicchi, a Google Developer Expert specialing in web performance, will share his extensive experience in web performance and provide practical, high-impact, and easily applicable tips on improving performance in 2023.\nInfo and signup here.\n","permalink":"https://nicolaiarocci.com/web-performance-meetup-at-devromagna/","summary":"\u003cp\u003eI know this is coming in a bit late; apologies, but\u0026hellip; We\u0026rsquo;re doing a Web Performance meetup at \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/291862771/\"\u003eDevRomagna\u003c/a\u003e today. Andrea\n\u0026lsquo;Verlok\u0026rsquo; Verlicchi, a Google Developer Expert specialing in web performance, will share his extensive experience in web\nperformance and provide practical, high-impact, and easily applicable tips on improving performance in 2023.\u003c/p\u003e\n\u003cp\u003eInfo and signup \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/291862771/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Web Performance meetup at DevRomagna"},{"content":"John Carmack, while advising on the advent of AI and its influence on the Software Engineering profession:\nSoftware is just a tool to help accomplish something for people \u0026ndash; many programmers never understood that. Keep your eyes on the delivered value, and don\u0026rsquo;t over-focus on the specifics of the tools.\nI have often fallen into the over-focusing trap in my career. The whole thread is well worth reading:\n(via)\n","permalink":"https://nicolaiarocci.com/quoting-john-carmack/","summary":"\u003cp\u003eJohn Carmack, while advising on the advent of AI and its influence on the Software Engineering profession:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSoftware is just a tool to help accomplish something for people \u0026ndash; many programmers never understood that. Keep your\neyes on the delivered value, and don\u0026rsquo;t over-focus on the specifics of the tools.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI have often fallen into the over-focusing trap in my career. The whole thread is well worth reading:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Quoting John Carmack\" loading=\"lazy\" src=\"/images/quoting-john-carmack.jpg\"\u003e\u003c/p\u003e","title":"Quoting John Carmack"},{"content":"Quoting the last paragraph from Italo Calvino\u0026rsquo;s Invisible Cities:\nThe inferno of the living is not something that will be; if there is one, it is what is already here, the inferno where we live every day, that we form by being together. There are two ways to escape suffering it. The first is easy for many: accept the inferno and become such a part of it that you can no longer see it. The second is risky and demands constant vigilance and apprehension: seek and learn to recognize who and what, in the midst of inferno, are not inferno, then make them endure, give them space.\nMy Invisible Cities review is available here.\n","permalink":"https://nicolaiarocci.com/quoting-italo-calvino/","summary":"\u003cp\u003eQuoting the last paragraph from Italo Calvino\u0026rsquo;s \u003cem\u003eInvisible Cities\u003c/em\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe inferno of the living is not something that will be; if there is one, it is what is already here, the inferno where we live every day, that we form by being together. There are two ways to escape suffering it. The first is easy for many: accept the inferno and become such a part of it that you can no longer see it. The second is risky and demands constant vigilance and apprehension: seek and learn to recognize who and what, in the midst of inferno, are not inferno, then make them endure, give them space.\u003c/p\u003e","title":"Quoting Italo Calvino"},{"content":"Zerocalcare is an Italian cartoonist whose strips, especially in the form of illustrated books, have surged to an iconic level in the last decade. His drawing is excellent, but it is with his writing that, I think, he conquered fame. His stories are fun to read and yet profound and vibrant, all at the same time. Also, he often touches on themes nobody else covers, at least not in the comics world. It was the case with Kobane Calling: Greetings from Northern Syria, his graphic reportage from Syrian Kurdistan and the Syria-Turkey border. The author visited the area with other volunteers to support the Kurdish resistance. I think Kobane Calling did a lot in raising awareness of the Kurdish situation, at least here in Italy (an English edition was published too.)\nNo Sleep Till Shengal recounts the author\u0026rsquo;s return to Iraq, this time to visit the Yazidi community of Shengal and document their living conditions and struggle as they are threatened by international tensions and protected by Kurdish militias. No Sleep Till Shengal is a good book. Like his predecessor, it is humorous yet tense and touching. I felt like something was amiss in this work, though, and I am not exactly sure what. There are a couple of repetitive passages, perhaps a sign that the author needed to fill in the blanks, having less fresh content at hand. Maybe there\u0026rsquo;s a slight Deja Vu sensation induced by the previous work; I don\u0026rsquo;t know. No Sleep is a solid second work on an already visited theme. My affection for Zerocalcare is intact, but I\u0026rsquo;d pick Kobane Calling over No Sleep, especially for a first reading of this author.\n","permalink":"https://nicolaiarocci.com/book-review-no-sleep-till-shengal/","summary":"\u003cp\u003eZerocalcare is an Italian cartoonist whose strips, especially in the form of illustrated books, have surged to an iconic\nlevel in the last decade. His drawing is excellent, but it is with his writing that, I think, he conquered fame. His\nstories are fun to read and yet profound and vibrant, all at the same time. Also, he often touches on themes nobody else\ncovers, at least not in the comics world. It was the case with \u003cem\u003eKobane Calling: Greetings from Northern Syria\u003c/em\u003e, his\ngraphic reportage from Syrian Kurdistan and the Syria-Turkey border. The author visited the area with other volunteers\nto support the Kurdish resistance. I think \u003cem\u003eKobane Calling\u003c/em\u003e did a lot in raising awareness of the Kurdish situation, at\nleast here in Italy (an English edition was published too.)\u003c/p\u003e","title":"Book Review: No Sleep Till Shengal"},{"content":"Today I released Eve v2.1, which comes with official Flask 2.2+ support and the ability to modify the pagination limit on a per-resource basis thanks to the new pagination_limit setting. You can find the release on PyPI, while the changelog is available here—special thanks to Pieter De Clercq and smeng9 for the help with this release.\n","permalink":"https://nicolaiarocci.com/eve-2.1.0-has-just-been-released/","summary":"\u003cp\u003eToday I released Eve v2.1, which comes with official Flask 2.2+ support and the ability to modify the pagination limit\non a per-resource basis thanks to the new \u003ccode\u003epagination_limit\u003c/code\u003e setting. You can find the release on \u003ca href=\"https://pypi.org/project/Eve/2.1.0/\"\u003ePyPI\u003c/a\u003e,\nwhile the changelog is available \u003ca href=\"https://docs.python-eve.org/en/stable/changelog.html#version-v2-1-0\"\u003ehere\u003c/a\u003e—special thanks to \u003ca href=\"https://github.com/thepieterdc\"\u003ePieter De Clercq\u003c/a\u003e and \u003ca href=\"https://github.com/smeng9\"\u003esmeng9\u003c/a\u003e for the help with this release.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Eve 2.1.0 on PyPI\" loading=\"lazy\" src=\"/images/eve-2.1.0.png\"\u003e\u003c/p\u003e","title":"Eve 2.1.0 has just been released"},{"content":"On Thursday, I will be speaking in Milan at WebDay 2023. Mine is a hands-on session on building a reliable and continuous end-to-end testing environment for web apps using Microsoft Playwright. If you attended my introductory Playwright session at WPC last year, Thursday\u0026rsquo;s session would be the ideal follow-up to that one, as I only briefly touched on CI deployments there.\nDrawing from my experience doing the whole thing in production, I\u0026rsquo;ll essentially be live testing a Blazor app, then take the entire thing to remote CI via GitHub Actions. In the process, I\u0026rsquo;ll show some of the issues we faced, share how we solved them, and offer some practices we adopted.\nWebDay 2023 will be a hybrid event, with over 380 in-person attendees and almost 1300 registered for live streaming. After the exhilarating experience of being back on an actual stage at WPC a few months ago, I\u0026rsquo;m excited to speak once again in front of a real crowd.\n","permalink":"https://nicolaiarocci.com/i-am-speaking-at-webday-2023/","summary":"\u003cp\u003eOn Thursday, I will be speaking in Milan at \u003ca href=\"https://www.webdayconf.it/\"\u003eWebDay 2023\u003c/a\u003e. Mine is a hands-on session on building a reliable and\ncontinuous end-to-end testing environment for web apps using Microsoft Playwright. If you attended my \u003ca href=\"https://nicolaiarocci.com/my-session-at-wpc-2022/\"\u003eintroductory\nPlaywright session at WPC\u003c/a\u003e last year, Thursday\u0026rsquo;s session would be the ideal follow-up to that one, as I\nonly briefly touched on CI deployments there.\u003c/p\u003e\n\u003cp\u003eDrawing from my experience doing the whole thing in production, I\u0026rsquo;ll essentially be live testing a Blazor app, then take\nthe entire thing to remote CI via GitHub Actions. In the process, I\u0026rsquo;ll show some of the issues we faced, share how we\nsolved them, and offer some practices we adopted.\u003c/p\u003e","title":"I am speaking at WebDay 2023"},{"content":"I\u0026rsquo;ve recently moved away from my custom Neovim configuration to embrace LazyVim. LazyVim is a Neovim setup with sane default settings for options, autocmds, and keymaps. It boldly aims to transform Neovim into a full-fledged IDE that is easy to extend and customize. It comes with a wealth of plugins pre-configured and ready to use, and it is also blazing fast. Elijah Manor has a fantastic introductory video on YouTube; I suggest you take the time to look at it.\nSo far I\u0026rsquo;m delighted with the result. In the process, I learned about several useful plugins I now use regularly.\nNeovim trouble with C# and OmniSharp When I upgraded my old-ish Neovim (I am using nightly builds now), I started getting a weird error on every .cs file I loaded:\nError executing vim.schedule lua callbaack: /usr/share/[...]/semantic_tokens.lua:342:E5248: Invalid character in group name. A little investigation revealed that semantic tokens provided by OmniSharp don\u0026rsquo;t conform to the LSP specification, which triggers the error. I cloned the omnisharp-roslyn repo and dug into the code hoping I could offer a quick fix. As it turns out, however, the issue is actually with Roslyn itself, not OmniSharp. There are tickets on both the Neovim and the OmniSharp repositories, but I fear they\u0026rsquo;ll stagnate there as non-relevant (note to self: maybe report the problem to the Roslyn folks? Alternatively, propose a patched semantic provider to the omnisharp-roslyn maintainers.)\nAnyway, a quick, hacky, and not future-proof fix is to customize Neovim (LazyVim) configuration like this:\n-- ~/.config/nvim/lua/plugins/omnisharp.lua (create if needed) return { \u0026#34;OmniSharp/omnisharp-vim\u0026#34;, init = function() require(\u0026#34;lazyvim.util\u0026#34;).on_attach(function(client, _) if client.name == \u0026#34;omnisharp\u0026#34; then client.server_capabilities.semanticTokensProvider = { full = vim.empty_dict(), legend = { tokenModifiers = { \u0026#34;static_symbol\u0026#34; }, tokenTypes = { \u0026#34;comment\u0026#34;, \u0026#34;excluded_code\u0026#34;, \u0026#34;identifier\u0026#34;, \u0026#34;keyword\u0026#34;, \u0026#34;keyword_control\u0026#34;, \u0026#34;number\u0026#34;, \u0026#34;operator\u0026#34;, \u0026#34;operator_overloaded\u0026#34;, \u0026#34;preprocessor_keyword\u0026#34;, \u0026#34;string\u0026#34;, \u0026#34;whitespace\u0026#34;, \u0026#34;text\u0026#34;, \u0026#34;static_symbol\u0026#34;, \u0026#34;preprocessor_text\u0026#34;, \u0026#34;punctuation\u0026#34;, \u0026#34;string_verbatim\u0026#34;, \u0026#34;string_escape_character\u0026#34;, \u0026#34;class_name\u0026#34;, \u0026#34;delegate_name\u0026#34;, \u0026#34;enum_name\u0026#34;, \u0026#34;interface_name\u0026#34;, \u0026#34;module_name\u0026#34;, \u0026#34;struct_name\u0026#34;, \u0026#34;type_parameter_name\u0026#34;, \u0026#34;field_name\u0026#34;, \u0026#34;enum_member_name\u0026#34;, \u0026#34;constant_name\u0026#34;, \u0026#34;local_name\u0026#34;, \u0026#34;parameter_name\u0026#34;, \u0026#34;method_name\u0026#34;, \u0026#34;extension_method_name\u0026#34;, \u0026#34;property_name\u0026#34;, \u0026#34;event_name\u0026#34;, \u0026#34;namespace_name\u0026#34;, \u0026#34;label_name\u0026#34;, \u0026#34;xml_doc_comment_attribute_name\u0026#34;, \u0026#34;xml_doc_comment_attribute_quotes\u0026#34;, \u0026#34;xml_doc_comment_attribute_value\u0026#34;, \u0026#34;xml_doc_comment_cdata_section\u0026#34;, \u0026#34;xml_doc_comment_comment\u0026#34;, \u0026#34;xml_doc_comment_delimiter\u0026#34;, \u0026#34;xml_doc_comment_entity_reference\u0026#34;, \u0026#34;xml_doc_comment_name\u0026#34;, \u0026#34;xml_doc_comment_processing_instruction\u0026#34;, \u0026#34;xml_doc_comment_text\u0026#34;, \u0026#34;xml_literal_attribute_name\u0026#34;, \u0026#34;xml_literal_attribute_quotes\u0026#34;, \u0026#34;xml_literal_attribute_value\u0026#34;, \u0026#34;xml_literal_cdata_section\u0026#34;, \u0026#34;xml_literal_comment\u0026#34;, \u0026#34;xml_literal_delimiter\u0026#34;, \u0026#34;xml_literal_embedded_expression\u0026#34;, \u0026#34;xml_literal_entity_reference\u0026#34;, \u0026#34;xml_literal_name\u0026#34;, \u0026#34;xml_literal_processing_instruction\u0026#34;, \u0026#34;xml_literal_text\u0026#34;, \u0026#34;regex_comment\u0026#34;, \u0026#34;regex_character_class\u0026#34;, \u0026#34;regex_anchor\u0026#34;, \u0026#34;regex_quantifier\u0026#34;, \u0026#34;regex_grouping\u0026#34;, \u0026#34;regex_alternation\u0026#34;, \u0026#34;regex_text\u0026#34;, \u0026#34;regex_self_escaped_character\u0026#34;, \u0026#34;regex_other_escape\u0026#34;, }, }, range = true, } end end) end, } It overrides the on_attach event to pass an LSP-digestible list of semantic tokens. And voilà, C# files are now loaded seamlessly.\nI\u0026rsquo;m not done yet. I\u0026rsquo;m having another weird issue with .editorconfig files. I\u0026rsquo;m still triaging it, and will report back when (if) I sort it out.\n","permalink":"https://nicolaiarocci.com/making-csharp-and-omnisharp-play-well-with-neovim/","summary":"\u003cp\u003eI\u0026rsquo;ve recently moved away from my custom Neovim configuration to embrace \u003ca href=\"https://www.lazyvim.org/\"\u003eLazyVim\u003c/a\u003e. LazyVim is a Neovim setup with sane\ndefault settings for options, autocmds, and keymaps. It boldly aims to transform Neovim into a full-fledged IDE that is\neasy to extend and customize. It comes with a wealth of plugins pre-configured and ready to use, and it is also blazing\nfast. Elijah Manor has a fantastic introductory video on YouTube; I suggest you take the time to look at it.\u003c/p\u003e","title":"Making C# and OmniSharp play well with Neovim"},{"content":"Regarding space-related topics and scientific research, Casey Handmer\u0026rsquo;s blog is one of my references. So when Casey started his Mars Trilogy Technical Commentary and I learned about Kim Stanley Robinson\u0026rsquo;s masterpiece, I was instantly intrigued. In Casey\u0026rsquo;s opinion, KSR\u0026rsquo;s Mars Trilogy is \u0026ldquo;one of the finest works of literature ever composed.\u0026rdquo; It took a couple of weeks of futile resistance before I gave in and ordered the first book in the series, Red Mars, a 420 pages tome that attempts to depict a scientifically credible human colonization of Mars1.\nAn incredible amount of research went into this book, and it shows. Still, there\u0026rsquo;s never an overabundance of scientific or nerdy details; quite the contrary, to be honest, and, at least to me, this is one of the book\u0026rsquo;s weaknesses. It\u0026rsquo;s astonishing how pivotal moments in establishing the first human colony on the Red Planet are glossed over. One hundred of Earth\u0026rsquo;s best scientists travel to Mars to create the first human settlement. During their richly narrated, almost two-year-long voyage, we get to know the main characters and learn the ins and outs of the first colonial spaceship. Yet, when they finally reach the orbit, the reader is left with no clues on the undoubtedly dramatic first landing. The settlement is already established in the next chapter, with a second one already in place on Phobos\u0026rsquo; surface.\nOmitting details such as the first landing is undoubtedly an editorial choice. Given the time scope of the narrated adventure (by the end of the trilogy, it will span a few centuries), it probably makes sense, but I couldn\u0026rsquo;t help but feel betrayed in some way. The story is more about how humans could establish a society and cultural identity in a remote colony, how such a community develops over time, and, more importantly, how and why conflicts emerge with the distant home first and within the settlement itself later on. While reading, I often thought, \u0026lsquo;Hey, this all reminds me of the American colonization!\u0026rsquo; and then, \u0026lsquo;I wonder how much percolated into S.A. Corey\u0026rsquo;s The Expanse,\u0026rsquo; terraforming and Earth-Mars trouble playing prominent roles in both series. In many ways, and I know I am making enemies now, Red Mars could have served well as a prequel to The Expanse2.\nOne thing I found confusing at first but later came to appreciate is that the story isn\u0026rsquo;t told from a single person\u0026rsquo;s perspective. Instead, it sprawls across an extensive cast of characters as it expands over time. Viewpoints shift from one character to another, and people we thought we understood suddenly seem strange and different when seen through someone else\u0026rsquo;s eyes. The Mars society is messy, very human, and often petty, with few clear answers and no simple solutions. In Red Mars, we don\u0026rsquo;t get an optimistic portrayal of the future of human society. Here, Star Trek\u0026rsquo;s pacified civilization and the idealistic United Federation of Planets are far away to come, if ever.\nOverall, I liked this book, probably a lot, but I don\u0026rsquo;t think I will read the next installments in the series, at least not right away. Maybe in a while, when Mars dust has settled.\nRed Mars was first published in 1992. That\u0026rsquo;s something to be considered when evaluating it. Also, some details tenderly show its age, like when characters look at \u0026lsquo;videotapes\u0026rsquo; recorded by remote satellites and surface cameras.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nDisclaimer: I never read The Expanse; I only watched and loved the TV show. So yeah, I don\u0026rsquo;t qualify for an informed opinion on that franchise, let alone compare it with another one. [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-red-mars/","summary":"\u003cp\u003eRegarding space-related topics and scientific research, \u003ca href=\"https://caseyhandmer.wordpress.com/\"\u003eCasey Handmer\u0026rsquo;s blog\u003c/a\u003e is one of my references. So when Casey\nstarted his \u003ca href=\"https://caseyhandmer.wordpress.com/2022/12/13/mars-trilogy-technical-commentary/\"\u003eMars Trilogy Technical Commentary\u003c/a\u003e and I learned about Kim Stanley Robinson\u0026rsquo;s masterpiece, I was\ninstantly intrigued. In Casey\u0026rsquo;s opinion, KSR\u0026rsquo;s \u003ca href=\"https://en.wikipedia.org/wiki/Mars_trilogy\"\u003eMars Trilogy\u003c/a\u003e is \u0026ldquo;one of the finest works of literature ever\ncomposed.\u0026rdquo; It took a couple of weeks of futile resistance before I gave in and ordered the first book in the series, \u003cem\u003eRed\nMars\u003c/em\u003e, a 420 pages tome that attempts to depict a scientifically credible human colonization of Mars\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Book Review: Red Mars"},{"content":" via\n","permalink":"https://nicolaiarocci.com/hand-dryers/","summary":"\u003cp\u003e\u003cimg alt=\"It seems like hand dryers take forever to heat up, but that\u0026rsquo;s because evaporation cools your skin, so the hot air feels good until the water is gone.\" loading=\"lazy\" src=\"/images/hand-dryers.png\"\u003e\n\u003cem\u003e\u003ca href=\"https://botsin.space/@xkcdbot/109937567703546899\"\u003evia\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e","title":"Hand dryers"},{"content":" On February 13, 2023, about ten days ago, [Leiji Matsumoto][3] left this world. A phenomenal Japanese manga artist, he created several space operas that influenced me as a kid. Matsumoto directed Space Battleship Yamato1, wrote and illustrated Galaxy Express 9992, and then released the magnificent Space Pirate Captain Harlock. Regarding visual operas, I suspect my fascination with space, astronomy and all things science has much more to do with these three than with the Star Wars movies that came later, or Star Trek.\nWhat I did not know until the other day, however, is that Matsumoto worked with Daft Punk. In 2001, the artist and his studio produced all the videos for Daft Punk\u0026rsquo;s Discovery album. I distinctly remember watching the One More Time video and being blown away. It was fantastic and also fascinating in a strange way, but I couldn\u0026rsquo;t pinpoint the reason. Now I understand. I didn\u0026rsquo;t make the connection back then, but Matsumoto\u0026rsquo;s touch immediately drew me back to my childhood fantasies, themselves sprouting from the artist\u0026rsquo;s animes.\nIn 2003, Toei Animation released Interstella 5555, an \u0026ldquo;animated musical science fiction film\u0026rdquo; and a visual companion to the Discovery album. It has no dialogue, minimal sound effects, and all (most?) of Discovery\u0026rsquo;s music. I watched it this morning and loved every moment of it.\nSpace Battleship Yamato was influential in the creation of many future series such as Gundam, Evangelioon, and Macross. [3]: https://en.wikipedia.org/wiki/Leiji_Matsumoto [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMatsumoto was inspired to create Galaxy Express 999 by the idea of a steam train running through the stars in the novel Night on the Galactic Railroad by Kenji Miyazawa.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/leiji-matsumoto-1938-2023/","summary":"\u003cp\u003e\u003cimg alt=\"Leiji Matsumoto\" loading=\"lazy\" src=\"/images/leiji-matsumoto.jpg#right\"\u003e\nOn February 13, 2023, about ten days ago, [Leiji Matsumoto][3] left this world.\nA phenomenal Japanese manga artist, he created several space operas that\ninfluenced me as a kid. Matsumoto directed \u003cem\u003eSpace Battleship Yamato\u003c/em\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, wrote\nand illustrated \u003cem\u003eGalaxy Express 999\u003c/em\u003e\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e, and then released the magnificent\n\u003cem\u003eSpace Pirate Captain Harlock\u003c/em\u003e. Regarding visual operas, I suspect my\nfascination with space, astronomy and all things science has much more to do\nwith these three than with the Star Wars movies that came later, or Star Trek.\u003c/p\u003e","title":"Leiji Matsumoto (1938-2023)"},{"content":"Today I learned about psql-tips.org by Lætitia Avrot, an excellent repository of psql (the CLI tool, not the database itself) tips. I like how one randomized tip is playfully served on the home page while the complete list is always at hand.\n","permalink":"https://nicolaiarocci.com/awesome-psql-tips/","summary":"\u003cp\u003eToday I learned about \u003ca href=\"https://psql-tips.org\"\u003epsql-tips.org\u003c/a\u003e by Lætitia Avrot, an excellent\nrepository of \u003ccode\u003epsql\u003c/code\u003e (the CLI tool, not the database itself) tips. I like how\none randomized tip is playfully served on the home page while the \u003ca href=\"https://psql-tips.org/psql_tips_all.html\"\u003ecomplete\nlist\u003c/a\u003e is always at hand.\u003c/p\u003e","title":"Awesome psql tips"},{"content":"Brian Rinaldi has an insightful post on his blog about the current state of developer conferences, where \u0026lsquo;current state\u0026rsquo; means post-COVID pandemic. Brian is well-positioned to reason about this space as a long-time conference organizer. I appreciate that he also takes the time to explain how the developer conference business works. The core of his blog is about post-pandemic conference attendance, which has plunged.\nindependent, in-person developer conferences are hurting. Based on my own observation as well as talks with organizers and sponsors that I have come to know over the years, the average independent in-person event is still down 30-40% from pre-pandemic attendance levels. And often it seems to require massive discounts or even giveaways to get to this level.\nAnd he offers an interesting theory on why that is:\nMy hypothesis is that we’ve bifurcated the audience somewhat. The folks that were there almost exclusively for the content have decided that they can do so more cheaply and efficiently online via virtual conferences or recordings. The folks that went for the networking as a primary driver, on the other hand, are largely eschewing online events as not fulfilling their needs. [\u0026hellip;] So ultimately what we are left with is a lower in-person audience and a lower virtual audience.\nAs a conference speaker and meetup organizer, I noticed that online events saw low attendance during the pandemic, and they still do today. When available, recordings partially compensate, but only in audience terms. The problem is online events are not conferences. \u0026lsquo;Conference\u0026rsquo; originates from the late Latin \u0026ldquo;conferentia,\u0026rdquo; itself a derivative of \u0026ldquo;conferre,\u0026rdquo; a synonym for the collation of \u0026ldquo;bring together\u0026rdquo;1. A conference is a meeting to discuss some topics. The get-together element is missing in online events, and networking is next to impossible (live chats and \u0026lsquo;virtual after-parties\u0026rsquo; are just poor palliatives.) In my book, hybrid events are even worse, as live streaming and recordings discourage live attendance (at the DevRomagna meetups, we often get asked if live streaming or recordings will be available, and the answer is no - either we do live streaming - and we sometimes do - or we do an in-person event, but never a mix of the two.)\nGoing back to Brian\u0026rsquo;s musings, I think I subscribe to them. I am not sure attendance will ever get back to old numbers. I am afraid a good portion of those who were regulars became disaffected, and gaining their attention back is a hard gamble. YouTube and Twitch, I think, are phenomenal competitors, and the pandemic hiatus threw a ton of fresh new viewers at them.\nPS: Coincidentally, we\u0026rsquo;re running an in-person meetup at DevRomagna today.\nAccording to Treccani [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/on-the-state-of-developer-conferences/","summary":"\u003cp\u003eBrian Rinaldi has an insightful post on \u003ca href=\"https://remotesynthesis.com/blog/developer-conferences/\"\u003ehis blog\u003c/a\u003e about the current state of\ndeveloper conferences, where \u0026lsquo;current state\u0026rsquo; means post-COVID pandemic. Brian\nis well-positioned to reason about this space as a long-time conference\norganizer. I appreciate that he also takes the time to explain how the\ndeveloper conference business works. The core of his blog is about\npost-pandemic conference attendance, which has plunged.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eindependent, in-person developer conferences are hurting. Based on my own\nobservation as well as talks with organizers and sponsors that I have come to\nknow over the years, the average independent in-person event is still down\n30-40% from pre-pandemic attendance levels. And often it seems to require\nmassive discounts or even giveaways to get to this level.\u003c/p\u003e","title":"On the state of developer conferences"},{"content":"\nSanguina Ancora (Still Bleeding) is not a biography but a passionate and informative tribute to Dostoevsky. The nonlinear, not literary style works and the continuous back and forth between Dostoevsky\u0026rsquo;s epic and the author\u0026rsquo;s own experiences as a scholar and Russian literature enthusiast is probably a good idea as it helps stress the actualness of Dostoevsky\u0026rsquo;s opus.\nHowever, the continuous jumping in and out of the Russian\u0026rsquo;s life, though sympathetic at first, gets tedious over time. While immersed in Dostoevsky\u0026rsquo;s events, it is not always pleasant to be torn away only to end up in the Parma lowlands for a few entertaining anecdotes (that these anecdotes tend to gravitate around the author\u0026rsquo;s other works adds to the discomfort.)\nThat aside, the book contains precious information on Dostoevsky\u0026rsquo;s life, opus, Russian literature and society of the nineteenth century. Some random facts from my reading notes:\nDostoevsky\u0026rsquo;s incredible tenacity in the face of early setbacks. The first translation he worked on was aborted near the end, having discovered that the novel had already been translated into Russian from French. The second was published in a Russian magazine but heavily cut and, worse, without attribution. Yet during all this time, he continued unceasingly, tirelessly, fervently, day and night work what would become his first novel, Poor Folk (an immediate hit.) Writers in late 19th century Russia were astonishingly important. Tolstoy had founded a kind of religious cult. Young people would gather in the evenings to read Gogol. In those times, in Russia, writers were real stars. Russian literature began with Pushkin. Before him, in the eighteenth century, Russians who wrote did so by imitating the French and knew French better than Russian, as did all the Russian nobles and educated people of the time. Bulgakov, in The Master and the Margarita1, has one of his characters say that Dostoevsky is immortal. As great as the country is, there are no dialects in Russia. Also, Russian is a spoken language first, and only then a written language (the Russian alphabet has existed only since the 9th century, with Cyril and Methodius.) Russians elected a monument to Arina, Pushkin\u0026rsquo;s nanny who told him fairy tales and made him love the language. She was illiterate. Dostoevsky is arrested and sentenced to death for reading a letter aloud and in public. With his comrades in his revolutionary circle, he undergoes a false execution, an experience he will later give to the protagonist of The Idiot. The five minutes the protagonist waits for the shooting is a transcendental experience. Lieutenant Frank Columbo, the protagonist of the famous TV show from seventies, is inspired by Porfirij Petrovic, the detective from Crime and Punishment. I\u0026rsquo;ve got a lot of notes from this book, which is a good sign. Vasily Rizanov\u0026rsquo;s memorable quote on Dostoesky\u0026rsquo;s writing, also reported in the book, is worth mentioning:\nThe miracle of Dostoevsky\u0026rsquo;s writing lies in eliminating the distance between the subject (the reader) and the object (the author), by virtue of which he turns out to be the most familiar of all contemporary writers and, perhaps, even of future writers, of all possible writers.\nOne of my all-time favorites. [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-sanguina-ancora-still-bleeding/","summary":"\u003cp\u003e\u003cimg alt=\"Book Cover: Sanguina Ancora, by Paolo Nori\" loading=\"lazy\" src=\"/images/book-cover-sanguina-ancora.jpg#right\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eSanguina Ancora\u003c/em\u003e (Still Bleeding) is not a biography but a passionate and\ninformative tribute to Dostoevsky. The nonlinear, not literary style works and\nthe continuous back and forth between Dostoevsky\u0026rsquo;s epic and the author\u0026rsquo;s own\nexperiences as a scholar and Russian literature enthusiast is probably a good\nidea as it helps stress the actualness of Dostoevsky\u0026rsquo;s opus.\u003c/p\u003e\n\u003cp\u003eHowever, the continuous jumping in and out of the Russian\u0026rsquo;s life, though\nsympathetic at first, gets tedious over time. While immersed in Dostoevsky\u0026rsquo;s\nevents, it is not always pleasant to be torn away only to end up in the Parma\nlowlands for a few entertaining anecdotes (that these anecdotes tend to\ngravitate around the author\u0026rsquo;s other works adds to the discomfort.)\u003c/p\u003e","title":"Book Review: Sanguina Ancora (Still Bleeding)"},{"content":" The simple step of a courageous individual is not to take part in the lie. \u0026ndash;Aleksandr Solzhenitsyn\n","permalink":"https://nicolaiarocci.com/quoting-solzhenitsyn/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe simple step of a courageous individual is not to take part in the lie.\u003c!-- raw HTML omitted --\u003e\n\u0026ndash;Aleksandr Solzhenitsyn\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"Sepia-toned photo of Aleksandr Solzhenitsyn in middle age, hairline receeded, bearded, in an open-collar shirt, a tired expression on his face.\" loading=\"lazy\" src=\"/images/solzhenitsyn.jpg\"\u003e\u003c/p\u003e","title":"Quoting Solzhenitsyn"},{"content":"Jim Nielsen:\nThat is why owning a domain (and publishing your content there) is like planting a tree: it’s value that starts small and grows. The best time to own a domain and publish your content there was 20 years ago. The second best time is today.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-best-time-to-own-a-domain/","summary":"\u003cp\u003eJim Nielsen:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThat is why owning a domain (and publishing your content there) is like\nplanting a tree: it’s value that starts small and grows. The best time to own\na domain and publish your content there was 20 years ago. The second best\ntime is today.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://blog.jim-nielsen.com/2023/best-time-to-own-a-domain/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"The best time to own a domain"},{"content":"We\u0026rsquo;re doing a DevRomagna meetup this month, and I think it will be a super-interesting one. It\u0026rsquo;s titled Heading to Go: A Look at Building a Video Encoder and the presenter will be Daniel Enrico Botta, a C# software engineer who recently switched to Go for his video encoding projects. Here\u0026rsquo;s the abstract:\nThis talk will discuss the experience of moving from C# to Go for a video coding project. The pros and cons of using Go, a modern and efficient programming language, and how it compares to other languages will be shown. In addition, the use of FFmpeg, an open-source tool for video encoding, and how it was used to create the video encoder will be discussed. Advice will be given on using Go and Ffmpeg for future projects. Together, the benefits of using these tools for video encoding will be understood.\nLike me, Daniel has a C# background, so it will be interesting to see the whys and hows he picked Golang for his video encoding work. I\u0026rsquo;m curious about his perspective on both languages and what he learned from adopting a new stack. Leaving the safe path to adventure into unknown territory is a safe way to broaden knowledge and improve self-confidence, or at least it was for me when I added Python to my tool belt. In surprising and unexpected ways, most of the new expertise also proved invaluable in my C# \u0026amp; F# work.\nThe session will be held in person, in Italian. So if you\u0026rsquo;re interested, join us!\n","permalink":"https://nicolaiarocci.com/heading-to-go-a-look-at-building-a-video-encoder-meetup/","summary":"\u003cp\u003eWe\u0026rsquo;re doing a \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/291027334/\"\u003eDevRomagna meetup\u003c/a\u003e this month, and I think it will be a\nsuper-interesting one. It\u0026rsquo;s titled \u003cem\u003eHeading to Go: A Look at Building a Video\nEncoder\u003c/em\u003e and the presenter will be Daniel Enrico Botta, a C# software engineer\nwho recently switched to Go for his video encoding projects. Here\u0026rsquo;s the abstract:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis talk will discuss the experience of moving from C# to Go for a video\ncoding project. The pros and cons of using Go, a modern and efficient\nprogramming language, and how it compares to other languages will be shown.\nIn addition, the use of FFmpeg, an open-source tool for video encoding, and\nhow it was used to create the video encoder will be discussed. Advice will be\ngiven on using Go and Ffmpeg for future projects. Together, the benefits of\nusing these tools for video encoding will be understood.\u003c/p\u003e","title":"Heading to Go: A Look at Building a Video Encoder (meetup)"},{"content":"Brad Mehldau plays Lennon/McCartney\u0026rsquo;s I Am the Walrus, from his upcoming album, Your Mother Should Know: Brad Mehldau Plays the Beatles.\n","permalink":"https://nicolaiarocci.com/brad-mehldau-plays-i-am-the-walrus/","summary":"\u003cp\u003eBrad Mehldau plays Lennon/McCartney\u0026rsquo;\u003cem\u003es I Am the Walrus\u003c/em\u003e, from his upcoming\nalbum, \u003cem\u003eYour Mother Should Know: Brad Mehldau Plays the Beatles\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/lGvl6IdBJiA?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Brad Mehldau plays I am the Walrus"},{"content":"In a C# library I\u0026rsquo;ve been working on, I wanted to use C# 9.0\u0026rsquo;s init keyword. Quoting the documentation:\nThe init keyword defines an accessor method in a property or indexer. An init-only setter assigns a value to the property or the indexer element only during object construction. This enforces immutability so that once the object is initialized, it can\u0026rsquo;t be changed again.\nConsider the following class:\npublic class Person { public string FirstName { get; init; } } You can initialize it like this:\nvar person = new Person { FirstName = \u0026#34;John\u0026#34; }; But this will fail:\nvar person = new Person(); person.FirstName = \u0026#34;John\u0026#34;; //Not allowed For my project, which is a .NET Standard 2.0 library, I thought this approach might be preferable to a parameter-enforced class constructor alternative.\nTo my surprise, however, when I tried the above, I got the following error:\nThe predefined type \u0026#39;System.Runtime.CompilerServices.IsExternalInit\u0026#39; must be defined or imported in order to declare init-only setter As it turns out, The IsExternalInit type is only included in the net5.0 (and subsequent) target frameworks, so one cannot use it right away in a NetStandard 2.0 (or 2.1, for that matter) library.\nIn the dotnet world, when I encounter \u0026ldquo;type is not defined in version X\u0026rdquo; scenario, I know I can get around the issue by making up the type on my own. A quick lookup confirmed that this was the case, and the workaround is to add the following somewhere in my source code:\nnamespace System.Runtime.CompilerServices { internal static class IsExternalInit {} } And presto, the init keyword is now fully available to my library.\nWhile researching this matter, I stumbled into PolySharp, a lovely package that takes this workaround approach to new heights. What is it?\nPolySharp provides generated, source-only polyfills for C# language features, to easily use all runtime-agnostic features downlevel. The package is distributed as a source generator, so that it will automatically detect which polyfills are needed depending on the target framework and project in use: just add a reference to PolySharp, set your C# language version to latest, and have fun!\nAnd it works! Just add a PolySharp reference, and almost all modern C# language features become automagically available to your project, with no tricks around polluting your code. What\u0026rsquo;s also nice about PolySharp, is that it isn\u0026rsquo;t a dependency for your library; it only needs to be there at compile time.\nDo you know what\u0026rsquo;s funny? After all, I took a different route; no init keyword is used anymore in my library, but that\u0026rsquo;s for another story.\n","permalink":"https://nicolaiarocci.com/making-the-latest-csharp-language-features-available-in-older-dotnet-versions/","summary":"\u003cp\u003eIn a C# library I\u0026rsquo;ve been working on, I wanted to use C# 9.0\u0026rsquo;s \u003ccode\u003einit\u003c/code\u003e keyword.\nQuoting the \u003ca href=\"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/init\"\u003edocumentation\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe init keyword defines an accessor method in a property or indexer. An\ninit-only setter assigns a value to the property or the indexer element\n\u003cstrong\u003eonly\u003c/strong\u003e during object construction. This enforces immutability so that once\nthe object is initialized, it can\u0026rsquo;t be changed again.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eConsider the following class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    public class Person\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        public string FirstName { get; init; }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can initialize it like this:\u003c/p\u003e","title":"Making the latest C# language features available in older .NET versions"},{"content":"I was reading iA\u0026rsquo;s grumpy writing about GPT (with which I sympathize) when my attention was captured by the image they added to their post. It was so fascinating that I had to research it.\nAs it turns out, this is the Flammarion engraving, a famous wood engraving by an unknown artist, so named because its first documented appearance is in Camille Flammarion\u0026rsquo;s 1888 book L\u0026rsquo;atmosphère: météorologie populaire (\u0026ldquo;The Atmosphere: Popular Meteorology\u0026rdquo;).\nThe print depicts a man, clothed in a long robe and carrying a staff, at the edge of the Earth, where it meets the sky. He kneels and passes his head, shoulders, and right arm through the star-studded sky, discovering a marvelous realm of circling clouds, fires and suns beyond the heavens. One of the elements of the cosmic machinery closely resembles traditional pictorial representations of the \u0026ldquo;wheel in the middle of a wheel\u0026rdquo; described in the visions of the Hebrew prophet Ezekiel. The caption that accompanies the engraving in Flammarion\u0026rsquo;s book reads:\nA missionary of the Middle Ages tells that he had found the point where the sky and the Earth touch\u0026hellip;\nThe Flammarion engraving has inspired and has been used by many writers, artists, researchers, and jack-of-all-trades. The whole story is available at the Wikipedia page linked above.\n","permalink":"https://nicolaiarocci.com/flammarion-engraving/","summary":"\u003cp\u003eI was reading \u003ca href=\"https://ia.net/topics/the-end-of-writing-ia-on-ai\"\u003eiA\u0026rsquo;s grumpy writing about GPT\u003c/a\u003e (with which I sympathize)\nwhen my attention was captured by the image they added to their post. It was so\nfascinating that I had to research it.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Flammarion engraving\" loading=\"lazy\" src=\"/images/Flammarion.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eAs it turns out, this is the \u003ca href=\"https://en.wikipedia.org/wiki/Flammarion_engraving\"\u003eFlammarion engraving\u003c/a\u003e, a famous wood engraving by\nan unknown artist, so named because its first documented appearance is in\nCamille Flammarion\u0026rsquo;s 1888 book \u003cem\u003eL\u0026rsquo;atmosphère: météorologie populaire\u003c/em\u003e (\u0026ldquo;The\nAtmosphere: Popular Meteorology\u0026rdquo;).\u003c/p\u003e","title":"Flammarion engraving"},{"content":"Steve Sanderson, the original creator of Blazor, recently posted a quick peek at some of the new Blazor prototypes they are experimenting with for .NET 8.\nI think this looks great. Mixing client and server is a brilliant concept. Essentially one would be served with server-side Blazor on the first landing. While using the app, a background task would download the client-side stuff, ready to be consumed at any subsequent access.\nBlazor United is all experimental at the moment, but I\u0026rsquo;m confident it will land in one form or another, either in .NET 8 or later. I remember a few years ago at a Microsoft MVP Summit in Redmond when Steve first introduced Blazor as \u0026ldquo;an experiment\u0026rdquo;. If he puts in the effort to present his experiments to the public, he\u0026rsquo;s got approval for that, which means the project is a little more than just an experiment at this point.\nBlazor weakness so far has been more with the tooling than the features. Should Blazor United come with some solid tooling, it will be a huge hit.\n","permalink":"https://nicolaiarocci.com/a-quick-preview-of-the-blazor-united-prototype-for-.net8/","summary":"\u003cp\u003eSteve Sanderson, the original creator of Blazor, recently posted a quick peek\nat some of the new Blazor prototypes they are experimenting with for .NET 8.\u003c/p\u003e\n\u003cp\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/48G_CEGXZZM?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\nI think this looks great. Mixing client and server is a brilliant concept.\nEssentially one would be served with server-side Blazor on the first landing.\nWhile using the app, a background task would download the client-side stuff,\nready to be consumed at any subsequent access.\u003c/p\u003e","title":"A quick preview of the Blazor United prototype for .NET8"},{"content":"\nSource\nAbove all, I liked the affection and serenity that shines, through all stages, between father and son. A depiction of the circle of life I gladly subscribe to.\n","permalink":"https://nicolaiarocci.com/the-days-are-long-but-years-are-short/","summary":"\u003cp\u003e\u003cimg alt=\"Days are long but years are short\" loading=\"lazy\" src=\"/images/long-days-short-years.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://twitter.com/SahilBloom/status/1618296457966292992\"\u003eSource\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eAbove all, I liked the affection and serenity that shines, through all stages,\nbetween father and son. A depiction of the circle of life I gladly subscribe to.\u003c/p\u003e","title":"The days are long but years are short"},{"content":"According to the always-interesting Ted Gioia, the recent turnaround of Barnes \u0026amp; Noble is to be attributed to the company\u0026rsquo;s new CEO and his love of books. Quite astonishingly James Daunt, who took the helm of B\u0026amp;N in late 2019, refused to take promotional money from publishers:\nDaunt refused to play this game. He wanted to put the best books in the window. He wanted to display the most exciting books by the front door. Even more impressive, he let the people working in the stores make these decisions. This is James Daunt\u0026rsquo;s superpower: He loves books.\nThe whole piece is worth reading. Of all the libraries in my hometown, there\u0026rsquo;s only one (not a franchise) doing the same, and I genuinely enjoy walking up to their window to spot new titles. I appreciate that the owners take their time to pick worthy books and that I get to contemplate their opinionated selection. They also organize group readings and other activities seldom found in franchise libraries. Their only downside, valid for all small libraries, is that almost every time I need a particular title, it\u0026rsquo;ll have to be back-ordered, which sadly makes Amazon unbeatable.\n","permalink":"https://nicolaiarocci.com/barnes-nobles-surprising-turnaround/","summary":"\u003cp\u003eAccording to the always-interesting Ted Gioia, the recent turnaround of Barnes\n\u0026amp; Noble is to be attributed to the company\u0026rsquo;s new CEO and his love of books.\nQuite astonishingly James Daunt, who took the helm of B\u0026amp;N in late 2019, refused\nto take promotional money from publishers:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDaunt refused to play this game. He wanted to put the best books in the\nwindow. He wanted to display the most exciting books by the front door. Even\nmore impressive, he let the people working in the stores make these\ndecisions. This is James Daunt\u0026rsquo;s superpower: He loves books.\u003c/p\u003e","title":"Barnes \u0026 Noble's surprising turnaround"},{"content":"Slow Sunday morning, while surfing the YouTube ocean, I stumbled upon the audio recording of David Foster Wallace\u0026rsquo;s This is Water speech. Any DFW fan knows about the commencement speech he famously gave at Kenyon College in 2005, and I\u0026rsquo;m probably one of the few who hadn\u0026rsquo;t yet listened to it. So this morning, I hit the play button and was blown away by it. Unsurprisingly, I guess, as the speech was met with universal acclaim.\nI suspect my being an adult father of three kids played a role, as I was nodding all the time, often feeling emotional about it. Anyway, here\u0026rsquo;s the YouTube recording I\u0026rsquo;m talking about, and here\u0026rsquo;s a transcription I dug out of the Internet Archive.\nSpoiler warning, I\u0026rsquo;m now going to quote Wikipedia, where I found a good summarization of the themes covered:\nThe speech covers subjects including the difficulty of empathy, the unimportance of being well-adjusted, and the apparent lonesomeness of adult life. It suggests that higher education\u0026rsquo;s overall purpose is to consciously choose how to perceive others, think about meaning, and act appropriately in everyday life. Wallace argues that the true freedom acquired through education is the ability to be fully conscious and sympathetic. Authors Robert K. Bolger and Scott Korb have said that Wallace used the speech to outline his spiritual philosophy and the methods he used to find peace when wrestling with anxiety and depression.\nI also learned on Wikipedia that the speech\u0026rsquo;s themes were expanded in Wallace\u0026rsquo;s novel The Pale King, posthumously published in 2011. With all its intimidating size, the Pale King has been sitting on my nightstand (aka reading list) for ages. Maybe it\u0026rsquo;s time to deal with it.\n","permalink":"https://nicolaiarocci.com/this-is-water-by-david-foster-wallace/","summary":"\u003cp\u003eSlow Sunday morning, while surfing the YouTube ocean, I stumbled upon the audio\nrecording of David Foster Wallace\u0026rsquo;s This is Water speech. Any DFW fan knows\nabout the commencement speech he famously gave at Kenyon College in 2005, and\nI\u0026rsquo;m probably one of the few who hadn\u0026rsquo;t yet listened to it. So this morning, I\nhit the play button and was blown away by it. Unsurprisingly, I guess, as the\nspeech was met with universal acclaim.\u003c/p\u003e","title":"This is Water by David Foster Wallace"},{"content":" I wish everyone could listen to the song of the partridges as the sun rises, see the deer on pastures in spring, the larch trees reddened by autumn on the edges of rocks, the darting of fish among the clear waters of streams, and the bees gathering nectar from the flowering cherry trees. In these stories, I write about village places. These natural environments are still livable, about the beautiful social insects that are bees, but also about ancient jobs that are slowly and inexorably disappearing.\nThe book1 delivers on the author\u0026rsquo;s promise in the introduction. Mario Rigoni Stern is an author I have always admired and loved. His biography is touching, his themes are awe-inspiring, and his writing is simple, clean, and enjoyable.\nThis work is a collection of short stories he wrote over the years, primarily published in magazines and newspapers. The first part of the book, about one-third, is about Rigoni Stern\u0026rsquo;s struggles and experiences as a wartime prisoner during WWII. The rest is mostly about his wilderness adventures, either as a hunter or a nature-dweller (he spent most of his life living on the Asiago plateau in the Italian alps.) As is often the case with Rigoni Stern, his hunting adventures are proxies to show his deep connection, respect, and empathy for the creatures he preys on, which is counter-intuitive for the modern, educated reader.\nMario Rigoni Stern was one of the very last of his age when nature still played a primary role in everyday life. Despite his early success as a writer, he was lucky, or smart enough, to keep living in his relatively secluded place in the mountains, from which he could observe the unstoppable transformation of our society from afar.\nI am afraid there\u0026rsquo;s no English edition available. You could always read his WWII memoir and masterpiece, The Sergeant in the Snow. [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-uomini-boschi-e-api/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI wish everyone could listen to the song of the partridges as the sun rises,\nsee the deer on pastures in spring, the larch trees reddened by autumn on the\nedges of rocks, the darting of fish among the clear waters of streams, and\nthe bees gathering nectar from the flowering cherry trees. In these stories,\nI write about village places. These natural environments are still livable,\nabout the beautiful social insects that are bees, but also about ancient jobs\nthat are slowly and inexorably disappearing.\u003c/p\u003e","title":"Book Review: Uomini, boschi e api"},{"content":" On New Years Day of 2022, I stumbled out of bed and immediately lost my vision, fell to the floor, and had to get my then-partner to help me back into bed. This wasn’t the first time this had happened, and I knew what it was straight away - I was having a migraine. In the previous decade I’d had countless migraines, and they always followed the same pattern. I’d wake up after a night out, attempt to get to the bathroom, lose my vision, and most likely end up on the floor vomiting from the pain that I can only describe as feeling like someone trying to hammer a nail into my skull. The worst part about them? They were avoidable.\nMore here.\n","permalink":"https://nicolaiarocci.com/why-give-up-drinking-in-your-early-twenties/","summary":"\u003cblockquote\u003e\n\u003cp\u003eOn New Years Day of 2022, I stumbled out of bed and immediately lost my\nvision, fell to the floor, and had to get my then-partner to help me back\ninto bed. This wasn’t the first time this had happened, and I knew what it\nwas straight away - I was having a migraine. In the previous decade I’d had\ncountless migraines, and they always followed the same pattern. I’d wake up\nafter a night out, attempt to get to the bathroom, lose my vision, and most\nlikely end up on the floor vomiting from the pain that I can only describe as\nfeeling like someone trying to hammer a nail into my skull.\nThe worst part about them? They were avoidable.\u003c/p\u003e","title":"Why give up drinking in your early twenties"},{"content":"I only read 17 books in 2022, confirming the slowdown of the last few years. The total number of pages decreased too, albeit not too much compared to the previous year. In 2021, though, there was a significant drop, as in 2020, I read 28 books or 8073 pages. Stats have been going down since 2015, which is interesting. Like last year, I\u0026rsquo;m not sure why I\u0026rsquo;m reading less. More tired? Less interested? I don\u0026rsquo;t know.\nThis year I read more fiction than usual. I wouldn\u0026rsquo;t say what I read was uninteresting or dull; quite the contrary. Do the stats matter, though? Probably not; I might be a bit obsessed with them. As long I enjoy what I read and the time spent reading, I think I\u0026rsquo;m fine.\nAnyway, here\u0026rsquo;s a selection of my favorite books for 2022. I picked three, but they could easily be five (Italo Calvino\u0026rsquo;s Invisible Cities and Nabokov\u0026rsquo;s Mašen\u0026rsquo;ka made it to the shortlist.) In no particular order:\nMemoirs of Hadrian, by Marguerite Yourcenar. Terrific work of historical fiction. The memoirs are drafted by an elderly emperor Hadrian for his young friend \u0026ldquo;Mark,\u0026rdquo; the future Marcus Aurelius. Hadrian does not flinch. He tells of his many great successes but does not hide his mistakes and weaknesses. He points out the former so that his protégé can steer clear of them; the latter he investigates, not without the indulgence that every elder is entitled to. My review is available here.\nItalica, by Giacomo Papi. Italia is a remarkable collection of short stories from Italy\u0026rsquo;s twentieth century, all written by prominent Italian writers of the period, including Italo Calvino, Elsa Morante, Beppe Fenoglio, Natalia Ginzburg, and Giorgio Scerbanenco. Enlightening short essays introduce each tale, helping contextualize the story. Full review.\nStoner, by John Williams. Quoting the New York Review of Books: John Williams\u0026rsquo;s luminous and deeply moving novel is a work of quiet perfection. William Stoner emerges from it not only as an archetypal American but as an unlikely existential hero, standing, like a figure in a painting by Edward Hopper, in stark relief against an unforgiving world. My review is here.\nOverall, I read great books in 2022. I\u0026rsquo;m now glancing at the dozen books waiting for me on the shelf. I hope they\u0026rsquo;ll provide me with the same level of satisfaction, evasion, and entertainment as their predecessors.\n","permalink":"https://nicolaiarocci.com/my-favorite-books-of-2022/","summary":"\u003cp\u003eI only read \u003ca href=\"/books-i-have-read/\"\u003e17 books in 2022\u003c/a\u003e, confirming the slowdown of the last few\nyears. The total number of pages decreased too, albeit not too much compared to\nthe previous year. In 2021, though, there was a significant drop, as in 2020, I\nread 28 books or 8073 pages. Stats have been going down since 2015, which is\ninteresting. Like \u003ca href=\"/three-good-books-i-read-in-2021/\"\u003elast year\u003c/a\u003e, I\u0026rsquo;m not sure why I\u0026rsquo;m reading less. More\ntired? Less interested? I don\u0026rsquo;t know.\u003c/p\u003e","title":"My favorite books of 2022"},{"content":"I tend to shy away from publishing cases, so Stoner has been resting on my yeah-maybe-one-day list for years. Over time I stumbled on notable mentions that kept the book on the fringe of my attention zone. Then one day, I read a brief and intriguing [review][2] in Giovanni Zagni\u0026rsquo;s excellent newsletter, Incertezze. Like me, Zagni suffers from the stay-away-from-editorial-cases idiosyncrasy, but he finally gave in, read the thing, reread it, and finally tagged it a modern classic. Zagni was convincing, yet it took another year before I surrendered my weapons and took the book off the shelf. I immediately realized I was in front of a beautiful book.\nThe New York Review of Books has this to say about the novel:\nJohn Williams\u0026rsquo;s luminous and deeply moving novel is a work of quiet perfection. William Stoner emerges from it not only as an archetypal American but as an unlikely existential hero, standing, like a figure in a painting by Edward Hopper, in stark relief against an unforgiving world.\nI find this description perfectly fit. Like Hopper\u0026rsquo;s paintings, John William\u0026rsquo;s prose is indeed sparse, detached and powerful.\nThe protagonist is a professor of English at the University of Missouri in the first half of the twentieth century. From the outside, his life and attitude appear ordinary and dull, and that\u0026rsquo;s how most former students and colleagues may remember him. And yet, as his life unfolds in the pages, from boyhood at the dirt-poor family farm to college and then adulthood, the reader soon recognizes the William Stoner as a modern hero, incredibly resilient in the face of continued and unremitting harassment from the people and events around him.\nThe author John Williams grew up on a small farm in Texas and had a similar escape to the University as Stoner\u0026rsquo;s. Not coincidentally, I think, the author and protagonist share resembling names. While not an autobiography, the novel is probably imbued with the author\u0026rsquo;s experiences.\nGoing back to Zagni\u0026rsquo;s review, his opinion is the this novel was ahead of its time, which would explain why it wasn\u0026rsquo;t an immediate hit. Indeed,I was struck by the precise and painful description of some characters\u0026rsquo; struggles with mental issues and past abuses and how these can unintentionally affect family dynamics and persist over generations.\nStoner is a deceptively simple novel written in 1965 that tells facts of the early twentieth century, yet it has much to say to the people of the modern age.1\nMy paperback edition (Oscar Mondadori, Italian) includes a remarkable author interview. Also, while researching the book, I dug up an enlightening 2019 The Paris Review interview with Nancy Gardner Williams, his widow. [1]: https://giovannizagni.substack.com/ [2]: https://giovannizagni.substack.com/p/stoner [rss]: https://nicolaiarocci.com/index.xml [m]: https://fosstodon.org/@nicola [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-stoner/","summary":"\u003cp\u003eI tend to shy away from publishing cases, so \u003cem\u003eStoner\u003c/em\u003e has been resting on my\nyeah-maybe-one-day list for years. Over time I stumbled on notable mentions\nthat kept the book on the fringe of my attention zone. Then one day, I read a\nbrief and intriguing [review][2] in Giovanni Zagni\u0026rsquo;s excellent newsletter,\n\u003cem\u003eIncertezze\u003c/em\u003e. Like me, Zagni suffers from the stay-away-from-editorial-cases\nidiosyncrasy, but he finally gave in, read the thing, reread it, and finally\ntagged it a modern classic. Zagni was convincing, yet it took another year\nbefore I surrendered my weapons and took the book off the shelf. I immediately\nrealized I was in front of a beautiful book.\u003c/p\u003e","title":"Book Review: Stoner"},{"content":"Today, my last self-assigned duty before the Christmas break was to migrate our in-house rate-limiting implementation (based on the AspNetCoreRateLimiting third-party package) to the new, shiny rate-limiting middleware introduced by ASP.NET Core 7. While the process was relatively straightforward, I stumbled upon a few quirks I want to annotate here.\nOur use case is simple. We use what the ASP.NET Core 7 documentation defines as a \u0026ldquo;fixed window limiter.\u0026rdquo; It uses a specified time window to limit requests. When the time window expires, a new time window starts, and the request limit is reset. Consider the following code (for convenience, I\u0026rsquo;m using an extension method):\npublic static void ConfigureRateLimit(this IServiceCollection services) { services.AddRateLimiter(x =\u0026gt; x.AddFixedWindowLimiter( policyName: \u0026#34;fixed\u0026#34;, options =\u0026gt; { options.PermitLimit 1; options.Window = TimeSpan.FromSeconds(10); options.QueueLimit 1; })); } It sets a window of 10 seconds. Within that window, a maximum of one request is allowed. Exceeding requests will be queued and served at window reset. Notice that we defined \u0026ldquo;fixed\u0026rdquo; as the policy name.\nOnce our policy is configured, we must instrument the app instance to use the rate limiter, then we call RequireRateLimiting on our endpoints:\napp.UseRouting(); // I\u0026#39;m mentioning this line for good reason, see below app.UseRateLimiter(); app.UseEndpoints(endpoints =\u0026gt; { endpoints.MapControllers() .RequireRateLimiting(\u0026#34;fixed\u0026#34;); }); Nothing else is needed, really, for such a simple scenario. We could be more sophisticated. We could opt for more advanced options, like a \u0026ldquo;sliding windows limiter\u0026rdquo; or a \u0026ldquo;bucket token limiter\u0026rdquo;; we could apply rate limiting only to specific endpoints or controllers or mix and match these options. I chose to ditch hard-coded settings and read them from the configuration file. My appsettings.json contains the following (with different vaues):\n\u0026#34;RateLimiter\u0026#34;: { \u0026#34;PermitLimit\u0026#34;: 1 \u0026#34;Window\u0026#34;: 10, \u0026#34;QueueLimit\u0026#34;: 1 } The RateLimiter class maps the json structure:\npublic class RateLimiter { public int PermitLimit { get; set; } public int Window { get; set; } public int QueueLimit { get; set; } } The updated code looks like this:\npublic static void ConfigureRateLimit(this IServiceCollection services, IConfiguration configuration) { var rateLimiter = new RateLimiter(); configuration.GetSection(\u0026#34;RateLimiter\u0026#34;).Bind(rateLimiter); services.AddRateLimiter(x =\u0026gt; x.AddFixedWindowLimiter( policyName: \u0026#34;fixed\u0026#34;, options =\u0026gt; { options.PermitLimit = rateLimiter.PermitLimit; options.Window = TimeSpan.FromSeconds(rateLimiter.Window); options.QueueLimit = rateLimiter.QueueLimit; })); } I wish I could say it all worked splendidly on the first try. The API was running fine, but it was not rate-limited. It looked like the middleware was not being invoked, or it somehow failed miserably and silently. After an embarrassingly long time, I figured out the problem: UseRateLimiter must be called after UseRouting.\nBefore:\napp.UseRateLimiter(); app.UseRouting(); app.UseEndpoints(endpoints =\u0026gt; { endpoints .MapControllers().RequireRateLimiting(\u0026#34;fixed\u0026#34;); }); After:\napp.UseRouting(); app.UseRateLimiter(); app.UseEndpoints(endpoints =\u0026gt; { endpoints.MapControllers() .RequireRateLimiting(\u0026#34;fixed\u0026#34;); }); Simply switching two lines saved the day. I looked high and low but could not find any reference to this requirement. If intended, it should be mentioned in the documentation. If it is a bug, it should be fixed (and I should probably open at ticket about it.)\nAnyways, now the API is rate-limited via the new middleware. The first request sent via Postman goes through. The second, rapid-fired one is queued and served at window reset, as expected. A third request within the same window is bounced back.\nHowever:\nYou get a 503 Service Unavailable response. I\u0026rsquo;m not in favor of 500 replies for this case. Five-hundreds should be reserved for server errors, and that\u0026rsquo;s not what we are dealing with here. My previous implementation served a more appropriate 429 Too Many Requests. No Retry-After header is included with the response. I think it\u0026rsquo;s mandatory to instruct clients on what to do next. Luckily, the rate-limiting middleware allows for ample customization. On defining our policy, we can attach a custom function to the OnRejected event. The code below is updated to address both issues above:\npublic static class ServicesConfiguration { public static void ConfigureRateLimit(this IServiceCollection services, IConfiguration configuration) { var rateLimiter = new RateLimiter(); configuration.GetSection(\u0026#34;RateLimiter\u0026#34;).Bind(rateLimiter); services.AddRateLimiter(x =\u0026gt; x.AddFixedWindowLimiter( policyName: \u0026#34;fixed\u0026#34;, options =\u0026gt; { options.PermitLimit = rateLimiter.PermitLimit; options.Window = TimeSpan.FromSeconds(rateLimiter.Window); options.QueueLimit = rateLimiter.QueueLimit; }) // new code here: .OnRejected = (context, _) =\u0026gt; { // inject Retry-After header (too much line wrapping, I know) if (context.Lease.TryGetMetadata(MetadataName.RetryAfter, out var retryAfter)) { context.HttpContext.Response.Headers.RetryAfter = ((int) retryAfter.TotalSeconds).ToString(); } // return a different status code context.HttpContext.Response.StatusCode = StatusCodes.Status429TooManyRequests; return new(); }); } And that\u0026rsquo;s all there is to it. I dropped the AspNetCoreRateLimiting dependency. That is one great piece of software, and I am grateful to its author Stefan Prodan and his contributors. As mentioned in My Top 7 New Features in .NET 7, they recently released a package that allows using Redis as a rate-limiting backend. I might adopt it in the future.\nComplete documentation for ASP.NET Core 7 rate-limiting middleware is available here.\n","permalink":"https://nicolaiarocci.com/on-implementing-the-asp.net-core-7-rate-limiting-middleware/","summary":"\u003cp\u003eToday, my last self-assigned duty before the Christmas break was to migrate\nour in-house rate-limiting implementation (based on the\n\u003ca href=\"https://github.com/stefanprodan/AspNetCoreRateLimit\"\u003eAspNetCoreRateLimiting\u003c/a\u003e third-party package) to the new, shiny\n\u003ca href=\"https://devblogs.microsoft.com/dotnet/announcing-rate-limiting-for-dotnet/\"\u003erate-limiting middleware\u003c/a\u003e introduced by ASP.NET Core 7. While the process\nwas relatively straightforward, I stumbled upon a few quirks I want to annotate\nhere.\u003c/p\u003e\n\u003cp\u003eOur use case is simple. We use what the ASP.NET Core 7 documentation defines as\na \u0026ldquo;fixed window limiter.\u0026rdquo; It uses a specified time window to limit requests.\nWhen the time window expires, a new time window starts, and the request limit\nis reset. Consider the following code (for convenience, I\u0026rsquo;m using an extension\nmethod):\u003c/p\u003e","title":"On implementing the ASP.NET Core 7 rate-limiting middleware"},{"content":" And we must remind ourselves that growth occurs in intervals: there are times of growth, and there are times of non-growth. The latter isn’t a failure so much as a necessary period of rest. Dormancy isn’t stagnant; it’s potentiating. It’s patient. If you’ve grown a lot in the past however many months or years and now feel that growth coming to a close, don’t fret right away. Wait. Reflect on what you’ve learned. Look for signs of spring. Move to where there’s water, if you need to. But don’t rush. There will be time again for running and jumping, when you’re ready.\nMore here.\n","permalink":"https://nicolaiarocci.com/latewood/","summary":"\u003cblockquote\u003e\n\u003cp\u003eAnd we must remind ourselves that growth occurs in intervals: there are times\nof growth, and there are times of non-growth. The latter isn’t a failure so\nmuch as a necessary period of rest. Dormancy isn’t stagnant; it’s\npotentiating. It’s patient. If you’ve grown a lot in the past however many\nmonths or years and now feel that growth coming to a close, don’t fret right\naway. Wait. Reflect on what you’ve learned. Look for signs of spring. Move to\nwhere there’s water, if you need to. But don’t rush. There will be time again\nfor running and jumping, when you’re ready.\u003c/p\u003e","title":"Latewood"},{"content":"This short novel was a genuine surprise. I certainly didn\u0026rsquo;t expect Voltaire to be this accessible, witty, sarcastic, and also outrageous for the era (1759). Below the surface of a seemingly entertaining and often absurd sequence of improbable events is a constant philosophical struggle. Quoting from the back cover:\nCandide is the story of a gentle man who, though pummeled and slapped in every direction by fate, clings desperately to the belief that he lives in \u0026ldquo;the best of all possible worlds.\u0026rdquo; On the surface a witty, bantering tale, this eighteenth-century classic is actually a savage, satiric thrust at the philosophical optimism that proclaims that all disaster and human suffering is part of a benevolent cosmic plan.\nHis wondrous adventures around the world teach Candide that, contrary to the teachings of his distinguished tutor Dr. Pangloss, all is not always for the best.\nWith Candide, Voltaire ridicules religion, theologians, governments, armies, philosophies, and philosophers (Leibniz being his first target). An erratic, fantastical, picaresque novel with a fast-moving plot that enjoyed both great success and scandal at the time of its release.\n","permalink":"https://nicolaiarocci.com/book-review-candide/","summary":"\u003cp\u003eThis short novel was a genuine surprise. I certainly didn\u0026rsquo;t expect Voltaire to\nbe this accessible, witty, sarcastic, and also outrageous for the era (1759).\nBelow the surface of a seemingly entertaining and often absurd sequence of\nimprobable events is a constant philosophical struggle. Quoting from the back\ncover:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCandide is the story of a gentle man who, though pummeled and slapped in\nevery direction by fate, clings desperately to the belief that he lives in\n\u0026ldquo;the best of all possible worlds.\u0026rdquo; On the surface a witty, bantering tale,\nthis eighteenth-century classic is actually a savage, satiric thrust at the\nphilosophical optimism that proclaims that all disaster and human suffering\nis part of a benevolent cosmic plan.\u003c/p\u003e","title":"Book Review: Candide"},{"content":"It\u0026rsquo;s mind-blowing that today scientists can \u0026ldquo;extract genetic material from the letters written [in 1475] by Vlad Dracula [\u0026hellip;] and, from that, build up a picture of not only the physical makeup of the Wallachian warlord who became known as Vlad the Impaler but also the environmental conditions in which he lived.\u0026rdquo;\nAlso, I\u0026rsquo;m not surprised that similar investigations revealed that Mikhail Bulgakov was under morphine when he wrote his masterpiece, The Master and Margarita (one of my all-time favorite books).\nFull article is available here.\n","permalink":"https://nicolaiarocci.com/what-was-dracula-really-like/","summary":"\u003cp\u003eIt\u0026rsquo;s mind-blowing that today scientists can \u0026ldquo;extract genetic material from the\nletters written [in 1475] by Vlad Dracula [\u0026hellip;] and, from that, build up a\npicture of not only the physical makeup of the Wallachian warlord who became\nknown as Vlad the Impaler but also the environmental conditions in which he\nlived.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eAlso, I\u0026rsquo;m \u003cem\u003enot\u003c/em\u003e surprised that similar investigations revealed that Mikhail\nBulgakov was under morphine when he wrote his masterpiece, The Master and\nMargarita (one of my all-time favorite books).\u003c/p\u003e","title":"What was Dracula really like?"},{"content":"Today I upgraded to JetBrains\u0026rsquo; Rider 2022.3. Startup speed has been enhanced, and full .NET 7 and C# 11 support is included. So far, my favorite feature is the conversion of regular and verbatim strings into their raw counterparts (it\u0026rsquo;s often the small, simple things.)\nMy second best is the fulls upport for WSL2 remote development. This one took a good while to come out of the trenches, but better late than never, I\u0026rsquo;d say.\nAnd the new experimental UI? That\u0026rsquo;s neat too.\nThe full list of updates is available on their What\u0026rsquo;s New page.\n","permalink":"https://nicolaiarocci.com/first-impressions-on-jetbrains-rider-2022.3-update/","summary":"\u003cp\u003eToday I upgraded to JetBrains\u0026rsquo; Rider 2022.3. Startup speed has been\nenhanced, and full .NET 7 and C# 11 support is included. So far,  my favorite\nfeature is the conversion of regular and verbatim strings into their raw\ncounterparts (it\u0026rsquo;s often the small, simple things.)\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/cs-to-raw-strings.gif\"\u003e\u003c/p\u003e\n\u003cp\u003eMy second best is the fulls upport for WSL2  remote development. This one took a\ngood while to come out of the trenches, but better late than never, I\u0026rsquo;d say.\u003c/p\u003e","title":"First impressions on JetBrains Rider 2022.3 update"},{"content":"When We Cease to Understand the World, by Benjamin Labatut, is a strange narrative object. It mixes fact and fiction in imaginative ways, sometimes making it hard for the reader to distinguish between them, which is probably a testimonial to the experiment\u0026rsquo;s success. As I was reading, Wu Ming\u0026rsquo;s unidentified narrative objects (UNO) came to mind. If it doesn\u0026rsquo;t qualify as UNO, it comes close enough. It certainly fits the \u0026lsquo;faction\u0026rsquo; (fact+fiction) genre, if such a thing exists.\nThe lives of brilliant scientists of the 19th century, whose discoveries changed how we understand and perceive the world, are told by drawing on their biographies and filling in, where necessary, with well-told, captivating inventions. Some protagonists are well-known (Heisenberg, Schrödinger), and others, while first-grade stars in their field, are relatively unknown to the layman, or at least, they were to me.\nAstronomer and physicist Karl Schwarzschild is one of them. In 1915 he provided the first exact solution to the Einstein field equations of general relativity. Karl accomplished this tremendous feat while serving on the Russian front during World War I. On December 22, 1915, a letter contaikning the solution to Einstein\u0026rsquo;s dilemma was sent from the trenches. One month later, Einstein acknowledged it with enthusiasm and then, only five months later, on May 11, 1916, Schwarzschild died from a disease he developed at the Russian front.\nMathematician Alexander Grothendieck is another one I didn\u0026rsquo;t know about, whose life was fascinating. A stateless mathematician who became the leading figure in the creation of modern algebraic geometry, he received the Fields Medal in 1966. While still producing relevant work, Alexander withdrew from the mathematical community and devoted himself to political and religious pursuits. In 1991, he moved to the French village of Lasserre in the Pyrenees, where he lived in seclusion, still working tirelessly on mathematics and his philosophical and religious thoughts until he died in 2014.\nAnd there\u0026rsquo;s the extraordinary and controversial figure of Fritz Haber, the german Nobel Prize chemist. His inventions allowed for the industrialization and large-scale production of fertilizers and explosives. He became renowned as the \u0026ldquo;father of chemical warfare\u0026rdquo; during World War I. His pioneering work developing and weaponizing chlorine and other poisonous gases led to the cruel death of tens of thousands of soldiers in WWI. His work led to the infamous Zyklon B, responsible for killing millions of Jewish people in World War II (Haber was of Jewish origins.)\nAgain, the problem with \u0026lsquo;faction\u0026rsquo; is that you never know whether you\u0026rsquo;re reading facts, making it hard to distinguish between actual stories and invention. Much of fiction went into the main story, the gripping battle over quantum mechanics between Heisenberg and Schrödinger, and in their biographies especially1.\nA book worth reading.\nIn 2020, I read a non-fictionalized account of Heisenberg\u0026rsquo;s and Schrödinger\u0026rsquo;s struggles with quantum in Carlo Rovelli\u0026rsquo;s excellent Helgoland. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-when-we-cease-to-understand-the-world/","summary":"\u003cp\u003eWhen We Cease to Understand the World, by Benjamin Labatut, is a strange\nnarrative object. It mixes fact and fiction in imaginative ways, sometimes\nmaking it hard for the reader to distinguish between them, which is probably a\ntestimonial to the experiment\u0026rsquo;s success. As I was reading, Wu Ming\u0026rsquo;s\n\u003ca href=\"https://www.jstor.org/stable/10.5749/j.ctt1j7x9vm.10#metadata_info_tab_contents\"\u003eunidentified narrative objects (UNO) \u003c/a\u003e came to mind. If it doesn\u0026rsquo;t qualify\nas UNO, it comes close enough. It certainly fits the \u0026lsquo;faction\u0026rsquo; (fact+fiction)\ngenre, if such a thing exists.\u003c/p\u003e","title":"Book Review: When We Cease to Understand the World"},{"content":" I find, more often than not, that I understand something much less well when I sit down to write about it than when I\u0026rsquo;m thinking about it in the shower. In fact, I find that I change my own mind on things a lot when I try write them down. It really is a powerful tool for finding clarity in your own mind. Once you have clarity in your own mind, you\u0026rsquo;re much more able to explain it to others.\nMore here.\n","permalink":"https://nicolaiarocci.com/writing-is-magic/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI find, more often than not, that I understand something much less well when\nI sit down to write about it than when I\u0026rsquo;m thinking about it in the shower.\nIn fact, I find that I change my own mind on things a lot when I try write\nthem down. It really is a powerful tool for finding clarity in your own mind.\nOnce you have clarity in your own mind, you\u0026rsquo;re much more able to explain it\nto others.\u003c/p\u003e","title":"Writing is Magic"},{"content":" While it has been a very challenging and difficult time for the company, it cannot even remotely be compared with the horrendous situation that the people of Ukraine are facing on a daily basis, caused by the war. Once again, we condemn this aggression, and have and will continue to stand by the people of Ukraine, including our colleagues and their families. More here.\nI\u0026rsquo;m using JetBrains products when I\u0026rsquo;m not in (neo)vim. For C#, Rider is fantastic, and so is PyCharm for Python. The company is incredible, too, as today\u0026rsquo;s bold move demonstrates. They moved 800 employees, got visas, new locations and apartments, everything. Huge respect.\nI\u0026rsquo;m lucky enough to have been awarded their Open Source License for many years, so I\u0026rsquo;m biased, but look, now I\u0026rsquo;m even proud of supporting their products (via).\n","permalink":"https://nicolaiarocci.com/jetbrains-has-left-russia/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhile it has been a very challenging and difficult time for the company, it\ncannot even remotely be compared with the horrendous situation that the\npeople of Ukraine are facing on a daily basis, caused by the war. Once again,\nwe condemn this aggression, and have and will continue to stand by the people\nof Ukraine, including our colleagues and their families. \u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://blog.jetbrains.com/blog/2022/12/06/update-on-jetbrains-statement-on-ukraine/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m using JetBrains products when I\u0026rsquo;m not in (neo)vim. For C#, Rider is\nfantastic, and so is PyCharm for Python. The company is incredible, too, as\ntoday\u0026rsquo;s bold move demonstrates. They moved 800 employees, got visas, new\nlocations and apartments, everything. Huge respect.\u003c/p\u003e","title":"JetBrains has left Russia"},{"content":" Despite its name suggesting otherwise, Dune II was a first – a real-time strategy game that sprang out of the box with almost every gameplay attribute and control system seen in every RTS since. In direct lineage, it was the father of the globally successful Command \u0026amp; Conquer franchise, in that its code was used as a basis of the first game of the series. Yet in terms of wider influence, the battles first fought out on the vibrant sands of Arrakis continue to echo through modern videogaming.\nMore here, with beautiful illustrations to boost\nDune II is one of the few video game boxes I keep. It\u0026rsquo;s comfortably resting in the library behind me, along with other jewels from the distant past.\nReading the Making of Dune II took me down memory lane (via).\n","permalink":"https://nicolaiarocci.com/the-making-of-dune-ii/","summary":"\u003cblockquote\u003e\n\u003cp\u003eDespite its name suggesting otherwise, Dune II was a first – a real-time\nstrategy game that sprang out of the box with almost every gameplay attribute\nand control system seen in every RTS since. In direct lineage, it was the\nfather of the globally successful Command \u0026amp; Conquer franchise, in that its\ncode was used as a basis of the first game of the series. Yet in terms of\nwider influence, the battles first fought out on the vibrant sands of Arrakis\ncontinue to echo through modern videogaming.\u003c/p\u003e","title":"The Making of Dune II"},{"content":"The other day we did a .NET 7 Spotlight event at this month\u0026rsquo;s DevRomagna meetup. The speakers were Ugo Lattanzi and me. In my session, I chose to talk about my top 7 new features in .NET 7 (pun intended.) What follows is a mix of my preparation notes and what I ended up really saying1.\n1. Performance Since the initial release of \u0026ldquo;new dotnet\u0026rdquo; (.NET Core), performance has always been a critical goal for the .NET team. Starting with .NET 5, performance gains have been skyrocketing. .NET 6 was a lot faster than 5, and now, well, I\u0026rsquo;m surprised by the remarkable performance improvements in .NET 7. Stephen Toub posted a remarkably long (255 printed pages!) in-depth analysis of the performance improvements in .NET 7. one That was followed by articles dedicated to ASP.NET Core 7 and MAUI 7 performance gains. At .NETConf 2022, a particular slide caught everyone\u0026rsquo;s attention.\nI recall seeing the same slide at the .NET 5 release, so this one is must be updated version. I\u0026rsquo;m more impressed with the gRPC graph than the big \u0026ldquo;11x faster than Node\u0026rdquo; one. Being faster than Node doesn\u0026rsquo;t break the news these days, but being quicker than Go, C++ and Rust? That\u0026rsquo;s one bold statement you have right there.\nAn exciting article surfaced a while ago on this specific topic. In it, Dustin Moris Gorski presents an in-depth analysis of the ASP.NET Core 7 code used for the TechEmpower Framework Benchmark referenced in the above slide. The results are\u0026hellip; fascinating. That code is undoubtedly not what mere mortals tend to run in their production systems. It is super-performance-optimized, often ditching canonical, built-in, and wildly adopted features in favor of low-level, high-performance and precisely hand-crafted alternatives. Dustin\u0026rsquo;s article is a masterpiece for several reasons; I suggest you invest your time reading it.\nBut yeah, despite this glitch, the takeaway is that .NET 7 is speedy, faster than previous versions, and on par with, if not (far?) superior to, most stacks and frameworks. The Stephen Toub\u0026rsquo;s article is a testament to the massive work done and the achievements obtained.\nMost importantely, we get most of these speed benefits for free, just by upgrading to .NET 7. And the good new is, the upgrade is as easy as changing the framework moniker from, say, net6.0 to net7.0 and upgrading the Microsoft dependencies to v7.0.0.\n2. C# 11 required modifier As a consequence of the C# release cycle alignment to that of.NET itself (which is much faster), recent versions of C# see fewer features announcements than in the past. A good thing in my opinion. Of the several appreciable new features coming with C# 11, a remarkable one is the required modifier.\nWhen you enable nullable checks in a project, non-nullable string properties are flagged with warning that they should be initialized with a non-null value when exiting the constructor:\nA common workaround has been these properties them with a null! value. That is like telling the compiler that we know they should be initialized with a non-nullable, but well, let\u0026rsquo;s initialize them with a null value first, just in case. It\u0026rsquo;ll all be sorted later in the code. Somewhat awkward and prone to errors. Also, battling the compiler like that is a tedious task.\nEnter the required keyword. When you flag a property with required, the IntelliSense engine will report an error if the property value is not set at initialization, not at declaration.\nWhen someone initializes our class instance, he/she\u0026rsquo;s required to set an explicit value for our property. Notice how we went from a warning (which will compile) to an error (which won\u0026rsquo;t compile). Once you start using this feature, it feels so obvious and natural that you wonder why it wasn\u0026rsquo;t there right from start.\n3. C# 11 raw string literals In C# 11, wrapping a string with triple-double-quotes makes it a raw literal. Its main benefits are that no escaping of double-quotes is necessary, and newlines are allowed within the string.\nvar xml = \u0026#34;\u0026#34;\u0026#34; \u0026lt;element attr=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/element\u0026gt; \u0026#34;\u0026#34;\u0026#34;; The code looks natural, and no runtime costs for specialized string manipulation are required. One caveat is that string literals naturally remove the indentation when producing the final literal value. The snippet above prints as:\n\u0026lt;element attr=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/element\u0026gt; We can disable indentation removal like so:\nvar xml = \u0026#34;\u0026#34;\u0026#34; \u0026lt;element attr=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/element\u0026gt; \u0026#34;\u0026#34;\u0026#34;; String interpolation is also supported:\nvar json = $$\u0026#34;\u0026#34;\u0026#34; { \u0026#34;summary\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;length\u0026#34; : {{value.Length}}, }; \u0026#34;\u0026#34;\u0026#34; In hindsight, like the required modifier, raw string literals appear as obvious.\n4. Built-in container support .NET 7 has built-in container support, meaning that dotnet publish can now output to a container image instead of a directory. We control image names, tags, and other settings (like the base image) via dedicated .csproj tags. Two requirements:\nDocker must be running when we issue the publish command; The Microsoft.NET.Build.Containers package must be added to the project as a package reference. In my demo, I had a small console application that I published to a docker image by simply issuing the following command:\n$ dotnet publish --os linux --arch x64 /t:PublishContainer -c Release I did not mention a Dockerfile, and that\u0026rsquo;s because it is not needed anymore. All my projects deploy to docker containers and are already migrated to .NET 7. I\u0026rsquo;m currently using Dockerfiles, but I\u0026rsquo;ll be experimenting with this alternative in the coming weeks, both with builds and remote CI builds.\n5. Native AOT Native AOT produces a standalone executable in the target platform\u0026rsquo;s file format, with no external dependencies. It\u0026rsquo;s native, with no IL or JIT involved, and provides fast startup time and a small, self-contained deployment.\nIn my demo, I just needed to add a \u0026lt;PublishAot\u0026gt;true\u0026lt;/PublishAot\u0026gt; tag to the .csproj, and then the dotnet publish -c Release command produced a single-file, macOS native executable. You can set the destination platform at build-time like so:\n$ dotnet publish -r win-x64 -c Release Native AOT will be determinant in a number of use cases, like multi-cloud-deployments, lambda functions, and, in general, hyper-scale services. ASP.NET Core is currently not supported, so we\u0026rsquo;re limited to console apps.\n6 and 7. Rate-limiting and output caching Ok, these are two, not one. Luckily, my pal Ugo, who was demoing ASP.NET Core 7 parts after me, took charge of showing these.\nI briefly mentioned that rate-limiting and output caching are key features in mature production systems. Until today, we had to bake them in-house or rely on third-party packages. I\u0026rsquo;ve been using LazyCache and AspNetCoreRateLimit myself. The latter recently acknowledged the arrival of rate-limiting in .NET 7 and embraced it in a new package that offers Redis as a rate-limiting backend. Rate-limiting and output caching are now part of the ASP.NET Core framework, and that\u0026rsquo;s where they belong.\n8. Minimal APIs group routes I know I said 7. I don\u0026rsquo;t use minimal APIs in production yet, but group routing is beautiful and something I\u0026rsquo;ll be employing on the first occasion. During the meetup, an interesting (and much-expected) discussion ensued on the usefulness of minimal APIs. Veterans of many battles don\u0026rsquo;t deem them necessary, especially in real-world use cases, which is actually accurate: one can keep relying on the canonical MVC approach. The sentiment was that Minimal APIs are mostly targeted to newcomers, which is probably true2. As someone coming from the Python REST ecosystem, I dig them a lot. They evolve rapidly and I\u0026rsquo;m sure we\u0026rsquo;ll soon see them in action in complex, real scenarios.\nTo Caesar what is Caesar\u0026rsquo;s, short on time, I recycled both the idea and the materials from James Montemagno\u0026rsquo;s excellent video on the same the topic.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nBack when Minimal APIs were about to debut, I wrote Will .NET 6 Minimal APIs turn heads?, with some musings on their effectiveness and target audience.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/my-top-7-new-features-in-.net-7/","summary":"\u003cp\u003eThe other day we did a \u003ca href=\"https://www.meetup.com/it-IT/devromagna/events/289709131/\"\u003e.NET 7 Spotlight\u003c/a\u003e event at this month\u0026rsquo;s\n\u003ca href=\"https://www.meetup.com/it-IT/devromagna/\"\u003eDevRomagna\u003c/a\u003e meetup. The speakers were \u003ca href=\"https://twitter.com/imperugo\"\u003eUgo Lattanzi\u003c/a\u003e and me. In my\nsession, I chose to talk about my top 7 new features in .NET 7 (pun intended.)\nWhat follows is a mix of my preparation notes and what I ended up really\nsaying\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e\n\u003ch2 id=\"1-performance\"\u003e1. Performance\u003c/h2\u003e\n\u003cp\u003eSince the initial release of \u0026ldquo;new dotnet\u0026rdquo; (.NET Core), performance has always\nbeen a critical goal for the .NET team. Starting with .NET 5, performance gains\nhave been skyrocketing. .NET 6 was \u003cem\u003ea lot\u003c/em\u003e faster than 5, and now, well, I\u0026rsquo;m\nsurprised by the remarkable performance improvements in .NET 7. Stephen Toub\nposted a remarkably long (255 printed pages!) \u003ca href=\"https://devblogs.microsoft.com/dotnet/performance_improvements_in_net_7\"\u003ein-depth analysis of the\nperformance improvements in .NET 7\u003c/a\u003e. one That was followed by articles\ndedicated to \u003ca href=\"https://devblogs.microsoft.com/dotnet/performance-improvements-in-aspnet-core-7/\"\u003eASP.NET Core 7\u003c/a\u003e and \u003ca href=\"https://devblogs.microsoft.com/dotnet/dotnet-7-performance-improvements-in-dotnet-maui/\"\u003eMAUI 7\u003c/a\u003e performance gains. At .NETConf\n2022, a particular slide caught everyone\u0026rsquo;s attention.\u003c/p\u003e","title":"My Top 7 New Features in .NET 7"},{"content":"Wrapped by Spotify, the 2022 edition just landed in my mailbox. This year I listened to twenty-four different genres. My favorite was Indie Jazz, followed by Hip Hop, Jazz, Electronica and Rock. I am a little puzzled about that Hip Hop in second place. In total, I spent 14143 minutes listening to music, 80 percent more than other listeners in Italy did.\nMy favorite track was Fear Of The Dawn by Jack White, followed by The Beginning by Native Soul, Sorcery by The Toxic Avenger, Spirals by Django Django, and Boy From Michigan by John Grant.\nMy favorite artists have been Max Gazzè (a recent rediscovery-and reappraisal), Rosalía, Accademia Bizantina, Subsonica and Jack White. Again, color me a little surprised. I like Max Gazzè, but I\u0026rsquo;d swear I listened to many other artists for at least the same amount of time, if not (way) more. But what do I know? One cannot beat the algorithm, right?\nMy “music personality,” as Spotify calls it, would be that of a “serious relationship: you carefully select the music and artists you listen to but have a lot of affection to give. If you like an artist, then it’s serious.” Which I have to admit is kind of my general attitude, not just toward music. Here\u0026rsquo;s my top 101 (not a typo) for 2022:\nMy Top Songs of 2022 ","permalink":"https://nicolaiarocci.com/my-music-in-2022-according-to-spotify/","summary":"\u003cp\u003eWrapped by Spotify, the 2022 edition just landed in my mailbox. This year I\nlistened to twenty-four different genres. My favorite was Indie Jazz, followed\nby Hip Hop, Jazz, Electronica and Rock. I am a little puzzled about that Hip\nHop in second place. In total, I spent 14143 minutes listening to music, 80\npercent more than other listeners in Italy did.\u003c/p\u003e\n\u003cp\u003eMy favorite track was \u003ca href=\"https://open.spotify.com/track/4v6soAl2R4sJB6Iyt2aiHw?si=5101c8519ddb4a2b\"\u003eFear Of The Dawn\u003c/a\u003e by Jack White, followed by \u003ca href=\"https://open.spotify.com/track/3FoXWHV24HO9rpcwkYa9lF?si=773fe3def78c4423\"\u003eThe\nBeginning\u003c/a\u003e by Native Soul, \u003ca href=\"https://open.spotify.com/track/4HWC8Ymr2TlkTo97ttMiIq?si=10862b9eee7b496c\"\u003eSorcery\u003c/a\u003e by The Toxic Avenger, \u003ca href=\"https://open.spotify.com/track/3Uxjvj6TXr742JOFa7qYn6?si=074fa76aa8c64b8b\"\u003eSpirals\u003c/a\u003e by\nDjango Django, and \u003ca href=\"https://open.spotify.com/track/2LRiyKKJf2RTuFx31DEU6E?si=57c827fd08b2499b\"\u003eBoy From Michigan\u003c/a\u003e by John Grant.\u003c/p\u003e","title":"My Music in 2022 according to Spotify"},{"content":"Marcus Hutchins on Mastodon:\nWhat I missed about Mastodon was its very different culture. Ad-driven social media platforms are willing to tolerate monumental volumes of abusive users. They’ve discovered the same thing the Mainstream Media did: negative emotions grip people’s attention harder than positive ones. Hate and fear drives engagement, and engagement drives ad impressions.\nMore here.\nI have been on Mastodon for a few weeks now, and wow, what a breath of fresh air. I\u0026rsquo;m only syndicating to Twitter (and have been for a while, as you might have noticed) while I\u0026rsquo;m active and engaged on Masto. I know this is breaking my POSSE stance so much that I\u0026rsquo;ve set up my own Masto instance so I could own my content over there like I do with this website. I never switched from fosstodon (which is an instance I like a lot), though. I\u0026rsquo;ll wait a little bit and then decide on the move.\nWhat impresses me is the atmosphere and overall level of engagement on Masto. I have 2.1k followers on Twitter and just a little over 100 on Masto, and yet, the Masto feed is so much richer and more interesting, and the interaction level is incomparable. The Masto vibe these days reminds me of Twitter when I joined back in 2009. Better yet, of the old BBS days, or Usenet. Hopefully, it will last, and, for the reasons outlined by Marcus\u0026rsquo; post above (mandatory read, IMHO), I am confident it will.\nJoin me on Mastodon.\n","permalink":"https://nicolaiarocci.com/i-am-on-mastodon-and-i-love-it/","summary":"\u003cp\u003eMarcus Hutchins on Mastodon:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhat I missed about Mastodon was its very different culture. Ad-driven social\nmedia platforms are willing to tolerate monumental volumes of abusive users.\nThey’ve discovered the same thing the Mainstream Media did: negative emotions\ngrip people’s attention harder than positive ones. Hate and fear drives\nengagement, and engagement drives ad impressions.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://escapingtech.com/tech/opinions/i-was-wrong-about-mastodon-moderation.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI have been on Mastodon for a few weeks now, and wow, what a breath of fresh\nair. I\u0026rsquo;m only syndicating to Twitter (and have been for a while, as you might\nhave noticed) while I\u0026rsquo;m active and engaged on Masto. I know this is breaking my\n\u003ca href=\"https://indieweb.org/POSSE\"\u003ePOSSE\u003c/a\u003e stance so much that I\u0026rsquo;ve set up my own Masto instance so I could own my\ncontent over there like I do with this website. I never switched from fosstodon\n(which is an instance I like a lot), though. I\u0026rsquo;ll wait a little bit and then\ndecide on the move.\u003c/p\u003e","title":"I am on Mastodon and I love it"},{"content":"Masen\u0026rsquo;ka (or Mary) is Nabokov\u0026rsquo;s debut novel. It was written when he was in his twenties, living as an émigré in Berlin, just like the story\u0026rsquo;s protagonist. In the introduction of my Italian edition (Adelphi), the author admits that some life events poured into the narration. The depiction of Ganin\u0026rsquo;s life in a pension filled with fellow Russian ex-pats, and the relationships between them, is undoubtedly reminiscent of Nabokov\u0026rsquo;s own experience.\nSeveral of the themes of this story will be recurrent in his later works: memory, Russian ex-pat, nostalgia and a yearning for the past, which is, in fact, the central theme here. Young Nabokov\u0026rsquo;s prose is good but not as great as in his later works. Here, we appreciate the beginnings of what will eventually pupate and make Nabokov one of the greatest.\nWith this work, Nabokov tells us that no matter the pomp and nostalgia, one must leave the past behind and let the present life flow.\n","permalink":"https://nicolaiarocci.com/book-review-ma%C5%A1enka/","summary":"\u003cp\u003eMasen\u0026rsquo;ka (or Mary) is Nabokov\u0026rsquo;s debut novel. It was written when he was in his\ntwenties, living as an émigré in Berlin, just like the story\u0026rsquo;s protagonist. In\nthe introduction of my Italian edition (Adelphi), the author admits that some\nlife events poured into the narration. The depiction of Ganin\u0026rsquo;s life in a\npension filled with fellow Russian ex-pats, and the relationships between them,\nis undoubtedly reminiscent of Nabokov\u0026rsquo;s own experience.\u003c/p\u003e","title":"Book Review: Mašen'ka"},{"content":"Yesterday the creator of the Python language, Guido van Rossum, tweeted about The Origins of Python, an essay by his mentor, Lambert Meertens.\n\u0026ldquo;On Sunday, June 21, 1970, in an office building on Great Portland Street in London, a teletype sprang to life. Under the heading \u0026ldquo;HAPPY FAMILIES,\u0026rdquo; the machine rattled out a sequence of English sentences, such as \u0026ldquo;THE DOG SITS ON THE BABY\u0026rdquo; and \u0026ldquo;UNCLE TED PLAYS WITH SISTER.\u0026rdquo; The \u0026ldquo;Happy Families\u0026rdquo; program that produced this output had been written that same weekend by someone with no prior programming experience, a participant in a workshop organized by the Computer Arts Society offering a course in \u0026ldquo;non-numerical programming.\u0026rdquo;\nAlmost fifty years later, on October 26, 2019, in Istanbul, the eyes of a young woman lit up as she managed to get her very first program to run. She was attending a workshop organized by Django Girls, an international non-profit organization aiming to empower women through free, one-day programming workshops.\nThe programming language used at the London workshop in 1970 was TELCOMP, a simple unstructured language similar to BASIC—not BASIC as it is now, but unstructured BASIC as it was then. The programming language taught at the Istanbul workshop in 2019 was Python, a programming language designed by Guido van Rossum that has become wildly popular, steadily gaining in popularity since an inconspicuous public release in 1991. As far apart as these events are, both in time and geography, an arc of history connects them.\u0026rdquo;\nIt is a magnificent article. If you\u0026rsquo;re passionate about Python, and programming languages in general, make sure to read it.1\nIn the same vein, another outstanding reading would be The Early History of F#. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-origins-of-python/","summary":"\u003cp\u003eYesterday the creator of the Python language, Guido van Rossum, \u003ca href=\"https://twitter.com/gvanrossum/status/1596268474518876160\"\u003etweeted\u003c/a\u003e\nabout \u003ca href=\"https://inference-review.com/article/the-origins-of-python\"\u003eThe Origins of Python\u003c/a\u003e, an essay by his mentor, Lambert Meertens.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;On Sunday, June 21, 1970, in an office building on Great Portland Street in\nLondon, a teletype sprang to life. Under the heading \u0026ldquo;HAPPY FAMILIES,\u0026rdquo; the\nmachine rattled out a sequence of English sentences, such as \u0026ldquo;THE DOG SITS ON\nTHE BABY\u0026rdquo; and \u0026ldquo;UNCLE TED PLAYS WITH SISTER.\u0026rdquo; The \u0026ldquo;Happy Families\u0026rdquo; program\nthat produced this output had been written that same weekend by someone with\nno prior programming experience, a participant in a workshop organized by the\nComputer Arts Society offering a course in \u0026ldquo;non-numerical programming.\u0026rdquo;\u003c/p\u003e","title":"The Origins of Python"},{"content":"The Crow Comes Last is a collection of thirty short stories written between 1945 and 1948, primarily based on the author\u0026rsquo;s wartime experiences as a resistance fighter during WWII and then in postwar Italy. Some are brutal, others funny, and some are gritty. They all revolve around the themes he perfectly defined while talking about his book:\nI prefer to divide the subject into three parts, to highlight three thematic lines of my work from those years. The first is the \u0026lsquo;Resistance\u0026rsquo; story (or at any rate of war or violence), seen as an adventure of suspense or terror, a type of fiction that quite a few of us did at that time. The second line is also common to much fiction of those years and is the postwar picaresque tale, stories coloured by elemental characters and appetites. In the third, the landscape of the Riviera dominates, with boys or teenagers and animals. This last line is a personal development of a \u0026rsquo;literature of memory. Needless to say, the three lines often.\nAlthough mainly written in the neorealist style, many scenes are infused with visionary, fable-like elements characteristic of Calvino\u0026rsquo;s later fantasy period. My favourites are Adam, One Afternoon, Theft in the Cake Shop, The Cat and the Policeman, Fear on the Foothpath, and The Crow Comes Last.\nShort story collections are not fancy these days and probably never have been. Yet this is a book I would probably suggest to someone coming to Calvino for the first time, as some of his full-length novels can sometimes feel too \u0026ldquo;esotheric\u0026rdquo; to the newcomer.\n","permalink":"https://nicolaiarocci.com/book-review-the-crow-comes-last/","summary":"\u003cp\u003eThe Crow Comes Last is a collection of thirty short stories written between\n1945 and 1948, primarily based on the author\u0026rsquo;s wartime experiences as a\nresistance fighter during WWII and then in postwar Italy. Some are brutal,\nothers funny, and some are gritty. They all revolve around the themes he\nperfectly defined while talking about his book:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI prefer to divide the subject into three parts, to highlight three thematic\nlines of my work from those years. The first is the \u0026lsquo;Resistance\u0026rsquo; story (or at\nany rate of war or violence), seen as an adventure of suspense or terror, a\ntype of fiction that quite a few of us did at that time. The second line is\nalso common to much fiction of those years and is the postwar picaresque\ntale, stories coloured by elemental characters and appetites. In the third,\nthe landscape of the Riviera dominates, with boys or teenagers and animals.\nThis last line is a personal development of a \u0026rsquo;literature of memory. Needless\nto say, the three lines often.\u003c/p\u003e","title":"Book Review: The Crow Comes Last"},{"content":"There\u0026rsquo;s regular hiking, and then there\u0026rsquo;s Antarctica hiking. Check out brr\u0026rsquo;s report of a Sunday\u0026rsquo;s hike from McMurdo\u0026rsquo;s base up to the tip of Castle Rock, with spectacular views of Mount Erebus and the surroundings.\nbrr\u0026rsquo;s Antarticta blog is a recent addition to my RSS feed collection. It\u0026rsquo;s always interesting to follow people living and working in the most remote parts of the world.\n","permalink":"https://nicolaiarocci.com/castle-rock-climb-in-antarctica/","summary":"\u003cp\u003eThere\u0026rsquo;s regular hiking, and then there\u0026rsquo;s Antarctica hiking. Check out \u003ca href=\"https://brr.fyi/posts/castle-rock-climb\"\u003ebrr\u0026rsquo;s\nreport of a Sunday\u0026rsquo;s hike\u003c/a\u003e from McMurdo\u0026rsquo;s base up to the tip of Castle\nRock, with spectacular views of Mount Erebus and the surroundings.\u003c/p\u003e\n\u003cp\u003ebrr\u0026rsquo;s Antarticta blog is a recent addition to my RSS feed collection. It\u0026rsquo;s\nalways interesting to follow people living and working in the most remote parts\nof the world.\u003c/p\u003e","title":"Castle Rock Climb in Antarctica"},{"content":"I just released Eve 2.0.4, the REST API framework for #python. It\u0026rsquo;s available on PyPI and includes a relevant security fix so you might want to update ASAP.\nPackage info Docs ","permalink":"https://nicolaiarocci.com/eve-2.0.4-released/","summary":"\u003cp\u003eI just released Eve 2.0.4, the REST API framework for #python. It\u0026rsquo;s available\non PyPI and includes a relevant security fix so you might want to update ASAP.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://pypi.org/project/Eve/2.0.4/\"\u003ePackage info\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.python-eve.org/en/stable/\"\u003eDocs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Eve 2.0.4 released"},{"content":"Nerdy prelude. Local Bulletin Board Systems (BBS) were all the range when I was a teenager. With my group of local hackers, we hacked our way into ITAPAC, the then-leading Italian packet-switching network (we are talking pre-Internet era here.) Via ITAPAC, we\u0026rsquo;d connect to so-called \u0026ldquo;out-dial systems\u0026rdquo; in the USA. From one of those, we\u0026rsquo;d finally call our target BBSes with a local call at no cost. We felt so invincible! I signed up on Channel One BBS; I think that was the name. This particular BBS was located in Cambridge, MA, and was chock-full of public domain and shareware I could download. Anyways, the SysOp sent me a postcard confirming my signup (an old-school paper postcard delivered via international postal service). Receiving a postcard from the US was exciting in itself, but what was startling was a handwritten note on the postcard. It said, \u0026ldquo;Ravenna, city of beautiful mosaics.\u0026rdquo; I was shocked that someone from Cambridge, MA, would know about my tiny, little hometown\u0026rsquo;s mosaics and let me know.\nWhile Ravenna is relegated to a marginal role in the modern age, it played a very significant one in ancient times. Quoting from the from the backcover of the book:\nIn 402 AD, after invading tribes broke through the Alpine frontiers of Italy and threatened the imperial government in Milan, the young Emperor Honorius made the momentous decision to move his capital to a small, easy defendable city in the Po estuary - Ravenna. From then until 751 AD, Ravenna was first the capital of the Western Roman Empire, then that of the immense kingdom of Theoderic the Goth and finally the centre of Byzantine power in Italy.\nIn her tome, Judith Herrin tells Ravenna\u0026rsquo;s story from its time as the capital of the Western Roman Empire to the late 8th century, when it inspired Charlemagne\u0026rsquo;s imperial and religious building projects in Aachen. This book\u0026rsquo;s 576 pages are packed with dense information. Many political, military, and spiritual characters\u0026rsquo; in-life achievements and troubles build a complicated narrative spanning four centuries. It helps that small, titled sections within each chapter offer a palatable framework.\nHerrin\u0026rsquo;s monumental work is one to be admired and respected. I was especially delighted when Pippin and his son Charlemagne came into play in the book\u0026rsquo;s final part. As I\u0026rsquo;ve read King and Emperor, A New Life of Charlemagne recently, I could merge knowledge from the two works. The flow of events that originated with the demise of the Western Roman Empire and, centuries later, led to the first glimpse of \u0026ldquo;Europe,\u0026rdquo; as we intend it today, is much clearer now.\nOf Ravenna\u0026rsquo;s glorious byzantine age, only the beautiful mosaics and the baptisteries and churches containing them have survived for today\u0026rsquo;s visitors to enjoy.\n\u0026lsquo;O lone Ravenna! many a tale is told Of thy great glories in the days of old\u0026rsquo; \u0026ndash;Oscar Wilde\n","permalink":"https://nicolaiarocci.com/book-review-ravenna/","summary":"\u003cp\u003e\u003cem\u003eNerdy prelude.\u003c/em\u003e Local Bulletin Board Systems (BBS) were all the\nrange when I was a teenager. With my group of local hackers, we hacked our way\ninto ITAPAC, the then-leading Italian packet-switching network (we are talking\npre-Internet era here.) Via ITAPAC, we\u0026rsquo;d connect to so-called \u0026ldquo;out-dial\nsystems\u0026rdquo; in the USA. From one of those, we\u0026rsquo;d finally call our target BBSes with\na local call at no cost. We felt so invincible! I signed up on Channel One BBS;\nI think that was the name. This particular BBS was located in Cambridge, MA,\nand was chock-full of public domain and shareware I could download. Anyways,\nthe SysOp sent me a postcard confirming my signup (an old-school paper postcard\ndelivered via international postal service). Receiving a postcard from the US\nwas exciting in itself, but what was startling was a handwritten note on the\npostcard. It said, \u0026ldquo;Ravenna, city of beautiful mosaics.\u0026rdquo; I was shocked that\nsomeone from Cambridge, MA, would know about my tiny, little hometown\u0026rsquo;s mosaics\nand let me know.\u003c/p\u003e","title":"Book Review: Ravenna"},{"content":"As someone who\u0026rsquo;s been on board with Twitter since 2009, I have to admit that I\u0026rsquo;m very concerned with recent developments. I admire and respect Elon Musk for his companies\u0026rsquo; achievements, especially in space and electric movement industries, but the man himself, holy cow, what a drag.\nOn The Verge, Nilay Patel\u0026rsquo;s brutal piece on the recent Twitter acquisition is chock-full of brilliant insights on what it takes to run a modern commercial social service.\nYou fucked up real good, kiddo. Twitter is a disaster clown car company that is successful despite itself, and there is no possible way to grow users and revenue without making a series of enormous compromises that will ultimately destroy your reputation and possibly cause grievous damage to your other companies.\nI say this with utter confidence because the problems with Twitter are not engineering problems. They are political problems. Twitter, the company, makes very little interesting technology; the tech stack is not the valuable asset. The asset is the user base: hopelessly addicted politicians, reporters, celebrities, and other people who should know better but keep posting anyway. You! You, Elon Musk, are addicted to Twitter. You’re the asset. You just bought yourself for $44 billion dollars.\nMore here.\n","permalink":"https://nicolaiarocci.com/welcome-to-hell-elon/","summary":"\u003cp\u003eAs someone who\u0026rsquo;s been on board with Twitter since 2009, I have to admit that\nI\u0026rsquo;m \u003cem\u003every\u003c/em\u003e concerned with recent developments. I admire and respect Elon Musk\nfor his companies\u0026rsquo; achievements, especially in space and electric movement\nindustries, but the man himself, holy cow, what a drag.\u003c/p\u003e\n\u003cp\u003eOn The Verge, Nilay Patel\u0026rsquo;s brutal piece on the recent Twitter acquisition is\nchock-full of brilliant insights on what it takes to run a modern commercial\nsocial service.\u003c/p\u003e","title":"Welcome to hell, Elon"},{"content":"I attended my first BJJ class a little more than a month ago. Going into it, I was hesitant. After many years doing what most people today call calisthenics, I wanted to try something new and challenging. But would it be appropriate for me to get into martial arts at the age of fifty-two? When I discovered that we have a branch of the renowned Roger Gracie Academy here in my hometown, I thought it was time to find out.\nI was simultaneously blown away and puzzled for the whole first two or three weeks. I was surprised by how effective BJJ can be, even with only a few classes. At the same time, martial arts are a new space for me. So many new things to absorb in an uncharted, unfamiliar territory in which I often feel lost, struggling for guidance. All trainees, from white to brown belts, and my coach, have been extraordinarily supportive, always making me feel comfortable despite me being the only grey beard on the tatami. I could see myself doing BJJ for the foreseeable future, along with my calisthenics routine.\nA couple of weeks ago, during a \u0026ldquo;rolling\u0026rdquo; (sparring) session with a fellow white belt, I cracked a couple of ribs. I didn\u0026rsquo;t immediately realize it, though. I kept sparring. Later in the evening, the pain increased, but I stubbornly went back for the rest of the week. The pain would go away. Only it didn\u0026rsquo;t. In my many years of strenuous training, whether running, swimming, climbing or calisthenics, I had to deal with all kinds of injuries, yet it taught me nothing. Here I am, at an age at which I\u0026rsquo;m supposed to be the wise guy in the room, recovering from an underestimated injury.\nIt\u0026rsquo;s been two weeks, with several more to go before I fully recover. After much consideration this morning, during my early walk (the only activity I can perform without pain), I called my coach and told him I\u0026rsquo;d stop training BJJ. At my age, recovery takes longer; I\u0026rsquo;m probably more subject to injury, and as it appears, martial arts are not the smartest thing I can do to keep me in shape, no matter how much I love them. I wish I had tried BJJ ten years ago, or maybe twenty. I want to keep training for the long haul, and an impact sport does me no good. As soon as I\u0026rsquo;m recovered, I go back to calisthenics. Am I giving up too soon? Maybe. I\u0026rsquo;d love to progress in BJJ, and I\u0026rsquo;m sure I would have a lot of fun with it, but today, for once, I choose the known path of safety over the unknown, exhilarating course of uncertainty.\n","permalink":"https://nicolaiarocci.com/brazilian-ju-jitsu-and-me/","summary":"\u003cp\u003eI attended my first BJJ class a little more than a month ago. Going into it,\nI was hesitant. After many years doing what most people today call\ncalisthenics, I wanted to try something new and challenging. But would it be\nappropriate for me to get into martial arts at the age of fifty-two? When\nI discovered that we have a branch of the renowned Roger Gracie Academy here in\nmy hometown, I thought it was time to find out.\u003c/p\u003e","title":"Brazilian Ju-Jitsu and me"},{"content":" In 1701, in Middletown, New Jersey, Moses Butterworth languished in a jail, accused of piracy. Like many young men based in England or her colonies, he had joined a crew that sailed the Indian Ocean intent on plundering ships of the Muslim Mughal Empire. Throughout the 1690s, these pirates marauded vessels laden with gold, jewels, silk, and calico on pilgrimage toward Mecca. After achieving great success, many of these men sailed back into the Atlantic via Madagascar to the North American seaboard, where they quietly disembarked in Charleston, Philadelphia, New Jersey, New York City, Newport, and Boston, and made themselves at home.\nMore here.\n","permalink":"https://nicolaiarocci.com/a-lot-of-what-is-known-about-pirates-is-not-true/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIn 1701, in Middletown, New Jersey, Moses Butterworth languished in a jail,\naccused of piracy. Like many young men based in England or her colonies, he\nhad joined a crew that sailed the Indian Ocean intent on plundering ships of\nthe Muslim Mughal Empire. Throughout the 1690s, these pirates marauded\nvessels laden with gold, jewels, silk, and calico on pilgrimage toward Mecca.\nAfter achieving great success, many of these men sailed back into the\nAtlantic via Madagascar to the North American seaboard, where they quietly\ndisembarked in Charleston, Philadelphia, New Jersey, New York City, Newport,\nand Boston, and made themselves at home.\u003c/p\u003e","title":"A lot of what is known about pirates is not true"},{"content":"Last Saturday I went on a motorcycle trip with my club. We had about forty motorcycles, many coming from afar—a tremendous turnout considering how advanced the season is. This event was particularly involving for me, as my local group was in charge of the organization. We were going to visit the Foreste Casentinesi National Park, which isn\u0026rsquo;t far from our hometown.\nWe know those roads and their surroundings well; we call them home, yet I insisted on scouting the planned route not once but twice, and I think it was crucial to the event\u0026rsquo;s success. On the narrow road that climbs to a mountain pass, we spotted a mobile traffic light (for a road construction site) with a long (six minutes!) red/green cycle. We arranged a plan in case the motorcycle\u0026rsquo;s column split at the light: almost one kilometer past the red light, there was a safe place where the forward group could safely stop off the road and wait for the rest to rejoin. All the participants were informed at the departure briefing: if you get stopped at the red light, don\u0026rsquo;t get over-stressed: we\u0026rsquo;ll be waiting for you one kilometer down the road. You won\u0026rsquo;t see us, but we\u0026rsquo;ll be waiting for you safely. Don\u0026rsquo;t rush it, and don\u0026rsquo;t stop to phone us. We won\u0026rsquo;t be at the first apparently-good parking place but at the second spot, which, despite not looking as good, is way safer (less gravel on the ground). Situations like these can cause confusion and danger to a large group of motorcycles roaming on narrow, steep mountain roads which are often in poor conditiong. The reconnaissance ride allowed us to plan for several potential pitfalls like this one.\nAnyways, I\u0026rsquo;m rambling. It was a great late autumn trip. The woods are spectacular this time of the year, which is why we hit that area with this trip.\nUpdate. A video recorded during the event is available on YouTube.\n","permalink":"https://nicolaiarocci.com/motorcycling-the-foreste-casentinesi-national-park/","summary":"\u003cp\u003eLast Saturday I went on a motorcycle trip with \u003ca href=\"https://tomccitalia.org\"\u003emy club\u003c/a\u003e. We had about forty\nmotorcycles, many coming from afar—a tremendous turnout considering how\nadvanced the season is. This event was particularly involving for me, as my\nlocal group was in charge of the organization. We were going to visit the\n\u003ca href=\"https://it.wikipedia.org/wiki/Parco_nazionale_delle_Foreste_Casentinesi%2C_Monte_Falterona_e_Campigna\"\u003eForeste Casentinesi National Park\u003c/a\u003e, which isn\u0026rsquo;t far from our hometown.\u003c/p\u003e\n\u003cp\u003eWe know those roads and their surroundings well; we call them home, yet\nI insisted on scouting the planned route not once but twice, and I think it was\ncrucial to the event\u0026rsquo;s success. On the narrow road that climbs to a mountain\npass, we spotted a mobile traffic light (for a road construction site) with\na long (six minutes!) red/green cycle. We arranged a plan in case the\nmotorcycle\u0026rsquo;s column split at the light: almost one kilometer past the red\nlight, there was a safe place where the forward group could safely stop off the\nroad and wait for the rest to rejoin. All the participants were informed at the\ndeparture briefing: if you get stopped at the red light, don\u0026rsquo;t get\nover-stressed: we\u0026rsquo;ll be waiting for you one kilometer down the road. You won\u0026rsquo;t\nsee us, but we\u0026rsquo;ll be waiting for you safely. Don\u0026rsquo;t rush it, and don\u0026rsquo;t stop to\nphone us. We won\u0026rsquo;t be at the first apparently-good parking place but at the\nsecond spot, which, despite not looking as good, is way safer (less gravel on\nthe ground). Situations like these can cause confusion and danger to a large\ngroup of motorcycles roaming on narrow, steep mountain roads which are often in\npoor conditiong. The reconnaissance ride allowed us to plan for several\npotential pitfalls like this one.\u003c/p\u003e","title":"Motorcycling the Foreste Casentinesi National Park"},{"content":"Oh, joy. After many years with an iPhone, today I learned how to stop spam calls with a single, not-really-super-secret move.\nSettings \u0026gt; Phone \u0026gt; Silence Unknown Callers That\u0026rsquo;s it. Unknown callers now go straight to my recent calls list for me to (eventually) review. Most importantly, the phone doesn\u0026rsquo;t ring.\nI initially had True Caller installed and enabled, which worked for a while. Spammers use throw-away numbers anyway, so it\u0026rsquo;s super-hard for tools like that to keep track. In Italy, we can enlist in a nationwide \u0026ldquo;oppositions register\u0026rdquo;. Once a phone number is registered there, national call services can\u0026rsquo;t call it. I signed up on the register\u0026rsquo;s opening day, which also worked for a few days. There are ways for spammers to go around the register, such as calling from abroad. I fell back to simply not answering unknown calls. That worked, but unsolicited calls still caught my attention and muting the phone helped only a little.\nThe Silence Unknown Callers option has probably always been there, unbeknownst to me. It\u0026rsquo;s a godsend. Now my iPhone doesn\u0026rsquo;t even try to ring anymore.\n","permalink":"https://nicolaiarocci.com/how-to-avoid-unwanted-calls-on-iphone/","summary":"\u003cp\u003eOh, joy. After many years with an iPhone, today I learned how to stop spam\ncalls with a single, not-really-super-secret move.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eSettings \u0026gt; Phone \u0026gt; Silence Unknown Callers\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat\u0026rsquo;s it. Unknown callers now go straight to my recent calls list for me to\n(eventually) review. Most importantly, the phone doesn\u0026rsquo;t ring.\u003c/p\u003e\n\u003cp\u003eI initially had True Caller installed and enabled, which worked for a while.\nSpammers use throw-away numbers anyway, so it\u0026rsquo;s super-hard for tools like that\nto keep track. In Italy, we can enlist in a nationwide \u0026ldquo;oppositions register\u0026rdquo;.\nOnce a phone number is registered there, national call services can\u0026rsquo;t call it.\nI signed up on the register\u0026rsquo;s opening day, which also worked for a few days.\nThere are ways for spammers to go around the register, such as calling from\nabroad. I fell back to simply not answering unknown calls. That worked, but\nunsolicited calls still caught my attention and muting the phone helped\nonly a little.\u003c/p\u003e","title":"How to avoid unwanted calls on iPhone"},{"content":"Yesterday I was at WPC 2022, \u0026ldquo;the most important Italian conference on Microsoft technologies\u0026rdquo;, where I presented a one-hour session titled \u0026ldquo;Reliable end-to-end testing for modern web apps with Microsoft Playwright.\u0026rdquo;\nAttendance was great and there was a lot of excitement up in the air; it was evident that people were happy to meet and interact in person again. After the forced two years hiatus, it was great to be back at a big on-site conference, let alone speak at it. I delivered my talk to a packed-full room of nodding, smiling and questioning attendees, which felt fantastic.\nI think I\u0026rsquo;m satisfied with my delivery, although I managed to screw up a few things, most notably showing my Twitter password live (that was a funny moment)1. I also forgot to mention a couple of things.\nI demoed CLI usage on Bash, but the kind people working on Playwright also provide full Powershell support; the website defaults to Powershell for their demo scripts; I never mentioned the obvious: as you\u0026rsquo;re testing your front-end application with Playwright, you\u0026rsquo;re actually performing a complete end-to-end test involving your backend. There is great value in end-to-end testing. Several times we caught subtle things that weren\u0026rsquo;t a direct front-end issue but more the result of the interaction with the backend. And yes (thanks to the guy who asked), your testing environment must support the whole stack. The slide deck contains most of the code and bash commands I demoed live on stage. It\u0026rsquo;s nothing too original; I reproduced the examples on the official website with a few variations and additions. I had fun performing again in front of a real, live crowd. Perhaps the induced break, unexpected and undesirable for many reasons, did me good.\nHaving two-factor authentication up made it all less stressful. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/my-session-at-wpc-2022/","summary":"\u003cp\u003eYesterday I was at \u003ca href=\"https://www.wpc2022.it/\"\u003eWPC 2022\u003c/a\u003e, \u0026ldquo;the most important Italian conference on\nMicrosoft technologies\u0026rdquo;, where I presented a one-hour session titled \u0026ldquo;Reliable\nend-to-end testing for modern web apps with Microsoft Playwright.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eAttendance was great and there was a lot of excitement up in the air; it was\nevident that people were happy to meet and interact in person again. After the\nforced two years hiatus, it was great to be back at a big on-site conference,\nlet alone speak at it. I delivered my talk to a packed-full room of nodding,\nsmiling and questioning attendees, which felt fantastic.\u003c/p\u003e","title":"My session at WPC 2022"},{"content":" Studies have found that high levels of social media use are connected with an increased risk of symptoms of anxiety and depression. There appears to be substantial evidence connecting people’s mental health and their online habits. Furthermore, many psychologists believe people may be dealing with psychological effects that are pervasive but not always obvious.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-high-cost-of-living-your-life-online/","summary":"\u003cblockquote\u003e\n\u003cp\u003eStudies have found that high levels of social media use are connected with an\nincreased risk of symptoms of anxiety and depression. There appears to be\nsubstantial evidence connecting people’s mental health and their online\nhabits. Furthermore, many psychologists believe people may be dealing with\npsychological effects that are pervasive but not always obvious.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://www.wired.com/story/privacy-psychology-social-media/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"The high cost of living your life online"},{"content":"Ben Werdmuller has a terrific post up on his website. His \u0026ldquo;tortured\u0026rdquo; analogy of the web and governments as platforms for people to build upon is fascinating.\nI believe strongly in the indieweb principles of distributed ownership, control, and independence. For me, the important thing is that this is how we get to a diverse web. A web where everyone can define not just what they write but how they present is by definition far more expressive, diverse, and interesting than one where most online content and identities must be squished into templates created by a handful of companies based on their financial needs. In other words, the open web is far superior to a medium controlled by corporations in order to sell ads. The former encourages expression; the latter encourages consumerist conformity.\nRead it all here (via).\n","permalink":"https://nicolaiarocci.com/indiepeople/","summary":"\u003cp\u003eBen Werdmuller has a terrific post up on his website. His \u0026ldquo;tortured\u0026rdquo; analogy of\nthe web and governments as platforms for people to build upon is fascinating.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI believe strongly in the indieweb principles of distributed ownership,\ncontrol, and independence. For me, the important thing is that this is how we\nget to a diverse web. A web where everyone can define not just what they\nwrite but how they present is by definition far more expressive, diverse, and\ninteresting than one where most online content and identities must be\nsquished into templates created by a handful of companies based on their\nfinancial needs. In other words, the open web is far superior to a medium\ncontrolled by corporations in order to sell ads. The former encourages\nexpression; the latter encourages consumerist conformity.\u003c/p\u003e","title":"Indiepeople"},{"content":" The Tripitaka Koreana - carved on 81258 woodblocks in the 13th century - is the most successful large data transfer over time yet achieved by humankind. 52 million characters of information, transmitted over nearly 8 centuries with zero data loss - an unequalled achievement.\nThe full story is available here (via).\n","permalink":"https://nicolaiarocci.com/the-tripitaka-koreana/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe Tripitaka Koreana - carved on 81258 woodblocks in the 13th century - is\nthe most successful large data transfer over time yet achieved by humankind.\n52 million characters of information, transmitted over nearly 8 centuries\nwith zero data loss - an unequalled achievement.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThe full story  is available \u003ca href=\"https://threadreaderapp.com/thread/1574546784365445136.html\"\u003ehere\u003c/a\u003e (\u003ca href=\"https://twitter.com/incunabula/status/1574546784365445136\"\u003evia\u003c/a\u003e).\u003c/p\u003e","title":"The Tripitaka Koreana"},{"content":"The New Yorker, in The Man Who Explains Italy:\nThe Italian podcaster Francesco Costa thinks that the foreign press’s fixation on creeping Fascism in the country is overblown and unhelpful. If the center-right coalition wins, “Will Italy be a police state? No,” he said. “Will it be very badly run? Yes.”\nFull article is available here. I\u0026rsquo;ve been following Francesco Costa for a few years. He\u0026rsquo;s talented, conscientious, brilliant, and gifted with good humor. He deserves to be featured in The New Yorker.\n","permalink":"https://nicolaiarocci.com/the-man-who-explains-italy/","summary":"\u003cp\u003eThe New Yorker, in \u003cem\u003eThe Man Who Explains Italy\u003c/em\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Italian podcaster Francesco Costa thinks that the foreign press’s\nfixation on creeping Fascism in the country is overblown and unhelpful. If\nthe center-right coalition wins, “Will Italy be a police state? No,” he said.\n“Will it be very badly run? Yes.”\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eFull article is available\n\u003ca href=\"https://www.newyorker.com/culture/persons-of-interest/the-man-who-explains-italy\"\u003ehere\u003c/a\u003e.\nI\u0026rsquo;ve been following Francesco Costa for a few years. He\u0026rsquo;s talented,\nconscientious, brilliant, and gifted with good humor. He deserves to be\nfeatured in The New Yorker.\u003c/p\u003e","title":"The Man Who Explains Italy"},{"content":"Eve 2.0.2 was just released today. It fixes a problem introduced with v2.0 in which ETag generation failed if uuidRepresentation was not set in MONGO_OPTIONS. See issue #1486 for details. Many thanks @tgm for reporting and then contributing the fix.\n","permalink":"https://nicolaiarocci.com/eve-2.0.2-released/","summary":"\u003cp\u003eEve 2.0.2 was \u003ca href=\"https://pypi.org/project/Eve/2.0.2/\"\u003ejust released today\u003c/a\u003e. It fixes a problem introduced with v2.0\nin which ETag generation failed if \u003ccode\u003euuidRepresentation\u003c/code\u003e was not set in\n\u003ccode\u003eMONGO_OPTIONS\u003c/code\u003e. See \u003ca href=\"https://github.com/pyeve/eve/issues/1486\"\u003eissue #1486\u003c/a\u003e for details. Many thanks\n\u003ca href=\"https://github.com/tgm-git\"\u003e@tgm\u003c/a\u003e for reporting and then contributing the fix.\u003c/p\u003e","title":"Eve 2.0.2 released"},{"content":"In my early morning stroll, I sometimes listen to audiobooks. This was the case with The Count of Monte Cristo. Rai Radio 3, the third channel of the national broadcasting service, has been airing Ad Alta Voce (Aloud) for many years. In the program, top-tier actors read old and new literary classics. The quality of these productions is astounding. Audio editions are often edited, which was the case with The Count, as the unabridged edition surpasses the 1200-page count (a little-known fact is that most printed editions are also edited for brevity). Despite the edits, the audiobook, splendidly performed by Andrea Giordana, comprises thirty-five installments, each about thirty minutes long. That makes for a lot of strolling.\nThe Count was initially published in a literary magazine, in eighteen parts, from August 1844 to January 1846. Entirely attributed to Alexandre Dumas, it was also authored by Auguste Maquet; ghostwriters are not just an XX-ish century thing. According to the legend, when the publication started, Dumas didn\u0026rsquo;t know how the story would end or how it would develop. Nonetheless, it was an immediate hit that quickly became a literary classic with many film and TV adaptions and an infinite number of copycats. The story, partially based on real facts, is well known and as intriguing, captivating and entertaining as it could get for a mid-XIX century adventure novel. It helps that it is rooted in notable historical events like the Bourbon Restoration and Napoleon\u0026rsquo;s Hundred Days.\nThe audiobook does an excellent job at skipping the tedious parts while focusing on the main narrative but still includes many characters and events. It is sometimes hard to track them all, especially if your listening, or reading, is discontinuous, like in my case.\nCritics didn\u0026rsquo;t go easy on this novel. Famously, Umberto Eco had this to say: \u0026ldquo;The Count of Monte Cristo is undoubtedly one of the most exciting novels ever written, and on the other hand, it is one of the most poorly written novels of all time and all literature.\u0026rdquo; R.L Stevenson concurs: \u0026ldquo;The first part of Monte Cristo, up to the discovery of the treasure, is a perfect piece of knockout storytelling; there has never been a man who has participated in these moving adventures without a quiver, yet Faria is a papier-mâché character and Dantès little more than a name. The sequel is but the prolongation of a mistake, dark, bloody, unnatural and stupid.\u0026rdquo;\nI think I agree with both: The Count of Montecristo is rich of exciting moments, intriguing events and unexpected plot twists. Yet, the composition is often confusing (mainly in the second part) and, more importantly, too many implausible coincidences occur throughout the story. Yet, it\u0026rsquo;s a lot of entertainment. What I found more compelling, however, are its social and historical competence. I learned a lot by reading (listening to) this novel.\nBeing the book junkie I am, I went out and bought the unabridged tome. I can\u0026rsquo;t help it; I must possess the physical thing. The book is now happily resting in my library, and I can move on.\n","permalink":"https://nicolaiarocci.com/book-review-the-count-of-monte-cristo/","summary":"\u003cp\u003eIn my early morning stroll, I sometimes listen to audiobooks. This was the case\nwith The Count of Monte Cristo. Rai Radio 3, the third channel of the national\nbroadcasting service, has been airing \u003ca href=\"https://www.raiplaysound.it/programmi/adaltavoce\"\u003eAd Alta Voce\u003c/a\u003e (Aloud) for many years.\nIn the program, top-tier actors read old and new literary classics. The quality\nof these productions is astounding. Audio editions are often edited, which was\nthe case with The Count, as the unabridged edition surpasses the 1200-page\ncount (a little-known fact is that most printed editions are also edited for\nbrevity). Despite the edits, \u003ca href=\"https://www.raiplaysound.it/audiolibri/ilcontedimontecristo\"\u003ethe audiobook\u003c/a\u003e, splendidly performed by \u003ca href=\"https://en.wikipedia.org/wiki/Andrea_Giordana\"\u003eAndrea\nGiordana\u003c/a\u003e, comprises thirty-five installments, each about thirty minutes\nlong. That makes for a lot of strolling.\u003c/p\u003e","title":"Book Review: The Count of Monte Cristo"},{"content":"Jacob Kaplan-Moss\u0026rsquo;s hot take on software quality:\nSoftware quality is more the result of a system designed to produce quality, and not so much the result of individual performance. That is: a group of mediocre programmers working with a structure designed to produce quality will produce better software than a group of fantastic programmers working in a system designed with other goals.\nThis leads to the insightful conclusion:\nInstead of spending tons of time and effort on hiring because you believe that you can “only hire the best”, direct some of that effort towards building a system that produces great results out of a wider spectrum of individual performance.\nBut what does he mean by a system designed for quality? Read it all here.\n","permalink":"https://nicolaiarocci.com/software-quality-is-systemic/","summary":"\u003cp\u003eJacob Kaplan-Moss\u0026rsquo;s hot take on software quality:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eSoftware quality is more the result of a system designed to produce\nquality, and not so much the result of individual performance\u003c/strong\u003e. That is:\na group of mediocre programmers working with a structure designed to produce\nquality will produce better software than a group of fantastic programmers\nworking in a system designed with other goals.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThis leads to the insightful conclusion:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eInstead of spending tons of time and effort on hiring because you believe\nthat you can “only hire the best”, direct some of that effort towards\nbuilding a system that produces great results out of a wider spectrum of\nindividual performance.\u003c/p\u003e","title":"Software quality is systemic"},{"content":"\nLast weekend I went on a motorcycle trip with my club. Our goal was to visit the beautiful Dolomites in the Italian Alps1. We had twenty motorcycles on the road, evenly split between modern classics (Bonnevillles in all their variations) and adventure bikes (Tigers new and old). A great turnout considering that the weather forecast for the weekend wasn\u0026rsquo;t exactly great. Of all the TOMCC members who registered, only two were missing because they tested positive for COVID.\nSeeing old and new friends and spending time together roaming the mountain roads felt great. We even visited places I didn\u0026rsquo;t know about, namely the Soffia Falls at Mis Lake and Castle Andraz. After lunch at Malga Misurina, where the food was good and personnel not so much, we were supposed to cover another long stretch of road up to the springs of the Piave river. When we looked in that direction and saw the intimidating front of blue/black clouds ready to open their floodgates on us, we changed our minds and headed back to our base camp. We still got flooded, but certainly not as much as if we\u0026rsquo;d pressed on with the original plan. The next day, a handful of us continued roaming the countryside for more fantastic views, corners, food, and camaraderie.\nI\u0026rsquo;m grateful to Sandro (\u0026ldquo;Momo\u0026rdquo;) for organizing this event. I know very well how demanding and stressful running a motorcycle event can be. So far, we\u0026rsquo;ve always been lucky to have people willing to take on the challenge and volunteer to hold events all around the country. As long as this continues, we\u0026rsquo;ll have a bright future and lots of fun.\nLast year, I went there with a fellow TOMCC member and recorded a YouTube video. Check it out here. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/motorcycling-the-dolomites-with-the-club/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/dolomiti_tomcc_2022.JPG\"\u003e\u003c/p\u003e\n\u003cp\u003eLast weekend I went on a motorcycle trip with \u003ca href=\"https://tomccitalia.org\"\u003emy club\u003c/a\u003e. Our goal was to\nvisit the beautiful Dolomites in the Italian Alps\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. We had twenty\nmotorcycles on the road, evenly split between modern classics (Bonnevillles in\nall their variations) and adventure bikes (Tigers new and old). A great turnout\nconsidering that the weather forecast for the weekend wasn\u0026rsquo;t exactly great. Of\nall the TOMCC members who registered, only two were missing because they tested\npositive for COVID.\u003c/p\u003e","title":"Motorcycling the Dolomites with the club"},{"content":"My perception of zoos has always been of prisons—places of suffering where animals are held captive for human entertainment. Smiling Bears offered a new perspective. Some (hopefully most) zoos provide a safe harbor to abused and rescued animals who could never return to their natural habitats. Zookeepers like Else Poulsen care for these creatures, accompanying them in their rehabilitation process. I imagine not all zoos and zookeepers meet these standards, but it is reassuring to know these things happen.\nFew people know bears as intimately as Else Poulsen. She has raised bears, comforted bears, taught bears, learned from bears, had bears communicate their needs to her, and nursed bears back to health. This book offers remarkable insights into the complexity and richness of bears behavior and emotional life. Individual bear stories are often touching, as is the relationship they develop with their care keeper.\n","permalink":"https://nicolaiarocci.com/book-review-smiling-bears/","summary":"\u003cp\u003eMy perception of zoos has always been of prisons—places of suffering where\nanimals are held captive for human entertainment. \u003cem\u003eSmiling Bears\u003c/em\u003e offered a new\nperspective. Some (hopefully most) zoos provide a safe harbor to abused and\nrescued animals who could never return to their natural habitats. Zookeepers\nlike Else Poulsen care for these creatures, accompanying them in their\nrehabilitation process. I imagine not all zoos and zookeepers meet these\nstandards, but it is reassuring to know these things happen.\u003c/p\u003e","title":"Book Review: Smiling Bears"},{"content":"Today I released v3.4 of FatturaElettronica, a .NET open source project that allows validation and de/serialization of electronic invoices adhering to the standard defined by the Italian \u0026ldquo;Agenzia delle Entrate\u0026rdquo;. It\u0026rsquo;s doing very well for such a niche project, with downloads now well beyond the one hundred thousand mark.\nBe aware that this release anticipates support for v1.7.1 of the specification going into effect on October 1, 2022. For more information, see the appropriate ticket and the changelog.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-v3.4-released/","summary":"\u003cp\u003eToday I released v3.4 of \u003ca href=\"https://fatturaelettronicaopensource.org/\"\u003eFatturaElettronica\u003c/a\u003e, a .NET open source project\nthat allows validation and de/serialization of electronic invoices adhering to\nthe standard defined by the Italian \u0026ldquo;Agenzia delle Entrate\u0026rdquo;. It\u0026rsquo;s doing very\nwell for such a niche project, with downloads now well beyond the one hundred\nthousand mark.\u003c/p\u003e\n\u003cp\u003eBe aware that this release anticipates support for \u003ca href=\"https://www.agenziaentrate.gov.it/portale/web/guest/specifiche-tecniche-versione-1.7.1\"\u003ev1.7.1\u003c/a\u003e of the\nspecification going into effect on October 1, 2022. For more information, see\nthe appropriate \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET/issues/376\"\u003eticket\u003c/a\u003e and the \u003ca href=\"https://fatturaelettronicaopensource.org/docs/changelog.html#v-34\"\u003echangelog\u003c/a\u003e.\u003c/p\u003e","title":"FatturaElettronica v3.4 released"},{"content":"I added a new tool to my amateurish DevOps toolbox. Developed in the open by Tom Williams, the Docker Event Monitor is a \u0026ldquo;tiny container that monitors the local Docker event system in real-time and sends notifications to various integrations for event types that match the configuration. For example, you can trigger an alert when a container is stopped, killed, runs out of memory or health status change.\u0026rdquo;\nAt its core sits a simple python script that monitors the docker.sock file for noticeable changes. The code is straightforward and looks safe to me. It only took a few minutes to set DEM up so that our alerts channel on Slack gets notified of any health status changes. Some handy options are included; my favorite is silence to set a time window during which alerts are not fired. It avoids unnecessary spam when routine maintenance goes off on your stack.\nI find DEM a useful little tool for lightweight, simple deployments where you\u0026rsquo;re not employing heavy weaponry, like k8s.\n","permalink":"https://nicolaiarocci.com/the-docker-event-monitor/","summary":"\u003cp\u003eI added a new tool to my amateurish DevOps toolbox. Developed in the open by\nTom Williams, the \u003ca href=\"https://bitbucket.org/quaideman/dem\"\u003eDocker Event Monitor is\u003c/a\u003e a \u0026ldquo;tiny container that monitors\nthe local Docker event system in real-time and sends notifications to various\nintegrations for event types that match the configuration. For example, you can\ntrigger an alert when a container is stopped, killed, runs out of memory or\nhealth status change.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003eAt its core sits a simple \u003ca href=\"https://bitbucket.org/quaideman/dem/src/master/app/main.py\"\u003epython script\u003c/a\u003e that monitors the \u003ccode\u003edocker.sock\u003c/code\u003e\nfile for noticeable changes. The code is straightforward and looks safe to\nme. It only took a few minutes to set DEM up so that our \u003ccode\u003ealerts\u003c/code\u003e channel on\nSlack gets notified of any health status changes. Some handy options are\nincluded; my favorite is \u003ccode\u003esilence\u003c/code\u003e to set a time window during which alerts are\nnot fired. It avoids unnecessary spam when routine maintenance goes off on your\nstack.\u003c/p\u003e","title":"The Docker Event Monitor"},{"content":"Today I released Eve 2.0.1, which contains an essential fix if you\u0026rsquo;re using MONGO_URI to connect to your MongoDB instance. See the relevant ticket for details. I\u0026rsquo;ve also pinned Flask dependency to v2.1, as v2.2 brings some breaking changes that, you guessed it, break our CI runs. If you think you can help wiht that, please do so. The complete changelog is available here.\n","permalink":"https://nicolaiarocci.com/eve-2.0.1-released/","summary":"\u003cp\u003eToday I released \u003ca href=\"https://pypi.org/project/Eve/2.0.1/\"\u003eEve 2.0.1\u003c/a\u003e, which contains an essential fix if you\u0026rsquo;re\nusing \u003ccode\u003eMONGO_URI\u003c/code\u003e to connect to your MongoDB instance. See the \u003ca href=\"https://github.com/pyeve/eve/issues/1478\"\u003erelevant\nticket\u003c/a\u003e for details. I\u0026rsquo;ve also pinned Flask dependency to v2.1, as v2.2\nbrings some breaking changes that, you guessed it, break our CI runs. If you\nthink you can help wiht that, \u003ca href=\"https://github.com/pyeve/eve/issues/1485\"\u003eplease do so\u003c/a\u003e. The complete changelog is\navailable \u003ca href=\"https://docs.python-eve.org/en/stable/changelog.html\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/eve-2.0.1.png\"\u003e\u003c/p\u003e","title":"Eve 2.0.1 released"},{"content":"A few days ago, I was browsing my Twitter feed when a suggestion from my friend @flaper87 caught my attention:\nOn my \u0026ldquo;comfortably old\u0026rdquo; MacBook Pro1, Spotify has been an absolute hog. The simple act of opening it will require three hundred MBs. That\u0026rsquo;s a remarkable amount of memory for staying idle and doing nothing useful. Let it play for a few hours, and have fun glancing at CPU and RAM usage ramping up like there\u0026rsquo;s no tomorrow. Just for the record, here\u0026rsquo;s Spotify memory usage at launch:\nSo what exactly is spotifyd? An open source Spotify client running as a UNIX daemon.\nSpotifyd streams music just like the official client, but is more lightweight and supports more platforms. Spotifyd also supports the Spotify Connect protocol, which makes it show up as a device that can be controlled from the official clients2.\nSlow Saturday morning, I decided to give the spotifyd/spotify-tui combo a try. Setting up spotifyd on a Mac with homebrew is as simple as typing brew install spotifyd and then brew services start spotifyd to let it run as a service, or one can opt to launch it as a stand-alone with spotifyd --no-daemon.\nAs I quickly learned, on a Mac, you need to edit the default configuration file to update a couple of settings, as reported on the wiki. Namely, I had to set backend = 'portaudio' and volume_controller = 'softvol'. While at it, I also set use_keyring = true to avoid storing my Spotify password in the file. Here\u0026rsquo;s my current configuration settings:\n[global] username = \u0026quot;\u0026lt;USERNAME\u0026gt;\u0026quot; use_keyring = true # On Linux, set both values to 'alsa' backend = \u0026quot;portaudio\u0026quot; volume_controller = \u0026quot;softvol\u0026quot; bitrate = 320 volume_normalisation = true normalisation_pregain = -10 # If set to true, audio data does NOT get cached. no_audio_cache = false cache_path = \u0026quot;\u0026lt;USER_LIBRARY\u0026gt;/Application Support/Spotify/PersistentCache/Storage\u0026quot; One minor annoyance that doesn\u0026rsquo;t prevent the server from running as intended and is only noticeable when I run spotifyd as a stand-alone app is a recurring and rather obscure \u0026ldquo;No route to host\u0026rdquo; warning message. There\u0026rsquo;s an open ticket about it. Other than that, spotifyd has been bliss. Most remarkably, this is the memory usage after a few hours of non-stop streaming:\nQuite an achievement, considering that we started at 300+ MBs.\nI also installed spotify-tui in an attempt to use it as a replacement for the official client. As much as I\u0026rsquo;d love to use it (I love its UI/UX), I can\u0026rsquo;t say I\u0026rsquo;m happy with it. It sometimes reports a server disconnect when, in fact, the underlying spotifyd service is running fine (and I can connect and play with it from the official client). Secondly, it is sluggish sometimes. Further investigation revealed that the project is not actively maintained. For the time being, I\u0026rsquo;m connecting to spotifyd from the official iPhone app. I get the lightweight service with the added benefit that I don\u0026rsquo;t have to switch windows when I want to interact with Spotify.\nmid-2012. Yes, I know. It\u0026rsquo;s due for replacement later this year, when the M2 MacBook Pro 14\u0026quot; is announced.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSpotifyd requires a Spotify Premium account. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/how-i-stopped-spotify-from-draining-both-my-ram-and-cpu/","summary":"\u003cp\u003eA few days ago, I was browsing my Twitter feed when a \u003ca href=\"https://twitter.com/flaper87/status/1564899493572710400\"\u003esuggestion\u003c/a\u003e from my\nfriend \u003ca href=\"https://twitter.com/flaper87\"\u003e@flaper87\u003c/a\u003e caught my attention:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/flaper87-on-spotifyd.png\"\u003e\u003c/p\u003e\n\u003cp\u003eOn my \u0026ldquo;comfortably old\u0026rdquo; MacBook Pro\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, Spotify has been an absolute hog. The\nsimple act of opening it will require three hundred MBs. That\u0026rsquo;s a remarkable\namount of memory for staying idle and doing nothing useful. Let it play for\na few hours, and have fun glancing at CPU and RAM usage ramping up like there\u0026rsquo;s\nno tomorrow. Just for the record, here\u0026rsquo;s Spotify memory usage at launch:\u003c/p\u003e","title":"How I stopped Spotify from draining both my RAM and CPU"},{"content":"This week the \u0026ldquo;Sunday Morning Reading Award\u0026rdquo; goes to Lisa Whittington-Hill, for her The Women Who Built Grunge on Longreads:\nBands like L7 and Heavens to Betsy were instrumental to the birth of the grunge scene, but for decades were treated like novelties and sex objects. Thirty years later, it’s time to reassess their legacy.\nMore here.\n","permalink":"https://nicolaiarocci.com/the-women-who-built-grunge/","summary":"\u003cp\u003eThis week the \u0026ldquo;Sunday Morning Reading Award\u0026rdquo; goes to \u003ca href=\"https://twitter.com/nerdygirly\"\u003eLisa\nWhittington-Hill\u003c/a\u003e, for her \u003cem\u003eThe Women Who Built Grunge\u003c/em\u003e on Longreads:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBands like L7 and Heavens to Betsy were instrumental to the birth of the\ngrunge scene, but for decades were treated like novelties and sex objects.\nThirty years later, it’s time to reassess their legacy.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://longreads.com/2022/06/29/the-women-who-built-grunge/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"The Women Who Built Grunge"},{"content":"Robin Rendle quoting Neil Gaiman, who is quoting G.K. Chesterton:\nFairy tales, as G.K. Chesterton once said, are more than true. Not because they tell us that dragons exist, but because they tell us that dragons can be defeated.\nI read somewhere that he based the Gilbert character from The Sandman on Chesterton, so it\u0026rsquo;s no surprise to find Gaiman quoting Chesterton in Smoke and Mirrors.\nWanting to find the work in which the quote first appeared, I did a little research only to discover that G.K. Chesterton never actually wrote it. According to E.M. Goldsmith1, Gaiman\u0026rsquo;s is a rework of the following original quote:\nFairy Tales then, are not responsible for producing in children fear, or any of the shapes of fear; fairy tales do not give the child the idea of the evil or the ugly; that is in the child already, because it is in the world already. Fairy tales do not give the child his first idea of bogey. What fairy tales give the child is his first clear idea of the possible defeat of bogey. The baby has known the dragon intimately ever since he had an imagination. What the fairy tale provides for him is a St. George to kill the dragon. Exactly what the fairy tale does is this: it accustoms him to a series of clear pictures of the idea that these limitless terrors had a limit, that these shapeless enemies have enemies in the knights of God, that there is something in the universe more mystical than darkness, and stronger than strong fear. \u0026ndash;Tremendous Trifles (1909), XVII: \u0026ldquo;The Red Angel\u0026rdquo;2\nAn excellently simplified, actualized and de-Christianized rework, I\u0026rsquo;d say. On the subject of fairy tales, E.M. Goldsmith has another quote that is worth sharing:\nWhen we step into the family, by the act of being born, we do step into a world which is incalculable, into a world which has its own strange laws, into a world which could do without us, into a world we have not made. In other words, when we step into the family we step into a fairy-tale.\u0026quot; –Heretics, CW, I, p.143 G.K. Chesterton.\nWhat great of a writer Chesterton was. No wonder Jorge Luis Borges and J.R.R. Tolkien were some of his great estimators. On Chesterton, Borges supposedly3 said: \u0026ldquo;Literature is one of the forms of happiness; perhaps no writer has given me as many happy hours as Chesterton.\u0026rdquo;\nAlong with many others on the Internet, E.M. Goldsmith attributes the simplified quote to the popular TV show Criminal Minds. It\u0026rsquo;d be interesting to find who quoted who here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFurther digging unearthed The Red Angel original text. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nG.K. Chesterton\u0026rsquo;s page on the Italian edition of Wikipedia; suspiciously flagged with a citation-needed note.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/g.k.-chesterton-on-fairy-tales-actually/","summary":"\u003cp\u003e\u003ca href=\"https://www.robinrendle.com/notes/fairy-tales/\"\u003eRobin Rendle\u003c/a\u003e quoting Neil Gaiman, who is quoting G.K. Chesterton:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFairy tales, as G.K. Chesterton once said, are more than true. Not because\nthey tell us that dragons exist, but because they tell us that dragons can be\ndefeated.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI read \u003ca href=\"https://en.wikipedia.org/wiki/G._K._Chesterton#Literary\"\u003esomewhere\u003c/a\u003e that he based the Gilbert character from \u003cem\u003eThe Sandman\u003c/em\u003e\non Chesterton, so it\u0026rsquo;s no surprise to find Gaiman quoting Chesterton in \u003cem\u003eSmoke\nand Mirrors\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eWanting to find the work in which the quote first appeared, I did\na little research only to discover that G.K. Chesterton never actually wrote\nit. According to \u003ca href=\"https://alleysiande.com/random-thoughts/gk-chesterton-an-actual-quote\"\u003eE.M. Goldsmith\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, Gaiman\u0026rsquo;s is a rework of the following\noriginal quote:\u003c/p\u003e","title":"G.K. Chesterton on fairy tales, actually"},{"content":"As part of his captivating Hidden Heroes series, Steven Johnson publishes an account of the mother of all demos.\nMore than 50 years ago, Douglas Engelbart gave the \u0026ldquo;mother of all demos\u0026rdquo; that transformed software forever. The computer world has been catching up with his vision ever since.\nMore here\n","permalink":"https://nicolaiarocci.com/an-account-of-the-mother-of-all-demos/","summary":"\u003cp\u003eAs part of his captivating Hidden Heroes series, Steven Johnson publishes an\naccount of the mother of all demos.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMore than 50 years ago, Douglas Engelbart gave the \u0026ldquo;mother of all demos\u0026rdquo; that\ntransformed software forever. The computer world has been catching up with\nhis vision ever since.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMore \u003ca href=\"https://hiddenheroes.netguru.com/douglas-engelbart\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"An account of the mother of all demos"},{"content":"Open Culture shared a \u0026ldquo;jaw-dropping visualization of John Coltrane\u0026rsquo;s \u0026lsquo;Giant Steps\u0026rsquo; solo.\u0026rdquo;\nIndeed, it is stunning, beautiful and valuable. A visualization like this makes music much more accessible. Quoting Open Culture:\nColtrane’s complexity is daunting for the most accomplished musicians. How much more so for non-musicians? It can seem like “you need a doctorate of music to go anywhere near his recordings,” Nicholson writes. But “nothing could be further from the truth.” With its dancing lines and circles, Brother’s visualization gives us another way to appreciate the “sheer joy of music making and the power and energy of his playing” that inspires students, serious fans, and newcomers alike through “universal values that still speak to us now.”\nI suddenly want all my music visualized like this.\nMy nerdiness alarm immediately went off, and I wanted to know more, so I dug a little. Open Culture presentation is remarkable, but what\u0026rsquo;s mind-boggling is the author\u0026rsquo;s in-depth article on the fractal structure of the solo. It\u0026rsquo;s all about fractals, baby!\n","permalink":"https://nicolaiarocci.com/a-stunning-visualization-of-john-coltranes-giant-steps-solo/","summary":"\u003cp\u003eOpen Culture \u003ca href=\"https://www.openculture.com/2022/08/watch-a-jaw-dropping-visualization-of-john-coltranes-giant-steps-solo.html\"\u003eshared\u003c/a\u003e a \u0026ldquo;jaw-dropping visualization of John Coltrane\u0026rsquo;s \u0026lsquo;Giant\nSteps\u0026rsquo; solo.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/Pxw4AQLVLis?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c!-- raw HTML omitted --\u003e\nIndeed, it is stunning, beautiful and valuable. A visualization like this makes\nmusic much more accessible. Quoting Open Culture:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eColtrane’s complexity is daunting for the most accomplished musicians. How\nmuch more so for non-musicians? It can seem like “you need a doctorate of\nmusic to go anywhere near his recordings,” Nicholson writes. But “nothing\ncould be further from the truth.” With its dancing lines and circles,\nBrother’s visualization gives us another way to appreciate the “sheer joy of\nmusic making and the power and energy of his playing” that inspires students,\nserious fans, and newcomers alike through “universal values that still speak\nto us now.”\u003c/p\u003e","title":"A stunning visualization of John Coltrane's 'Giant Steps' solo"},{"content":"Bret Devereaux has long been my go-to source for all things ancient and military history. One thing I somehow missed reading from his incredibly resourceful website is the This Isn\u0026rsquo;t Sparta series. He recently published a three-year-anniversary series retrospective which promptly surfaced on my RSS feed, giving me a chance to catch up over the holidays. The whole thing is a very long read, with some installments more engaging than others but overall very enjoyable, eye-opening, and information dense. In the just-published retrospective, Bret writes:\nThe series was thus intended to be set against the general public hagiography of Sparta and its intended audience was what I’ve heard termed the ‘Sparta Bro’ – the person for whom the Spartans represent a positive example (indeed, often the pinnacle) of masculine achievement, often explicitly connected to roles in law enforcement, military service and physical fitness (the regularity with which that last thing is included is striking and suggests to me the profound unseriousness of the argument). [\u0026hellip;] In that light, I think the series holds up fairly well.\nAs a former 100% Sparta Bro, I qualified for the target audience. Paraphrasing Marx, one could say that ignorance is the opium of the people. Take 300 the movie. I\u0026rsquo;m glad I saw it as entirely ignorant of Sparta\u0026rsquo;s \u0026lsquo;real\u0026rsquo; prowess, or most fun would have been spoiled.\n","permalink":"https://nicolaiarocci.com/the-indictment-against-sparta/","summary":"\u003cp\u003e\u003ca href=\"https://acoup.blog/\"\u003eBret Devereaux\u003c/a\u003e has long been my go-to source for all things ancient and\nmilitary history. One thing I somehow missed reading from his incredibly\nresourceful website is the \u003ca href=\"https://acoup.blog/2019/08/16/collections-this-isnt-sparta-part-i-spartan-school/\"\u003eThis Isn\u0026rsquo;t Sparta\u003c/a\u003e series. He recently published\na three-year-anniversary series retrospective which promptly surfaced on my\nRSS feed, giving me a chance to catch up over the holidays. The whole thing is\na very long read, with some installments more engaging than others but overall\nvery enjoyable, eye-opening, and information dense. In the just-published\nretrospective, Bret writes:\u003c/p\u003e","title":"The indictment against Sparta"},{"content":"Adelphi1 prints in book form two unpublished speeches by Milan Kundera, one from 1967 and the other from 1983, in which the great Czech writer reflects on the fate of the small nations in central Europe and the cultural drift of (western) Europe as a whole. As we read along, thanks to Kundera\u0026rsquo;s acumen and depth of analysis, we find many surprising ante-litteram references to today\u0026rsquo;s critical situation (Russian-Ukrainian war).\nReflecting on the fragmentary history of the Czech nation and on its shaky equilibrium (as it will be evident shortly after that), in 1967, the writer asks, \u0026ldquo;Is the cultural value of our people such as to justify its [nation] existence?\u0026rdquo; And to this question, he then adds a second one: \u0026ldquo;will this value suffice in the future to protect it from losing its sovereignty?\u0026rdquo; West Europe\u0026rsquo;s failure to understand the dilemma and its substantial indifference to the fate of the small eastern nations, which Russia\u0026rsquo;s totalitarian giant will eventually swallow up, are co-responsible for this loss of living identity and culture.\nIn the second text (1983), Kundera questions the \u0026ldquo;disappearance\u0026rdquo; of Europe as an ideal horizon (but also as a concrete force): united in the Middle Ages by the Christian religion, in the 18th century by Enlightenment philosophy, and in the modern age by the culture at large, what shared values constitute its foundation today? Perhaps technology and the entertainment industry?\nIt is not, therefore, political boundaries (inauthentic, always imposed by invasions, conquests and occupations) that determine the Central European aggregation. It is great common situations that bring peoples together, and group them in ever-changing ways, within imaginary and ever-changing boundaries, where the same memory, the same experience, and the same traditions remain.\nIf this unifying fabric is not there (and we need to understand by what threads it is held fast), each small nation is bound to see its autonomous and free existence called into question.\nThanks to Kundera\u0026rsquo;s brilliant reflections, I could look into recent Central Europe history from a different, non-western-centric perspective and get precious insights into current events. Look at what is happening today before our incredulous and appalled eyes.\nI\u0026rsquo;m not aware of any available English editions at this time, but it\u0026rsquo;s likely that the transcriptions of the speeches can be found online. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-a-captive-west-or-the-tragedy-of-central-europe/","summary":"\u003cp\u003eAdelphi\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e prints in book form two unpublished speeches by Milan Kundera, one from\n1967 and the other from 1983, in which the great Czech writer reflects on the\nfate of the small nations in central Europe and the cultural drift of (western)\nEurope as a whole. As we read along, thanks to Kundera\u0026rsquo;s acumen and depth of\nanalysis, we find many surprising ante-litteram references to today\u0026rsquo;s critical\nsituation (Russian-Ukrainian war).\u003c/p\u003e","title":"Book Review: A Captive West or the tragedy of Central Europe"},{"content":"As a Shirley Jackson fan, I couldn\u0026rsquo;t pass on this new collection of unpublished short stories. A good chunk of these was unheard of for thirty years until someone unearthed some cardboard boxes in a Vermont barn and then sent them to her heirs.\nUnlike The Lottery, where all tales followed a distinct theme, Just an Ordinary Day has little to unite the stories. Several genres are represented: classic family stories, supernatural, horror, and unsettling accounts of day-to-day life in the fifties all make up the list. Not all stories are of the same level. While most are mature for prime time, a few could have used some more tinkering, yet they were worth publishing as a precious testimony of an (infinitely talented) writer\u0026rsquo;s creative process. At one point, two versions of the same tale are put side by side, thus allowing a look into how Shirley Jackson revised her stories and perfected them over time. I think my Italian (Adelphi) edition includes a selection of the original collection of more than fifty, which is probably a good thing (I read somewhere that a second book with the missing pieces is planned).\nI would probably not recommend this book as a first-time Jackson reading. Her renowned fiction would be a better entry point1, with The Lottery serving as her must-read short-stories collection. Just an Ordinary Day is an excellent addition to any Jackson collection, with some of its tales deserving recognition at the top of her writing.\nSomewhat recently, I reviewed We Have Always Lived in the Castle. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-just-an-ordinary-day/","summary":"\u003cp\u003eAs a Shirley Jackson fan, I couldn\u0026rsquo;t pass on this new collection of unpublished\nshort stories. A good chunk of these was unheard of for thirty years until\nsomeone unearthed some cardboard boxes in a Vermont barn and then sent them to\nher heirs.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/luna-di-miele-mrs-smith.jpg#right\"\u003e\nUnlike The Lottery, where all tales followed a distinct theme, Just an Ordinary\nDay has little to unite the stories. Several genres are represented: classic\nfamily stories, supernatural, horror, and unsettling accounts of day-to-day\nlife in the fifties all make up the list. Not all stories are of the same\nlevel. While most are mature for prime time, a few could have used some more\ntinkering, yet they were worth publishing as a precious testimony of an\n(infinitely talented) writer\u0026rsquo;s creative process. At one point, two versions of\nthe same tale are put side by side, thus allowing a look into how Shirley\nJackson revised her stories and perfected them over time. I think my Italian\n(Adelphi) edition includes a selection of the original collection of more than\nfifty, which is probably a good thing (I read somewhere that a second book with\nthe missing pieces is planned).\u003c/p\u003e","title":"Book Review: Just an Ordinary Day"},{"content":"Suppose you are looking for a juicy and thought-provoking read on Italy\u0026rsquo;s twentieth-century crucial moments. In that case, I heartily recommend Italica by Giacomo Papi, a significant collection of short stories by prominent Italian writers of the period including the likes of Italo Calvino, Elsa Morante, Beppe Fenoglio, Natalia Ginzburg, and Giorgio Scerbanenco. A short essay introduces each tale. I thoughtfully appreciated these introductions, sometimes even more so than the story itself, as they are quintessential to comprehending the tale\u0026rsquo;s historical background. Papi\u0026rsquo;s remarks are insightful, brilliant, well-written, well-documented, and often heavily data-driven.\nThe last three tales conceal prophecies about the near future, corresponding to today\u0026rsquo;s present. I was impressed by Primo Levi\u0026rsquo;s 1971 Forehead Writing, where a world in which everyone can become a testimonial for a product is described vividly and bitingly. It\u0026rsquo;s impossible not to think of what we see and display on social media these days. Papi\u0026rsquo;s comment in this regard is illuminating:\nWith the selfie, photography ceased to be an instant captured by the observer to become a representation of the one being shown. The double lens blurred the boundary between observer and observed, turned the subject into the object, the viewer into the spectacle.\nItalica brilliantly recapitulates a hundred years of Italian history through the words of some of the best writers who lived through them. It talks about the Great War, fascism, racial laws, the Merlin law, terrorism, \u0026ldquo;Mani Pulite,\u0026rdquo; and other events and situations that have conditioned Italy\u0026rsquo;s twentieth century and still have after-effects in our lives today.\n","permalink":"https://nicolaiarocci.com/book-review-italica/","summary":"\u003cp\u003eSuppose you are looking for a juicy and thought-provoking read on Italy\u0026rsquo;s\ntwentieth-century crucial moments. In that case, I heartily recommend Italica\nby Giacomo Papi, a significant collection of short stories by prominent Italian\nwriters of the period including the likes of Italo Calvino,  Elsa Morante,\nBeppe Fenoglio, Natalia Ginzburg, and Giorgio Scerbanenco. A short essay\nintroduces each tale. I thoughtfully appreciated these introductions, sometimes\neven more so than the story itself, as they are quintessential to comprehending\nthe tale\u0026rsquo;s historical background. Papi\u0026rsquo;s remarks are insightful, brilliant,\nwell-written, well-documented, and often heavily data-driven.\u003c/p\u003e","title":"Book Review: Italica"},{"content":"I am happy and humbled to have been awarded the Microsoft MVP Award for the seventh consecutive year. July 1, the award assignation day, always comes with curiosity and a bit of trepidation.\nBeing a member of the MVP community has been a very positive experience for me, especially in the years before COVID, when the MVP Summit, the main MVP event, was held in person in Seattle at the Microsoft HQ. That assembly of experienced developers from all over the world is an exhilarating experience. Smart guys and gals from different cultures gather to meet the people responsible for their daily drivers\u0026rsquo; tools and technologies. There are countless networking possibilities, both with fellow MVPs and Microsoft personnel.\nFor the last two years, the Summit has been an online event. I admit I\u0026rsquo;ve had a hard time following the sessions as work and family tended to get in the way. The networking was, of course, next to zero. I miss the original MVP Summit. In the absence of it, even just meeting the Italian MVPs has been a rare occurrence. Hopefully, things will return to normal this year, although I\u0026rsquo;m doubtful.\n","permalink":"https://nicolaiarocci.com/im-a-microsoft-mvp-once-again/","summary":"\u003cp\u003eI am happy and humbled to have been awarded the Microsoft MVP Award for the\nseventh consecutive year. July 1, the award assignation day, always comes with\ncuriosity and a bit of trepidation.\u003c/p\u003e\n\u003cp\u003eBeing a member of the MVP community has been a very positive experience for me,\nespecially in the years before COVID, when the MVP Summit, the main MVP event,\nwas held in person in Seattle at the Microsoft HQ. That assembly of experienced\ndevelopers from all over the world is an exhilarating experience. Smart guys\nand gals from different cultures gather to meet the people responsible for\ntheir daily drivers\u0026rsquo; tools and technologies. There are countless networking\npossibilities, both with fellow MVPs and Microsoft personnel.\u003c/p\u003e","title":"I'm a Microsoft MVP once again"},{"content":"Last week, I got a mail from PyPI, the Python package index. They informed me that one of my open source projects had been designated as \u0026lsquo;critical,\u0026rsquo; and I was therefore required to enable two-factor authentication. If I didn\u0026rsquo;t oblige, I would soon lose the ability to add new releases or modify the project.\nThe project in question was Cerberus. The \u0026lsquo;critical\u0026rsquo; designation happens when a project has been in the top 1% of downloads over the prior six months. Given that there are currently 388K packages on the Python Package Index, I must admit that having one of my projects in the top 1% does feel good.\nHowever, I was initially a bit baffled in that I would lose control of the package if I didn\u0026rsquo;t take action. I understand the motivation behind this move, which is to improve the general security of the Python ecosystem. Still, the imposition from above didn\u0026rsquo;t feel quite right to me. After reading about the rationale for the new requirement, I surrendered, went on PyPI and activated 2FA1. In hindsight, I should have done that long ago, as I already use 2FA on many other services.\nA couple of days later, I was relieved to learn that my initial \u0026ldquo;1984-dictatorship-alert\u0026rdquo; ring bell wasn\u0026rsquo;t the only one to go off. On that day, Armin Ronacher\u0026rsquo;s thoughts on this very topic made the headlines on Hacker News:\nThe message to me as a maintainer is quite clear: once a project achieved criticality, then the index wants to exercise a certain amount of control [\u0026hellip;] However when I create an Open Source project, I do not chose to create a “critical” package. It becomes that by adoption over time. Right now the consequence of being a critical package is quite mild: you only need to enable 2FA. But a line has been drawn now and I\u0026rsquo;m not sure why it wouldn\u0026rsquo;t be in the index best interest to put further restrictions in place.\nI think Armin\u0026rsquo;s post is worth reading. I share some of his concerns, although I don\u0026rsquo;t consider \u0026lsquo;users vetting,\u0026rsquo; as he suggests, a suitable alternative for authentication (vetting solves a different problem).\nIt did help that the Python Software Foundation provided a limited number of [Titan Security Keys][4] to critical project maintainers. I could redeem two for free, and I have to say they are a joy to use. [4]: https://store.google.com/product/titan_security_key [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/a-project-you-maintain-has-been-designated-as-critical/","summary":"\u003cp\u003eLast week, I got a mail from PyPI, the Python package index. They informed me\nthat one of my open source projects had been designated as \u0026lsquo;critical,\u0026rsquo; and\nI was therefore required to enable two-factor authentication. If I didn\u0026rsquo;t\noblige, I would soon lose the ability to add new releases or modify the\nproject.\u003c/p\u003e\n\u003cp\u003eThe project in question was \u003ca href=\"https://python-cerberus.org/\"\u003eCerberus\u003c/a\u003e. The \u0026lsquo;critical\u0026rsquo; designation happens\nwhen a project has been in the top 1% of downloads over the prior six months.\nGiven that there are currently 388K packages on the Python Package Index,\nI must admit that having one of my projects in the top 1% does feel good.\u003c/p\u003e","title":"\"A project you maintain has been designated as critical\""},{"content":"Last year I hiked the Translagorai route while accompanying my nephew and his friend on their first hiking and wild camping experience. To go full circle, I soloed the Alta Via del Granito last weekend, which covers the parts of the Lagorai mountain range not included in the Translagorai. The AVG is supposed to be a three days effort, with overnights to be spent in managed huts (\u0026ldquo;Rifugio\u0026rdquo;), but I wanted to make it in two days while camping in the wilderness. On Day One, I experimented with recording some moments on my GoPro.\nDay one I left at five in the morning and arrived at Malga Sorgazza a few minutes ahead of eight-thirty as planned. The biker-to-hiker transition was pretty quick, and I finally took the trail at about nine.\nThe first section of the trail, from Malga Sorgazza to Costa Brunella Lake, is a continuous and strenuous climb, initially in the woods. Fortunately, today was a relatively chilly day after weeks of scorching climate. On the bike this morning, I had to wear my rain jacket for chill protection, and I arrived at my destination with numb hands. It took quite some time to warm them up.\nBeing finally on the trail and climbing up in the woods was invigorating. I resisted the enthusiasm-induced temptation of accelerating and proceeded slowly instead. It paid off, I think, as I was still feeling fresh and strong one hour later as I left the forest behind and started trampling the alpine meadows.\nThe last stretch before the lake was a tricky incline over beautiful meadows, with open views of Sorgazza Valley and its ranges. I\u0026rsquo;ve never been here before, but I knew what to expect, as Cima d\u0026rsquo;Asta and the Alta Via are part of the Loagorai Range I traversed last year while on the Translagorai. Brutal climbs alternated with rapid descents; dark volcanic rocks covered with liches of all kinds and colors, and lush green, high-altitude meadows.\nA dam encloses Costa Brunella Lake. At some point, the trail takes you directly to the foot of the dam, and it follows it for the entire length of its wall. The lake is not much, partly because it\u0026rsquo;s half empty given the drought this season. The trail continued, climbing steadily and still a long way up to Forcella Quarazza, where I arrived in good shape even though fatigue was starting to set in.\nForcella Quarazza welcomed me with a spectacular view. The panorama opens to the south, where you can oversee the Pre-Alps. Today was a beautifully clear day because of yesterday\u0026rsquo;s thunderstorms, though a bit windy.\nThe section from Forcella Quarazza to Forzellon de Rava is on technical terrain, always uphill, in its last part especially. Almost at the Forzellon, I wasn\u0026rsquo;t paying enough attention and didn\u0026rsquo;t notice a signal denoting a detour. Instead, I followed animal tracks that led me to the ridge in a few minutes. Fortunately, I immediately realized something wasn\u0026rsquo;t right and looked back, only to see my destination maybe fifty or sixty meters behind me, but I now had to go around a small steep peak. A few minutes later, I was at the Forzellon, back on track.\nThe next trail section connects the Forzellon with Forcella Ravetta at a slightly lower elevation. It is a long, technical traverse under the Caldenave peak. Here the view opens into this initially stony and wild valley which, further down, reveals the Lago Grande standing right in front of the hiker, on the other side of the valley, with a few alpine pastures and cabins nearby. Toward Forcella Ravetta, two more lakes appear, again on the opposite side, Lago di Mezzo and Lago Primo, below Monte Castelletto and Cima del Frate. I came across a viper sunbathing on the trail stones. She didn\u0026rsquo;t hear me; I was coming from above, behind, and under her wind. Scared, she quickly crawled away into the grass.\nAt Forcella Ravetta, I stopped for lunch. The marker there reported a mere 40 minutes descent to Rifugio Caldenave. At 1:15 pm, having woken at 4 am, it was time for a break. Strong winds were blowing on the fork\u0026rsquo;s north face, while the South side was suitable for lighting my camping stove. The only incident here was that I inadvertently knocked over the pan I had on the stove, spilling the boiling water. With not much water left, only half a bottle, I only managed to cook and take a sip. The Rifugio was not far away, so I wasn\u0026rsquo;t worried about my water supply. Surprisingly, there was a timid cell phone signal, and I could text the family back home.\nThe descent to the Malga Caldeneva was beautiful and challenging, rocky first, then in a long stream bed down until the rather characteristic Piana Caldenave, an evocative, flat alpine clearing with a stream placidly running through it. As I was leaving the gorge and entering the stream bed below the Forcella, I spotted two young chamois descending nimbly to my left. At the Malga, I sat for a few minutes and enjoyed strudel and beer. I try to support managers and their families at these remote huts. They might live in beautiful secluded places but also have a harsh life. Besides, I wanted a beer. And cake. I refilled the bottles, too, readying them for the night camp.\nI struggled too much to find the start of the trail that would take me up in the heights again, under Forcella Buse Todesche. The canonical first stage of the Alta Via ends here at Malga Caldenave, where one usually stays overnight. However, I had planned to continue for a couple more hours.\nA beautiful trail, this last one of the day, always uphill, first in a beautiful forest and then on the highland grasslands. Climbing up through the woods, one comes across an area called \u0026ldquo;Laghi Della Val D\u0026rsquo;inferno\u0026rdquo; (Hell Valley Lakes) that is striking, with these two to three shallow-water lakes scattered among gooseberries and erratic boulders, enclosed by steep rock walls. One expects to see a nymph or any other fairy creature pop up at any moment. I was tempted to camp there, partly because I could have bathed in one of the small lakes, but I decided to stick to the plan and continue.\nI first arrivaed at cabin Lastei, which was not in good condition, and continued to cabin Scagni, where I had planned to pitch my tent. The cabin turned out to be in good condition. It was sufficiently clean, with a long plank that, if there were even two of us, would have been impossible to take advantage of. Me being alone, however, this cabin was perfect. I can avoid setting up the tent and, more importantly, taking it down and storing it the next day. A stream runs right in front of the cabin; I can use its water for cooking, washing, and resupplying.\nAnd I find myself sitting on this bench made out of a half-trunk at the cabin\u0026rsquo;s door. I\u0026rsquo;m in a beautiful, solitary highland basin, and the sun is just about to set down. Soon it won\u0026rsquo;t warm me anymore, and I will have to take shelter inside. Tomorrow\u0026rsquo;s trail leads to a creek. I can hear it from here. I will fill my bottles and maybe even take a quick bath before setting out. I\u0026rsquo;m glad I\u0026rsquo;ll sleep between wooden walls tonight.\nDay two The night was good. I enjoyed the great silence inside and around the cabin. I woke up in the morning with a cold nose, and I distinctly remember tucking my head into the sleeping bag\u0026rsquo;s hook during the night, so it must have been cold outside, but in the sleeping bag, it was warm. I had not set the alarm; I knew the sun would rise right before the lodge, so its light would filter through the wooden boards. I slept a long time, from 8 pm to 7 am -super tired- and woke up refreshed. It was warm when I went outside, with the sun beating down on the lodge\u0026rsquo;s wood. In about an hour, I had breakfast, got ready, tidied up and set off again for the first leg of the day, the Forcella Buse Todesche.\nThis first part is lovely. You go up into fairy tale terrain: streams, meadows, stones, and a few scattered saplings until you reach the fork. On the other side, a very different landscape presents itself: steep terrain, pebbles and the trail that follows the entire slope to the left, halfway up to Forcella Magna. It is a long but not too strenuous section, slightly downhill more often than uphill, very spectacular and scenic. Shortly after leaving the fork, you get a glimpse of the final destination: Cima d\u0026rsquo;Asta with Rifugio Brenteri below, its lake (only a hint of it from that distance) and high, just below the summit, the bivouac, an actual eagle\u0026rsquo;s nest. I remember a lovely little waterfall where I drank. At about fifteen minutes from Forcella Magna, right on the ridgeline, is the Lasteati bivouac, a restored wartime barrack. This bivouac also has only one sleeping place. Again, traveling alone offers so many advantages from a practical-logistical point of view; one is that you can take advantage of places that would typically be impractical, even for only two people.\nForcella Magna Lake is beautiful, with nearby ruins of Great War emplacements. At the fork, I made a mistake. Misled by an inscription painted on a large boulder (\u0026ldquo;Rifugio Brenteri\u0026rdquo;), I immediately took the wrong trail. It was steep, practically a straight climb up the northern side of the ridge. I soon realized that something was not right. I checked the map only to confirm my concerns: this was the trail that then led, yes, to the Rifugio but not following the Alta Via. Wanting to follow the official path, I turned back. When I returned to the Forcella, I noticed a much smaller rock positioned about ten meters lower relative to the summit, which was marked with a south-west pointing arrow and the AVG (Alta Via del Granito) initials. I\u0026rsquo;d like to imagine that many others fell to this, but rest assured, not consulting the map when I arrived at the fork was a significant error on my part. It would appear that I tend to be confused, distracted, or most likely both when, exhausted, I finally reach mountain forks.\nThe new trail starts halfway up the hillside and is much more complicated than the previous one. Full of slope changes, it crosses scree and scree-stones, forcing one to pay full attention at all times. After half an hour, as expected, the most challenging climb of the tour started—seven hundred meters of relentless elevation gain on very technical terrain. I must admit that I suffered here. Tired, I climbed on steep rocky terrain under a scorching sun and tense winds for, I think, one hour and a half. Yes, it took a lot of effort to reach Passo Secede at the top. When I departed the cabin in the morning, I didn\u0026rsquo;t expect I would be so exhausted at this point. Luckily for me, this would also be the last climb for the day.\nAt the Pass, the view is spectacular on all sides. You get to contemplate the whole main Lagorai range in all its glory. Right in front of you, the now looming Cima d\u0026rsquo;Asta with its deep lake stupendously nestled right at the foot of the tall, 500-meter tall granite wall, and then, not too far from the lake river, the plateau where the Rifugio resides. I had my lunch while contemplating the views and pondering what to do next. From a distance, the Rifugio looked adorable, but I knew I would find chaos there. It was a beautiful mid-July Saturday, and Cima d\u0026rsquo;Asta is the most visited peak in the area. I was tired, even more than I had expected.\nTo complete the Alta Via, I only needed to reach the bottom of the valley and return to my motorcycle. Still, my super-secret goal was to climb the Cima d\u0026rsquo;Asta, which would have required another 500 meters of elevation gain. There I would sleep at the bivouac on the wall. However, all those crowds at the Rifugio and around the lake changed my mind. At the summit, I would have found dozens of people, and, more importantly, since the bivouac had only two beds, it was very likely to find fully occupied. At that point, I would have had to descend back to the lake and camp near the hut, something I wanted to avoid on a Saturday night. So, after a bit of wavering, I opted for the descent.\nAs always in Lagorai, the return to the bottom was not trivial, not at all. It was over a thousand meters drop on a steep and challenging trail down to the forest road that only covers the last couple of kilometers to Malga Sorgazza. I must also admit that during the descent, I was overtaken by several young people descending nimbly and quickly, an unmistakable sign that times have changed for me.\nThe motorcycle ride back was a three-and-a-half-hour non-stop ride home. I was in an almost catatonic state for the first hour or so. Then, I slowly recovered so much that I did not even feel the need to stop. With the mission accomplished, I only wanted to get home as soon as possible, which doesn\u0026rsquo;t mean I ran fast on the road; quite the contrary, given my tiredness. I learned that steady progress takes me home safely, pleasantly and often sooner than any other option.\n","permalink":"https://nicolaiarocci.com/hiking-the-alta-via-del-granito/","summary":"\u003cp\u003eLast year \u003ca href=\"/hiking-the-translagorai-25-years-later/\"\u003eI hiked the Translagorai route\u003c/a\u003e while accompanying my nephew and\nhis friend on their first hiking and wild camping experience.  To go full\ncircle, I soloed the \u003ca href=\"http://www.altaviadelgranito.com/\"\u003eAlta Via del Granito\u003c/a\u003e last weekend, which covers the\nparts of the Lagorai mountain range not included in the Translagorai. The AVG is\nsupposed to be a three days effort, with overnights to be spent in managed huts\n(\u0026ldquo;Rifugio\u0026rdquo;), but I wanted to make it in two days while camping in the\nwilderness.  On Day One, I experimented with recording some moments on my GoPro.\u003c/p\u003e","title":"Hiking the Alta Via del Granito"},{"content":"W.G. Sebald is widely considered among the best modern German authors, so I approached this book with curiosity and high expectations. The Rings of Saturn records the author\u0026rsquo;s walking tour along the East Coast of England. As W.G. Sebald resides in the intellectual world, his tour naturally brings up literary, cultural or historical reminiscences.\nAn astute Goodreads reviewer noted that Britain\u0026rsquo;s decline\u0026rsquo;s eccentric and grotesque aspects are this work\u0026rsquo;s central theme. The peregrinations of Thomas Browne\u0026rsquo;s skull, dubious capitalism, carpet bombing of Nazi Germany, 20th-century Imperialism, the case of Roger Casement, Belgian Congo genocide, quasi-repatriation of Michael Hamburger, Tai-ping rebellion, Joseph Conrad\u0026rsquo;s Congo excursion, Edward Fitzgerald\u0026rsquo;s life and times, etc.—and how these end, or, indeed, constitute decay, dissolution and death. That\u0026rsquo;s a lot of output for a few days-long walk-about.\nI learned about many people and events I was unaware of, and I\u0026rsquo;m grateful for that. The writing is excellent, as it is the Italian translation. But this work lacks a solid central character; the narrator\u0026rsquo;s travels don\u0026rsquo;t tie its disparate strands together adequately, making the whole not as gripping as desired.\n","permalink":"https://nicolaiarocci.com/book-review-the-rings-of-saturn/","summary":"\u003cp\u003eW.G. Sebald is widely considered among the best modern German authors, so\nI approached this book with curiosity and high expectations. The  Rings of\nSaturn records the author\u0026rsquo;s walking tour along the East Coast of England. As\nW.G. Sebald resides in the intellectual world, his tour naturally brings up\nliterary, cultural or historical reminiscences.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"The Rings of Saturn\" loading=\"lazy\" src=\"/images/the-rings-of-saturn.jpg#right\"\u003e\nAn astute Goodreads reviewer noted that Britain\u0026rsquo;s decline\u0026rsquo;s eccentric and\ngrotesque aspects are this work\u0026rsquo;s central theme. The peregrinations of Thomas\nBrowne\u0026rsquo;s skull, dubious capitalism, carpet bombing of Nazi Germany,\n20th-century Imperialism, the case of Roger Casement, Belgian Congo genocide,\nquasi-repatriation of Michael Hamburger, Tai-ping rebellion, Joseph Conrad\u0026rsquo;s\nCongo excursion, Edward Fitzgerald\u0026rsquo;s life and times, etc.—and how these end,\nor, indeed, constitute decay, dissolution and death. That\u0026rsquo;s a lot of output for\na few days-long walk-about.\u003c/p\u003e","title":"Book Review: The Rings of Saturn"},{"content":"It\u0026rsquo;s been a long time coming, but I\u0026rsquo;m glad to announce that Eve 2 has finally been released today. This release drops support for Python 2, Python 3.5 and Python 3.6 hence the major version bump. Other than that, expect some fixes, a new uuidRepresentation setting for MONGO_OPTIONS, and an alignment to the latest Werkzeug/PyMongo idiosyncrasies. The full changelog is available on the project website.\nThe Eve project has been out for ten years. As said elsewhere, I believe it\u0026rsquo;s mature and stable enough for most use cases. I consider it done in terms of features, and it is now in \u0026lsquo;maintenance mode\u0026rsquo;.\n","permalink":"https://nicolaiarocci.com/eve-2.0-released/","summary":"\u003cp\u003eIt\u0026rsquo;s been a long time coming, but I\u0026rsquo;m glad to announce that Eve 2 has finally\nbeen released today. This release drops support for Python 2, Python 3.5 and\nPython 3.6 hence the major version bump. Other than that, expect some fixes,\na new \u003ccode\u003euuidRepresentation\u003c/code\u003e setting for \u003ccode\u003eMONGO_OPTIONS\u003c/code\u003e, and an alignment to the\nlatest Werkzeug/PyMongo idiosyncrasies. The full changelog is available on the\n\u003ca href=\"https://docs.python-eve.org/en/stable/changelog.html#version-v2-0\"\u003eproject website\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe Eve project has been out for ten years. As said \u003ca href=\"/is-eve-still-maintained/\"\u003eelsewhere\u003c/a\u003e, I believe it\u0026rsquo;s\nmature and stable enough for most use cases. I consider it done in terms\nof features, and it is now in \u0026lsquo;maintenance mode\u0026rsquo;.\u003c/p\u003e","title":"Eve 2.0 released"},{"content":" \u0026ldquo;Kublai Khan does not necessarily believe everything Marco Polo says when he describes the cities visited on his expeditions, but the emperor of the Tartars does continue listening to the young Venetian with greater attention and curiosity than he shows any other messenger or explorer of his.\u0026rdquo; So begins Italo Calvino\u0026rsquo;s compilation of fragmentary urban images. As Marco tells the khan about Armilla, which \u0026ldquo;has nothing that makes it seem a city, except the water pipes that rise vertically where the houses should be and spread out horizontally where the floors should be,\u0026rdquo; the spider-web city of Octavia, and other marvelous burgs, it may be that he is creating them all out of his imagination, or perhaps he is recreating fine details of his native Venice over and over again, or perhaps he is simply recounting some of the myriad possible forms a city might take.\nInvisible Cities is a collection of thoughts taking the form of cities or cities taking the form of thoughts. It is an aesthetic and allegorical description of some fictional, mostly surreal cities. Some of the portrayals are fabulous: these cities suddenly come to life in the reader\u0026rsquo;s mind thanks to Calvino\u0026rsquo;s mastery, who manages to materialize absurd cities, which have nothing of the cities we are used to observing day after day; yet they appear to us almost natural, absolutely possible, and charged with a suggestiveness that no earthly city could have. In addition to the vivid images, however, we will be confronted with the thought that the shapes of those cities give rise to the figure of their inhabitants, who may represent various sides of human nature.\nI can\u0026rsquo;t help but think of suggestive architectures mentioned in other works, like Mervyn Peake\u0026rsquo;s Gormenghast series or Hayao Miyazaki\u0026rsquo;s animes. In Peake and Miyazaki, architecture plays a fundamental and often active role (think of Howl\u0026rsquo;s Moving Castle). Likewise, Calvino\u0026rsquo;s Cities are absolute protagonists, while Marco Polo and the khan are mere means to the narration.\nInvisible Cities is one of Calvino\u0026rsquo;s best works. Like others of his, it might even appear light to the superficial reader while it\u0026rsquo;s chock full of precious insights and profound thoughts delivered by a master at the art.\nThe inferno of the living is not something that will be; if there is one, it is what is already here, the inferno where we live every day, that we form by being together. There are two ways to escape suffering it. The first is easy for many: accept the inferno and become such a part of it that you can no longer see it. The second is risky and demands constant vigilance and apprehension: seek and learn to recognize who and what, in the midst of inferno, are not inferno, then make them endure, give them space. ― Italo Calvino, Invisible Cities\n","permalink":"https://nicolaiarocci.com/book-review-invisible-cities/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;Kublai Khan does not necessarily believe everything Marco Polo says when he\ndescribes the cities visited on his expeditions, but the emperor of the\nTartars does continue listening to the young Venetian with greater attention\nand curiosity than he shows any other messenger or explorer of his.\u0026rdquo; So\nbegins Italo Calvino\u0026rsquo;s compilation of fragmentary urban images. As Marco\ntells the khan about Armilla, which \u0026ldquo;has nothing that makes it seem a city,\nexcept the water pipes that rise vertically where the houses should be and\nspread out horizontally where the floors should be,\u0026rdquo; the spider-web city of\nOctavia, and other marvelous burgs, it may be that he is creating them all\nout of his imagination, or perhaps he is recreating fine details of his\nnative Venice over and over again, or perhaps he is simply recounting some of\nthe myriad possible forms a city might take.\u003c/p\u003e","title":"Book Review: Invisible Cities"},{"content":"After two years of avoiding it, I finally got Covid. First two days, I had a few symptoms but was testing negative (it was likely to be Covid because one of my daughters was positive.) On day three, I tested positive. It\u0026rsquo;s ten days now, but only during the first three or four I didn\u0026rsquo;t feel good: a light fever, pinching throat, some coughing and sleepiness, that\u0026rsquo;s all. I did not have to miss any working days (I\u0026rsquo;m self-employed) and only had to skip two of my daily training routines1. I\u0026rsquo;m in my early fifties, healthy, fully vaccinated and boosted.\nThese days, in our household, three out of four got the Covid. Our eldest son is in Berlin at the university, but he got Covid one year ago when studying in France. As I write, I learn that my brother and his wife have tested positive. Hopefully, our elders will stay clear of it. I\u0026rsquo;m so thankful for all the science that makes this less terrible.\nI\u0026rsquo;ll have to pass on tonight\u0026rsquo;s DevRomagna meetup, though, and I\u0026rsquo;m likely to skip next weekend\u0026rsquo;s planned motorcycle trip—minor annoyances given the circumstances, but it still sucks. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/i-got-covid/","summary":"\u003cp\u003eAfter two years of avoiding it, I finally got Covid. First two days, I had\na few symptoms but was testing negative (it was likely to be Covid because one\nof my daughters was positive.) On day three, I tested positive. It\u0026rsquo;s ten days\nnow, but only during the first three or four I didn\u0026rsquo;t feel good: a light fever,\npinching throat, some coughing and sleepiness, that\u0026rsquo;s all.  I did not have to\nmiss any working days (I\u0026rsquo;m self-employed) and only had to skip two of my daily\ntraining routines\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. I\u0026rsquo;m in my early fifties, healthy, fully vaccinated and\nboosted.\u003c/p\u003e","title":"I got Covid"},{"content":"Today, probably not just by coincidence, I came across Becoming the Emperor, an excellent New Yorker piece from 2005 on Memoirs of Hadrian, Yourcenar\u0026rsquo;s other works, and her peculiar career and life trajectory. Having just read the Memoirs, I was glad to see several of my reading impressions confirmed. I found the New Yorker article to be spot-on on Yourcenar\u0026rsquo;s prose and theme:\nActually, some of Yourcenar’s prose is marmoreal, but not so that you can’t get through it. Also, it is beautiful. What made her remarkable, however, was not so much her style as the quality of her mind. Loftiness served her well as an artist: she was able to dispense love and justice, heat and cold in equal parts. Above all, her high sense of herself gave her the strength to take on a great topic: time.\nI was caught off-guard by the idea, conceived by many critics, that her writing style resembles a man rather than a woman.\nFirst, many of her narratives were set in the past. Second, they often involved towering passions compacted into tight, steel-band forms. [\u0026hellip;] She continued to embrace anti-sentimentality; indeed, she showed a fondness for brutality. And those traits, together with her highly controlled prose, encouraged reviewers to say—as they would say throughout her life—that she wrote like a man. As one critic put it, he could not find in her work “those often charming weaknesses\u0026hellip; by which one identifies a feminine pen. The hand does not yield, it does not caress the paper; it is clasped by an iron gauntlet.” This opinion was fortified by the fact that most of her protagonists were men.\nIntriguing and, now that I have been enlightened, shareable.\n","permalink":"https://nicolaiarocci.com/becoming-the-emperor/","summary":"\u003cp\u003eToday, probably not just by coincidence, I came across \u003ca href=\"https://www.newyorker.com/magazine/2005/02/14/becoming-the-emperor\"\u003eBecoming the Emperor\u003c/a\u003e, an\nexcellent New Yorker piece from 2005 on Memoirs of Hadrian, Yourcenar\u0026rsquo;s other\nworks, and her peculiar career and life trajectory. Having just read the\nMemoirs, I was glad to see several of \u003ca href=\"https://nicolaiarocci.com/book-review-memoirs-of-hadrian/\"\u003emy reading impressions\u003c/a\u003e confirmed.\nI found the New Yorker article to be spot-on on Yourcenar\u0026rsquo;s prose and theme:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eActually, some of Yourcenar’s prose is marmoreal, but not so that you can’t\nget through it. Also, it is beautiful. What made her remarkable, however, was\nnot so much her style as the quality of her mind. Loftiness served her well\nas an artist: she was able to dispense love and justice, heat and cold in\nequal parts. Above all, her high sense of herself gave her the strength to\ntake on a great topic: time.\u003c/p\u003e","title":"Becoming the Emperor"},{"content":"I just released Eve-Swagger v0.2 on PyPI. Eve-Swagger is a Swagger/OpenAPI extension for Eve powered RESTful APIs. This maintenance release addresses a few issues and adds support for eve-auth-jwt. Many thanks to Roberto Romero for his contributions to this release.\n","permalink":"https://nicolaiarocci.com/eve-swagger-v0.2-released/","summary":"\u003cp\u003eI just released \u003ca href=\"https://pypi.org/project/Eve-Swagger/\"\u003eEve-Swagger v0.2\u003c/a\u003e on PyPI. Eve-Swagger is a Swagger/OpenAPI\nextension for \u003ca href=\"https://python-eve.org\"\u003eEve\u003c/a\u003e powered RESTful APIs. This maintenance release addresses\na few issues and adds support for \u003ca href=\"https://github.com/rs/eve-auth-jwt\"\u003eeve-auth-jwt\u003c/a\u003e. Many thanks to \u003ca href=\"https://github.com/sildur\"\u003eRoberto\nRomero\u003c/a\u003e for his contributions to this release.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Eve-Swagger 0.2\" loading=\"lazy\" src=\"/images/eve-swagger-0.2.png\"\u003e\u003c/p\u003e","title":"Eve-Swagger v0.2 released"},{"content":"Memoirs of Hadrian and its author Marguerite Yourcenar have always induced a cautious fear in me. I fretted the tome for high literary circles, one of those texts so infused with learned quotations and obscure literary references as to be utterly indigestible to the average reader. Despite their evident reputation, I relegated the Memoirs to the bottom of my reading list for a long time. When I stumbled on another reference to Yourcenar\u0026rsquo;s work a couple of weeks ago, I finally decided to plunge and pull the Memoirs off the shelf.\nIt was immediately apparent that I was facing something exceptional. The memoirs are drafted by an elderly emperor Hadrian for his young friend \u0026ldquo;Mark,\u0026rdquo; the future Marcus Aurelius. Hadrian does not flinch. He tells of his many great successes but does not hide his mistakes and weaknesses. The former he points out so that his protégé can steer clear of them; the latter he investigates, not without that indulgence that every elder is entitled to.\nThe emperor writes of practical things: the organization of the state and turbulent provinces management (he devoted a significant part of his career to visiting the remote provinces, so much that he was criticized for being too absent from Rome), the conspiracies he foiled and the problematic management of the enormous army, with all its quarrelsome commanders and legions. But Hadrian also tells about his private life: the boundless ambition of his youth, the passion for Hellenic culture and how it influenced his reign. He writes about his fleeting loves and the relationship with the young Antinous, his only true love, tragically lost way too soon. To overcome the trauma of the loss, Hadrian does what is precluded to ordinary mortals: deifies his beloved. He establishes a cult of Antinous, which, surprisingly so in the eyes of modern man, flourishes everywhere in the vast empire, taking different forms depending on the receiving religion. Like any ordinary person, the emperor wonders about the eternal questions that plague humanity. He offers answers to some while others are left unanswered, impenetrable even to the divine emperor.\nThe text is compelling, intimate and full of such accurate details that I soon wondered whether what I was reading was a literary invention or a historical document. The truth lies somewhere in between. According to the sources, Hadrian did write an autobiography, but it is lost. The Memoirs is indeed a work of fiction; the result, however, of meticulous historical research carried out, between ups and downs, for thirty years. Everything that Hadrian recounts is historically attested. Where doubts exist, the author chooses the most reliable historical hypothesis, not failing at times to adjust, rehash, or add where necessary. The author\u0026rsquo;s notes, included in my edition, are invaluable in fully understanding and appreciating the amount and quality of work done. Yourcenar conceived the idea in 1924-25, when she was only 22 years old, only to publish it in 1951. Nowadays, historical novels are common but not in the early twentieth century, when the memoir letter form was probably unheard of. The result is a daring and unconventional work for the time, a high-risk publication that was instead an immediate success with both the public and the critics who acclaimed it.\nMy long-held fears were unfounded after all. Although with some guilty delay, this book goes straight into my all-time top ten.\nSee also: Becoming the Emperor\n","permalink":"https://nicolaiarocci.com/book-review-memoirs-of-hadrian/","summary":"\u003cp\u003eMemoirs of Hadrian and its author Marguerite Yourcenar have always induced\na cautious fear in me. I fretted the tome for high literary circles, one of\nthose texts so infused with learned quotations and obscure literary references\nas to be utterly indigestible to the average reader. Despite their evident\nreputation, I relegated the Memoirs to the bottom of my reading list for a long\ntime. When I stumbled on another reference to Yourcenar\u0026rsquo;s work a couple of\nweeks ago, I finally decided to plunge and pull the Memoirs off the shelf.\u003c/p\u003e","title":"Book Review: Memoirs of Hadrian"},{"content":"Stripe docs are a marvel, and every developer who\u0026rsquo;s had to deal with them knows it. After years of painful PayPal interactions, I remember the amazement and the feverish grin on my face the first time I landed on their API reference. Stripe API is beautifully designed, but it\u0026rsquo;s the combination of good design and excellent documentation that paved Stripe\u0026rsquo;s fulgid success.\nA few days ago, they unexpectedly released MarkDoc, the \u0026ldquo;powerful, flexible, Markdown-based authoring framework\u0026rdquo; they use internally to build their documentation. I skimmed through it only rapidly and, unsurprisingly, got a great first impression.\nFabrizio Ferri Benedetti, who knows better than me about docs, published a solid first-glance review of MarkDoc that I think is worth reading. Spoiler alert, I\u0026rsquo;m quoting below his excellent closing thoughts.\nThe secret to Stripe docs does not lie in superior tooling or magical markup variants: rather, the reason for their success must be found in the quality of their docs team, whose information architecture needs caused Markdoc to happen. This is the kind of magic that happens when you provide enough technical resources to your technical writers and trust them to do the right thing.\nUpdate: MarkDoc even received John Gruber\u0026rsquo;s endorsement. That\u0026rsquo;s quite an achievement as Gruber is renowned for dismissing most Markdown extensions.\n","permalink":"https://nicolaiarocci.com/stripe-releases-markdoc-and-thats-a-good-thing/","summary":"\u003cp\u003e\u003ca href=\"https://stripe.com/docs\"\u003eStripe docs\u003c/a\u003e are a marvel, and every developer who\u0026rsquo;s had to deal with them knows\nit. After years of painful PayPal interactions, I remember the amazement and\nthe feverish grin on my face the first time I landed on their API reference.\nStripe API is beautifully designed, but it\u0026rsquo;s the combination of good design and\nexcellent documentation that paved Stripe\u0026rsquo;s fulgid success.\u003c/p\u003e\n\u003cp\u003eA few days ago, they unexpectedly released \u003ca href=\"https://markdoc.io/\"\u003eMarkDoc\u003c/a\u003e, the \u0026ldquo;powerful,\nflexible, Markdown-based authoring framework\u0026rdquo; they use internally to build\ntheir documentation. I skimmed through it only rapidly and, unsurprisingly, got\na great first impression.\u003c/p\u003e","title":"Stripe releases MarkDoc and that's a good thing"},{"content":"Last week, thanks to Andrea Verlicchi1\u0026rsquo;s effort, we ran the first in-person DevRomagna event since 2019. We did some meetups during the pandemic, some in 2020 and a couple in 2022, but they were all online.\nIn theory, online meetups and DevRomagna are a match made in heaven. The Romagna region consists of small same-size towns scattered in the vast countryside. To accommodate this, and in an attempt to encourage varied participation, DevRomagna has always been a roaming meetup. We might be in one place one month, and then, next month, we will likely move to another town. With online meetups, attendance doesn\u0026rsquo;t have to commit to a commute saving time and money and allowing everyone to participate in events that would otherwise be too far away.\nBut there\u0026rsquo;s value in commitment. The other day, we gathered in a new cozy venue (Ca\u0026rsquo; Vaina2, a municipality-run youth center and coworking space) where my friend Gabriele Santomaggio talked about Kubernetes, service mesh and isolation techniques he and his colleagues adopt at Vmware. After the talk, some of us went for dinner in a nearby pizzeria. The pizza was good, and the craft beer was great. We talked about many things like our jobs, our favorite developer tools and languages, and all the nerdy stuff you\u0026rsquo;d imagine. Suggestions for new original presentations were thrown around, which is always good. Most importantly, I got to know new people, including Ugo, a fellow Microsoft MVP from my area whom I somehow managed not to meet in all these years. With Ugo, we are now planning a few hopefully engaging dotnet-centered events.\nAll in all, it was a pleasant, fruitful evening spent with like-minded individuals. We could have done an online event with, probably, a higher attendance. I would\u0026rsquo;ve saved some money and time (Imola, the town where the meetup took place, is a half-hour drive, which includes a highway toll), but I wouldn\u0026rsquo;t get to meet Ugo at the table or see Gabriele after two years of pandemic-inflicted hiatus.\nMore than one interested in the event asked if we would stream it, and my answer was no for several reasons. I suspect that in-person attendance would dwindle if we\u0026rsquo;d stream our events, as we\u0026rsquo;d be effectively discouraging active participation. Also, it wouldn\u0026rsquo;t be fair to the people who make an effort and come to the venue. Recording the session and streaming them later might be an option, but this would discourage live participation too. So, for the time being, whenever possible, DevRomagna will stay true to its roots and remain a live event. There might be exceptions, like if we have a foreign or far-away guest or can\u0026rsquo;t find a proper venue.\nWe\u0026rsquo;re a local meetup, and \u0026ldquo;local\u0026rdquo; hardly conjugates with \u0026ldquo;online.\u0026rdquo;\nAndrea is a DevRomagna co-organizer now. I am happy to have him onboard. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSorry for the Facebook link. I couldn\u0026rsquo;t find a better reference.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/in-person-vs.-online-events/","summary":"\u003cp\u003eLast week, thanks to \u003ca href=\"https://twitter.com/verlok\"\u003eAndrea Verlicchi\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u0026rsquo;s effort, we ran the first\nin-person \u003ca href=\"https://www.meetup.com/it-IT/DevRomagna/\"\u003eDevRomagna\u003c/a\u003e event since 2019. We did some meetups during the\npandemic, some in 2020 and a couple in 2022, but they were all online.\u003c/p\u003e\n\u003cp\u003eIn theory, online meetups and DevRomagna are a match made in heaven. The\n\u003ca href=\"https://en.wikipedia.org/wiki/Romagna\"\u003eRomagna region\u003c/a\u003e consists of small same-size towns scattered in the vast\ncountryside. To accommodate this, and in an attempt to encourage varied\nparticipation, DevRomagna has always been a roaming meetup. We might be in one\nplace one month, and then, next month, we will likely move to another town.\nWith online meetups, attendance doesn\u0026rsquo;t have to commit to a commute saving\ntime and money and allowing everyone to participate in events that would\notherwise be too far away.\u003c/p\u003e","title":"In-person vs. online events"},{"content":"In 1982, at just twenty-three years old and halfway through her architectural studies, Elspeth Beard left her family and friends in London and set off on a 35,000-mile solo adventure around the world on her 1974 BMW R60/6.\nExhausted by a recent breakup and with only a few savings scraped together from her job in a pub, a tent, a few clothes and some tools, all packed on the back of her bike, she was determined to prove herself.\nAfter almost two and a half years, she returned to London, having lost much weight but wiser by decades. She had ridden through unforgiving landscapes and war-torn countries and witnessed civil uprisings that forced her to forge documents. She had fended off multiple sexual attacks, biker gangs, and corrupt police convinced she was a drug dealer. She had survived life-threatening illnesses, personal losses, and brutal accidents that left permanent scars and a black hole in her memory. She had also fallen in love with two very different men.\nThis book is an absorbing account of a true adventure, not just a motorcycle adventure, lived by a woman of exceptional character, strength, tenacity and resilience.\nToday it seems incredible that at the time, no one was interested in this story and that thirty years had to pass before it was published. Distance in time is sometimes felt, especially in the lack of details or how some parts of the journey are glossed over. Fortunately, Beard kept an accurate diary, on which she drew heavily. The result is, in any case, 336 compelling pages, well worth reading.\n","permalink":"https://nicolaiarocci.com/book-review-lone-rider/","summary":"\u003cp\u003eIn 1982, at just twenty-three years old and halfway through her architectural\nstudies, Elspeth Beard left her family and friends in London and set off on\na 35,000-mile solo adventure around the world on her 1974 BMW R60/6.\u003c/p\u003e\n\u003cp\u003eExhausted by a recent breakup and with only a few savings scraped together from\nher job in a pub, a tent, a few clothes and some tools, all packed on the back\nof her bike, she was determined to prove herself.\u003c/p\u003e","title":"Book Review: Lone Rider"},{"content":"One of my pet peeves has always been the many different, sometimes very original ways in which CLI tools handle help requests. POSIX sets the canon: -h or --help is how we ask for help. But no, some tools1 want to be original at the worst moment: when their users are struggling, looking for guidance.\nIt\u0026rsquo;s somewhat consolatory to learn that I\u0026rsquo;m not alone in this fight. The other day I landed on Clayton Craft\u0026rsquo;s blog. His [rant on the topic][2] splendidly concludes with the following assessment:\nIf you know your user is asking for help, show them the damn help. It serves no one to chide them for not guessing the specific way your app wants them to ask for help. Better yet, support a more \u0026ldquo;common\u0026rdquo; way to allow users to ask for help if your app doesn\u0026rsquo;t already.\nI agree wholeheartedly.\nI\u0026rsquo;m looking at you, NuGet. [2]: https://blog.craftyguy.net/cmdline-help/ [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/if-you-know-your-user-is-asking-for-help-show-them-the-damn-help/","summary":"\u003cp\u003eOne of my pet peeves has always been the many different, sometimes very\noriginal ways in which CLI tools handle help requests. POSIX sets the canon:\n\u003ccode\u003e-h\u003c/code\u003e or \u003ccode\u003e--help\u003c/code\u003e is how we ask for help. But no, some tools\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e want to be\noriginal at the worst moment: when their users are struggling, looking for\nguidance.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s somewhat consolatory to learn that I\u0026rsquo;m not alone in this fight. The other\nday I landed on Clayton Craft\u0026rsquo;s blog. His [rant on the topic][2] splendidly\nconcludes with the following assessment:\u003c/p\u003e","title":"If you know your user is asking for help show them the damn help"},{"content":"I went back to my library to check the year of my original Neuromancer edition. It\u0026rsquo;s 1993. For some context, I was 23 back then, with my software company founded only a couple of years earlier. The World Wide Web was at its very early stages. I distinctly remember getting out of that book dazed and confused. Characters were two-dimensional at best. There was a certain lack of exposition. The recurring streams of consciousness were complex for me to follow1. I knew I had something powerful and innovative in my hands; I was fascinated, but Gibson\u0026rsquo;s writing, I think, put me off2.\nThese musings were recently conjured by reading Neuromancer. The Birth of Cyberpunk, a fine, splendidly illustrated short essay on Gibson\u0026rsquo;s influence, published by Sabukaru Online (which feed I promptly added to my RSS reader.).\nWhen Gibson penned his opening line ‘the sky above the port was the colour of television, tuned to a dead channel’ he merged reality and the digital in a way that seems almost prophetic today, as online footprints grow exponentially and internet universes creep into reality. Instead of two separate realms, there’s a ripple and blur.\nI might re-read the novel. I\u0026rsquo;m curious about my opinion as a senior reader.\nNot surprisingly, I\u0026rsquo;m having a hard time following the Ulysses too. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nAt the time, I didn\u0026rsquo;t know that Neuromancer was Gibson\u0026rsquo;s first novel.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/neuromancer-and-the-birth-of-cyberpunk/","summary":"\u003cp\u003eI went back to my library to check the year of my original \u003cem\u003eNeuromancer\u003c/em\u003e edition.\nIt\u0026rsquo;s 1993. For some context, I was 23 back then, with my software company\nfounded only a couple of years earlier. The World Wide Web was at its very\nearly stages. I distinctly remember getting out of that book dazed and\nconfused. Characters were two-dimensional at best. There was a certain lack of\nexposition. The recurring streams of consciousness were complex for me to\nfollow\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. I knew I had something powerful and innovative in my hands; I was\nfascinated, but Gibson\u0026rsquo;s writing, I think, put me off\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Neuromancer and the birth of Cyberpunk"},{"content":"\nThe Sun as seen by Solar Orbiter in extreme ultraviolet light from a distance of roughly 75 million kilometres. The image is a mosaic of 25 individual images taken on 7 March by the high resolution telescope of the Extreme Ultraviolet Imager (EUI) instrument. Taken at a wavelength of 17 nanometers, in the extreme ultraviolet region of the electromagnetic spectrum, this image reveals the Sun’s upper atmosphere, the corona, which has a temperature of around a million degrees Celsius. In total, the final image contains more than 83 million pixels in a 9148 x 9112 pixel grid, making it the highest resolution image of the Sun’s full disc and outer atmosphere, the corona, ever taken.\nHigh resolution image and more details on ESA website.\n","permalink":"https://nicolaiarocci.com/the-sun-in-high-resolution/","summary":"\u003cp\u003e\u003cimg alt=\"The Sun in high resolkution\" loading=\"lazy\" src=\"/images/the-sun.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe Sun as seen by Solar Orbiter in extreme ultraviolet light from a distance\nof roughly 75 million kilometres. The image is a mosaic of 25 individual\nimages taken on 7 March by the high resolution telescope of the Extreme\nUltraviolet Imager (EUI) instrument. Taken at a wavelength of 17 nanometers,\nin the extreme ultraviolet region of the electromagnetic spectrum, this image\nreveals the Sun’s upper atmosphere, the corona, which has a temperature of\naround a million degrees Celsius.  In total, the final image contains more\nthan 83 million pixels in a 9148 x 9112 pixel grid, making it the highest\nresolution image of the Sun’s full disc and outer atmosphere, the corona,\never taken.\u003c/p\u003e","title":"The Sun in high resolution"},{"content":"No matter how long I\u0026rsquo;ve possessed a Mac and how hard I try, there will always be a helpful keyboard shortcut hidden somewhere that I don\u0026rsquo;t know about.\nToday I learned about holding the Option key while clicking on the Copy command in Finder. It activates the super-useful (and super-secret) \u0026ldquo;copy as pathname\u0026rdquo; feature.\nI spotted this trick on Jamie Smith\u0026rsquo;s website, where other handy shortcuts (and the pretty gif above) reside.\n","permalink":"https://nicolaiarocci.com/how-to-copy-a-files-path-in-macos-finder/","summary":"\u003cp\u003eNo matter how long I\u0026rsquo;ve possessed a Mac and how hard I try, there will always\nbe a helpful keyboard shortcut hidden somewhere that I don\u0026rsquo;t know about.\u003c/p\u003e\n\u003cp\u003eToday I learned about holding the \u003ccode\u003eOption\u003c/code\u003e key while clicking on the Copy\ncommand in Finder. It activates the super-useful (and super-secret) \u0026ldquo;copy as\npathname\u0026rdquo; feature.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Credits: Jamie Smith\" loading=\"lazy\" src=\"/images/finder-menu-option.gif\"\u003e\u003c/p\u003e\n\u003cp\u003eI spotted this trick on \u003ca href=\"https://www.jamieonkeys.dev/posts/keyboard-shortcuts/\"\u003eJamie Smith\u0026rsquo;s website\u003c/a\u003e, where other handy shortcuts\n(and the pretty gif above) reside.\u003c/p\u003e","title":"How to copy a file's path in macOS Finder"},{"content":"Roumeli describes Fermor\u0026rsquo;s travels around Northern Greece and Macedonia. He visits secluded and remote areas and describes the rugged countryside and how people of these remote regions live. As he meets Sarakatsan shepherds and spends some time with them, visits the impressive monasteries of Meteora, attempts to track a pair of Byron\u0026rsquo;s slippers in Missolonghi and investigates Kravara and its secret language, he makes acute observations about these communities and their history.\nHis prose is rich, and his erudition is immense. His love for this long-lost world is touchingly apparent. Roumeli is not just travel writing but a moving celebration of Greece and its culture. Patrick Leigh Fermor is one of my favorite authors and yet, of all of his books, this is not my favorite1. There\u0026rsquo;s a certain lack of focus (the whole Crete divagation, while poetic and evocative, has little to do with the context of this book2), and some musings on Greeks\u0026rsquo; nature, while interesting, tend to run long.\nPLF\u0026rsquo;s Mani: Travels in the Southern Peloponnese and the whole A Time of Gits trilogy are some of my all-time favorite travel books. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nOn Fermor\u0026rsquo;s activity as a secret agent in Crete during WWII, I greatly appreciated Ill Met by Moonglight: The Abduction of General Kreipe, by W. Stanley Moss.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-roumeli/","summary":"\u003cp\u003e\u003cem\u003eRoumeli\u003c/em\u003e describes Fermor\u0026rsquo;s travels around Northern Greece and Macedonia. He\nvisits secluded and remote areas and describes the rugged countryside and how\npeople of these remote regions live. As he meets Sarakatsan shepherds and\nspends some time with them, visits the impressive monasteries of Meteora,\nattempts to track a pair of Byron\u0026rsquo;s slippers in Missolonghi and investigates\nKravara and its secret language, he makes acute observations about these\ncommunities and their history.\u003c/p\u003e","title":"Book Review: Roumeli"},{"content":"If you understand Italian, the recording of my Playwright session at UGIdotNET\u0026rsquo;s WebDay 2022 is now available on YouTube1. Playwright is a phenomenal cross-browser, cross-platform, cross-language, single-API, mobile-friendly front-end testing tool.\nI\u0026rsquo;m looking forward to giving the same session in English sooner or later, but I should first win my laziness and start looking for exciting events with open CFPs. If you happen to know one, please let me know.\nA couple weeks later I also presented at DevRomagna, the local meetup I run. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/my-playwright-session-at-webday-2022/","summary":"\u003cp\u003eIf you understand Italian, the recording of my Playwright session at\nUGIdotNET\u0026rsquo;s \u003ca href=\"https://www.ugidotnet.org/e/2840/Web-Day-2022\"\u003eWebDay 2022\u003c/a\u003e is now available on YouTube\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. Playwright is\na phenomenal cross-browser, cross-platform, cross-language, single-API,\nmobile-friendly front-end testing tool.\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m looking forward to giving the same session in English sooner or later, but\nI should first win my laziness and start looking for exciting events with open\nCFPs. If you happen to know one, please let me know.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/BaY9WIHUwFc?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eA couple weeks later I also presented at \u003ca href=\"https://www.meetup.com/it-IT/DevRomagna/events/284626987/\"\u003eDevRomagna\u003c/a\u003e, the local meetup I run.\n[rss]: \u003ca href=\"https://nicolaiarocci.com/index.xml\"\u003ehttps://nicolaiarocci.com/index.xml\u003c/a\u003e\n[tw]: \u003ca href=\"http://twitter.com/nicolaiarocci\"\u003ehttp://twitter.com/nicolaiarocci\u003c/a\u003e\n[nl]: \u003ca href=\"https://buttondown.email/nicolaiarocci\"\u003ehttps://buttondown.email/nicolaiarocci\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e","title":"My Playwright session at WebDay 2022"},{"content":" Because here’s something else that’s true. In the day-to-day trenches of adult life, there is actually no such thing as atheism. There is no such thing as not worshipping. Everybody worships. The only choice we get is what to worship. And an outstanding reason for choosing some sort of God or spiritual-type thing to worship-be it J.C. or Allah, be it Yahweh or the Wiccan mother-goddess or the Four Noble Truths or some infrangible set of ethical principles-is that pretty much anything else you worship will eat you alive. If you worship money and things-if they are where you tap real meaning in life-then you will never have enough. Never feel you have enough. It’s the truth.\nWorship your own body and beauty and sexual allure and you will always feel ugly, and when time and age start showing, you will die a million deaths before they finally plant you. On one level, we all know this stuff already-it’s been codified as myths, proverbs, clichés, bromides, epigrams, parables: the skeleton of every great story. The trick is keeping the truth up-front in daily consciousness. Worship power-you will feel weak and afraid, and you will need ever more power over others to keep the fear at bay. Worship your intellect, being seen as smart-you will end up feeling stupid, a fraud, always on the verge of being found out. And so on.\n\u0026ndash;David Foster Wallace in \u0026ldquo;This is Water\u0026rdquo; (via)\n","permalink":"https://nicolaiarocci.com/quoting-david-foster-wallace/","summary":"\u003cblockquote\u003e\n\u003cp\u003eBecause here’s something else that’s true. In the day-to-day trenches of\nadult life, there is actually no such thing as atheism. There is no such\nthing as not worshipping. Everybody worships. The only choice we get is what\nto worship. And an outstanding reason for choosing some sort of God or\nspiritual-type thing to worship-be it J.C. or Allah, be it Yahweh or the\nWiccan mother-goddess or the Four Noble Truths or some infrangible set of\nethical principles-is that pretty much anything else you worship will eat you\nalive. If you worship money and things-if they are where you tap real meaning\nin life-then you will never have enough. Never feel you have enough. It’s the\ntruth.\u003c/p\u003e","title":"Quoting David Foster Wallace"},{"content":"Dan Goodin at Ars Tecnica, on multifactor authentication (2FA/MFA):\nMultifactor authentication (MFA) is a core defense that is among the most effective at preventing account takeovers. In addition to requiring that users provide a username and password, MFA ensures they must also use an additional factor—be it a fingerprint, physical security key, or one-time password—before they can access an account. Nothing in this article should be construed as saying MFA isn’t anything other than essential.\nThat said, some forms of MFA are stronger than others, and recent events show that these weaker forms aren’t much of a hurdle for some hackers to clear. In the past few months, suspected script kiddies like the Lapsus$ data extortion gang and elite Russian-state threat actors (like Cozy Bear, the group behind the SolarWinds hack) have both successfully defeated the protection.\nMore here. The article is solid. It first introduces the various forms of MFA, then explains the attack vectors used to bypass them (hint: they prey on distracted, busy, or otherwise unaware people - we\u0026rsquo;ve all been there.) I appreciate their stressing that MFA is essential while raising awareness of the potential pitfalls.\n","permalink":"https://nicolaiarocci.com/how-multifactor-authentication-is-breached/","summary":"\u003cp\u003eDan Goodin at Ars Tecnica, on multifactor authentication (2FA/MFA):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMultifactor authentication (MFA) is a core defense that is among the most\neffective at preventing account takeovers. In addition to requiring that\nusers provide a username and password, MFA ensures they must also use an\nadditional factor—be it a fingerprint, physical security key, or one-time\npassword—before they can access an account. Nothing in this article should be\nconstrued as saying MFA isn’t anything other than essential.\u003c/p\u003e","title":"How multifactor authentication is breached"},{"content":"A few weeks ago, Giulia turned eighteen. As a birthday gift, she asked for a skiing weekend with me. Our family\u0026rsquo;s precious little thing has traditionally been spending the Christmas week skiing in the Alps. We haven\u0026rsquo;t gone as much as we\u0026rsquo;d like in recent years, so I was pleasantly surprised and thrilled that she wanted to celebrate adulthood at our special place with her dad.\nWe left home Friday at five in the morning. At ten, we were on the slopes, admittedly feeling a little lost without the rest of the gang. We quickly got into the right mood, though. We spent three glorious, precious days together. We can rarely spend time together, just her and me, when in town. This morning, I walked on the beach thinking about those three days and pondering how lucky a dad I am. Her birthday gift turned out as an invaluable gift for me.\n","permalink":"https://nicolaiarocci.com/three-days-well-spent/","summary":"\u003cp\u003eA few weeks ago, Giulia turned eighteen.  As a birthday gift, she asked for\na skiing weekend with me.  Our family\u0026rsquo;s precious little thing has\ntraditionally been spending the Christmas week skiing in the Alps.  We haven\u0026rsquo;t\ngone as much as we\u0026rsquo;d like in recent years, so I was pleasantly surprised and\nthrilled that she wanted to celebrate adulthood at our special place with her\ndad.\u003c/p\u003e\n\u003cp\u003eWe left home Friday at five in the morning.  At ten, we were on the slopes,\nadmittedly feeling a little lost without the rest of the gang.  We quickly got\ninto the right mood, though.  We spent three glorious, precious days together.\nWe can rarely spend time together, just her and me, when in town.  This\nmorning, I walked on the beach thinking about those three days and pondering\nhow lucky a dad I am.  Her birthday gift turned out as an invaluable gift for\nme.\u003c/p\u003e","title":"Three Days Well Spent"},{"content":"A few months ago I started my review of Lansing\u0026rsquo;s Endurance: Shackleton\u0026rsquo;s Incredible Voyage with these words:\nOf all the stories of maritime adventures I’ve read, that of the Endurance, masterfully told by Alfred Lansing in this book, is the most incredible and shocking.\nAnd I meant that. As the book\u0026rsquo;s title suggests, that story is simply unbelievable, yet true. Imagine my astonishment this morning at the news that the Endurance was found in the depths of the Antarctic.\nScientists have found and filmed one of the greatest ever undiscovered shipwrecks 107 years after it sank. The Endurance, the lost vessel of Antarctic explorer Sir Ernest Shackleton, was found at the weekend at the bottom of the Weddell Sea.\nMore here, along with incredible footage.\n","permalink":"https://nicolaiarocci.com/endurance-shackletons-lost-ship-found-in-antarctic/","summary":"\u003cp\u003eA few months ago I started \u003ca href=\"/book-review-endurance-shackletons-incredible-voyage/\"\u003emy review of Lansing\u0026rsquo;s \u003cem\u003eEndurance: Shackleton\u0026rsquo;s\nIncredible Voyage\u003c/em\u003e\u003c/a\u003e with these words:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOf all the stories of maritime adventures I’ve read, that of the Endurance,\nmasterfully told by Alfred Lansing in this book, is the most incredible and\nshocking.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eAnd I meant that. As the book\u0026rsquo;s title suggests, that story is simply\nunbelievable, yet true. Imagine my astonishment this morning at the news that\nthe Endurance was found in the depths of the Antarctic.\u003c/p\u003e","title":"Endurance: Shackleton's lost ship found in Antarctic"},{"content":"Quoting [Nelson\u0026rsquo;s weblog][3]:\nGoodreads lost my entire account last week. Nine years as a user, some 600 books and 250 carefully written reviews all deleted and unrecoverable. Their support has not been helpful. In 35 years of being online I\u0026rsquo;ve never encountered a company with such callous disregard for their users\u0026rsquo; data.\nOuch. A lesson learned the hard way:\nMy plan now is to host my own blog-like collection of all my reading notes like [Tom does][2].\nOne of the many reasons I don\u0026rsquo;t write my reviews on Goodreads and host them on my website instead is precisely the risk of losing them all one day1. The same with Twitter. I have been on Twitter since 2009 and was very active there. I [witnessed][6] the BBS era. Since then, I\u0026rsquo;ve seen oh-so-many \u0026ldquo;too big to fail\u0026rdquo; services coming and going, I could fill a book.\nTweeting is quicker and faster, yes. So is writing a review on Goodreads. If I don\u0026rsquo;t feel like opening vim to write something, though, then it\u0026rsquo;s probably not worth sharing in the first place.\nPosting on Goodreads or Twitter grants more visibility, that\u0026rsquo;s for sure. I understand that clicking a link to leave the platform is an effort that not everyone is willing to make. I\u0026rsquo;m probably losing followers on Twitter and \u0026lsquo;friends\u0026rsquo; on Goodreads. That\u0026rsquo;s fine2. Those remaining are likely to be more interested in my content and, ultimately, in me as a person.\nMost of the stuff I write here is meant for myself anyway. If what I write happens to also be interesting for other readers, that\u0026rsquo;s cool, but it\u0026rsquo;s not the primary goal. I feel much better now that I own my content. The switch from social media content production to [POSSE][4] was beneficial and is something I advise everyone to do.\nOther compelling reasons are not being okay with platforms profiling me or profiting from my content.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nBesides, I wish more and more people would fall back to RSS for their content consumption. That\u0026rsquo;s how I discover and collect content. Weblogs, YouTube channels, news and science sites, programming resources, and even top Twitter profiles all get digested by my RSS reader. [2]: https://macwright.com/reading/ [3]: https://www.somebits.com/weblog/tech/bad/goodreads-lost-all-my-data.html [4]: https://indieweb.org/POSSE [6]: /a-trip-down-memory-lane-fidonet-and-usenet/ [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/trusting-third-party-services-with-your-data-a-cautionary-tale/","summary":"\u003cp\u003eQuoting [Nelson\u0026rsquo;s weblog][3]:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGoodreads lost my entire account last week. Nine years as a user, some 600\nbooks and 250 carefully written reviews all deleted and unrecoverable. Their\nsupport has not been helpful. In 35 years of being online I\u0026rsquo;ve never\nencountered a company with such callous disregard for their users\u0026rsquo; data.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eOuch. A lesson learned the hard way:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMy plan now is to host my own blog-like collection of all my reading notes\nlike [Tom does][2].\u003c/p\u003e","title":"Trusting third-party services with your data, a cautionary tale"},{"content":"This book stands up to its fame. It\u0026rsquo;s chock-full of precious insights on our decision-making and behavioral processes and how and why we humans are often capable of making informed yet awful decisions. The bad news is that we can hardly avoid most of these biases, no matter how hard we try and even if we know about them. So-called experts in the field are subject to these same biases: their short-term estimates and predictions can even be pretty good, but they will fail miserably in the long term, like any other man or woman. There are so many interesting tidbits in this text that it\u0026rsquo;s overwhelming. Some, if not most of them, may even fall in the ordinary sense category, but the added value here is we are being told why they fall in that class. Because I came to reading it so late (it was published in 2011), this book might be the main reason why some of these concepts are now common sense.\nThe text is too long, though. It\u0026rsquo;s almost 700 pages, and I suspect they could have been half of that without sacrificing content. Kahneman won the Nobel Prize for his behavioral finance and hedonic psychology research. He spent a career researching these topics, and most of the biases and behaviors mentioned in the text are his discoveries (with colleagues.) He tries hard to be popular and mostly succeeds, especially in the first, second and third parts, where the juiciest ah-ha moments await the reader. The rest is more about his prospect theory and behavioral finance; it probably holds the most relevant conclusions for an informed audience but suffers from repetitions and perhaps too many examples, riddles and tests.\nBy pure coincidence, just the other day, 3 Quarks Daily posted a 2011 Google Talk in which Kahneman was invited to talk about Thinking Fast and Slow. I found it very good at explaining, let\u0026rsquo;s say, the first part of the book (System 1 and System 2, their interactions and their influence on everyday human behavior.) Examples and stories mentioned are from the book. My suggestion is first to watch the speech. It\u0026rsquo;s 45 minutes well spent, then decide if you want to invest in the book.\n","permalink":"https://nicolaiarocci.com/book-review-thinking-fast-and-slow/","summary":"\u003cp\u003eThis book stands up to its fame. It\u0026rsquo;s chock-full of precious insights on our\ndecision-making and behavioral processes and how and why we humans are often\ncapable of making informed yet awful decisions. The bad news is that we can\nhardly avoid most of these biases, no matter how hard we try and even if we\nknow about them. So-called experts in the field are subject to these same\nbiases: their short-term estimates and predictions can even be pretty good, but\nthey will fail miserably in the long term, like any other man or woman. There\nare so many interesting tidbits in this text that it\u0026rsquo;s overwhelming. Some, if\nnot most of them, may even fall in the ordinary sense category, but the added\nvalue here is we are being told why they fall in that class. Because I came to\nreading it so late (it was published in 2011), this book might be the main\nreason why some of these concepts are now common sense.\u003c/p\u003e","title":"Book Review: Thinking Fast and Slow"},{"content":"In 2014, James Somers sat down to write a beautiful, entertaining lament about the state of today’s dictionaries and an argument in favor of the adoption of Noah Webster’s 1913 edition.\nI don\u0026rsquo;t want you to conclude that it\u0026rsquo;s just a matter of aesthetics. Yes, Webster\u0026rsquo;s definitions are prettier. But they are also better. They\u0026rsquo;re so much better that to use another dictionary is to keep yourself forever at arm\u0026rsquo;s length from the actual language.\nRecall that the New Oxford, for the word \u0026ldquo;fustian,\u0026rdquo; gives \u0026ldquo;pompous or pretentious speech or writing.\u0026rdquo; I said earlier that that wasn\u0026rsquo;t even really correct. Here, then, is Webster\u0026rsquo;s definition: \u0026ldquo;An inflated style of writing; a kind of writing in which high-sounding words are used, above the dignity of the thoughts or subject; bombast.\u0026rdquo; Do you see the difference? What makes fustian fustian is not just that the language is pompous—it\u0026rsquo;s that this pomposity is above the dignity of the thoughts or subject. It\u0026rsquo;s using fancy language where fancy language isn\u0026rsquo;t called for. It\u0026rsquo;s a subtle difference, but that\u0026rsquo;s the whole point: English is an awfully subtle instrument. A dictionary that ignores these little shades is dangerous; in fact in those cases it\u0026rsquo;s worse than useless. It\u0026rsquo;s misleading, deflating. It divests those words of their worth and purpose.\nYou can read it all here. It\u0026rsquo;s worth your time..\nNot happy with the essay alone, he also added instructions on installing Webster\u0026rsquo;s on a Mac. Unfortunately, I could not get them to work on Catalina: the DictUnifier app would crash as soon as I dragged the [dictionary file][4] on it. A little research revealed that DictUnifier has a [problem with Catalina][2]. The suggested workarounds did not work for me. In the process, I learned that DictUnifier has gone unmaintained. Thankfully, a couple of years ago a good soul released [DictConv][3], a \u0026ldquo;Node.js version of DictUnifier\u0026rdquo;. DictConv did the trick. Webster\u0026rsquo;s 1913 is now happily residing in my macOS Dictionary.\n","permalink":"https://nicolaiarocci.com/youre-probably-using-the-wrong-dictionary/","summary":"\u003cp\u003eIn 2014, James Somers sat down to write a beautiful, entertaining lament about\nthe state of today’s dictionaries and an argument in favor of the adoption of\nNoah Webster’s 1913 edition.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI don\u0026rsquo;t want you to conclude that it\u0026rsquo;s just a matter of aesthetics. Yes,\nWebster\u0026rsquo;s definitions are prettier. But they are also better. They\u0026rsquo;re so much\nbetter that to use another dictionary is to keep yourself forever at arm\u0026rsquo;s\nlength from the actual language.\u003c/p\u003e","title":"You're probably using the wrong dictionary"},{"content":" What the Ukraine flag signifies. A golden field of grain (Ukraine is the world\u0026rsquo;s 4th largest exporter of barley and corn, and the 5th largest exporter of wheat) beneath clear blue skies. Sky above grain, or freedom above bread (source1.)\nThe story of Ukraine\u0026rsquo;s flag is rich and controversial. It appears to be true, however, that \u0026ldquo;blue sky over sunflowers\u0026rdquo; forms Ukrainians\u0026rsquo; conception of their flag. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/what-ukraine-flag-signifies/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhat the Ukraine flag signifies. A golden field of grain (Ukraine is the\nworld\u0026rsquo;s 4th largest exporter of barley and corn, and the 5th largest exporter\nof wheat) beneath clear blue skies. Sky above grain, or freedom above bread (\u003ca href=\"https://twitter.com/TonycusGannicus/status/1497386976311492612\"\u003esource\u003c/a\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg alt=\"Ukarine\" loading=\"lazy\" src=\"/images/ukraine.jpg\"\u003e\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eThe story of Ukraine\u0026rsquo;s flag is rich and controversial. It \u003ca href=\"https://en.wikipedia.org/wiki/Flag_of_Ukraine#Yellow-blue_vs_blue-yellow\"\u003eappears to be true\u003c/a\u003e, however, that \u0026ldquo;blue sky over sunflowers\u0026rdquo; forms Ukrainians\u0026rsquo; conception of their flag.\n[rss]: \u003ca href=\"https://nicolaiarocci.com/index.xml\"\u003ehttps://nicolaiarocci.com/index.xml\u003c/a\u003e\n[tw]: \u003ca href=\"http://twitter.com/nicolaiarocci\"\u003ehttp://twitter.com/nicolaiarocci\u003c/a\u003e\n[nl]: \u003ca href=\"https://buttondown.email/nicolaiarocci\"\u003ehttps://buttondown.email/nicolaiarocci\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e","title":"What Ukraine flag signifies"},{"content":"The first preview of C# 11 is out, and well, I think I like what I see. I dig the new List patterns and am a fan of allowing newlines in the \u0026ldquo;holes\u0026rdquo; of interpolated strings. Parameter null-checking is a bit contentious, and it\u0026rsquo;s good that they are releasing it in preview one and asking for feedback.\nIn a nutshell, they want to spare us a lot of boilerplate. Code like this:\npublic static void M(string s) { if (s is null) { throw new ArgumentNullException(nameof(s)); } // Body of the method } Would be abbreviated by adding !! to the parameter name:\npublic static void M(string s!!) { // Body of the method } Code will be generated to perform the null check. The generated null check will execute before any of the code within the method. For constructors, the null check occurs before field initialization, calls to base constructors, and calls to this constructors.\nMy initial reaction was, we don\u0026rsquo;t need this; we got Nullable Reference Types. NRTs however help at design time, to know whether a null is possible, while parameter null-checking is meant for runtime.\nAccording to Kathleen Dollard, the .NET Runtime itself removed nearly 20,000 lines of code using this new null-check syntax. That\u0026rsquo;s one heck of a lot of boilerplate removed.\nI don\u0026rsquo;t think I like the syntax, though. It\u0026rsquo;s super concise, which is good, and I appreciate putting the !! on the parameter rather than the type since the parameter\u0026rsquo;s value is being checked. Still, the two-punctuation character seems a bit clumsy. Someone suggested adopting notnull instead:\npublic void M(string s notnull) { // code } I like this suggestion. I wouldn\u0026rsquo;t want notnull on the left of the parameter name. To the right? Count me in.\n","permalink":"https://nicolaiarocci.com/paramter-null-checking-added-to-csharp-11-preview/","summary":"\u003cp\u003eThe \u003ca href=\"https://devblogs.microsoft.com/dotnet/early-peek-at-csharp-11-features/\"\u003efirst preview\u003c/a\u003e of C# 11 is out, and well, I think I like what I see.\nI dig the new \u003ca href=\"https://devblogs.microsoft.com/dotnet/early-peek-at-csharp-11-features/#c-11-preview-list-patterns\"\u003eList patterns\u003c/a\u003e and am a fan of \u003ca href=\"https://devblogs.microsoft.com/dotnet/early-peek-at-csharp-11-features/#c-11-preview-allow-newlines-in-the-holes-of-interpolated-strings\"\u003eallowing newlines in the\n\u0026ldquo;holes\u0026rdquo; of interpolated strings\u003c/a\u003e. \u003ca href=\"https://devblogs.microsoft.com/dotnet/early-peek-at-csharp-11-features/#c-11-preview-parameter-null-checking\"\u003eParameter null-checking\u003c/a\u003e is a bit\ncontentious, and it\u0026rsquo;s good that they are releasing it in preview one and asking\nfor feedback.\u003c/p\u003e\n\u003cp\u003eIn a nutshell, they want to spare us a lot of boilerplate. Code like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epublic static void M(string s)\n{\n    if (s is null)\n    {\n        throw new ArgumentNullException(nameof(s));\n    }\n    // Body of the method\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWould be abbreviated by adding \u003ccode\u003e!!\u003c/code\u003e to the parameter name:\u003c/p\u003e","title":"Parameter null-checking added to C# 11 Preview"},{"content":"This book is not about the famous, daring, and in some ways fortunate capture of Eichmann in Buenos Aires in 1960, nor about the covert transfer of the Nazi officer to Israel. Instead, the volume recounts the 1961 trial in Jerusalem, which ended with the defendant being sentenced to death. Hannah Arendt followed the trial as a correspondent for The New Yorker. She took notes, studied the papers, and reconstructed the many witnesses\u0026rsquo; personal stories. Her work was first published as articles in The New Yorker and later revised and updated as a book.\nFollowing the trial hearings, we are taken back to the years of the advent of Nazism in Germany. The regime first incited and then actively advocated anti-Semitism, a historically present sentiment in many parts of Europe and beyond. These are the years of establishing the SS and other Nazi police forces. Eichmann, penniless and unemployed, managed to join the SS ranks thanks to an acquaintance. He was appointed to the Jewish emigration office, an assignment he took seriously. He read books and became an \u0026ldquo;expert on the Jewish question\u0026rdquo;. Over time, Eichmann career progressed as his office duties evolved, from emigration to deportation and extermination. However, despite the undoubted successes, Eichmann never managed to reach the highest levels of the military hierarchy. He could never get close to his idol, the Führer. For what reason?\nWhy couldn\u0026rsquo;t he ever get into Hitler\u0026rsquo;s inner circle? The critical point of Eichman in Jerusalem is, I think, precisely the answer to this question. According to Arendt\u0026rsquo;s reconstruction, Eichmann was and always remained a mediocre man. He was undoubtedly a good bureaucrat, an expert in organization and logistics, but light years away from the brilliant and appealing person he always aspired to be. Arendt makes no discount, reporting the many moments during the process in which Eichmann reveals his true stature.\nThe banality of evil of the title lies precisely in this aspect: a modest bureaucrat who merely fulfils his job slavishly, without questioning his role, as a cog in the machine, can do evil. The Nazi machine exterminated six million Jews, and the office Eichmann directed was the fulcrum of that tireless activity. And yet, the man in charge, and with him, his subordinates, for the most part, were ordinary people who carried out their tasks heads down, no questions asked. How many Germans (and collaborators in the occupied countries) did the same thing in those years?\nSince its publication, the book has not ceased to raise controversy, particularly concerning the role of Jewish Councils of Elders (Judenrat), organizational structures imposed by Nazi Germany. Arendt proposes that they actively collaborated in drawing up the lists of Jews to be deported. In any case, Eichmann in Jerusalem is an exceptionally documented and well-argued historical research. It is worth reading, especially so in our time when the memory of time passed tends to fade away.\n","permalink":"https://nicolaiarocci.com/book-review-eichmann-in-jerusalem.-a-report-on-the-banality-of-evil/","summary":"\u003cp\u003eThis book is not about the famous, daring, and in some ways fortunate capture\nof Eichmann in Buenos Aires in 1960, nor about the covert transfer of the Nazi\nofficer to Israel. Instead, the volume recounts the 1961 trial in Jerusalem,\nwhich ended with the defendant being sentenced to death. Hannah Arendt followed\nthe trial as a correspondent for \u003cem\u003eThe New Yorker\u003c/em\u003e. She took notes, studied the\npapers, and reconstructed the many witnesses\u0026rsquo; personal stories. Her work was\nfirst published as articles in \u003cem\u003eThe New Yorker\u003c/em\u003e and later revised and updated\nas a book.\u003c/p\u003e","title":"Book Review: Eichmann in Jerusalem. A Report on the Banality of Evil"},{"content":"Kottke reports this juicy excerpt from Jonny Greenwood\u0026rsquo;s interview at npr:\nThom [Yorke]\u0026rsquo;s band had a keyboard player — [whom] I think they didn\u0026rsquo;t get on with because he played his keyboard so loud. And so when I got the chance to play with them, the first thing I did was make sure my keyboard was turned off \u0026hellip; I must have done months of rehearsals with them with this keyboard, and they didn\u0026rsquo;t know that I\u0026rsquo;d already turned it off.\nThey made quite a racket, quite a noise. It was all guitars and distortion — and so I would pretend to play for weeks on end and Thom would say, \u0026ldquo;I can\u0026rsquo;t quite hear what you\u0026rsquo;re doing, but I think you\u0026rsquo;re adding a really interesting texture, because I can tell when you\u0026rsquo;re not playing.\u0026rdquo; And I\u0026rsquo;m thinking, \u0026ldquo;No, you can\u0026rsquo;t, because I\u0026rsquo;m really not playing.\u0026rdquo; And I\u0026rsquo;d go home in the evening and work out how to actually play chords and cautiously over the next few months, I would start turning this keyboard up. And that\u0026rsquo;s how I started in with Radiohead.\nFull interview is available here.\n","permalink":"https://nicolaiarocci.com/jonny-greenwood-pretended-to-play-the-keyboard-when-he-first-joined-radiohead/","summary":"\u003cp\u003eKottke \u003ca href=\"https://kottke.org/22/02/jonny-greenwood-pretended-to-play-the-keyboard-when-he-first-joined-radiohead\"\u003ereports\u003c/a\u003e this juicy excerpt from Jonny Greenwood\u0026rsquo;s interview at npr:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThom [Yorke]\u0026rsquo;s band had a keyboard player — [whom] I think they didn\u0026rsquo;t get on\nwith because he played his keyboard so loud. And so when I got the chance to\nplay with them, the first thing I did was make sure my keyboard was turned\noff \u0026hellip; I must have done months of rehearsals with them with this keyboard,\nand they didn\u0026rsquo;t know that I\u0026rsquo;d already turned it off.\u003c/p\u003e","title":"Jonny Greenwood pretended to play the keyboard when he first joined Radiohead"},{"content":"Chelsea Wald in Nature:\nScientists say that urine diversion would have huge environmental and public-health benefits if deployed on a large scale around the world. That’s in part because urine is rich in nutrients that, instead of polluting water bodies, could go towards fertilizing crops or feed into industrial processes. According to Simha’s estimates, humans produce enough urine to replace about one-quarter of current nitrogen and phosphorus fertilizers worldwide; it also contains potassium and many micronutrients (see ‘What’s in urine’). On top of that, not flushing urine down the drain could save vast amounts of water and reduce some of the strain on ageing and overloaded sewer systems.\nMore here.\nThe Fremen got it right from the get go.\n","permalink":"https://nicolaiarocci.com/how-recycling-pee-could-help-save-the-world/","summary":"\u003cp\u003eChelsea Wald in \u003cem\u003eNature\u003c/em\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eScientists say that urine diversion would have huge environmental and\npublic-health benefits if deployed on a large scale around the world. That’s\nin part because urine is rich in nutrients that, instead of polluting water\nbodies, could go towards fertilizing crops or feed into industrial processes.\nAccording to Simha’s estimates, humans produce enough urine to replace about\none-quarter of current nitrogen and phosphorus fertilizers worldwide; it also\ncontains potassium and many micronutrients (see ‘What’s in urine’). On top of\nthat, not flushing urine down the drain could save vast amounts of water and\nreduce some of the strain on ageing and overloaded sewer systems.\u003c/p\u003e","title":"How recycling pee could help save the world"},{"content":" Reddit is currently the most popular search engine. The only people who don’t know that are the team at Reddit, who can’t be bothered to build a decent search interface. So instead we resort to using Google, and appending the word “reddit” to the end of our queries. [\u0026hellip;] Why are people searching Reddit specifically? The short answer is that Google search results are clearly dying. The long answer is that most of the web has become too inauthentic to trust.\nMore here.\nI switched to DuckDuckGo a long time ago, and you probably should too.\n","permalink":"https://nicolaiarocci.com/google-search-is-dying/","summary":"\u003cblockquote\u003e\n\u003cp\u003eReddit is currently the most popular search engine. The only people who don’t\nknow that are the team at Reddit, who can’t be bothered to build a decent\nsearch interface. So instead we resort to using Google, and appending the\nword “reddit” to the end of our queries. [\u0026hellip;] Why are people searching\nReddit specifically? The short answer is that Google search results are\nclearly dying. The long answer is that most of the web has become too\ninauthentic to trust.\u003c/p\u003e","title":"Google Search is Dying"},{"content":"I\u0026rsquo;ve been back at the forge working on Eve 2.0. Version 2 will support Python 3.7+ and drop Python 2.7, 3.5 and 3.6. It will bring support for PyMongo 4+ as well, along with several other minor fixes and improvements (changelog). It would be nice if you guys and gals, users of Eve, would give it a spin before the release.\nI know. I recently stated that Eve was in maintenance mode. All of those considerations still apply, but what can I say? I want Eve 2 out.\n","permalink":"https://nicolaiarocci.com/work-in-progress-on-eve-2.0/","summary":"\u003cp\u003eI\u0026rsquo;ve been back at the forge working on Eve 2.0. Version 2 will support Python\n3.7+ and drop Python 2.7, 3.5 and 3.6. It will bring support for PyMongo 4+ as\nwell, along with several other minor fixes and improvements (\u003ca href=\"https://docs.python-eve.org/en/latest/changelog.html\"\u003echangelog\u003c/a\u003e).\nIt would be nice if you guys and gals, users of Eve, would give it a spin\nbefore the release.\u003c/p\u003e\n\u003cp\u003eI know. I \u003ca href=\"/is-eve-still-maintained/\"\u003erecently\u003c/a\u003e stated that Eve was in maintenance mode. All of\nthose considerations still apply, but what can I say? I want Eve 2 out.\u003c/p\u003e","title":"Work in progress on Eve 2.0"},{"content":"When Giulia came home from school today, she was anxious to tell me what she learned about a Viking King and his legacy. She told me the story of King Harald Gormsson, who ruled Denmark and Norway from c. 958 to c. 986. Harald is mainly known for introducing Christianity to Denmark and consolidating his rule over most Jutland and Zealand. However, what sparked my interest is that Harald was nicknamed \u0026ldquo;Bluetooth\u0026rdquo;, and, in 1997, the Bluetooth wireless specification design was named after him. The choice was based on an analogy that the technology would unite devices the way Harald united the tribes of Denmark into a single kingdom. Furthermore, the Bluetooth logo consists of the two Scandinavian runes for his initials, H (ᚼ) and B (ᛒ)1\nThe traditional explanation for his byname is that Harald must have had a conspicuous bad tooth that appeared \u0026ldquo;blue\u0026rdquo; (i.e. \u0026ldquo;black\u0026rdquo;, as blár \u0026ldquo;blue\u0026rdquo; meant \u0026ldquo;blue-black\u0026rdquo;, or \u0026ldquo;dark-coloured\u0026rdquo;). Another explanation is that he was called \u0026ldquo;blue thane\u0026rdquo; (or \u0026ldquo;dark thane\u0026rdquo;) in England (with Anglo-Saxon thegn corrupted to tan when the name came back into Old Norse).2\nAnother interesting tidbit is that, according to Bluetooth\u0026rsquo;s official website, Bluetooth was only intended as a placeholder until marketing could come up with something cool. Later, when it came time to select a serious name, Bluetooth was to be replaced with either RadioWire or PAN (Personal Area Networking). PAN was the front runner, but an exhaustive search discovered it already had tens of thousands of hits throughout the internet. A full trademark search on RadioWire couldn\u0026rsquo;t be completed in time for launch, making Bluetooth the only choice. The name caught on fast, and before it could be changed, it spread throughout the industry, becoming synonymous with short-range wireless technology3.\nI\u0026rsquo;m a sucker for stories like this in which technology pays proper tribute to our past, without which it wouldn\u0026rsquo;t exist in the first place.\nSource: Harald Bluetooth, Wikipedia.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSource: Harald Bluetooth, Wikipedia. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSource: Bluetooth history, Wikipedia\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-curious-origins-of-bluetooths-name/","summary":"\u003cp\u003eWhen Giulia came home from school today, she was anxious to tell me what she\nlearned about a Viking King and his legacy. She told me the story of King\nHarald Gormsson, who ruled Denmark and Norway from c. 958 to c. 986. Harald is\nmainly known for introducing Christianity to Denmark and consolidating his rule\nover most Jutland and Zealand. However, what sparked my interest is that Harald\nwas nicknamed \u0026ldquo;Bluetooth\u0026rdquo;, and, in 1997, the Bluetooth wireless specification\ndesign was named after him. The choice was based on an analogy that the\ntechnology would unite devices the way Harald united the tribes of Denmark into\na single kingdom. Furthermore, the Bluetooth logo consists of the two\nScandinavian runes for his initials, H (ᚼ) and B (ᛒ)\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e","title":"The curious origins of Bluetooth's name"},{"content":"I stumbled upon Modulations, a documentary on \u0026ldquo;the evolution of electronic music and its many genres. How the wide range of styles and scenes formed through experimentations on sound formation.\u0026rdquo; This short film (75 minutes) is packed with guest stars of all calibers1, some of them genuinely pivotal to the evolution of electronic music. Indeed, the uninitiated mind gets to know a lot of details and amenities on the first decade or so of electronic music.\nPerhaps it attempts to fit too much information into a tight timeline: many guests, genres, places. There\u0026rsquo;s a lot to unpack, and, inevitably, a lot is left out. A series (like the excellent Hip-Hop Evolution recently aired on Netflix) could better cover all the material. Unfortunately, Modulations was released in 1998, when such an option wasn\u0026rsquo;t even in the books. And this takes us to my second qualm with this production: it of course doesn\u0026rsquo;t cover the recent years, let\u0026rsquo;s say from early 2000s up to today. A second part would be grand.\nA partial list I digged out includes the likes of John Cage, Afrika Bambaataa, Juan Atkins, Bundy Brown, DJ Spooky, Future Sound of London, Fumiya Tanaka, Hardfloor, Kodwo Eshun, Teo Macero, Christian Marclay, Giorgio Moroder, Robert Moog, Mixmaster Morris, Orbital, Prodigy, Simon Reynolds, Ed Rush, Karlheinz Stockhausen, Tetsu Inoue and Westbam. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/modulations-history-of-electronic-music/","summary":"\u003cp\u003eI stumbled upon \u003ca href=\"https://youtu.be/icpDt6aQDww\"\u003eModulations\u003c/a\u003e, a documentary on \u0026ldquo;the evolution of electronic\nmusic and its many genres. How the wide range of styles and scenes formed\nthrough experimentations on sound formation.\u0026rdquo; This short film (75 minutes) is\npacked with guest stars of all calibers\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, some of them genuinely pivotal to the\nevolution of electronic music. Indeed, the uninitiated mind gets to know a lot\nof details and amenities on the first decade or so of electronic music.\u003c/p\u003e","title":"Modulations - History of Electronic Music"},{"content":"One of my recent discoveries is A Collection of Unmitigated Pedantry by Bret Devereaux, an historian who\u0026rsquo;s been posting great content over the years. His Fireside Fridays, for example, provide intriguing musings on varied topics. In this week instalment, professor Devereaux takes on the different applications of blockchain technology as seen from a historian\u0026rsquo;s perspective.\nReally, this is less about the technologies themselves and more about the nature of states.\nBecause while I can offer no real opinion as to if any of these new technologies will succeed in their technical objectives [\u0026hellip;], proponents of these technologies typically envisage them eventually producing large social effects, in particular they imagine that blockchain technology will create an economic and social space outside of the control of the state, traditional banking institutions or society at large. And here is a space where a historian’s expertise is valuable and also almost completely lacking among blockchain enthusiasts.\nMore here.\n","permalink":"https://nicolaiarocci.com/a-historian-perspective-on-blockchain-technology/","summary":"\u003cp\u003eOne of my recent discoveries is \u003ca href=\"https://acoup.blog/\"\u003eA Collection of Unmitigated Pedantry\u003c/a\u003e by\nBret Devereaux, an historian who\u0026rsquo;s been posting great content over the years.\nHis Fireside Fridays, for example, provide intriguing musings on varied topics.\nIn this week instalment, professor Devereaux takes on the different\napplications of blockchain technology as seen from a historian\u0026rsquo;s perspective.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eReally, this is less about the technologies themselves and more about the nature of states.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBecause while I can offer no real opinion as to if any of these new\ntechnologies will succeed in their technical objectives [\u0026hellip;], proponents of\nthese technologies typically envisage them eventually producing large social\neffects, in particular they imagine that blockchain technology will create an\neconomic and social space outside of the control of the state, traditional\nbanking institutions or society at large. And here is a space where\na historian’s expertise is valuable and also almost completely lacking among\nblockchain enthusiasts.\u003c/p\u003e","title":"A historian perspective on blockchain technology"},{"content":"A very touching Akhil Sharma in The New Yorker:\nNot long after we began dating, my now wife, Christine, and I started making up stories about the child we might have.\nWe named the child—or, in the stories we told about him, he named himself—Suzuki Noguchi. Among the things we liked about him was that he was cheerfully indifferent to us. He did not wish to be either Irish (like Christine) or Indian (like me). Suzuki was eight, and he chose this name because he was into Japanese high fashion. When we told him that he couldn’t just go around claiming to be Japanese, Suzuki said that he was a child of God and who were we to say that God was not Japanese. In addition to being a dandy, Suzuki was a criminal. He dealt in yellowcake uranium and trafficked in endangered animals. Sometimes we asked him how his day at school had gone and he would warn, “Do you really want to be an accessory after the fact?” We imagined him banging on our bedroom door when we were having sex and shouting, “Stop! You can’t get any child better than me.”\nMy wife was forty-eight and I was forty-seven, and we started inventing these stories as a form of play. It also soothed some hurt part of us.\nMore here.\n","permalink":"https://nicolaiarocci.com/a-passage-to-parenthood/","summary":"\u003cp\u003eA very touching Akhil Sharma in \u003cem\u003eThe New Yorker\u003c/em\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNot long after we began dating, my now wife, Christine, and I started making\nup stories about the child we might have.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe named the child—or, in the stories we told about him, he named\nhimself—Suzuki Noguchi. Among the things we liked about him was that he was\ncheerfully indifferent to us. He did not wish to be either Irish (like\nChristine) or Indian (like me). Suzuki was eight, and he chose this name\nbecause he was into Japanese high fashion. When we told him that he couldn’t\njust go around claiming to be Japanese, Suzuki said that he was a child of\nGod and who were we to say that God was not Japanese. In addition to being\na dandy, Suzuki was a criminal. He dealt in yellowcake uranium and trafficked\nin endangered animals. Sometimes we asked him how his day at school had gone\nand he would warn, “Do you really want to be an accessory after the fact?” We\nimagined him banging on our bedroom door when we were having sex and\nshouting, “Stop! You can’t get any child better than me.”\u003c/p\u003e","title":"A Passage To Parenthood"},{"content":"Tomorrow we\u0026rsquo;re releasing a major project on which we\u0026rsquo;ve been working non-stop for two and a half years. No matter how many years in the trenches, release day always makes me a bit nervous. Experience does help. I know there will be problems, and we will solve them. Some customers will complain, and those will be the most vocal. The vast majority of them will appreciate the effort, enjoy the features, and stay silent. That\u0026rsquo;s how it works. We\u0026rsquo;ll do just fine.\nAs you can imagine, it\u0026rsquo;s a working weekend for me. While hacking in the early morning, I listened to The Mildlife Very Fantastic Playlist when a curious tune caught my attention1. I glanced over to Spotify, and my eyes fell on the most appropriate CD cover for launch day ever.\nWhatever happens tomorrow, lay back and keep smiling.\nTrack #8, Fly Away / Walking in the Sunshine [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/lay-back-and-keep-smiling/","summary":"\u003cp\u003eTomorrow we\u0026rsquo;re releasing a major project on which we\u0026rsquo;ve been working non-stop\nfor two and a half years. No matter how many years in the trenches, release day\nalways makes me a bit nervous. Experience does help. I know there will be\nproblems, and we will solve them. Some customers will complain, and those will\nbe the most vocal. The vast majority of them will appreciate the effort, enjoy\nthe features, and stay silent. That\u0026rsquo;s how it works. We\u0026rsquo;ll do just fine.\u003c/p\u003e","title":"Lay Back and Keep Smiling"},{"content":" I had a hunch that old songs were taking over music streaming platforms—but even I was shocked when I saw the most recent numbers. According to MRC Data, old songs now represent 70% of the US music market. Those who make a living from new music—especially that endangered species known as the working musician—have to look at these figures with fear and trembling. But the news gets worse.\nI can\u0026rsquo;t say I can relate as my kids of ages 21, 18, and 16 do their best to stay clear from the music I like, but anyways, Ted Gioia\u0026rsquo;s latest piece on recent music trends is super-interesting.\n","permalink":"https://nicolaiarocci.com/is-old-music-killing-new-music/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI had a hunch that old songs were taking over music streaming platforms—but\neven I was shocked when I saw the most recent numbers. According to MRC Data,\nold songs now represent 70% of the US music market. Those who make a living\nfrom new music—especially that endangered species known as the working\nmusician—have to look at these figures with fear and trembling. But the news\ngets worse.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI can\u0026rsquo;t say I can relate as my kids of ages 21, 18, and 16 do their best to\nstay clear from the music I like, but anyways, Ted Gioia\u0026rsquo;s \u003ca href=\"https://tedgioia.substack.com/p/is-old-music-killing-new-music\"\u003elatest piece\u003c/a\u003e on\nrecent music trends is super-interesting.\u003c/p\u003e","title":"Is Old Music Killing New Music?"},{"content":"We have a Postgres cluster with a database for each user. Each database has a table that records events, and we want this table to only record the last 15 days.\nIf we were on MongoDB, we could use a capped collection, but we are in Postgres, which does not have equivalent functionality. In Postgres, you have to make do with something homemade. My first idea was to install a cron job in the system. It would execute daily, deleting older events in each user database.\nBefore jumping in, I looked at what others do. One surprising popular approach appears to be using triggers: older ones are pruned when a new row is inserted in the table. For my use case, this seems unnecessarily taxing to the system. I\u0026rsquo;m happy with running a single maintenance task late in the night when the system is underused. Two other solutions are pgAgent or pg_cron. pgAgent is an external UI tool, so hard No to pgAgent from me. pg_cron essentially offers cron jobs baked into the database, which is good, but, like pg_Agent, it requires you to install the tool itself, create a Postgres extension, change Postgres configuration, optionally grant usage to a schema, etc. There\u0026rsquo;s also partitioning, which seems way overboard for our use case. It seems that these approaches demand new dependencies and unnecessary work for something I can easily accomplish by leveraging what is already available, for free, in the system. So, it\u0026rsquo;s good old Linux cron jobs for me.\nBecause we run Postgres in Docker, a little more work is involved, but overall, the solution is pretty straightforward. Here is the script I came up with:\nreadonly CONTAINER=$(docker ps -q -f name=postgres) readonly USER=dbuser docker exec -i $CONTAINER \\ psql -U $USER -d postgres -t \\ -c \u0026quot;select datname from pg_database where datname like 'cus_%'\u0026quot; | \\ xargs -n 1 -I\u0026quot;{}\u0026quot; docker exec -i $CONTAINER psql -U $USER -d {} -t \\ -c \u0026quot;delete from mytable where datetime \u0026lt; now() - interval '15 days'\u0026quot; First, we find the id of the docker container (it runs in a swarm, so we don\u0026rsquo;t have exact container names). We need it because we want to execute psql from within the container. The second row sets a Postgres user other than the default one. That\u0026rsquo;s because we don\u0026rsquo;t allow default user logins. Then comes the Linux pipeline. First, we execute a query that returns all user database names; then, we pipe those into the query that deletes obsolete rows. The query executes against each target database. The script is then installed as a cron job with something similar to:\n0 4 * * * /home/user/dir/cleanup.sh Which ensures the script runs daily at 4 am. For a weekend task, I\u0026rsquo;m happy with the result.\n","permalink":"https://nicolaiarocci.com/automatic-deletion-of-older-records-in-postgres/","summary":"\u003cp\u003eWe have a Postgres cluster with a database for each user. Each database has\na table that records events, and we want this table to only record the last 15\ndays.\u003c/p\u003e\n\u003cp\u003eIf we were on MongoDB, we could use a \u003ca href=\"https://docs.mongodb.com/manual/core/capped-collections/\"\u003ecapped collection\u003c/a\u003e, but we are in\nPostgres, which does not have equivalent functionality. In Postgres, you have\nto make do with something homemade. My first idea was to install a cron job in\nthe system. It would execute daily, deleting older events in each user\ndatabase.\u003c/p\u003e","title":"Automatic deletion of older records in Postgres"},{"content":"It\u0026rsquo;s now old news that the James Webb Telescope was successfully launched on Christmas Day. But last Saturday marked another historic moment for this incredible human artifact:\nAfter a quarter-century of effort by tens of thousands of people, more than $10 billion in taxpayer funding, and some 350 deployment mechanisms that had to go just so, the James Webb Space Telescope fully unfurled its wings. The massive spacecraft completed its final deployments, and, by God, the process went smoothly.\nArs Technica\u0026rsquo;s Eric Berger has long been my go-to pusher for space-related stuff. His report on Saturday\u0026rsquo;s milestone is accurate and to the point as usual. Today he has another article on ESA Arianne 5\u0026rsquo;s fundamental contribution to the mission. I love how modern, successful space missions are almost always the result of no-bullshit joint efforts by multiple international actors.\nUpdate: The James Webb Telescope has reached its final destination.\n","permalink":"https://nicolaiarocci.com/go-james-webb/","summary":"\u003cp\u003eIt\u0026rsquo;s now old news that the \u003ca href=\"https://www.jwst.nasa.gov/index.html\"\u003eJames Webb Telescope\u003c/a\u003e was successfully launched\non Christmas Day. But last Saturday marked another historic moment for this\nincredible human artifact:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAfter a quarter-century of effort by tens of thousands of people, more than\n$10 billion in taxpayer funding, and some 350 deployment mechanisms that had\nto go just so, the James Webb Space Telescope fully unfurled its wings. The\nmassive spacecraft completed its final deployments, and, by God, the process\nwent smoothly.\u003c/p\u003e","title":"Go James Webb"},{"content":"An excellent article on Web3 has just appeared on Moxie Marlinspike\u0026rsquo;s website. Being Moxie1, he\u0026rsquo;s not just speculating and rambling about stuff. In an attempt to learn more about the so-called Web3 and the technologies around it, he went all-in and built a couple of dApps himself. Then, he produced an NFT and put it up for sale. What he found is, well, to put it mildly, fascinating.\nSome of his insights on technology are also interesting. For example, on distributed vs. centralized systems:\nA protocol moves much more slowly than a platform. After 30+ years, email is still unencrypted; meanwhile WhatsApp went from unencrypted to full e2ee in a year. People are still trying to standardize sharing a video reliably over IRC; meanwhile, Slack lets you create custom reaction emoji based on your face. This isn’t a funding issue. If something is truly decentralized, it becomes very difficult to change, and often remains stuck in time. That is a problem for technology, because the rest of the ecosystem is moving very quickly, and if you don’t keep up you will fail.\nHis point on the urgency to reduce the burden of building software is also poignant:\nAt this point, software projects require an enormous amount of human effort. Even relatively simple apps require a group of people to sit in front of a computer for eight hours a day, every day, forever. This wasn’t always the case, and there was a time when 50 people working on a software project wasn’t considered a “small team.” As long as software requires such concerted energy and so much highly specialized human focus, I think it will have the tendency to serve the interests of the people sitting in that room every day rather than what we may consider our broader goals.\nMy foray into cryptocurrencies and blockchain happened almost ten years ago when the craze started. After a few experiments, I tagged it all as a nerds game and moved away. Moxie\u0026rsquo;s article served me well in catching up on the whole scene. Can\u0026rsquo;t say I\u0026rsquo;m thrilled by what I see.\nOn Moxie himself, see the New Yorker article I featured a while ago. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/moxie-on-web3/","summary":"\u003cp\u003eAn excellent article on Web3 has \u003ca href=\"https://moxie.org/2022/01/07/web3-first-impressions.html\"\u003ejust appeared\u003c/a\u003e on Moxie Marlinspike\u0026rsquo;s\nwebsite. Being Moxie\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, he\u0026rsquo;s not just speculating and rambling about stuff.\nIn an attempt to learn more about the so-called Web3 and the technologies\naround it, he went all-in and built a couple of dApps himself. Then, he\nproduced an NFT and put it up for sale. What he found is, well, to put it\nmildly, fascinating.\u003c/p\u003e\n\u003cp\u003eSome of his insights on technology are also interesting. For example, on\ndistributed vs. centralized systems:\u003c/p\u003e","title":"Moxie on Web3"},{"content":"Over the years, Iperborea, one of my favorite Italian publishers, has been publishing an unofficial Nordic Tales series. Their renowned nordic fiction series includes one fairy tale volume per year, usually published in December, just for Christmas. The first book was Lapland Tales in 2014, and then they continued with Danish, Icelandic, Swedish, Faroe, Norwegian, Greenlandic and then Finnish in 2021. I\u0026rsquo;ve been greedily reading each one of them, usually as my last book of the year. This year I was a little bit late, as reported.\nUntil now, 2020\u0026rsquo;s Greenlandic Legends has been my favorite, mainly because it\u0026rsquo;s partly different from the others, which all share a common Scandinavian cultural background. In this regard, this year\u0026rsquo;s Finnish Tales is even more remarkable. Quoting the short, excellent final essay by the translators Giorgia Ferrari and Sanna Maria Martin1:\nWithin the Nordic panorama, Finland holds a unique position and has a precise identity: entering Finnish culture means coming into contact with the Finno-Ugric world, starting from the language, which has nothing to do with the Scandinavian ones, which are only geographically close. At the same time, Finland is anything but an island separated from its surroundings: its particular position between East and West has made it, if anything, a borderland, a point of intersection between different cultures, enriching it with influences from both directions. And this can only be evident even in popular tales.\nIndeed, in these tales, you find echoes of myths and tropes from Scandinavian culture but always intertwined with unique Finnish themes. Notable examples are:\nThe tietäjä, whose supernatural power arises from great knowledge. The vetehinen, a male (!!!) water spirit of the forest. The syöjätär, the devourer, or the \u0026ldquo;wicked mother.\u0026rdquo; The nimikkopuu, a tree planted on somebody\u0026rsquo;s birth; tied to their destiny The shamanic rituals, often associated with the use of magical words and songs The principal collector of Finnish folklore was Eero Salmelainen (1830-1867), who published four seminal titles from which all of the stories in Finnish Tales are selected. Of course, Grimm\u0026rsquo;s influence is evident in Salmelainen\u0026rsquo;s work. Remarkably though, Salmelainen started his collection forty years later than the Grimms. One reason might be that until then (and up until now, I might add), Finnish folklore has always been hiding in the shadow of Kalevala\u0026rsquo;s poetic poetry.\nShort, informative essays enrich each one of Iperborea\u0026rsquo;s Nordic Tales volumes. These are essential in framing the content within the correct background, outlining the links between Nordic cultures, and revealing the sources. Take the Kalevala. I have had it in my library since many years ago, but I didn\u0026rsquo;t correlate it with Finnish folklore until I saw it mentioned in the essay. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-finnish-fairy-tales/","summary":"\u003cp\u003eOver the years, Iperborea, one of my favorite Italian publishers, has been\npublishing an unofficial Nordic Tales series. Their renowned nordic fiction\nseries includes one fairy tale volume per year, usually published in December,\njust for Christmas. The first book was Lapland Tales in 2014, and then they\ncontinued with Danish, Icelandic, Swedish, Faroe,  Norwegian, Greenlandic and\nthen Finnish in 2021. I\u0026rsquo;ve been greedily reading each one of them, usually as\nmy last book of the year. This year I was a little bit late, as \u003ca href=\"https://nicolaiarocci.com/three-good-books-i-read-in-2021/\"\u003ereported\u003c/a\u003e.\u003c/p\u003e","title":"Book Review: Finnish Fairy Tales"},{"content":"This year I\u0026rsquo;ve read twenty-one books or 5903 pages. That\u0026rsquo;s fewer books than last year (28 / 8064), the year before (25 / 8394), and the one before that (30 / 8447). Heck, I must look back at 2014 to score a win in my very own yearly reading challenge. What surprises me is not much the number of books but the pages I read, which constitutes a more relevant metric. Over the previous three years, that number stayed firmly over 8k while dropping to 6k this year.\nShould I be concerned? I don\u0026rsquo;t know. No doubt I\u0026rsquo;ve been super busy at work, often feeling exhausted in the evening when I tend to read more. I suspect I\u0026rsquo;ve also been watching more TV than usual, probably due to the evening fatigue and because I want to spend more time with Serena. The fact that I read more non-fiction might play a role too. Fiction tends to be more addictive and more inviting to the weary mind. We\u0026rsquo;ll see what happens next year.\nThese are three books I especially enjoyed reading in 2021:\nWe Have Always Lived in the Castle. This little Shirley Jackson masterpiece stands out from my (admittedly small) 2021 fiction selection. Quoting my own words from the review: \u0026ldquo;This book is brilliant because it takes the canonical witch/haunted house theme and flips it over, instantly reversing the perspective. The story is told from within the house. Village folks are the bad guys. Those who seem to be motivated by good intentions only fulfill their ego or strive to behave with good manners, as society expects them to do. We cannot help but feel at least a drop of compassion and sympathy for the devil.\u0026rdquo;\nEndurance. Shackleton\u0026rsquo;s Incredible Voyage. I\u0026rsquo;ve read three maritime adventure books this year, all excellent works. Alfred Lansing\u0026rsquo;s report on Shackleton\u0026rsquo;s expedition is my pick because the story is outstanding and powerfully told. \u0026ldquo;Alfred Lansing has reconstructed all these events with great care, drawing mainly on the many diaries kept by the crew and interviewing the few survivors still alive. [\u0026hellip;] the result is always smooth and dry, never yielding to hyperbole or exaltation, always close to the facts, which on the other hand, certainly do not need enrichment.\u0026rdquo;\nConsider the Lobster. David Foster Wallace is one of my favorite authors and this book does not delude. \u0026ldquo;You may not have a strong interest in lobsters or pornography, but the essays in this book are terrific.\u0026rdquo;\nHonorable mention goes to About the Meaning of Life, King and Emperor: A New Life of Charlemagne, and Nomadland. See my Books I Have Read page for the list of books I read in 2021 and before.\n","permalink":"https://nicolaiarocci.com/three-good-books-i-read-in-2021/","summary":"\u003cp\u003eThis year I\u0026rsquo;ve read twenty-one books or 5903 pages. That\u0026rsquo;s fewer books than\nlast year (28 / 8064), the year before (25 / 8394), and the one before that (30\n/ 8447). Heck, I must look back at 2014 to score a win in my very own yearly\nreading challenge. What surprises me is not much the number of books but the\npages I read, which constitutes a \u003ca href=\"https://twitter.com/nicolaiarocci/status/1214857647314362368\"\u003emore relevant metric\u003c/a\u003e. Over the previous\nthree years, that number stayed firmly over 8k while dropping to 6k this year.\u003c/p\u003e","title":"Three Good Books I Read in 2021"},{"content":"I found a Consider the Lobster review on Goodreads that almost precisely matches my thoughts on DFW and the book. Hence, given the lazy Christmas-break mood I am in right now, I am conceding myself the right to copy-paste and edit David\u0026rsquo;s review right away.\nI know of nobody else who writes as thoughtfully and intelligently as DFW. That he manages to write so informatively, with humor and genuine wit, on almost any subject under the sun is mind-blowing – it\u0026rsquo;s also why I am willing to forgive his occasional stylistic excesses. (Can you spell \u0026lsquo;footnote\u0026rsquo;?) You may not have a strong interest in lobsters or pornography, but the essays in question are terrific. The reporting on Ziegler and McCain is outstanding, heartbreakingly so, because it makes the relative shallowness of most reporting painfully evident.\nYes, I know all about his weaknesses - the digressions, the rampant footnote abuse, the flaunting of his extraordinary erudition. I know all this, and I don\u0026rsquo;t care. Because when he is in top form, there\u0026rsquo;s nobody else I would instead read. The man is hilarious; I think he\u0026rsquo;s a mensch, and I don\u0026rsquo;t believe he parades his erudition to prove how smart he is. I think he can\u0026rsquo;t help himself - it\u0026rsquo;s a consequence of his wide-ranging curiosity. At heart, he\u0026rsquo;s a geek but a charming, hyper-articulate geek. Who is almost frighteningly bright.\nIf you have never read DFW, my advice would be to start with his non-fiction, which is way more accessible than his fiction (with the notable exception of The Brook of the System, which was my first adored DFW reading.)\n","permalink":"https://nicolaiarocci.com/book-review-consider-the-lobster/","summary":"\u003cp\u003eI found a Consider the Lobster \u003ca href=\"https://www.goodreads.com/review/show/14143044\"\u003ereview\u003c/a\u003e on Goodreads that almost precisely\nmatches my thoughts on DFW and the book. Hence, given the lazy Christmas-break\nmood I am in right now, I am conceding myself the right to copy-paste and edit\nDavid\u0026rsquo;s review right away.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eI know of nobody else who writes as thoughtfully and intelligently as DFW. That\nhe manages to write so informatively, with humor and genuine wit, on almost any\nsubject under the sun is mind-blowing – it\u0026rsquo;s also why I am willing to forgive\nhis occasional stylistic excesses. (Can you spell \u0026lsquo;footnote\u0026rsquo;?) You may not have\na strong interest in lobsters or pornography, but the essays in question are\nterrific. The reporting on Ziegler and McCain is outstanding, heartbreakingly\nso, because it makes the relative shallowness of most reporting painfully\nevident.\u003c/p\u003e","title":"Book Review: Consider the Lobster"},{"content":"When The Digital Antiquarian released his System Shock retrospective earlier this year, I was in awe. System Shock was one of my favorite games back in the day, and yes, in the quarrel between id Software\u0026rsquo;s DOOM and Looking Glass\u0026rsquo;s System Shock, I was siding with the latter. I was so much more for immersion and storyline than shoot \u0026rsquo;em-ups. The Antiquarian article is excellent. If you\u0026rsquo;re into gaming history or, really, into computer\u0026rsquo;s history, I urge you to read it all.\nAs I read Maher\u0026rsquo;s post, I thought it would be great to fetch the original System Shock box from my sparse collection of now ancient video games and keep it by my side as I kept reading (I am known for lending myself to such romantic gestures.) I reached for the bookshelf. Microprose\u0026rsquo;s Falcon 3.0 was there along with Origin\u0026rsquo;s Ultima VII Serpent Isle and a few others, but System Shock was missing. It was released in 1994. I was 24. A lot of time has passed since then, but heck, I was sure I bought that game at the time. I have fond memories of many thrilling nights exploring the SHODAN-controlled space station. In the following days, I spent quite some time rummaging through all my belongings: bookshelves, drawers, garage shelves, even the cellar to no avail. The System Shock box was lost. Along with the careless disposal of Charlie, my Commodore 64, the loss of System Shock was one of my computer griefs.\nThen, yesterday I went to visit my parents at their place. I was with Anna, my third kid. We were chatting about what sons and parents usually talk about on Christmas break when my dad mentioned that he\u0026rsquo;d been reordering stuff around the house and that I should probably take a close look at a couple of boxes he put aside for me. They contained old things from when I lived with them. I went to check on them. You never know; there might be some memorabilia like the comics or the books I used to read. Imagine my surprise when the original System Shock box surfaced out of the first box. Oh, joy! Best Dad\u0026rsquo;s Christmas present ever1.\nThe original price tag is still there. In 1994, the damn thing cost a whopping 139.900 Italian Lire (€72). Pirating was wild in those days, and I won\u0026rsquo;t negate that most of my mojo came from dark channels back then, but when a worthy game appeared, I was ready to pay homage to the authors. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/system-shock-is-back-home/","summary":"\u003cp\u003eWhen The Digital Antiquarian released his \u003ca href=\"https://www.filfre.net/2021/03/system-shock/\"\u003eSystem Shock retrospective\u003c/a\u003e\nearlier this year, I was in awe. System Shock was one of my favorite games back\nin the day, and yes, in the quarrel between id Software\u0026rsquo;s DOOM and Looking\nGlass\u0026rsquo;s System Shock, I was siding with the latter. I was so much more for\nimmersion and storyline than shoot \u0026rsquo;em-ups. The Antiquarian article is\nexcellent. If you\u0026rsquo;re into gaming history or, really, into computer\u0026rsquo;s history,\nI urge you to read it all.\u003c/p\u003e","title":"System Shock is Back Home"},{"content":"I\u0026rsquo;m not a regular philosophy reader, much less of self-improvement guides. I\u0026rsquo;m wary of the latter and too ignorant for the former. Yet, theologian Vito Mancuso has intrigued me for some time. I followed his podcast on the \u0026ldquo;Four Masters of Life\u0026rdquo;1 and found it excellent. In it, Mancuso discusses his four tutelary deities: \u0026ldquo;Socrates, the educator. Buddha, the physician. Confucius, the politician. Jesus, the prophet.\u0026rdquo; I also listened to some TV interviews where I always found him fascinating. In short, there was enough to make me decide to read some of his work. From the back cover of the book:\nWe know perfectly well what we want to have - wealth, pleasure, power - but we no longer know who we want to be. In the severe crisis in which we are immersed, we continually need adversaries to define our identities. We often find ourselves, enemies, even of ourselves, in a sort of permanent inner war. The philosophy of Vito Mancuso is a precious anchor in these difficult times: renewing in us the desire for ancient reflections, it shows us the way to go back to the deep roots of our consciousness and teaches us how the meaning and direction of our life on this Earth must be rebuilt in small steps, day by day, in the awareness that we are in the presence of something more important than ourselves. Only in this way will we enter into harmony with the logic that determines our path and love that natural simplicity within us is the real secret to a worthy life, a life worth living, an authentic life.\nAmbitious, to say the least, especially considering that we are talking about a short essay of a hundred pages at most. In the preface, we learn that the content of this book is nothing more than the revised and expanded transcript of a speech given by Mancuso during a summer event at a city library. Yet, we should not be misled. About the Meaning of Life is not superficial. Instead, it is a well-exposed and reasoned synthesis of Vito Mancuso\u0026rsquo;s general thought on the meaning of life, a theme to which the author has dedicated much of his work. Mancuso\u0026rsquo;s philosophy is in some ways original, especially in its courageous detachment from the dominant Western Catholic doctrine from which he comes (and to which he tends to return.)2 The in-depth and never prejudicially critical study of alternative philosophies, like those of the far East, is evident and leaves its mark. The writing is always fluent, the reading pleasant and rarely tricky. On rare occasions when we feel the lack of footholds, the footnotes (pun intended) aid with valuable suggestions for further study. Yes, a short text, but with dense content and lots of food for thought. It deserves more readings. Some of Mancuso\u0026rsquo;s major works, like the Four Masters of Life mentioned above, are certainly recommended for a deeper investigation3.\nThe first episode, Socrates, is available here (Italian)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFurther research reveals that his line of thought has received some relevant criticism, in the catholic circles especially.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nUnfortunately, I am not aware of English editions of Mancuso\u0026rsquo;s works. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-about-the-meaning-of-life/","summary":"\u003cp\u003eI\u0026rsquo;m not a regular philosophy reader, much less of self-improvement guides. I\u0026rsquo;m\nwary of the latter and too ignorant for the former. Yet, theologian Vito\nMancuso has intrigued me for some time. I followed his podcast on the \u0026ldquo;Four\nMasters of Life\u0026rdquo;\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e and found it excellent. In it, Mancuso discusses his four\ntutelary deities: \u0026ldquo;Socrates, the educator. Buddha, the physician. Confucius,\nthe politician. Jesus, the prophet.\u0026rdquo; I also listened to some TV interviews\nwhere I always found him fascinating. In short, there was enough to make me\ndecide to read some of his work. From the back cover of the book:\u003c/p\u003e","title":"Book Review: About the Meaning of Life"},{"content":"This weekend assignment was to upgrade a couple of old Windows 10 VMs to Windows 11 in Parallels Desktop 17. I couldn\u0026rsquo;t do that right away because Windows Update was complaining about the lack of the TPM chip. A little research revealed that TPM chips only work on UEFI BIOS. To check which BIOS version was being used in my VMs, I used the msinfo32 (System Information) application. It showed the BIOS to be of \u0026ldquo;Legacy\u0026rdquo; type. So my task was now to switch it to UEFI.\nI looked high and low with little luck. Parallels the product is incredible. Not so much its documentation and online support. At some point, I landed in the Parallels forums, a vast ocean of scarcely useful threads from which I usually try to stay the hell away. The Parallels personnel there has a long-standing tendency to copy \u0026amp; paste ready-made and irrelevant solutions. Users are left to their own, and, luckily, one of them posted the perfect solution to my Legacy-to-UEFI BIOS migration problem. I am reposting it here, with minor edits, for future reference (my future self will be grateful):\nBack up your VM Boot into your Windows 10 VM as usual While holding down Shift key: Start -\u0026gt; Power -\u0026gt; Restart Select Troubleshoot, then Advanced options Select Command Prompt Log in with your account and Microsoft password (not your pin) Type: mbr2gpt /validate and hit return; this will check your hard disk If there\u0026rsquo;s a problem, type: mbr2gpt /validate /allowFullOS and hit return Type mbr2gpt /convert and hit return. It will convert the MBR disk partition scheme to GUID. It might complain about WinRE or something, but generally, if it says \u0026ldquo;conversion was a success,\u0026rdquo; you can type exit and hit return to kill the command prompt and return to the advanced menu Choose \u0026ldquo;Turn off PC.\u0026rdquo; You don\u0026rsquo;t want to restart Windows yet Find your VM file in the Finder, right-click on it, and choose: \u0026ldquo;Show Package Contents.\u0026rdquo; Find the config.pvs file and open it with a text editor Search for the section \u0026lt;Bios dyn_lists=\u0026quot;\u0026quot;\u0026gt; Change \u0026lt;EfiEnabled\u0026gt; from 0 to 1 Change \u0026lt;EfiSecureBoot\u0026gt; from 0 to 1 Save the file Open the VM Configuration, go to the Hardware tab, click the \u0026ldquo;+\u0026rdquo;, and add the TPM Chip At this point you can run Windows 10 as you usually would. At fist launch, right after the login, I got a critical error and a hard restart (the original poster reported the same experience.) After that, the VM is stable. A quick msinfo32 check confirms that the VM is now on UEFI BIOS.\nShould Windows Update still complain, that\u0026rsquo;s probably because of the CPU limitation check. You can disable it:\nOpen the Registry Editor Navigate to HKEY_LOCAL_MACHINE\\SYSTEM\\Setup\\MoSetup Search for AllowUpgradesWithUnsupportedTPMOrCPU Change its value to 1 Restart the VM Personally, I did not need to alter the registry, and I got very old VMs to upgrade. At the time of this writing, Windows 11 installation is at 94% and I am confident it will be successful.\n","permalink":"https://nicolaiarocci.com/migrating-a-windows-10-vm-to-windows-11-in-parallels-desktop-a-story-of-tpm-chips-and-bios-upgrades/","summary":"\u003cp\u003eThis weekend assignment was to upgrade a couple of old Windows 10 VMs to\nWindows 11 in Parallels Desktop 17. I couldn\u0026rsquo;t do that right away because\nWindows Update was complaining about the lack of the TPM chip. A little\nresearch revealed that TPM chips only work on UEFI BIOS.  To check which BIOS\nversion was being used in my VMs, I used the msinfo32 (System Information)\napplication. It showed the BIOS to be of \u0026ldquo;Legacy\u0026rdquo; type. So my task was now to\nswitch it to UEFI.\u003c/p\u003e","title":"Migrating a Windows 10 VM to Windows 11 in Parallels Desktop: a story of TPM chips and BIOS upgrades"},{"content":"After five years in Oracle\u0026rsquo;s MySQL team, Steinar H. Gunderson resigned a few days ago. On the same day, he dropped the bomb on his blog:\nlet me point out something that I\u0026rsquo;ve been saying both internally and externally for the last five years (although never on a stage—which explains why I\u0026rsquo;ve been staying away from stages talking about MySQL): MySQL is a pretty poor database, and you should strongly consider using Postgres instead1.\nAs [@brandur][3] appropriately puts it, in the world of software engineering, it rarely gets more definitive than that. And authoritative, I might add, given both the role he covered at Oracle and his overall [track record][5]. The whole short post is worth reading2.\nEmphasis is mine. [3]: https://twitter.com/brandur/status/1467916216018903044\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSpoiler: he\u0026rsquo;s not nice to MariaDB either. [5]: https://www.sesse.net/ [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/a-big-nail-in-the-coffin-of-mysql/","summary":"\u003cp\u003eAfter five years in Oracle\u0026rsquo;s MySQL team, Steinar H. Gunderson resigned a few\ndays ago. On the same day, he dropped the bomb on his \u003ca href=\"https://blog.sesse.net/blog/tech/2021-12-05-16-41_leaving_mysql\"\u003eblog\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003elet me point out something that I\u0026rsquo;ve been saying both internally and\nexternally for the last five years (although never on a stage—which explains\nwhy I\u0026rsquo;ve been staying away from stages talking about MySQL): \u003cstrong\u003eMySQL is\na pretty poor database, and you should strongly consider using Postgres\ninstead\u003c/strong\u003e\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"A big nail in the coffin of MySQL"},{"content":"Space-junkie me is back, this time reading about the innumerable opportunities that SpaceX\u0026rsquo;s Starship will offer once it becomes operational, hopefully no later than this year or the next. In his Science Upside for Starship, the exceptionally knowledgeable Casey Handmer makes a case for Starship relevance in the future of space exploration by listing an astounding number of reasonable use-cases for the vessel.\nI think it is relatively straightforward to think of cool things to do with SpaceX Starships, so recent posts have focused on trying to understand the more mixed consequences for incumbent industrial organizations that are not ideally positioned to exploit the coming advances. It is, however, a fun exercise to enumerate all the ways in which Starship and related technologies can help execute bold, ambitious missions of scientific discovery.\nIt\u0026rsquo;s long-form, yes, but well worth it. Oh, and while you\u0026rsquo;re at it, you might as well read Starship is Still Not Understood, Casey\u0026rsquo;s previous article on the topic.\n","permalink":"https://nicolaiarocci.com/on-the-incredible-opportunities-offered-by-starship/","summary":"\u003cp\u003eSpace-junkie me is back, this time reading about the innumerable opportunities\nthat SpaceX\u0026rsquo;s Starship will offer once it becomes operational, hopefully no\nlater than this year or the next. In his \u003ca href=\"https://caseyhandmer.wordpress.com/2021/11/17/science-upside-for-starship/\"\u003eScience Upside for Starship\u003c/a\u003e, the\nexceptionally knowledgeable Casey Handmer makes a case for Starship relevance\nin the future of space exploration by listing an astounding number of\nreasonable use-cases for the vessel.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI think it is relatively straightforward to think of cool things to do with\nSpaceX Starships, so recent posts have focused on trying to understand the\nmore mixed consequences for incumbent industrial organizations that are not\nideally positioned to exploit the coming advances. It is, however, a fun\nexercise to enumerate all the ways in which Starship and related technologies\ncan help execute bold, ambitious missions of scientific discovery.\u003c/p\u003e","title":"On the incredible opportunities offered by Starship"},{"content":"Sait Faik Abasıyanık is an acclaimed Turkish storyteller. A useless man is a collection of short stories that spans nearly two decades of the author\u0026rsquo;s output, offering a glimpse into his imaginative and troubled mind. His overflowing love for others (even sensual, with a preference for street kids) combined with a \u0026ldquo;mal de vivre\u0026rdquo; that pushes him towards self-destruction are apparent.\nHis passion for the most popular areas of Istanbul and, in contrast, the atavistic nostalgia for the simple life of the nearby fishermen islets exudes from these stories, which often run similar one after another. The composition is sometimes complex, making the text hard to parse and comprehend. Several novels are noteworthy, though, especially those narrated in third-person, where the narrator is not involved. The author is holding back his poetic prowess and the resulting text is more linear. Notable examples are The samovar, on the elaboration of mourning, and A story for two, a touching story of friendship between a bird and a fisherman. Some first-person ones are exceptional, too. For example, Milk is Sait Faik\u0026rsquo;s worthy tribute to Proust\u0026rsquo;s madeleine. One short story on the protagonist\u0026rsquo;s struggle with a street kid was profoundly touching.\nI bought this book because I wanted to know more about Istanbul, a city I know little or nothing about, and its people. I am only partially satisfied. Reading it, I realized that the author was, of course, not addressing the foreign reader at all. He was writing, of course, for his people, the citizens of Istanbul, and himself.\n","permalink":"https://nicolaiarocci.com/book-review-a-useless-man/","summary":"\u003cp\u003eSait Faik Abasıyanık is an acclaimed Turkish storyteller. \u003cem\u003eA useless man\u003c/em\u003e is\na collection of short stories that spans nearly two decades of the author\u0026rsquo;s\noutput, offering a glimpse into his imaginative and troubled mind. His\noverflowing love for others (even sensual, with a preference for street kids)\ncombined with a \u0026ldquo;mal de vivre\u0026rdquo; that pushes him towards self-destruction are\napparent.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"A useless man\" loading=\"lazy\" src=\"/images/a-useless-man.jpg#right\"\u003e\nHis passion for the most popular areas of Istanbul and, in contrast, the\natavistic nostalgia for the simple life of the nearby fishermen islets exudes\nfrom these stories, which often run similar one after another. The composition\nis sometimes complex, making the text hard to parse and comprehend. Several\nnovels are noteworthy, though, especially those narrated in third-person, where\nthe narrator is not involved. The author is holding back his poetic prowess and\nthe resulting text is more linear. Notable examples are \u003cem\u003eThe samovar\u003c/em\u003e, on the\nelaboration of mourning, and \u003cem\u003eA story for two\u003c/em\u003e, a touching story of friendship\nbetween a bird and a fisherman. Some first-person ones are exceptional, too.\nFor example, \u003cem\u003eMilk\u003c/em\u003e is Sait Faik\u0026rsquo;s worthy tribute to Proust\u0026rsquo;s madeleine. One\nshort story on the protagonist\u0026rsquo;s struggle with a street kid was profoundly\ntouching.\u003c/p\u003e","title":"Book Review: A useless man"},{"content":"A great piece of writing on jazz has recently been posted on The Smart Set. In Born to be cool, Matthew Duffus writes about jazz trumpeter Chet Baker, reporting about his troubled life, musical prowess, influence, and legacy. Some facts are well known, like the reception and then the competition with trumpet legends such as Miles Davis and Dizzy Gillespie; other tidbits are less known (to me at least). On Baker legacy:\nAs I hope this makes clear, with Baker, music is only part of the story. In order to fully grasp his significance within popular culture, we must also look at the mythos surrounding him and the often less salacious truth that lies beneath that dramatic surface. It is only by looking concurrently at Baker’s music and image that we can truly understand why he has endured despite the existence of more technically-gifted trumpeters and impressive vocalists. Many such musicians came to the fore throughout his tumultuous lifetime, but few have captured the public’s attention or endured in the way that Baker has. For all of his limited range, not to mention the dramatic loss of the youthful good looks that are at the root of his image, he managed to make a living as a musician for decades and has persisted in the popular imagination and jazz fans’ collections almost 35 years after his death.\nI\u0026rsquo;ve always listened to Barker with little attention, knowing and researching little about the artist and his music. This article fills a hole. Also, I am grateful to Duffus for letting me discover a gem like Live in Tokyo, an album recorded on stage less than a year before his premature, tragic death and then released posthumously. I am listening to it as I write this note, and man isn\u0026rsquo;t it just great.\n","permalink":"https://nicolaiarocci.com/chet-baker-born-to-be-cool/","summary":"\u003cp\u003eA great piece of writing on jazz has recently been posted on The Smart Set. In\n\u003ca href=\"https://www.thesmartset.com/born-to-be-cool/\"\u003eBorn to be cool\u003c/a\u003e, Matthew Duffus writes about jazz trumpeter Chet Baker,\nreporting about his troubled life, musical prowess, influence, and legacy. Some\nfacts are well known, like the reception and then the competition with trumpet\nlegends such as Miles Davis and Dizzy Gillespie; other tidbits are less known\n(to me at least). On Baker legacy:\u003c/p\u003e","title":"Chet Baker, born to be cool"},{"content":"Of all the stories of maritime adventures I\u0026rsquo;ve read, that of the Endurance, masterfully told by Alfred Lansing in this book, is the most incredible and shocking. Unbelievable to say, given the premise (a crew of 28 men stranded on the Antarctic pack, camped on floating slabs of ice hundreds of miles from any human settlement, at the gates of the Antarctic winter), but the story does not end in tragedy. The original expedition failed, but what followed the capture of Endurance (never was the name of a ship more prophetic) by the Antarctic ice borders on the impossible, if not the miraculous.\nThe merits of the expedition leader, Sir Ernest Shackleton, are, of course, spectacular. Every decision he made and his care in leading the crew during that year and a half of unspeakable suffering, sacrifice and hardship led them all to safety. There was no shortage of hotheads and slackers, which made the successful outcome even more impressive. Shackleton himself was not a saint. For the sake of fame, success and money, he planned an expedition that had very little chance of success, in which death was by far the most probable result. And yet, he planned every detail with great care, never doubting the final victory. More than anything else, what is surprising in this story is that no saviour finally came to rescue the crew. They saved themselves. After more than a year camped on drifting ice floes, driven by sea currents and Antarctic winds, they finally landed on the deserted and unforgiving Elephant isle. Shackleton once again had to take to the sea, leaving most of his men behind, to cross the terrible Drake Channel on little more than an open lifeboat. This one feature alone, the victorious crossing of the world-renown troubled waters of Drake Channel on a lifeboat, was something never attempted before, nor ever repeated afterwards, and would have been enough for history books. Once miraculously landed in South Georgia, Shackleton and his men were not done yet. They had to cross snow-capped mountains never before touched by man to reach an outpost of whale fishers and finally set sail in a ship to return to retrieve the men marooned on Elephant Island.\nEvery moment of this story feels like an epic, fictional movie, but it\u0026rsquo;s not. It is reality as experienced firsthand by actual human beings. Alfred Lansing has reconstructed all these events with great care, drawing mainly on the many diaries kept by the crew, Shackleton himself included, and interviewing the few survivors still alive. Lansing\u0026rsquo;s work is precise, methodical, careful. Still, the result is always smooth and at the same time dry, never yielding to hyperbole or exaltation, always close to the facts, which on the other hand, certainly do not need enrichment. A fantastic story, beautifully told.\n","permalink":"https://nicolaiarocci.com/book-review-endurance-shackletons-incredible-voyage/","summary":"\u003cp\u003eOf all the stories of maritime adventures I\u0026rsquo;ve read, that of the Endurance,\nmasterfully told by Alfred Lansing in this book, is the most incredible and\nshocking. Unbelievable to say, given the premise (a crew of 28 men stranded on\nthe Antarctic pack, camped on floating slabs of ice hundreds of miles from any\nhuman settlement, at the gates of the Antarctic winter), but the story does not\nend in tragedy. The original expedition failed, but what followed the capture\nof Endurance (never was the name of a ship more prophetic) by the Antarctic ice\nborders on the impossible, if not the miraculous.\u003c/p\u003e","title":"Book Review: Endurance, Shackleton's Incredible Voyage"},{"content":"I\u0026rsquo;m a Moka guy, always have been. Admittedly, I also like so-called American coffee and, of course, espresso. But every day at my place, I\u0026rsquo;ll have a Moka-brewed coffee. Twice. As I wake up, and then in the afternoon before getting back to work. I\u0026rsquo;ve been observing the pods frenzy spreading all around me with curiosity and bewilderment in recent years, with dedicated retailers opening (and often closing soon after) everywhere in my town. Bialetti\u0026rsquo;s Moka coffee pots have always been around my life. Not disposable, for they are pretty expensive even here in Italy, but common, everyday kitchen gadgets? Absolutely.\nSo it was interesting to read Atlas Obscura\u0026rsquo;s The Humble Brilliance of Italy\u0026rsquo;s Moka Coffee Pot to learn more about Moka\u0026rsquo;s roots, history (with the ups and downs), and design relevance. Of all this stuff, I was only marginally aware.\nThe Moka pot is a symbol of Italy: of postwar ingenuity and global culinary dominance. It is in the Museum of Modern Art, the Cooper-Hewitt Smithsonian Design Museum, and other temples to design. It is in the Guinness Book of World Records as the world\u0026rsquo;s most popular coffee maker and was for decades commonplace to the point of ubiquity not only in Italy but in Cuba, Argentina, Australia, and the United States. It\u0026rsquo;s also widely misunderstood and maligned, with approval in the modern coffee world coming perhaps a bit too late, in only the past few years. Get one while you can.\n","permalink":"https://nicolaiarocci.com/im-a-moka-guy/","summary":"\u003cp\u003eI\u0026rsquo;m a Moka guy, always have been. Admittedly, I also like so-called American\ncoffee and, of course, espresso. But every day at my place, I\u0026rsquo;ll have\na Moka-brewed coffee. Twice. As I wake up, and then in the afternoon before\ngetting back to work. I\u0026rsquo;ve been observing the pods frenzy spreading all around\nme with curiosity and bewilderment in recent years, with dedicated retailers\nopening (and often closing soon after) everywhere in my town. Bialetti\u0026rsquo;s Moka\ncoffee pots have always been around my life. Not disposable, for they are\npretty expensive even here in Italy, but common, everyday kitchen gadgets?\nAbsolutely.\u003c/p\u003e","title":"I'm a Moka guy"},{"content":"Mathematics as the study of relationships: in this aspect lies the similarity and affinity with politics. And then the need in both cases to proceed with stubbornness and trust, without fearing error which, as in all difficult things, is not only lying in wait but inherent, and often, when it is discovered, it is the stimulus and engine of new successes and goals. Hence the need to respect rules and (not or, mind you) the compelling need for revolutions. The parallel narration of the author\u0026rsquo;s life and the change, over the years, of her own beliefs and points of view, makes this short essay more credible and streamlines the story.\nMathematics was my apprenticeship to revolution because it taught me to distrust absolute truths and unquestionable authorities. Democracy and mathematics, from a political point of view, are similar: like all creative processes, they can\u0026rsquo;t stand remaining unchanged.\nNot a book for everyone, perhaps, but suitable to those who like to think and be challenged with ideas. Background theme to which I am susceptible: the necessity for school to illuminate our existences. I wouldn\u0026rsquo;t say I liked the frequent references to contingent situations in Italian politics. I bought an short essay on the interconnections between mathematics and politics; I expect it to make me fly high, far away from the quarrels and events of daily politics. Also, sometimes the similarities between the two fields seem a bit too far fetched.\nI don\u0026rsquo;t think this book is currently available in English. I read it in the original Italian edition.\n","permalink":"https://nicolaiarocci.com/book-review-mathematics-is-politics/","summary":"\u003cp\u003eMathematics as the study of relationships: in this aspect lies the similarity\nand affinity with politics. And then the need in both cases to proceed with\nstubbornness and trust, without fearing error which, as in all difficult\nthings, is not only lying in wait but inherent, and often, when it is\ndiscovered, it is the stimulus and engine of new successes and goals. Hence the\nneed to respect rules and (not or, mind you) the compelling need for\nrevolutions. The parallel narration of the author\u0026rsquo;s life and the change, over\nthe years, of her own beliefs and points of view, makes this short essay more\ncredible and streamlines the story.\u003c/p\u003e","title":"Book Review: Mathematics is politics"},{"content":"We want our test and production stacks to be automatically updated every time something new is pushed to the test or release branch. CI builds the docker image on successful test runs, then stores it in our private registry. But how do you automatically pull and deploy those updated images?\nI looked into the Watchtower project, which is interesting. You add Watchtower to the stack, and it will diligently check for new versions of the images used by the containers in the stack, pulling, building and deploying as needed while the stack is up and running. In my experiments, however, I had little luck in making it talk with our private registry. Also, I\u0026rsquo;m not too fond of polluting my stack with foreign containers. I want my docker stack to be simple, tidy, clean, and single-tasked.\nI ended up doing something super simple. A cronjob routinely invokes a script that pulls relevant images from our registry. If updated images are downloaded, then the docker stack up command is issued. Finally, a docker image prune -af ensures obsolete images are deleted. For the simplest scenario, where we only need to take care of one image, the script looks like this:\n#!/bin/bash set -e readonly IMAGE=[image] readonly TAG=[tag] out=$(docker pull $IMAGE:$TAG) if [[ $out != *\u0026quot;up to date\u0026quot;* ]]; then echo \u0026quot;an updated image has been donwloaded for '$IMAGE:$TAG'\u0026quot; # we actually launch a script here: docker stack up -c stack.yml mystack --with-registry-auth docker image prune -af else echo \u0026quot;no updates available for '$IMAGE:$TAG'\u0026quot; fi I expected docker pull to return 1 on successful pulls; it turns out it always returns 0, so I\u0026rsquo;m checking its output for confirmation (I got the hint here).\nYou might be wondering why we don\u0026rsquo;t directly execute docker stack up in our cronjob. It updates the stack resolving new images by default. The problem is that, in our experience, it also briefly stops the services. Not an issue if you run this command sporadically. We want our stacks refreshed minutes after the initial developer push, though, so the cronjob runs frequently. With our pre-fetch approach, actual deployment only happens when an updated image has been found and downloaded.\nNow, when I push to, say, test branch, I have the updated services up and running a minute later, without me doing anything on the docker or server-side of things. Mission accomplished, I guess, but I am sure there are other, better ways around this problem. If you happen to know one, please let me know about it (keep in mind, we don\u0026rsquo;t use alternative orchestrators, just the built-in \u0026lsquo;swarm\u0026rsquo; thing.)\n","permalink":"https://nicolaiarocci.com/how-to-automatically-pull-and-deploy-updated-docker-images/","summary":"\u003cp\u003eWe want our test and production stacks to be automatically updated every time\nsomething new is pushed to the \u003ccode\u003etest\u003c/code\u003e or \u003ccode\u003erelease\u003c/code\u003e branch. CI builds the docker\nimage on successful test runs, then stores it in our private registry. But how\ndo you automatically pull and deploy those updated images?\u003c/p\u003e\n\u003cp\u003eI looked into the \u003ca href=\"https://containrrr.dev/watchtower/\"\u003eWatchtower\u003c/a\u003e project, which is interesting. You add\nWatchtower to the stack, and it will diligently check for new versions of the\nimages used by the containers in the stack, pulling, building and deploying as\nneeded while the stack is up and running. In my experiments, however, I had\n\u003ca href=\"https://github.com/containrrr/watchtower/issues/1113\"\u003elittle luck\u003c/a\u003e in making it talk with our private registry. Also, I\u0026rsquo;m not too\nfond of polluting my stack with foreign containers. I want my docker stack to\nbe simple, tidy, clean, and single-tasked.\u003c/p\u003e","title":"How to automatically pull and deploy updated Docker images"},{"content":"Today I searched the internet for something, and the first result I got from @duckduckgo was a note I wrote months ago to my future self; how meta is that.\nLearn in public, it gives superpowers1. Also, in recent years, adopting POSSE was the best thing I did for my personal development.\nI should do better. Post more TILs, for example. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/learn-in-public/","summary":"\u003cp\u003eToday I searched the internet for something, and the first result I got from\n\u003ca href=\"https://duckduckgo.com/\"\u003e@duckduckgo\u003c/a\u003e was a note I wrote months ago to my future self; how meta is\nthat.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/duckduckgo-search.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.swyx.io/learn-in-public/\"\u003eLearn in public\u003c/a\u003e, it gives superpowers\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. Also, in recent years, adopting\n\u003ca href=\"https://indieweb.org/POSSE\"\u003ePOSSE\u003c/a\u003e was the best thing I did for my personal development.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003eI should do better. Post more \u003ca href=\"/tags/til/\"\u003eTILs\u003c/a\u003e, for example.\n[rss]: \u003ca href=\"https://nicolaiarocci.com/index.xml\"\u003ehttps://nicolaiarocci.com/index.xml\u003c/a\u003e\n[tw]: \u003ca href=\"http://twitter.com/nicolaiarocci\"\u003ehttp://twitter.com/nicolaiarocci\u003c/a\u003e\n[nl]: \u003ca href=\"https://buttondown.email/nicolaiarocci\"\u003ehttps://buttondown.email/nicolaiarocci\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e","title":"Learn in public"},{"content":"I spent the last few days migrating our ASP.NET REST services, MVC web applications and Blazor server apps to .NET 6. Overall the process was pretty straightforward. The few issues I went through were easy to solve and well documented. Things got more involved with the EF Core 6 transition, especially with the Npgsql Entity Framework Core Provider.\nThe official ASP.NET Core 5.0 to 6.0 migration guide was my first stop. It offers the perfect entry point, rich with in-depth links. At this stage, I am not interested in switching to the new .NET 6 minimal hosting model (aka Minimal APIs). I think it\u0026rsquo;s a significant improvement, and we will likely adopt it for new projects, but our production projects aren\u0026rsquo;t going to be refactored right away. Should minimal APIs also prove to be remarkably performant, we\u0026rsquo;ll reconsider them1.\nThe first step was updating the target framework moniker to net6.0.\n\u0026lt;Project Sdk=\u0026quot;Microsoft.NET.Sdk.Web\u0026quot;\u0026gt; \u0026lt;PropertyGroup\u0026gt; \u0026lt;TargetFramework\u0026gt;net6.0\u0026lt;/TargetFramework\u0026gt; \u0026lt;/PropertyGroup\u0026gt; \u0026lt;/Project\u0026gt; Then, I updated all Microsoft.AspNetCore.* and Microsoft.Extensions.* package references to version 6.0.0.\n\u0026lt;ItemGroup\u0026gt; \u0026lt;PackageReference Include=\u0026quot;Microsoft.AspNetCore.JsonPatch\u0026quot; Version=\u0026quot;6.0.0\u0026quot; /\u0026gt; \u0026lt;PackageReference Include=\u0026quot;Microsoft.Extensions.Caching.[...]\u0026quot; Version=\u0026quot;6.0.0\u0026quot; /\u0026gt; \u0026lt;/ItemGroup\u0026gt; That\u0026rsquo;s all I needed to do to update the MVC application. The only other thing left for me was to update Dockerfile\u0026rsquo;s FROM statements to pull the new .NET 6 image:\n# build stage FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build WORKDIR /build [..] # final stage/image FROM mcr.microsoft.com/dotnet/aspnet:6.0 [..] Migrating the WebApi/REST services required more work. I got a few errors and warnings, either at compile or runtime. Let\u0026rsquo;s go through them one by one.\nNew JsonSerializer source generator overloads The call is ambiguous between the following methods or properties: \u0026lsquo;JsonSerializer.Serialize(TValue, JsonSerializerOptions?)\u0026rsquo; and \u0026lsquo;JsonSerializer.Serialize(TValue, JsonTypeInfo)\u0026rsquo;\u0026quot;\nIn .NET 6, the Sytem.Text.Json.JsonSerializer acquired two new overloads that support pre-generated type information via source-generators. Previously, you could write code that passed null (or default) as the value for the JsonSeralizerOptions parameter:\nentity.Property(e =\u0026gt; e.Value) .HasConversion( v =\u0026gt; JsonSerializer.Serialize(v, null), v =\u0026gt; JsonSerializer.Deserialize(v, null)); However, the new source-generator-enabled overloads will cause ambiguity if you pass null. The solution was to add simply an explicit cast to the intended target:\nentity.Property(e =\u0026gt; e.Value) .HasConversion( v =\u0026gt; JsonSerializer.Serialize(v, (JsonSerializerOptions)null), v =\u0026gt; JsonSerializer.Deserialize(v, (JsonSerializerOptions)null)); The RNGCryptoServiceProvider is now obsolete SYSLIB0023: RNGCryptoServiceProvider is obsolete\nAs it turns out, RNGCryptoServiceProvider is marked as obsolete in .NET 6. The new preferred way to generate a random number is using one of the RandomNunmberGenerator static methods.\n// old using var rng = new RNGCryptoServiceProvider(); var uintBuffer = new byte[sizeof(uint)]; rng.GetBytes(uintBuffer); var num = BitConverter.ToUInt32(uintBuffer, 0); // new using var rng = RandomNumberGenerator.Create(); var uintBuffer = new byte[sizeof(uint)]; rng.GetBytes(uintBuffer); var num = BitConverter.ToUInt32(uintBuffer, 0); The two issues above are essentially the only ones I met with .NET 6 itself. As mentioned, I also encountered a few EF Core 6 annoyances. They are listed below.\nNew IModelCacheKeyFactory.Create() overload The requested configuration is not stored in the read-optimized model, please use DbContext.GetService\u0026lt;IDesignTimeModel\u0026gt;().Model.\nIf, like me, you happen to have a custom IModelCacheKeyFactory implementation, you will likely get this error at runtime. Starting with EF Core 6, you must implement the new overload of the Create method that handles design-time model caching.\n// old public class DynamicModelCacheKeyFactoryDesignTimeSupport : IModelCacheKeyFactory { public object Create(DbContext context) =\u0026gt; context is DynamicContext dynamicContext ? (context.GetType(), dynamicContext.UseIntProperty) : (object)context.GetType(); public object Create(DbContext context) =\u0026gt; Create(context, false); } // new public class DynamicModelCacheKeyFactoryDesignTimeSupport : IModelCacheKeyFactory { public object Create(DbContext context, bool designTime) =\u0026gt; context is DynamicContext dynamicContext ? (context.GetType(), dynamicContext.UseIntProperty, designTime) : (object)context.GetType(); public object Create(DbContext context) =\u0026gt; Create(context, false); } Nested optional dependents with no required properties Entity type \u0026lsquo;[EntityType]\u0026rsquo; is an optional dependent using table sharing and containing other dependents without any required non shared property to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won\u0026rsquo;t be created in the query causing nested dependent\u0026rsquo;s values to be lost. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.\nThe message above is a consequence of a high-impact breaking change introduced in EF Core 6.0. In the past, you could have models with nested optional dependents sharing the same table, each with no required properties. In such circumstances, data loss could occur (see the documentation for details and examples). My solution was to mark at least one property of dependent models with the RequiredAttribute (which, in every single case, was the right thing to do anyway)\nThe EFCore.NamingConventions package is missing a method Method \u0026lsquo;GetServiceProviderHashCode\u0026rsquo; in type \u0026lsquo;ExtensionInfo\u0026rsquo; from assembly \u0026lsquo;EFCore.NamingConventions\u0026quot;\nThe message says it all: there\u0026rsquo;s currently a missing method in the latest stable version of the EFCore.NamingConventions package. At the time of this writing, v6.0 of the package has not been released, but there is a pre-release available that includes the missing implementation. Switch to v6.0.0-rc.1 and you\u0026rsquo;ll be fine (ticket is here). I\u0026rsquo;m sure the new stable release will be out by the time you read this.\nUpdate: EFCore.NamingConventions v6 has now been released.\nThe Npgsql timestamps breaking change While the above situations were quick to fix, the new, updated Npgsql provider offers a different threat level. There\u0026rsquo;s one significant breaking change that impacts DateTime fields (timestamps). As the documentation suggests, it is possible to opt out of this change to preserve backward compatibility, but I decided to take the plunge and embrace it. The short version is that Postgres\u0026rsquo;s timestamp fields (\u0026rsquo;timestamps without timezone\u0026rsquo;) are changed to timestampz (\u0026rsquo;timestamps with time zones\u0026rsquo;). In the application, when dealing with Npgsql, DateTime properties must be treated as UTC by setting the Kind property to DateTimeKind.UTC. When you run the migration tool, a migration is created to accomodate the change, which can impact existing data. Make sure you read the detailed notes to assess the impact on your data. I let the migration run, then updated models configuration by setting a custom DateTimeUtcValueConverter for DateTime properties:\n// custom DateTime converter protected readonly ValueConverter DateTimeToUtcConverter = new ValueConverter\u0026lt;DateTime, DateTime\u0026gt;( v =\u0026gt; DateTime.SpecifyKind(v, DateTimeKind.Utc), v =\u0026gt; v); // Entity configuration internal class MyEntityConfiguratin : IEntityTypeConfiguration\u0026lt;MyEntity\u0026gt; { public override void Configure(EntityTypeBuilder\u0026lt;MyEntity\u0026gt; builder) { builder.Property(o =\u0026gt; o.Date).HasConversion(DateTimeToUtcConverter); } } Now Postgres timestamps are stored as \u0026rsquo;timestamp with timezone (timestampz). Actual values are UTC as before. A custom converter is attached to the Date property at the application level to ensure that values are correctly handled.\nOur stack is now fully running on .NET 6. Upgrading a standard ASP.NET 5 project to .NET 6 revealed to be relatively straightforward. The EF Core 6.0 migration can be more involved, while the Npgsql 6 migration requires some attention but, remember, you can always opt-out of the delicate timestamps change. Was the upgrade worth it? I think so for a few reasons. First, .NET 6 is LTS, while .NET 5 will be out of support in six months. Second, .NET 6 is the fastest yet, with a remarkable margin (EF Core 6 alone is 70% faster.) While the primary migration is done, there are a lot of changes and new features that are worth considering for our codebase, which is something we will be doing in the upcoming weeks.\nMy initial ramblings on Minimal APIs are available here. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/my-asp.net-5-migration-to-.net-6/","summary":"\u003cp\u003eI spent the last few days migrating our ASP.NET REST services, MVC web\napplications and Blazor server apps to .NET 6. Overall the process was pretty\nstraightforward. The few issues I went through were easy to solve and well\ndocumented. Things got more involved with the EF Core 6 transition, especially\nwith the Npgsql Entity Framework Core Provider.\u003c/p\u003e\n\u003cp\u003eThe official \u003ca href=\"https://docs.microsoft.com/en-us/aspnet/core/migration/50-to-60\"\u003eASP.NET Core 5.0 to 6.0 migration guide\u003c/a\u003e was my first stop. It\noffers the perfect entry point, rich with in-depth links. At this stage, I am\nnot interested in switching to the new .NET 6 minimal hosting model (aka\nMinimal APIs). I think it\u0026rsquo;s a significant improvement, and we will likely adopt\nit for new projects, but our production projects aren\u0026rsquo;t going to be refactored\nright away. Should minimal APIs also prove to be remarkably performant, we\u0026rsquo;ll\nreconsider them\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"My ASP.NET 5 migration to .NET 6"},{"content":"Flo, our dog, spent her whole fifteen-years long life with us. Many, many times after she passed away, I wondered if she lived a happy dog life or not. In The posthuman dog (Aeon), Jessica Pierce poses a fascinating question that somehow helps find answers to my troubling question:\nIf humans were to disappear from the face of the Earth, what might dogs become? And would they be better off without us?\nUnfortunately, the answer I can infer from the article is not very pleasant to my guilt.\n","permalink":"https://nicolaiarocci.com/the-posthuman-dog/","summary":"\u003cp\u003eFlo, our dog, spent her whole fifteen-years long life with us. Many, many times\nafter she passed away, I wondered if she lived a happy dog life or not. In \u003ca href=\"https://aeon.co/essays/who-could-dogs-become-without-humans-in-their-lives\"\u003eThe\nposthuman dog\u003c/a\u003e (Aeon), Jessica Pierce poses a fascinating question that\nsomehow helps find answers to my troubling question:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf humans were to disappear from the face of the Earth, what might dogs\nbecome? And would they be better off without us?\u003c/p\u003e","title":"The posthuman dog"},{"content":"Tonight someone opened a ticket on the Eve repository. I jotted down a quick reply and was about to hit the Comment button when I thought a more articulated reply was in order. I also want it published on my website.\nSo the question is:\nIs Eve still maintained?\nMy reply goes like this:\nHello, yes, Eve is in \u0026lsquo;maintenance mode\u0026rsquo;, as I call it. I don\u0026rsquo;t actively develop new features anymore. Still, I am more than willing to code-review and merge relevant pull requests, especially so if they are bug fixes or improvements over existing features.\nLong story short, after many years of development, the funding campaign1 that would have allowed me to keep working on the project failed miserably. People are using the framework worldwide, probably making a profit out of it, but they are not interested in investing in it2. The good news is that the framework is, I think, stable and mature enough to meet most needs.\nWith Cerberus, I was lucky enough to find a worthy, skilled maintainer in the person of @funkyfuture, who\u0026rsquo;s keeping the project going. I am hoping the same happens with Eve. So, if anyone familiar with the code-base is willing to help, this is your moment to come forward. Maybe start with triaging open tickets, maybe pull-request for some low-hanging fruits, and then challenge yourself with more demanding tasks, like updating Eve to the latest version of Cerberus.\nI had so many things planned for Eve. Hopefully someone will join the ranks, maybe take the helm, and help bring it to the next level.\nFor some rationale behind the campaign, see this post from 2017. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nI must admit, this failure hit me hard.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/is-eve-still-maintained/","summary":"\u003cp\u003eTonight someone opened \u003ca href=\"https://github.com/pyeve/eve/issues/1458\"\u003ea ticket\u003c/a\u003e on\nthe Eve repository. I jotted down a quick reply and was about to hit the\nComment button when I thought a more articulated reply was in order. I also\nwant it published on my website.\u003c/p\u003e\n\u003cp\u003eSo the question is:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIs Eve still maintained?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMy reply goes like this:\u003c/p\u003e\n\u003cp\u003eHello, yes, \u003ca href=\"https://python-eve.org\"\u003eEve\u003c/a\u003e is in \u0026lsquo;maintenance mode\u0026rsquo;, as I call\nit. I don\u0026rsquo;t actively develop new features anymore. Still, I am more than\nwilling to code-review and merge relevant pull requests, especially so if they\nare bug fixes or improvements over existing features.\u003c/p\u003e","title":"Is Eve still maintained?"},{"content":"In this scholarly biography by Janet L. Nelson, Charlemagne is stripped back from the years of mythologizing and idolizing that have occurred since his death. He is presented as distinctly human, and this book is the first time I have felt I could reasonably understand Charlemagne as the man he was, not the man he has since been painted to be. Moreover, Nelson is excellent in her discussions of Charlemagne\u0026rsquo;s wives and their roles. For example, the commonplace assumption that Fastrada was a cruel person is questioned, and she emerges as a capable companion and queen instead.\nNelson is firm in her dissection of the source material. However, it can be a challenge to weave critical discussion of sources and fluid narrative, and at times this book leans a little on the dry side. Nelson does not speculate; she instead focuses on what we know or can be reasonably inferred from the sources. The downside is that some of the more exciting episodes from Charlemagne\u0026rsquo;s life are glossed over: the 792AD rebellion of Charlemagne\u0026rsquo;s eldest son, Pippin, receives only three pages of discussion, whereas Charlemagne\u0026rsquo;s canal-building project, which follows, receives double that. Personally, as a general reader rather than a historian, I would have preferred more on the \u0026ldquo;interesting bits\u0026rdquo; of Charlemagne\u0026rsquo;s reign, but a more academic reader may not mind.\nOverall, this is an excellent biography, and I would recommend it to an informed reader. The scholarly attention to sources might deter the casual reader, but the motivated ones will take profit from the effort.\n","permalink":"https://nicolaiarocci.com/book-review-king-and-emperor-a-new-life-of-charlemagne/","summary":"\u003cp\u003eIn this scholarly biography by Janet L. Nelson, Charlemagne is stripped back\nfrom the years of mythologizing and idolizing that have occurred since his\ndeath. He is presented as distinctly human, and this book is the first time\nI have felt I could reasonably understand Charlemagne as the man he was, not\nthe man he has since been painted to be. Moreover, Nelson is excellent in her\ndiscussions of Charlemagne\u0026rsquo;s wives and their roles. For example, the\ncommonplace assumption that Fastrada was a cruel person is questioned, and she\nemerges as a capable companion and queen instead.\u003c/p\u003e","title":"Book Review: King and Emperor, A New Life of Charlemagne"},{"content":"In this introduction to classical music, Jan Swafford explains the different musical periods and their differences. Each period has its introductory chapter, followed by chapters dedicated to the most influential composers of the era. The choice is comprehensive and well cared for, with the most relevant names well-investigated both in biography and works. For each composer, Swafford also offers some listening suggestions. Biographies thicken as we get into the contemporary era. Here, some are limited to just a page or two while others, obviously those of the author\u0026rsquo;s preferred composers, remain as thorough as those of the older periods.\nThe introductory chapters to various musical eras (Baroque, Classical, Romantic, Modernism and beyond) were, for me, the most interesting ones. In these chapters, Swafford explains the changes in society, technology and taste that influenced the musical styles, themselves a revelation of the spirit of the time. In this sense, Language of the Spirit is not just a classical music book but also a historical essay, often sharp and full of intriguing information on the periods crossed.\nThe author\u0026rsquo;s effort in using simple language, understandable even to the uninitiated, is evident, and the goal is well achieved, for the most part. Sometimes, however, albeit very rarely, it goes into the technical, where someone like me, who lacks a solid background, might struggle.\nThe recommended listenings are excellent. For every single one, I wanted to stop reading and listen to it. That\u0026rsquo;s the approach recommended by the author, but I never managed, too eager to finish the chapter. I then tried to make a Spotify playlist out of them, failing miserably because of my pedantry; I only wanted the suggested executions, often missing on Spotify.\nLanguage of the Spirit is a recommended introduction to classical music and its history. It allows the reader to collect a phenomenal list of composers and their works while, at the same time, delving into the momentous changes faced by (mainly European) society over the last few centuries.\n","permalink":"https://nicolaiarocci.com/book-review-language-of-the-spirit-an-introduction-to-classical-music/","summary":"\u003cp\u003eIn this introduction to classical music, Jan Swafford explains the different\nmusical periods and their differences. Each period has its introductory\nchapter, followed by chapters dedicated to the most influential composers of\nthe era. The choice is comprehensive and well cared for, with the most relevant\nnames well-investigated both in biography and works. For each composer,\nSwafford also offers some listening suggestions. Biographies thicken as we get\ninto the contemporary era. Here, some are limited to just a page or two while\nothers, obviously those of the author\u0026rsquo;s preferred composers, remain as thorough\nas those of the older periods.\u003c/p\u003e","title":"Book Review: Language of the Spirit, An Introduction to Classical Music"},{"content":"I sit under a wild apple tree at the edge of the clearing. Like a plant, I absorb the mild October sun. At the same time, I attentively listen to the sounds of the forest. Suddenly I hear a stomping of dry leaves about twenty meters ahead of me, slightly to my right. A wolf emerges out of the thicket. He stops for a moment, glances around, then starts crossing the clearing. A few moments and another wolf appears. After a brief pause, he follows his pal. They parade right in front of me, sinuous, silent, and feral. They do not see or hear me, and yet I am right there, by their side, in plain sight1. It is all over in a few seconds. The couple leaves the clearing and disappears into the forest. I stand sitting there, shocked and in complete awe.\nIncredibly, the scene above is real. It happened to me last Sunday, in the wild Apennines, in a place I\u0026rsquo;ve been visiting for years. I\u0026rsquo;ve seen a lot of animals there: wild boar, deer, badgers, foxes. I knew wolves frequent the area but meeting them, in the plain day? No way. I dreamed about it, of course, but never expected it would really happen. I had goosebumps, and I still have them now as I write this. I keep telling myself it\u0026rsquo;s impossible. And yet, I have photos on my cellphone. In the heat of the moment, I somehow managed to snap a couple. My family confirms the wolves. It was not a dream.\nIn hindsight, I think that having been sitting there motionless and not producing any sound for a long time did the trick. By pure luck, I also happened to be downwind to them. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/i-met-with-the-wolves/","summary":"\u003cp\u003eI sit under a wild apple tree at the edge of the clearing. Like a plant,\nI absorb the mild October sun. At the same time, I attentively listen to the\nsounds of the forest. Suddenly I hear a stomping of dry leaves about twenty\nmeters ahead of me, slightly to my right. A wolf emerges out of the thicket. He\nstops for a moment, glances around, then starts crossing the clearing. A few\nmoments and another wolf appears. After a brief pause, he follows his pal. They\nparade right in front of me, sinuous, silent, and feral. They do not see or\nhear me, and yet I am right there, by their side, in plain sight\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. It is all\nover in a few seconds. The couple leaves the clearing and disappears into the\nforest. I stand sitting there, shocked and in complete awe.\u003c/p\u003e","title":"I met with the wolves"},{"content":"A few months after I released my first .NET open source project (a niche one targeting the Italian fintech world), I was contacted by a representative of Team Digitale, the digital innovation branch of the Italian Public Administration. He suggested joining the Developers Italia initiative and moving my project to the their organization on GitHub \u0026ldquo;to enjoy enhanced visibility and broaden the audience\u0026rdquo;. I politely refused. I did not doubt my counterpart\u0026rsquo;s good faith. At the same time, I was concerned about the possible long-term consequences of a seemingly easy move. Moving a GitHub project away from your profile or an organization you control means ceding control over it. I was assured I would keep control of the project. But what happens if sometime in the future, when people in charge might even have changed, they revoke my access rights? As long as I am involved with my project, I should be in control. Also, I was not convinced that the move would help promote the project. We live in the search-engine age; people search for solutions to their problems. I was, and still am, confident that if I did my due diligence and my project is any good, people will find it1.\nUnfortunately, the worst-case scenario pictured above, or worse, appears to be happening these days, not to me, but to the many open-source maintainers who, in recent years, agreed to move their projects under the .NET Foundation umbrella. The drama is unfolding in these very same hours, and it is painful. On my Twitter feed, I first noticed Eric Sink\u0026rsquo;s note on the issue. The next day, a detailed article surfaces on The Register. Then, just yesterday, the Executive Director of the DNF posted an I am Sorry message on GitHub, which most maintainers consider disappointing, to say the least. Maintainers see the ownership of their projects being moved over to DNF. Some projects are transferred to GitHub Enterprise for no apparent reason. DNF Executive Director opened a Pull Request, which was closed by the maintainers and then reopened (twice!) by the Director (who also happens to be a former maintainer). You can get all the details at the links above. The I am Sorry thread is especially worth reading.\nI think the foundation is well-intentioned. I question whether independent open-source projects should belong there, though—maybe very few major and commercially inclined ones. To offer legal protection, DNF needs some control over its projects, and that\u0026rsquo;s something not every maintainer is willing to give away. On the other hand, maintainers might have underestimated the consequences of moving their projects to DNF. I can feel their pain.\nOverall, this is all concerning. As someone commented on Hacker News, with the .NET ecosystem, Microsoft has made so many surprisingly good moves in recent years that there is room for a couple of fuck-ups, but this is a big one. Besides, most maintainers involved in this drama are highly influential and very well respected individuals in the .NET world. The DNF needs to get its acts together and react immediately, at the risk of losing all of its credibility.\nUpdate: Executive director [has resigned][7]. Updates from DNF are due as earsly as next week.\nOne year later, someone from the same team got in touch and proposed the move again. I refused for the same reasons. The story is actually longer than that. A few months later, I was also invited to join Team Digitale. I even had a brief video call with their recruiter. I chukled when he realized I was a grey beard, not the typical just-out-of-college boy or girl they usually head-hunt. [7]: https://github.com/dotnet-foundation/Home/discussions/40 [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/drama-going-on-at-the-.net-foundation/","summary":"\u003cp\u003eA few months after I released my first \u003ca href=\"https://fatturaelettronicaopensource.org/\"\u003e.NET open source project\u003c/a\u003e (a niche\none targeting the Italian fintech world), I was contacted by a representative\nof Team Digitale, the digital innovation branch of the Italian Public\nAdministration. He suggested joining the Developers Italia initiative and\nmoving my project to the their organization on GitHub \u0026ldquo;to enjoy\nenhanced visibility and broaden the audience\u0026rdquo;. I politely refused. I did not\ndoubt my counterpart\u0026rsquo;s good faith. At the same time, I was concerned about the\npossible long-term consequences of a seemingly easy move. Moving a GitHub\nproject away from your profile or an organization you control means ceding\ncontrol over it. I was assured I would keep control of the project. But what\nhappens if sometime in the future, when people in charge might even have\nchanged, they revoke my access rights? As long as I am involved with my\nproject, I should be in control. Also, I was not convinced that the move would\nhelp promote the project. We live in the search-engine age; people search for\nsolutions to their problems. I was, and still am, confident that if I did my\ndue diligence and my project is any good, people will find it\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"Drama going on at the .NET Foundation"},{"content":"When I read Entangled Life: How Fungi Make Our Worlds, Change Our Minds \u0026amp; Shape Our Futures by Merlin Sheldrake1, I was stunned by the scale and importance of the mycorrhizal network that lies beneath the surface of any given forest in the world. The \u0026ldquo;wood wide web\u0026rdquo;, as scientists started to call it, sounded like the perfect metaphor for such an incredibly efficient, symbiotic relation between fungi and trees.\nIn The Word for Web is Forest2, Claire L. Evans brilliantly reverses the perspective. If the wood wide web metaphor holds, we can see the world wide web as a live, intermingled network of interconnected, initially decentralized and perhaps symbiotic entities. The issues we face in the modern web are not dissimilar from those faced by ill forests worldwide.\nThe wood wide web has been a powerhouse metaphor for popularizing the mutualistic relationships of healthy forests. But like a struggling forest, the web is no longer healthy. It has been wounded and depleted in the pursuit of profit. Going online today is not an invigorating walk through a green woodland—it’s rush-hour traffic alongside a freeway median of diseased trees, littered with the detritus of late capitalism. If we want to repair this damage, we must look to the wisdom of the forest and listen to ecologists like Simard when they tell us just how sustainable, interdependent, life-giving systems work.\nSuzane Simard, the Canadian ecologist who revealed the cooperative nature of forests, explains that Mother Trees (the eldest trees) serve as \u0026ldquo;central hubs of the wood wide web. They are the strongest, the most resource-rich, with taproots stretching far beneath the earth.\u0026rdquo; When a Mother Tree dies, it shares its resources with the forest while many other Mothers guarantee the continuity and integrity of the ecosystem. This used to be the case with the Web too, but not anymore.\nThe web isn’t what it used to be. When the editors of Nature compared mycorrhizal fungi to a computer network, the web was still predominantly peer-to-peer, its users sharing their thoughts on personal home pages and homespun message-boards. Online advertising was in its infancy. But as the web has centralized, it has strayed further and further from the ideal presented by the wood wide web [..] By selecting for the most inflammatory and emotional content, Big Tech has algorithmically weeded the forest into a field of commercial timber.\nEvans then proceeds to suggest that we should probably strive to imitate mycorrhizal networks and (re?)build decentralized networks, with \u0026ldquo;Mother nodes \u0026ndash; sites in the network bearing a responsibility of care.\u0026rdquo; I\u0026rsquo;ll stop here. Read the article now, there is a lot to absorb. She doesn\u0026rsquo;t go into the details of her proposed solution, but offers us an original, courageous and pregnant point of view to consider.\nEntangled Life is a great read. It also features one of the most beautiful book covers of the modern age. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe just-recently published magazine hosting the article, New_Public, appears as a promising source of future content.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-word-for-web-is-forest/","summary":"\u003cp\u003eWhen I read \u003cem\u003eEntangled Life: How Fungi Make Our Worlds, Change Our Minds\n\u0026amp; Shape Our Futures\u003c/em\u003e by Merlin Sheldrake\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e, I was stunned by the scale and\nimportance of the mycorrhizal network that lies beneath the surface of any\ngiven forest in the world. The \u0026ldquo;wood wide web\u0026rdquo;, as scientists started to call\nit, sounded like the perfect metaphor for such an incredibly efficient,\nsymbiotic relation between fungi and trees.\u003c/p\u003e","title":"The word for web is forest"},{"content":"Every single time I need nginx, I end up spending way too much time fiddling around with its configuration. If you\u0026rsquo;re like me, rejoice! Julia Evans built a lovely, helpful little tool called nginx playground.\nHello! On Wednesday I was talking to a friend about how it would be cool to have an nginx playground website where you can just paste in an nginx config and test it out. And then I realized it might actually be pretty easy to build, so got excited and started coding and I built it.\nThe playground is available here. Make sure you also read Julia\u0026rsquo;s introduction to the tool. In there, she recounts why and, more importantly, how she built it.\n","permalink":"https://nicolaiarocci.com/an-nginx-playground/","summary":"\u003cp\u003eEvery single time I need nginx, I end up spending way too much time fiddling\naround with its configuration. If you\u0026rsquo;re like me, rejoice! Julia Evans built\na lovely, helpful little tool called nginx playground.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHello! On Wednesday I was talking to a friend about how it would be cool to\nhave an nginx playground website where you can just paste in an nginx config\nand test it out. And then I realized it might actually be pretty easy to\nbuild, so got excited and started coding and I built it.\u003c/p\u003e","title":"An nginx playground"},{"content":"In a new study published in Ageing and Society, researchers Sam Carr and Chao Fang spent over 130 hours interviewing older people to understand what it\u0026rsquo;s like to get old and cope with loneliness. The Conversation UK features their report, appropriately titled Loneliness, loss and regret: what getting old really feels like.\nWe found that ageing brings about a series of inevitable losses that deeply challenge people’s sense of connection to the world around them. Loneliness can often be oversimplified or reduced to how many friends a person has or how often they see their loved ones.But a particular focus for us was to better understand what underpins feelings of loneliness in older people on a deeper level. Researchers have used the term “existential loneliness” to describe this deeper sense of feeling “separated from the world” – as though there is an insurmountable gap between oneself and the rest of society. Our objective was to listen carefully to how people experienced and responded to this.\nA difficult yet worthwhile read.\n","permalink":"https://nicolaiarocci.com/what-getting-old-really-feels-like/","summary":"\u003cp\u003eIn a new study published in Ageing and Society, researchers Sam Carr and Chao\nFang spent over 130 hours interviewing older people to understand what it\u0026rsquo;s\nlike to get old and cope with loneliness. The Conversation UK features their\nreport, appropriately titled \u003ca href=\"https://theconversation.com/loneliness-loss-and-regret-what-getting-old-really-feels-like-new-study-157731\"\u003eLoneliness, loss and regret: what getting old really\nfeels like\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe found that ageing brings about a series of inevitable losses that deeply\nchallenge people’s sense of connection to the world around them. Loneliness\ncan often be oversimplified or reduced to how many friends a person has or\nhow often they see their loved ones.But a particular focus for us was to\nbetter understand what underpins feelings of loneliness in older people on\na deeper level. Researchers have used the term “existential loneliness” to\ndescribe this deeper sense of feeling “separated from the world” – as though\nthere is an insurmountable gap between oneself and the rest of society. Our\nobjective was to listen carefully to how people experienced and responded to\nthis.\u003c/p\u003e","title":"What getting old really feels like"},{"content":"David Fowler has a very informative gist up on GitHub. It\u0026rsquo;s titled [Migration to ASP.NET Core. NET6][3] and it\u0026rsquo;s filled with details, recipes and FAQs on migrating an ASP.NET Core 5 web app to ASP.NET Core 61. The focus is on the new, streamlined hosting model, also known as Minimal APIs2. To be clear, You don\u0026rsquo;t have to move to the new model. As the FAQ section emphasizes:\nDo I have to migrate to the new hosting model\nNo, you don\u0026rsquo;t have to. It\u0026rsquo;s the preferred way to host ASP.NET Core applications from .NET 6 and onwards but you aren\u0026rsquo;t forced to change your project layout. This means you can upgrade from .NET 5 to .NET 6.0 by changing the target framework in your project file from net5.0 to net6.0.\n.NET6 Release Candidate is out, so the guide is unlikely to receive updates, but I\u0026rsquo;m sure that David will be ready to do so if required.\nWe are about to release several brand new web services in the coming weeks. They are all ASP.NET 5, currently in beta, but before release we\u0026rsquo;re likely to upgrade them to NET6. NET6 is LTS, NET5 isn\u0026rsquo;t, and offers significant advantages, remarkable [performance gains][2] included.\nThe Core tag was dropped in NET5, and it was a good move. The reason why the insist on using it with ASP.NET eludes me. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nWill .NET 6 Mininal APIs turn heads? collects my thoughts on the subject. [2]: https://nicolaiarocci.com/performance-improvements-in-.net6/ [3]: https://gist.github.com/davidfowl/0e0372c3c1d895c3ce195ba983b1e03d\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/asp.net-6-migration-cheatsheet-and-faq/","summary":"\u003cp\u003eDavid Fowler has a very informative gist up on GitHub. It\u0026rsquo;s titled [Migration\nto ASP.NET Core. NET6][3] and it\u0026rsquo;s filled with details, recipes and FAQs on\nmigrating an ASP.NET Core 5 web app to ASP.NET Core 6\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. The focus is on the\nnew, streamlined hosting model, also known as Minimal APIs\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e. To be clear,\nYou don\u0026rsquo;t \u003cem\u003ehave\u003c/em\u003e to move to the new model. As the FAQ section emphasizes:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDo I have to migrate to the new hosting model\u003c/p\u003e","title":"ASP.NET 6 Migration Cheatsheet and FAQ"},{"content":"Antoine Roquentin, the protagonist of the novel, is a former adventurer who has been living for three years in Bouville, a fictional French seaport town, researching the life of an 18th-century diplomat. During his previous life around the world, Antoine has seen many places, met many interesting people, done exciting things. For the last three years, however, he\u0026rsquo;s been alone in Bouville. He has no friends and no desire to make some or meet anyone. He\u0026rsquo;s interested in nothing, not even in his work that he keeps neglecting. His days are mostly spent walking around town, listening to conversations and observing people around him. A \u0026ldquo;sweeting sickness\u0026rdquo; he calls nausea increasingly impinges on almost everything he does and enjoys.\nSomething has happened to me, I can\u0026rsquo;t doubt it any more. It came as an illness does, not like an ordinary certainty, not like anything evident. It came cunningly, little by little; I felt a little strange, a little put out, that\u0026rsquo;s all. Once established it never moved, it stayed quiet, and I was able to persuade myself that nothing was the matter with me, that it was a false alarm. And now, it\u0026rsquo;s blossoming.\nHe has a relationship with a woman, but it is exclusively carnal: the two exchange almost no words. Selt-Taught Man, an individual who spends his time at the local library reading all books in alphabetical order, is one of his few acquaintances. When Self-Taught Man invites Antoine for lunch, he notes on his diary: \u0026ldquo;I had as much desire to eat with him as I had to hang myself.\u0026rdquo; Antoine has no interest in relationships. They take too much effort.\nWhen you live alone you no longer know what it is to tell a story: the plausible disappears at the same time as the friends.\nAntoine feels like he never lived but only existed. These days, we would probably call Antoine\u0026rsquo;s sickness with a different name, depression maybe. If you ever felt like Antoine, Nausea is going to be a difficult read. If you didn\u0026rsquo;t, I suspect it will be hard for you to feel any sympathy for the protagonist. Sartre writes beautifully, with razor-sharp precision. Despite his attempts to refuse it, he won the Nobel Prize in Literature in 1964. Nausea was Sartre\u0026rsquo;s debut novel, and he always considered it his best fictional work. Nausea, by Jean-Paul Sartre, is a challenging but rewarding read. I think Sartre goes straight amongst the masters at describing the human condition.\n","permalink":"https://nicolaiarocci.com/book-review-nausea/","summary":"\u003cp\u003eAntoine Roquentin, the protagonist of the novel, is a former adventurer who has\nbeen living for three years in Bouville, a fictional French seaport town,\nresearching the life of an 18th-century diplomat. During his previous life\naround the world, Antoine has seen many places, met many interesting people,\ndone exciting things. For the last three years, however, he\u0026rsquo;s been alone in\nBouville. He has no friends and no desire to make some or meet anyone. He\u0026rsquo;s\ninterested in nothing, not even in his work that he keeps neglecting. His days\nare mostly spent walking around town, listening to conversations and observing\npeople around him. A \u0026ldquo;sweeting sickness\u0026rdquo; he calls nausea increasingly impinges\non almost everything he does and enjoys.\u003c/p\u003e","title":"Book Review: Nausea"},{"content":"Years ago, I translated an essay by Terry Windling, On Tolkien and Fairie-Stories, from American English to Italian. I remember arguing with the author about her use of periods in quotations. Each quotation would end with a period before the closing mark. I was puzzled. We don\u0026rsquo;t do that in Italy. More importantly, I read many English texts where the period was left outside the quotation itself. She insisted that her style was correct1.\nToday I learn that, in English, there are in fact two different and conflicting quotation mark punctuation styles: American and British.\nThere are different ways of combining quotation and punctuation marks. In the American style, you almost always put periods and commas inside the quotation marks [\u0026hellip;] In the British style, however, you put periods and commas outside the quotation marks, unless they are part of a complete sentence that is fully contained between the quotation marks:\nIn The American Style of Quotation Mark Punctuation Makes No Sense the author illustrates the differences between the two styles, then argues that \u0026ldquo;the British approach makes more sense, so use that one.\u0026rdquo; Whoops.\nIn my rendition I moved the period after the end mark. Different languages, different rules. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/the-american-style-of-quotation-mark-punctuation-makes-no-sense/","summary":"\u003cp\u003eYears ago, I \u003ca href=\"http://www.endore.it/Arretrati/9/Articoli/SuTolkienELeFiabe.pdf\"\u003etranslated\u003c/a\u003e an essay by Terry Windling, \u003ca href=\"https://accademia.tolkieniana.net/tesi/endicott/tlkefiabeng.html\"\u003eOn Tolkien and\nFairie-Stories\u003c/a\u003e, from American English to Italian. I remember arguing with\nthe author about her use of periods in quotations. Each quotation would end\nwith a period before the closing mark. I was puzzled. We don\u0026rsquo;t do that in\nItaly. More importantly, I read many English texts where the period was left\noutside the quotation itself. She insisted that her style was correct\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e.\u003c/p\u003e","title":"The American Style of quotation mark punctuation makes no sense"},{"content":"Someone did it \u0026ndash;the perfect Daft Punk tribute after their break up. Also ideal for those hard-coding sessions.\nFor the first time in 14 years, experience Daft Punk like never before! The first professionally recorded live show; revived meticulously by remastering and restoring the audio and video. The Alive 2007 show is considered a staple in live performances featuring the signature \u0026lsquo;Pyramid\u0026rsquo; and groundbreaking visuals, which is now complemented by a fully remastered audio track which aims to maximize the experience. Presenting the ultimate authentic Daft Punk experience.\n","permalink":"https://nicolaiarocci.com/daft-punks-legendary-alive-2007-concert-with-remastered-audio-and-4k-video/","summary":"\u003cp\u003eSomeone did it \u0026ndash;the perfect Daft Punk tribute after their break up. Also ideal\nfor those hard-coding sessions.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor the first time in 14 years, experience Daft Punk like never before! The\nfirst professionally recorded live show; revived meticulously by remastering\nand restoring the audio and video. The Alive 2007 show is considered a staple\nin live performances featuring the signature \u0026lsquo;Pyramid\u0026rsquo; and groundbreaking\nvisuals, which is now complemented by a fully remastered audio track which\naims to maximize the experience. Presenting the ultimate authentic Daft Punk\nexperience.\u003c/p\u003e","title":"Daft Punk's legendary Alive 2007 concert with remastered audio and 4K video"},{"content":"A couple of weeks ago I went hiking the Translagorai, an 80 km-long trail that traverses the whole Lagorai mountain range in the Alps. The route takes place in a mountain environment where the anthropic pressure is reduced, especially compared to the more famous nearby Dolomites destinations. There are very few managed huts, most of which do not offer overnight stays, and relatively few bivouacs (emergency huts, usually dislocated in the most isolated areas along the hike). These characteristics make the Translagorai very attractive to those looking for wild hikes to be travelled in complete self-sufficiency with tent, food, etc. There is rich evidence (remains of barracks, trenches) dating back to the First World War. Translagorai is a brutal, wild, restless, and beautiful route reserved for well-trained, experienced mountain hikers.\nI did the route 25-ish years ago with a couple of friends. A tent, some food, super-heavy backpacks, and off we went, up and down the ravines. Overall, it was a great experience that also destroyed us. I have fond memories of those days when\nthe grass was greener, the light was brighter, with friends surrounded, the nights of wonder.\nI never thought I would go back and do the route again, especially not at 50. As the saying goes, however, never say never. My nephew, to whom I somehow passed on my love for wilderness, asked for advice on an exciting route to take with a friend. I sent him a long email with a series of proposals for two-three day tours. In the end, I made the mistake of mentioning the Translagorai as a more brutal but satisfying alternative. I certainly didn\u0026rsquo;t expect them to choose it; I added it more as a comparison than anything else. Yet, they were so excited about the prospect of venturing out on that route that I couldn\u0026rsquo;t convince them otherwise. A little apprehensive about the difficulties they would face (they don\u0026rsquo;t have much experience) and sensing untold fears during the preparation chats, I ended up hinting that I could accompany them if so they wished. I expected a polite refusal. Why would two twenty-somethings want to spend four days alone in the wilderness with a gruff fifty-year-old? To my surprise, they immediately said yes, and with great relief, I think. I was part of the team. I couldn\u0026rsquo;t believe it. Twenty-five years later, I was going back, and I only had 48 hours to prepare.\nGranted, we met more people than I expected or remembered, but other than that, the route has remained pretty much unchanged. Back in the day, we didn\u0026rsquo;t follow the official, high-altitude course, which always stays on the crest of the Lagorai range. This time we did, and I found it even more beautiful and satisfying. I suspect I\u0026rsquo;m more fit today than I was in my youth, which might explain how I could happily follow these two young war machines for four full days, high and down the trail, like there was no tomorrow. The two boys impressed me beyond belief. If I provided some help, I think it was because of the mountaineering experience, but sure as hell, they did not need help with motivation and performance. When I made my first trip there, I\u0026rsquo;m sure we suffered much, much more pain, and we were about their age. Hiking equipment has improved tenfold since the mid-90s, but today backpacks are still heavy. Mountains, they certainly didn\u0026rsquo;t flatten at all. We slept in tents and ate our food, usually camping by some small, beautiful mountain lake or mountain pass. That, also, hasn\u0026rsquo;t changed. I am happy to report that Translagorai is still the king of badass wilderness routes in the Alps. Go there only if you are ready, however, or it will tear you apart.\nIf you look closely, you can see me standing between our two tents pitched in the clearing. This pic was taken by the war machines, who climbed the fork 200mt above the camp just to \u0026ldquo;see if we get signal.\u0026rdquo; Yours truly, overlooking the glacial valley some 1000 meters below Lago Brutto, one of the many beautiful small lakes along the route Another campsite. We were supposed to spend the night in a First-World War barrack along the route, but when we got there late in the evening, it was in such poor conditions that we decided to continue another hour, then detour a little to reach a small lake, past a mountain fork, which the map showed as a possible pitch site. Situations like these is why you want to have someone experienced with you.\n","permalink":"https://nicolaiarocci.com/hiking-the-translagorai-25-years-later/","summary":"\u003cp\u003eA couple of weeks ago I went hiking the Translagorai, an 80 km-long trail that\ntraverses the whole Lagorai mountain range in the Alps. The route takes place\nin a mountain environment where the anthropic pressure is reduced, especially\ncompared to the more famous nearby Dolomites destinations. There are very few\nmanaged huts, most of which do not offer overnight stays, and relatively few\nbivouacs (emergency huts, usually dislocated in the most isolated areas along\nthe hike). These characteristics make the Translagorai very attractive to\nthose looking for wild hikes to be travelled in complete self-sufficiency\nwith tent, food, etc. There is rich evidence (remains of barracks, trenches)\ndating back to the First World War. Translagorai is a brutal, wild, restless,\nand beautiful route reserved for well-trained, experienced mountain hikers.\u003c/p\u003e","title":"Hiking the Translagorai 25 years later"},{"content":"Wendy Molyneux, writing unabashedly for McSweeney\u0026rsquo;s, summarizes all I have to say on the COVID vaccine and never dared to say:\nYou think vaccines don’t fucking work? Oh, fuck off into the trash, you attention-seeking fuckworm-faced shitbutt. This isn’t even a point worth discussing, you fuck-o-rama fuck-stival of ignorance. Vaccines got rid of smallpox and polio and all the other disgusting diseases that used to kill off little fucks like you en masse. Your relatives got fucking vaccinated and let you live, and now here you are signing up to be killed by a fucking disease against which there is a ninety-nine-percent effective vaccine. You fucking moron. Go in the fucking ocean and fuck a piranha. Fuck. Fuck that. Fuck you. Get vaccinated.\n","permalink":"https://nicolaiarocci.com/get-the-fucking-vaccine-already-you-fucking-fucks/","summary":"\u003cp\u003eWendy Molyneux, \u003ca href=\"https://www.mcsweeneys.net/articles/oh-my-fucking-god-get-the-fucking-vaccine-already-you-fucking-fucks\"\u003ewriting unabashedly\u003c/a\u003e for McSweeney\u0026rsquo;s, summarizes all I have\nto say on the COVID vaccine and never dared to say:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou think vaccines don’t fucking work? Oh, fuck off into the trash, you\nattention-seeking fuckworm-faced shitbutt. This isn’t even a point worth\ndiscussing, you fuck-o-rama fuck-stival of ignorance. Vaccines got rid of\nsmallpox and polio and all the other disgusting diseases that used to kill\noff little fucks like you en masse. Your relatives got fucking vaccinated and\nlet you live, and now here you are signing up to be killed by a fucking\ndisease against which there is a ninety-nine-percent effective vaccine. You\nfucking moron. Go in the fucking ocean and fuck a piranha. Fuck. Fuck that.\nFuck you. Get vaccinated.\u003c/p\u003e","title":"Get the Fucking Vaccine Already, You Fucking Fucks"},{"content":"I\u0026rsquo;m pretty psyched about the upcoming .NET6 release. I\u0026rsquo;ve already touched on ASP.NET 6 Minimal APIs. Continuing on the long-established tradition, the team has also worked hard on the performance side of things. File IO, for example, is seeing impressive gains:\nFor .NET 6, we have made FileStream much faster and more reliable, thanks to an almost entire re-write. For same cases, the async implementation is now a few times faster! We also recognized the need of having more high-performance file IO features: concurrent reads and writes, scatter/gather IO and introduced new APIs for them. TL;DR File I/O is better, stronger, faster!\nIf you have the time, make sure you read the whole blog post. Learning about the low-level details on how they achieved such (pretty phenomenal) results is fascinating. They\u0026rsquo;re not stopping at file IO either. In another lengthy blog post, they had to add a table of contents, or we would get lost in the myriad of improvements.\nDon’t worry, I don’t cover all of them here, but grab a large mug of your favorite hot beverage, and settle in: this post takes a rip-roarin’ tour through ~400 PRs that, all together, significantly improve .NET performance for .NET 6.\nThere are a ton of new things coming up, too, of course.\n","permalink":"https://nicolaiarocci.com/performance-improvements-in-.net6/","summary":"\u003cp\u003eI\u0026rsquo;m pretty psyched about the upcoming .NET6 release. I\u0026rsquo;ve already \u003ca href=\"https://nicolaiarocci.com/will-.net-6-minimal-apis-turn-heads/\"\u003etouched\u003c/a\u003e\non ASP.NET 6 Minimal APIs. Continuing on the long-established tradition, the\nteam has also worked hard on the performance side of things. File IO, for\nexample, is seeing \u003ca href=\"https://devblogs.microsoft.com/dotnet/file-io-improvements-in-dotnet-6/\"\u003eimpressive gains\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFor .NET 6, we have made FileStream much faster and more reliable, thanks to\nan almost entire re-write. For same cases, the async implementation is now\na few times faster! We also recognized the need of having more\nhigh-performance file IO features: concurrent reads and writes,\nscatter/gather IO and introduced new APIs for them. TL;DR File I/O is better,\nstronger, faster!\u003c/p\u003e","title":"Performance improvements in .NET6"},{"content":"I happened across this book by pure chance. After having ice cream in our favourite place in Milano Marittima, my wife and I visited a small street market with all kinds of booths. Of course, there was a used book stand toward which I immediately gravitated. A quick scan revealed nothing of interest, so I moved along. But Serena, who arrived at the booth moments after I left, knew more. A simple, no-frills, cardboard-covered book which carried a giant PROUD 2BEA FLYER title on the spine caught her attention. As she opened it and flipped through the pages, she immediately knew this was a unique item I would love to have, so she bought it (for cheap!) along with another one, then let it slip into a shopping bag, and then reached an unaware me.\nWhen I spotted the book lying in the bag, I inquired about it. Serena took it out of the bag and handed it over to me with a smile. Imagine my surprise, amazement and gratitude when I started browsing through hundreds of beautiful works of art, all in the form of club flyers from all ages and musical genres.\nIn what can best be described a well of hip Club Culture Graphics, Proud 2 B a Flyer rounds up the most exciting party announcements made for the street. Before the explosion of popular musical forms in the past 40 years art associated with music has been in corporate hands, with music companies and commercial artists, but the club flyer has changed all that. The evolution of the club flyer mirrors the musical movements that have used its simple direct from to capture the imagination of their audiences. The early techno scene employed flyers to great effect and diverse musical scenes caught on quickly. Proud 2BEA Flyer brilliantly documents the flyer stylings of the electronica scene and also includes special sections featuring Jazz, Hip Hop and Brazilian music. Other fascinating selections are found in chapters such as Drawing, Series, Unusual Shapes and Regular Nights. (source)\nAnd indeed, this is an excellent collection of inspiring, mesmerizing works1. No text, just flyers. I have never been much of a clubbing person, but I always followed the music, of course, and was fascinated by the graphical world around it. This book brings back memories of an age now gone when there were no smartphones, and you only happened to know about an event when and if you were lucky enough to be in the right place at the right time, to have a chance to come across one of these street flyers.\nI am sure my friend Emmaboshi would love this special item. Some research suggests that the author, Matteo Sola, might be from Bologna, the same place where Emma practices his art, so maybe he knows about this book, or perhaps personally knows the author. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-proud-tobea-flyer/","summary":"\u003cp\u003eI happened across this book by pure chance. After having ice cream in our\nfavourite place in Milano Marittima, my wife and I visited a small street\nmarket with all kinds of booths. Of course, there was a used book stand toward\nwhich I immediately gravitated. A quick scan revealed nothing of interest, so\nI moved along. But Serena, who arrived at the booth moments after I left, knew\nmore. A simple, no-frills, cardboard-covered book which carried a giant PROUD\n2BEA FLYER title on the spine caught her attention. As she opened it and\nflipped through the pages, she immediately knew this was a unique item I would\nlove to have, so she bought it (for cheap!) along with another one, then let it\nslip into a shopping bag, and then reached an unaware me.\u003c/p\u003e","title":"Book Review: Proud tobea Flyer"},{"content":"Another day, another lesson learned: modern .NET does not support the Windows-1252 encoding out of the box. Today my colleague was happily porting a legacy NET4+ app to NET6. As usual, the port was super-easy; it would compile and run just fine, so he was surprised when the app crashed reading a few specific XML files. That\u0026rsquo;s when I was called in. A closer inspection revealed a pattern: all those crashing files were Windows 1252-encoded (the rest, a vast majority, were UTF-8.)\nIt turns out that under NETCore/NET5+, to read Windows-1252 encoded files, we first need to take a dependency on System.Text.Encoding.CodePages:\ndotnet add package System.Text.Encoding.CodePages Then, we register a CodePagesEncodingProvider instance from the package:\nEncoding.RegisterProvider(CodePagesEncodingProvider.Instance); Finally, on creating the XmlReader instance, we can set the encoding. To do that, we need to pass an XmlParserContext instance, which allows us to specify custom encoding:\n# Create the parser context and set the encoding var context = new XmlParserContext(null, null, null, XmlSpace.None) context.Encoding = Encoding.GetEncoding(1252); # Use the custom parser when reading the Xml using (var r = XmlReader.Create(fileName, null, context)) { ... } And sure enough, all those troublesome XML files are no problem anymore. It works on all platforms: Linux, macOS, and Windows. That\u0026rsquo;s a lot of tinkering for a small task that required no effort in the past. However, it makes sense as .NET is now cross-platform, and we want to reduce the app\u0026rsquo;s footprint as much as possible.\n","permalink":"https://nicolaiarocci.com/how-to-read-windows-1252-encoded-files-with-.netcore-and-.net5-/","summary":"\u003cp\u003eAnother day, another lesson learned: modern .NET does not support the\nWindows-1252 encoding out of the box. Today my colleague was happily porting\na legacy NET4+ app to NET6. As usual, the port was super-easy; it would compile\nand run just fine, so he was surprised when the app crashed reading a few\nspecific XML files. That\u0026rsquo;s when I was called in. A closer inspection revealed\na pattern: all those crashing files were Windows 1252-encoded (the rest, a vast\nmajority, were UTF-8.)\u003c/p\u003e","title":"How to read Windows-1252 encoded files with .NETCore and .NET5+"},{"content":"Today I learned how to restore a single Postgres database from a global dump generated with pg_dumpall. Now, pg_dumpall is handy when you want to back up an entire Postgres cluster. It will dump all databases and global objects in a single text file. In contrast, pg_dump, the go-to tool for Postgres backups, offers more control but only works with a single database and doesn\u0026rsquo;t dump global objects, such as the roles/users linked to the database.\nThe problem with pg_dumpall comes when you want to restore just one database from the dump file. That\u0026rsquo;s not supported out of the box, but it is achievable with some tinkering.\nThe pg_dumpall dump is a plain text file that contains all the SQL commands needed to restore the cluster. All database instructions are there as well; we only need to extract them. Say we have one \u0026ldquo;mydb\u0026rdquo; database that we need to retrieve. Open the dump file and look for a string starting with \u0026ldquo;connect mydb\u0026rdquo;. That\u0026rsquo;s where our database instructions begin. Then look for the first occurrence of \u0026ldquo;PostgreSQL database dump complete\u0026rdquo;. That\u0026rsquo;s where the instructions end. This script, which I have to say makes clever use of sed, will do just that for us:\n#!/bin/bash [ $# -lt 2 ] \u0026amp;\u0026amp; { echo \u0026quot;Usage: $0 \u0026lt;postgresql dump\u0026gt; \u0026lt;dbname\u0026gt;\u0026quot;; exit 1; } sed \u0026quot;/connect.*$2/,\\$!d\u0026quot; $1 | sed \u0026quot;/PostgreSQL database dump complete/,\\$d\u0026quot; The output will be to STDOUT; we want to pipe it into a file. If we named the script pg_extract.sh, as I did, we\u0026rsquo;d do:\n./pg_extract.sh dumpall.sql mydb \u0026gt;\u0026gt; mydb.dump Now we have the specific DB dump, and we can restore it like this:\npsql (connection options) mydb \u0026lt; mydb.dump If the database still exists on the cluster, we first want to drop it, or we\u0026rsquo;ll only get error messages:\npsql (connection options) -d postgres -c \u0026quot;DROP DATABASE IF EXISTS mydb\u0026quot; psql (connection options) -d postgres -c \u0026quot;CREATE DATABASE mydb\u0026quot; DROP DATABASE will fail if there are active connections. Either force-drop all active connections or tell your peers to leave the database alone. Merging the above passages in a script is an option.\n","permalink":"https://nicolaiarocci.com/how-to-restore-a-single-postgres-database-from-a-pg_dumpall-dump/","summary":"\u003cp\u003eToday I learned how to restore a single Postgres database from a global dump\ngenerated with \u003ca href=\"https://www.postgresql.org/docs/current/app-pg-dumpall.html\"\u003e\u003ccode\u003epg_dumpall\u003c/code\u003e\u003c/a\u003e. Now, \u003ccode\u003epg_dumpall\u003c/code\u003e is handy when you want to back\nup an entire Postgres cluster. It will dump all databases and global objects in\na single text file. In contrast, \u003ca href=\"https://www.postgresql.org/docs/current/app-pgdump.html\"\u003e\u003ccode\u003epg_dump\u003c/code\u003e\u003c/a\u003e, the go-to tool for Postgres\nbackups, offers more control but only works with a single database and doesn\u0026rsquo;t\ndump global objects, such as the roles/users linked to the database.\u003c/p\u003e","title":"How to restore a single Postgres database from a pg_dumpall dump"},{"content":"I stumbled upon a personal growth article this weekend, and that\u0026rsquo;s odd because I tend to stay clear from such things. Yet I found it quite relevant, so much that I thought I would share it (the delivery is also amusing, which is something new for this kind of content).\nIt’s just another day… and you’re just doing what you need to do. You’re getting things done, and the day moves forward in this continuous sequence of checklists, actions, and respites. But at various moments of your routine, you pause and take a good look at your surroundings. The scenes of your everyday life. The blur of this all-too-familiar film. And you can’t help but to wonder… If there is more to it all. For some reason — this country, this city, this neighborhood, this particular street — is the place you are living a majority of your life in. And it is this thought that allows a daydream to seep in. You start thinking of all the other places you could be in this world. Or more accurately, all the places you’d rather be in. Somewhere more exciting. Somewhere new. Somewhere that can provide experiences that are foreign to you.\nWhile I agree with the article, I\u0026rsquo;d also mention that travel or putting some distance from the Box of Daily Experience, as the author calls it, is a great way to appreciate what we leave behind; to re-evaluate it from a different perspective.\nAs I read the article, I kept thinking, this is not particularly original; I read something like this before. Then, by the end of the piece, a note tells us that the text is, in fact, an adaptation of Seneca\u0026rsquo;s letter to Lucilius on the subject of travel. Seneca\u0026rsquo;s moral letters to Lucilius are just pure awesomeness.\n","permalink":"https://nicolaiarocci.com/travel-is-no-cure-for-the-mind/","summary":"\u003cp\u003eI stumbled upon a personal growth article this weekend, and that\u0026rsquo;s odd because\nI tend to stay clear from such things. Yet I found it quite relevant, so much\nthat I thought I would \u003ca href=\"https://medium.com/personal-growth/travel-is-no-cure-for-the-mind-e449d3109d71\"\u003eshare it\u003c/a\u003e (the delivery is also amusing, which is\nsomething new for this kind of content).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt’s just another day… and you’re just doing what you need to do. You’re\ngetting things done, and the day moves forward in this continuous sequence of\nchecklists, actions, and respites. But at various moments of your routine,\nyou pause and take a good look at your surroundings. The scenes of your\neveryday life. The blur of this all-too-familiar film. And you can’t help but\nto wonder… If there is more to it all. For some reason — this country, this\ncity, this neighborhood, this particular street — is the place you are living\na majority of your life in. And it is this thought that allows a daydream to\nseep in. You start thinking of all the other places you could be in this\nworld. Or more accurately, all the places you’d rather be in. Somewhere more\nexciting. Somewhere new. Somewhere that can provide experiences that are\nforeign to you.\u003c/p\u003e","title":"Travel is no cure for the mind"},{"content":" Some call them homeless. The new nomads refer to themselves as \u0026lsquo;houseless\u0026rsquo;. Many took to the road after their savings were obliterated by the Great Recession. To keep their gas tanks and bellies full, they work long hours at hard, physical jobs. In a time of flat wages and rising housing costs, they have unshackled themselves from rent and mortgages as a way to get by. They are surviving America.\nJessica Bruder is a journalist. For three years, she followed the lives of a group of nomads who live in their RVs or even in their cars, moving from one seasonal work to the next in their pursuit to survive the collapse of their own personal American Dream. Her writing is dry, concise, with little room for personal feelings or ramblings, to the point that, at times, she sounds distant, almost detached from the events being told. That isn\u0026rsquo;t the case, as you can tell by the second half of the book when she finally decides to take the plunge and get herself a van to live herself the \u0026ldquo;workcamper\u0026rdquo; life. That is a tipping point in the book. The author becomes the main character, the story is personal, and the reader is more involved.\nBruder interviews many folks and followed a few of them in detail. Linda May, amongst others, is the centrepiece of the story. Linda was 62 when she took social security and was forced into living in a van. Most people living the \u0026ldquo;workcamper\u0026rdquo; life are in what would be their retirement age. They are in their 60s, 70s and sometimes even 80s. Yet, they work very hard at their seasonal jobs, like at Amazon warehouses as inventory scanners or in Minnesota and North Dakota, for the seasonal harvest of sugar beets. These work experiences are depicted with great detail. Bruder herself walked the plank and experienced how demanding these assignments are on the body and the spirit (Amazon provides painkillers to their aged employees). Despite all the difficulties, these people carry on with great dignity and, often, upbeat attitude, well represented by Linda, a lovely elderly woman.\nI had no idea that the \u0026ldquo;workcampers\u0026rdquo; subculture existed in the USA. As someone who has always been mildly fascinated by the RV life (like many others, we sometimes fantasize about travelling the world in a camper when we retire), I admit I was pretty shocked by this work, an engaging and very unsettling read. I am grateful to Bruder for her hard-earned report.\nAt one time there was a social contract that if you played by the rules (went to school, got a job, and worked hard) everything would be fine. That’s no longer true today. You can do everything right, just the way society wants you to do it, and still end up broke, alone, and homeless.\nPS. By pure coincidence, I came across the awarded Nomandland movie only a few days after finishing the book. It was great. At first, I was startled by the acting of some roles. Then, by the final credits, I realized that it wasn\u0026rsquo;t professional actors who played those roles. It was the actual persons from the book, Linda May included, who played themselves.\n","permalink":"https://nicolaiarocci.com/book-review-nomadland/","summary":"\u003cblockquote\u003e\n\u003cp\u003eSome call them homeless. The new nomads refer to themselves as \u0026lsquo;houseless\u0026rsquo;.\nMany took to the road after their savings were obliterated by the Great\nRecession. To keep their gas tanks and bellies full, they work long hours at\nhard, physical jobs. In a time of flat wages and rising housing costs, they\nhave unshackled themselves from rent and mortgages as a way to get by. They\nare surviving America.\u003c/p\u003e","title":"Book Review: Nomadland"},{"content":" In Finland, the number of homeless people has fallen sharply. The reason: The country applies the “Housing First” concept. Those affected by homelessness receive a small apartment and counselling – without any preconditions. 4 out of 5 people affected thus make their way back into a stable life. And: All this is cheaper than accepting homelessness.\nFinland\u0026rsquo;s take on the homelessness problem is remarkable and gives hope. I live in a small town where the problem is not as apparent as in, say, San Francisco. Whenever I think back to my short time in San Francisco, I shudder at the terrifying homelessness situation I met there. There, in San Francisco, I realized the magnitude of \u0026ldquo;true liberalism\u0026rdquo;\u0026rsquo;s failure.\n","permalink":"https://nicolaiarocci.com/finlands-intriguing-take-on-the-homelessness-problem/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIn Finland, the number of homeless people has fallen sharply. The reason: The\ncountry applies the “Housing First” concept. Those affected by homelessness\nreceive a small apartment and counselling – without any preconditions. 4 out\nof 5 people affected thus make their way back into a stable life. And: All\nthis is cheaper than accepting homelessness.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eFinland\u0026rsquo;s \u003ca href=\"https://scoop.me/housing-first-finland-homelessness/\"\u003etake on the homelessness problem\u003c/a\u003e is remarkable and gives hope.\nI live in a small town where the problem is not as apparent as in, say, San\nFrancisco. Whenever I think back to my short time in San Francisco, I shudder\nat the terrifying homelessness situation I met there. There, in San Francisco,\nI realized the magnitude of \u0026ldquo;true liberalism\u0026rdquo;\u0026rsquo;s failure.\u003c/p\u003e","title":"Finland's intriguing take on the homelessness problem"},{"content":"Today I learned how to remove a file from a git repository while also cleaning it from the history. When you delete it with git rm or git rm --cached, tracks remain in the commit history (the reflog). That might not be a big deal, but if the file has sensitive contents that you want to disappear from version control entirely, then you also want it cleaned from the reflog. That\u0026rsquo;s when git filter-branch comes to the rescue.\nTo be on the safe side, I first cloned the repository to a test directory:\n$ git clone \u0026lt;REPOSITORY\u0026gt; test $ cd test Once into the test directory, this is the command that saved the day:\n# make sure you insert the whole file path, relative to the repository root $ git filter-branch --force --index-filter \\ \u0026quot;git rm --cached --ignore-unmatch PATH-TO-THE-FILE\u0026quot; \\ --prune-empty --tag-name-filter cat -- --all The command above will go through the history, find all commits where the file is involved, and alter them to eliminate the file. Yes, history changes, so a force-push will be required at the end.\nTo test that the file has indeed been removed, I used git blame:\n$ git blame PATH-TO-THE-FILE fatal: no such path 'PATH-TO-THE-FILE' in HEAD If the file needs to stay in the local directory, you can add it to .gitignore:\n$ echo \u0026quot;PATH-TO-THE-FILE\u0026quot; \u0026gt;\u0026gt; .gitignore $ git add .gitignore $ git commit -m \u0026quot;add FILE to .gitignore\u0026quot; Once everything was ready, I went back to the original clone directory, replayed all the above, then force-pushed back to the remote:\n$ git push origin --force --all If you have remote tags, those need to be force-pushed as well:\n$ git push origin --force --tags In my case, the repository is private with no forks, so the changing history was not a big deal for the few colleagues with access to it. Of course, any other existing clone will need to be updated1.\nIn so many years with git, this is the very first time I had to do something similar. Typically, you don\u0026rsquo;t commit sensitive data to version control, but we all make mistakes every once in a while, don\u0026rsquo;t we?\nKeep in mind, eventual stashed changes will be lost after git filter-branch. Make sure you unstash before issuing the command. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/how-to-remove-a-file-from-git-history/","summary":"\u003cp\u003eToday I learned how to remove a file from a git repository while also cleaning\nit from the history. When you delete it with \u003ccode\u003egit rm\u003c/code\u003e or \u003ccode\u003egit rm --cached\u003c/code\u003e,\ntracks remain in the commit history (the reflog). That might not be a big deal,\nbut if the file has sensitive contents that you want to disappear from version\ncontrol entirely, then you also want it cleaned from the reflog. That\u0026rsquo;s when\n\u003ca href=\"https://git-scm.com/docs/git-filter-branch\"\u003e\u003ccode\u003egit filter-branch\u003c/code\u003e\u003c/a\u003e comes to the rescue.\u003c/p\u003e","title":"How to remove a file from Git history"},{"content":"Like everyone else on the planet, I\u0026rsquo;ve been following GitHub Copilot since its launch. It is an impressive achievement and a remarkable milestone for the deep learning industry, that\u0026rsquo;s for sure. We are obviously at the early stages in deep learning applied to software development, and it is somewhat unsettling to ponder what the future might hold in this field.\nLike many others, however, I worry about code quality issues and the risk of license infringements1. I am also concerned that the advent of Copilot-like tools might fundamentally change the software developer experience, if not the software developer role as a whole, and for the worst.\nI wrote down some notes preparing for an in-depth Copilot article, but then I stumbled on Jeremy Howard\u0026rsquo;s \u0026lsquo;[Is Copilot a blessing, or a curse?][3]\u0026rsquo;. In that piece, Jeremy covers all of my points and then some more. Also, given his background, Jeremy\u0026rsquo;s musings on deep learning carry way more weight than mine. My advice is to read his article. I especially appreciate his critique on Copilot\u0026rsquo;s so-advertised role as \u0026ldquo;AI pair programmer\u0026rdquo;:\nGitHub markets Copilot as a “pair programmer”. But I’m not sure this really captures what it’s doing. A good pair programmer is someone who helps you question your assumptions, identify hidden problems, and see the bigger picture. Copilot doesn’t do any of those things – quite the opposite, it blindly assumes that your assumptions are appropriate and focuses entirely on churning out code based on the immediate context of where your text cursor is right now.\nHe then mentions both automation and anchoring biases and explains how they might influence the developers using advanced AI-powered automation tools like Copilot.\nThe code proposed to Copilot seems to solve most problems, yes, but it appears to average quality at best. Jeremy explains why: Copilot trains on public repositories, with no filter on the overall quality of the material at hand \u0026ndash;something complicated to achieve, indeed. The developer is expected to carefully review the suggestions, and that\u0026rsquo;s where automation and anchoring biases might affect judgment. Besides, who enjoys doing code reviews? I certainly don\u0026rsquo;t. Any day, I\u0026rsquo;d instead take on the challenge and churn out my own solution. Yes, it might require effort and time, or see me googling for some help (those Stack Overflow hints have usually been reviewed, amended and commented on by fellow programmers; both quality and review, right there). When my solution works, I am thrilled. That feel of self-accomplishment and satisfaction is what I enjoy the most. It\u0026rsquo;s what I look forward to in the morning when I sit at my desk.\nI also don\u0026rsquo;t want to renounce deep understanding. When we delegate code creation, we\u0026rsquo;re taking a step toward shallow knowledge in our field. Eric Sink\u0026rsquo;s \u0026lsquo;[Will deep understanding still be valuable?][4]\u0026rsquo; has an excellent discussion around this topic:\nIn my nearly 4 decades of writing code, I have consistently found that the most valuable thing is to know how things work. Nothing in software development is more effective than the ability to see deeper. [\u0026hellip;] I am utterly convinced that deep understanding is important. But increasingly, I feel like I\u0026rsquo;m swimming upstream. It seems like most people in our industry care far more about \u0026ldquo;how to do\u0026rdquo; rather than \u0026ldquo;how does it work\u0026rdquo;.\nCopilot is great and feels like magic2. And precisely for that reason, at my company, we\u0026rsquo;re not going to adopt it.\nFor example, see Armin Ronacher\u0026rsquo;s on Copilot regurgitating famous, GPL-license code. [3]: https://www.fast.ai/2021/07/19/copilot/ [4]: https://ericsink.com/entries/depth.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nAny sufficiently advanced technology is indistinguishable from magic \u0026ndash;Arthur C. Clark [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/on-github-copilot/","summary":"\u003cp\u003eLike everyone else on the planet, I\u0026rsquo;ve been following \u003ca href=\"https://copilot.github.com/\"\u003eGitHub Copilot\u003c/a\u003e since\nits launch. It is an impressive achievement and a remarkable milestone for the\ndeep learning industry, that\u0026rsquo;s for sure. We are obviously at the early stages\nin deep learning applied to software development, and it is somewhat unsettling\nto ponder what the future might hold in this field.\u003c/p\u003e\n\u003cp\u003eLike many others, however, I worry about code quality issues and the risk of\nlicense infringements\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e. I am also concerned that the advent of Copilot-like\ntools might fundamentally change the software developer experience, if not the\nsoftware developer role as a whole, and for the worst.\u003c/p\u003e","title":"On GitHub Copilot"},{"content":"Volker Ullrich\u0026rsquo;s Eight Days in May describes the period from April 30, 1945, the day of Hitler\u0026rsquo;s suicide, to May 8, the day of signing the German capitulation, with significant jumps backwards in time and some hops in the future. We\u0026rsquo;re covering only eight days, and the dictator dies on day one. What essential events might ever have happened in such a short period? Well, many pivotal ones, as this well-researched work shows us.\nThe book is merciless towards Hitler\u0026rsquo;s heirs and not accommodating at all towards Germans of that age in general. Reading the behaviors and things said in those days is gruesome. Under track are the horrible consequences of war and concentration camps. The resulting picture is that of the supreme horrors and mistakes that humanity can reach.\nThe text focuses on the protagonists of those days, the Nazi hierarchs (not just the most infamously well known) and their Allies and Red Army counterparts. There are few notable exceptions, like the story of Marlene Dietrich, already a Hollywood star, who served as an American army officer and returned to Germany to look for her sister lost in the fog of war. To her dismay, she found that her sister had prospered, cooperating and taking advance of the Nazi regime. Marlene bought her sisters\u0026rsquo; silence, and for the rest of her life, fiercely negated the very own existence of a sister.\nI found the part on the German population and its shocked, instinctive reaction to the regime\u0026rsquo;s fall particularly informative. The immediate turncoat of most, along with the lying denial of knowing anything about the atrocities.The disturbing (George Orwell\u0026rsquo;s word), immediate sympathy for the Allies. Also, the eulogy for the few who courageously conducted a desperate, clandestine and seemingly hopeless resistance within the Reich. It is especially relevant that the author is German.\nThis book leaves me stunned. It is always painful to read about that historical period. The millions of deaths. The suffering. The atrocities. We need to keep going back, walk the way over and over, never to forget, never to repeat. To that end, Eight Days in May is a book everyone should read.\nBy May 8, 1945, Germany was a humiliated, devastated country. Most major cities were annihilated, the economy had collapsed, and millions of people were reduced to hunger. The contrast with today\u0026rsquo;s Germany is mind-blowing. With the help of the winning countries, sure, but predominantly and undoubtedly thanks to grit and desire for rebirth, Germany resurged from the catastrophe as a modern country and a sought-out model for democracy, economy, justice, and reception of diverse cultures.\n","permalink":"https://nicolaiarocci.com/book-review.-eight-days-in-may-the-final-collapse-of-the-third-reich/","summary":"\u003cp\u003eVolker Ullrich\u0026rsquo;s Eight Days in May describes the period from April 30, 1945,\nthe day of Hitler\u0026rsquo;s suicide, to May 8, the day of signing the German\ncapitulation, with significant jumps backwards in time and some hops in the\nfuture. We\u0026rsquo;re covering only eight days, and the dictator dies on day one. What\nessential events might ever have happened in such a short period? Well, many\npivotal ones, as this well-researched work shows us.\u003c/p\u003e","title":"Book Review. Eight Days in May: The Final Collapse of the Third Reich"},{"content":"Terrific piece by Jonathan Zittrain, on The Atlantic, on link rot and digital preservation. I love how well documented and informative it is. Yet, it remains perfectly approachable for both the non-knowledgeable reader and the technically savvy.\nToo much has been lost already. The glue that holds humanity’s knowledge together is coming undone.\nWe need more content like this.\n","permalink":"https://nicolaiarocci.com/the-internet-is-rotting/","summary":"\u003cp\u003eTerrific piece by Jonathan Zittrain, on The Atlantic, on \u003ca href=\"https://www.theatlantic.com/technology/archive/2021/06/the-internet-is-a-collective-hallucination/619320/\"\u003elink rot and digital\npreservation\u003c/a\u003e. I love how well documented and informative it is. Yet, it\nremains perfectly approachable for both the non-knowledgeable reader and the\ntechnically savvy.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eToo much has been lost already. The glue that holds humanity’s knowledge\ntogether is coming undone.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe need more content like this.\u003c/p\u003e","title":"The Internet is Rotting"},{"content":"I couldn\u0026rsquo;t recall a tmux command, so I quickly reached for my trusted default search engine DuckDuckGo. I typed \u0026ldquo;tmux cheat sheet\u0026rdquo; because, well, once I found an excellent one which I wanted to summon again. To my surprise, the search result included an in-page cheat sheet—a good one too.\nIt isn\u0026rsquo;t the first time that DuckDuckGo surprises me like that. Need a new GUID? Search for it.\nNeed a quick QR code? Of course.\nDuckDuckGo should be everyone\u0026rsquo;s default browser for many valid reasons, and in-page results for frequent searches (or Istant Answers as they call them) sure isn\u0026rsquo;t the most prominent one, but it is handy to have around. It is also of some comfort to see that I\u0026rsquo;m obviously not the only one forgetting tmux commands.\n","permalink":"https://nicolaiarocci.com/yet-another-reason-to-use-duckduckgo/","summary":"\u003cp\u003eI couldn\u0026rsquo;t recall a \u003ca href=\"https://github.com/tmux/tmux\"\u003etmux\u003c/a\u003e command, so I quickly reached for my trusted default\nsearch engine DuckDuckGo. I typed \u0026ldquo;tmux cheat sheet\u0026rdquo; because, well, once\nI found an excellent one which I wanted to summon again. To my surprise, the\n\u003ca href=\"https://duckduckgo.com/?t=ffab\u0026amp;q=tmux+cheat+sheet\u0026amp;atb=v224-1\u0026amp;ia=cheatsheet\"\u003esearch result\u003c/a\u003e included an in-page cheat sheet—a good one too.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"DuckDuckGo provides an in-page tmux cheat sheet\" loading=\"lazy\" src=\"/images/duckduckgo-tmux.png\"\u003e\u003c/p\u003e\n\u003cp\u003eIt isn\u0026rsquo;t the first time that DuckDuckGo surprises me like that. Need a new\nGUID? \u003ca href=\"https://duckduckgo.com/?q=new+guid\u0026amp;t=ffab\u0026amp;atb=v224-1\u0026amp;ia=answer\"\u003eSearch for it\u003c/a\u003e.\u003c/p\u003e","title":"Yet Another Reason to Use DuckDuckGo"},{"content":"A long-sought first draft of Marcel Proust\u0026rsquo;s \u0026lsquo;In Search of Lost Time\u0026rsquo; surfaced a few years ago. Its fascinating story and intriguing news are revealed in a Tablet article titled Proust\u0026rsquo;s Madeleine Was Originally a Slice Toast.\nBeing the Tablet \u0026ldquo;a daily online magazine of Jewish news, ideas, and culture\u0026rdquo;, it makes sense that a good part of the article focuses on Proust\u0026rsquo;s ambivalence about his Jewishness. Still, there are many other interesting tidbits to be learned. On the novel itself and its development, on some relevant characters and their real-world counterparts, and Proust himself.\nMost of these matters, as is natural in early drafts, differ from the final versions: the iconic madeleine in these pages is the far more prosaic toast. Sound, not just taste or the narrator’s position standing on cobblestones, is added to the battery of things that can revive the past. Proust writes here, after trying in vain to resuscitate a lost day of his youth, that \u0026ldquo;I let my spoon fall onto my plate. There was then produced exactly the same sound as that of the hammer of the brakemen who that day struck the wheels of the train at its stop. At that same moment the burning and blinded hour when this noise rang out was revived for me …\u0026rdquo; Perhaps most surprisingly, the Narrator, here given his actual name, has a younger brother, an annoying one to boot, who \u0026ldquo;though only five-and-a-half years-old, was of a rather violent nature.\u0026rdquo;\n","permalink":"https://nicolaiarocci.com/prousts-madeleine-was-originally-a-slice-of-toast/","summary":"\u003cp\u003eA long-sought first draft of Marcel Proust\u0026rsquo;s \u0026lsquo;In Search of Lost Time\u0026rsquo; surfaced\na few years ago. Its fascinating story and intriguing news are revealed in\na Tablet article titled \u003ca href=\"https://www.tabletmag.com/sections/arts-letters/articles/proust-madeleine-antisemitism-jewishness\"\u003eProust\u0026rsquo;s Madeleine Was Originally a Slice Toast\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBeing the Tablet \u0026ldquo;a daily online magazine of Jewish news, ideas, and culture\u0026rdquo;,\nit makes sense that a good part of the article focuses on Proust\u0026rsquo;s ambivalence\nabout his Jewishness. Still, there are many other interesting tidbits to be\nlearned. On the novel itself and its development, on some relevant characters\nand their real-world counterparts, and Proust himself.\u003c/p\u003e","title":"Proust's Madeleine Was Originally a Slice of Toast"},{"content":"I am pretty excited about the [Minimal APIs][3] feature that is coming with .NET 6. Three lines of code will be enough to build a fully functional REST microservice1:\nvar app = WebApplication.Create(args); app.MapGet(\u0026quot;/\u0026quot;, () =\u0026gt; \u0026quot;Hello World!\u0026quot;); await app.RunAsync(); If you\u0026rsquo;re a seasoned ASP.NET MVC/WebApi developer, the snippet caught your attention because, pre-.NET 6, achieving the same result will have you messing with a lot of extra cruft2. I suspect, however, that this feature is not primarily targeted at existing .NET developers. Developers new and old looking at .NET for the first time, or those like me returning after a long break; these are, I think, the designated audience.\nA long time ago, I left C# and .NET behind precisely because I had to write REST APIs, and back then, the options available in .NET were, to put it mildly, cumbersome. Admittedly, there were other reasons for switching, like .NET not being cross-platform - I wanted to run my APIs on Linux - and general dissatisfaction with the Microsoft ecosystem. Long story short, I went with Python. Check out this snippet from Flask\u0026rsquo;s renowned Quickstart:\napp = Flask(__name__) @app.route(\u0026quot;/\u0026quot;) def hello_world(): return \u0026quot;\u0026lt;p\u0026gt;Hello, World!\u0026lt;/p\u0026gt;\u0026quot; Launched with the compelling motto \u0026lsquo;web development, one drop at a time\u0026rsquo; and presented as a \u0026lsquo;micro\u0026rsquo; web framework, Flask immediately caught my attention3. Cruft-free and elegant APIs are not a Flask (or Python, for the matter) exclusive. A Node code snippet for a REST API would be similar. Now, with NET 6 Minimal APIs, we\u0026rsquo;re finally matching the industry standard for code clarity and simplicity. Moreover, .NET has better performance4 and strongly typed languages that offer excellent type inference (F# reigns supreme there, with C# catching up nicely.) I\u0026rsquo;d dare to say that the C# snippet is a winner. I mean, look at that inline lambda, with no casts!\nMinimal APIs typical use-case is everyone\u0026rsquo;s favourite, microservices. I do not doubt the delivery56. The challenge, I think, is the actual adoption rate. Whether veterans will adopt them or not (over time, they will) is relatively significant, I guess. The critical question is, will Minimal APIs succeed in attracting new developers to .NET?\nThat will mainly depend on communication. Will evangelism be robust, persistent and persuasive enough? That\u0026rsquo;s the tricky part. Every time I speak to the Python or JavaScript crowd, I am amazed that the majority don\u0026rsquo;t even know that .NET is now open-source, cross-platform, and blazingly performant. Most, if not all, are tied to the old idea of a Windows-only, cumbersome, black-boxed, enterprise-oriented offering. That\u0026rsquo;s not the case anymore. .NET is on par with the other cool stacks or is getting there very rapidly. I am afraid it\u0026rsquo;s just a little bit too late for the vast majority of the web development crowd to take notice. It will take an enormous, coordinated effort to bring the message across.\nWith the platform now ready, effective communication, branding, and evangelism will eventually change the tide. Tutorials, getting-started guides, conference talks, YouTube videos, and workshops should all be explicitly conceived for new developers. The process started already. The observant can see the numerous efforts being made in this area. Will it be enough to attract new crowds? It is a hard bet, but I sure hope so because C# and F# are great languages, and NET 6 is modern, robust, feature-rich, and powerful enough to go at war, and with no fear.\nYou will still be able to scale up to (or start right away with) a fully-functional WebApi/MVC application, with all its classes and controllers. [3]: https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/#introducing-minimal-apis\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMind you. The dev team isn\u0026rsquo;t just adding a layer of abstraction on top of the existing code. Quoting fellow MVP Dave Brock \u0026ldquo;With minimal APIs, the goal is to move out core API-building capabilities—the ones that only exist in MVC today—and allow them to be used outside of MVC. When extracting these components away to a new paradigm, you can rely on middleware-like performance.\u0026rdquo;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nLong story short, besides lazily maintaining my Python open source projects, I am mostly back to C# these days.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSure, all benchmarks should be taken with a grain of salt, but check this out. ASPCORE ranks at #2; Flask and Node #338 and #173 respectively. And NET 6 is expected to still improve on performance.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor examples of real-life-scenarios, see Damian Edwards\u0026rsquo; Minimal APIs playground.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCool. As I am writing this, NET 6 Preview 6 is released, which adds OpenAPI (Swagger UI) support to Minimal APIs.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/will-.net-6-minimal-apis-turn-heads/","summary":"\u003cp\u003eI am pretty excited about the [Minimal APIs][3] feature that is coming with\n.NET 6. Three lines of code will be enough to build a fully functional REST\nmicroservice\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003evar app = WebApplication.Create(args);\napp.MapGet(\u0026quot;/\u0026quot;, () =\u0026gt; \u0026quot;Hello World!\u0026quot;);\nawait app.RunAsync();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf you\u0026rsquo;re a seasoned ASP.NET MVC/WebApi developer, the snippet caught your\nattention because, pre-.NET 6, achieving the same result will have you messing\nwith a lot of extra cruft\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e. I suspect, however, that this feature is not\nprimarily targeted at existing .NET developers. Developers new and old looking\nat .NET for the first time, or those like me returning after a long break;\nthese are, I think, the designated audience.\u003c/p\u003e","title":"Will .NET 6 Minimal APIs turn heads?"},{"content":"Vera Gheno\u0026rsquo;s \u0026ldquo;Potere alle Parole\u0026rdquo; (Power to the Words) is an essay on the importance of appropriate use of the (Italian) language, not just in written works but also and predominately in everyday life.\nWhat would we think of a person who, having a vast wardrobe of beautiful clothes, always wore the same suit out of laziness? These situations appear unlikely; yet, they are examples of the attitude that many have towards their language: they have access to an immense, incalculable patrimony, which out of indolence, or fear, or inexperience, they use partially. Even if the Italian does not need to be saved or preserved, we should love it more because it is a magnificent instrument. It is a shame to limit ourselves to only a superficial frequentation.\nVera Gheno is a sociolinguist. She teaches at the Universities of Florence and Siena. She collaborates with the \u0026ldquo;Accademia della Crusca\u0026rdquo;, the most important research institution of the Italian language and the oldest linguistic academy in the world. She is also a phenomenal popularizer. I am sure that some concepts and notions expressed here are well known to the knowledgeable person, but this book is not targeted to that kind of reader. I think this work is purposedly aiming at the general public.Yet, I suspect it would remain enjoyable to those in the field mainly thanks to its always fresh and entertaining style.\nOne of the many takeaways is that languages change, evolve, and constantly adapt over time. Hence there is no standard, norm, or canon set in stone. New words are minted continuously. At the same time, some others decay and slowly disappear. Words initially borrowed from foreign languages (English, yes, but also French, and many other unexpected ones, like Hungarian) enter the dictionary to become part of the norm. We old farts should not be so quick to condemn our kids\u0026rsquo; slang: some of their jargon will soon be forgotten, some will join the canon. The same happened, of course, in our time and forever before.\n","permalink":"https://nicolaiarocci.com/book-review-power-to-the-words/","summary":"\u003cp\u003eVera Gheno\u0026rsquo;s \u0026ldquo;Potere alle Parole\u0026rdquo; (Power to the Words) is an essay on the\nimportance of appropriate use of the (Italian) language, not just in written\nworks but also and predominately in everyday life.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhat would we think of a person who, having a vast wardrobe of beautiful\nclothes, always wore the same suit out of laziness? These situations appear\nunlikely; yet, they are examples of the attitude that many have towards their\nlanguage: they have access to an immense, incalculable patrimony, which out\nof indolence, or fear, or inexperience, they use partially. Even if the\nItalian does not need to be saved or preserved, we should love it more\nbecause it is a magnificent instrument. It is a shame to limit ourselves to\nonly a superficial frequentation.\u003c/p\u003e","title":"Book Review: Power to the Words"},{"content":"Today I was interviewed by Mauro Servienti on the DotNetPodcast. The theme was my experience as an open-source maintainer on both the Python and C# stacks. We also discussed the ongoing evolution of the dotNET ecosystem, touching on a few tangent topics.\nThe recording is in Italian and is available below here.\nListen to \u0026ldquo;Python, Eve, open source e fattura elettronica. Con Nicola Iarocci\u0026rdquo; on Spreaker.\n","permalink":"https://nicolaiarocci.com/my-dotnetpodcast-interview/","summary":"\u003cp\u003eToday I was interviewed by \u003ca href=\"https://twitter.com/mauroservienti\"\u003eMauro Servienti\u003c/a\u003e on the \u003ca href=\"https://www.spreaker.com/show/dotnetpodcast\"\u003eDotNetPodcast\u003c/a\u003e. The\ntheme was my experience as an open-source maintainer on both the Python and C#\nstacks. We also discussed the ongoing evolution of the dotNET ecosystem,\ntouching on a few tangent topics.\u003c/p\u003e\n\u003cp\u003eThe recording is in Italian and is available below here.\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eListen to \u0026ldquo;Python, Eve, open source\ne fattura elettronica. Con Nicola Iarocci\u0026rdquo; on Spreaker.\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"My DotNetPodcast interview"},{"content":"I recently had the unexpected opportunity of spending a few days in the Alps, climbing and hiking with my daughters. After a few years of hiatus, it felt great to be back romping.\n","permalink":"https://nicolaiarocci.com/an-unexpected-return-to-the-alps/","summary":"\u003cp\u003eI recently had the unexpected opportunity of spending a few days in the Alps,\nclimbing and hiking with my daughters. After a few years of hiatus, it felt\ngreat to be back romping.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Monte Stevia\" loading=\"lazy\" src=\"/images/monte-stevia.jpg#center\"\u003e\u003c/p\u003e","title":"An unexpected return to the Alps"},{"content":"Sam Enright assembled a friendly Beginner\u0026rsquo;s Guide to Miles Davis. If you\u0026rsquo;ve always been curious about jazz but never really managed to get into it, then this resource might serve as a good starting point. I cannot say I\u0026rsquo;m one hundred per cent aligned with his choices, but we\u0026rsquo;re close. One remarkable statement I concur with is this one:\nJazz is so interesting to me because of its fusion of intricate underlying structure with improvisation and spontaneity. As Ken Burns put it, jazz is “familiar, but brand new every night”. Moreover, I enjoy the intellectual demandingness of jazz as a genre. Jazz musicians seem to be the most thoughtful and intelligent of any genre. Many of the more Avant Garde songs mentioned in this post don’t sound good unless you’re really concentrating. Some of it sounds cacophonous to a newcomer. This is why jazz is considerably more difficult to get into than other genres and has a lack of listenership among the youth.\nSam put a lot of effort into his selection, and it shows. Should his list be overwhelming for you, my shortcut advice would be: listen to Kind of Blue, especially the first two tracks, So What and Freddie Freeloader. If they don\u0026rsquo;t move you, I am sorry, you\u0026rsquo;re probably not a jazz person.\n","permalink":"https://nicolaiarocci.com/a-beginners-guide-to-miles-davis/","summary":"\u003cp\u003eSam Enright assembled a friendly \u003ca href=\"https://samenright.com/2021/06/06/a-beginners-guide-to-miles-davis/\"\u003eBeginner\u0026rsquo;s Guide to Miles Davis\u003c/a\u003e. If\nyou\u0026rsquo;ve always been curious about jazz but never really managed to get into it,\nthen this resource might serve as a good starting point. I cannot say I\u0026rsquo;m one\nhundred per cent aligned with his choices, but we\u0026rsquo;re close. One remarkable\nstatement I concur with is this one:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eJazz is so interesting to me because of its fusion of intricate underlying\nstructure with improvisation and spontaneity. As Ken Burns put it, jazz is\n“familiar, but brand new every night”. Moreover, I enjoy the intellectual\ndemandingness of jazz as a genre. Jazz musicians seem to be the most\nthoughtful and intelligent of any genre. Many of the more Avant Garde songs\nmentioned in this post don’t sound good unless you’re really concentrating.\nSome of it sounds cacophonous to a newcomer. This is why jazz is considerably\nmore difficult to get into than other genres and has a lack of listenership\namong the youth.\u003c/p\u003e","title":"A Beginner's Guide to Miles Davis"},{"content":"So the motorcycle-touring season has started, albeit a little late this year because of the COVID situation, and I\u0026rsquo;ve been avidly pursuing it. On Sunday, I embarked on a 700 km trip from my place to the Dolomites and back.\nIt\u0026rsquo;s been a glorious day. We (Antonio and I) visited many renowned Mountain Passes, enjoyed stunning views, ate great food and chatted like there\u0026rsquo;s no tomorrow.\nI took my GoPro along with me. I wanted to record some scenes to inspire my motorcycle club1 comrades. However, I admit I was dubious that it would be worth the hassle. Filming while driving would be difficult; editing and assembling the cuts later would be tedious. Moreover, I have almost no experience with this stuff.\nThe video is available on YouTube, and I already know it\u0026rsquo;s probably too long. Ideally, it should feature live voice recording, possibly a second camera point-of-view, and, heck, even some drone footage2. But it\u0026rsquo;s only the first attempt; it will have to do.\nContrary to my expectations, filming on the go wasn\u0026rsquo;t too stressful, and editing was.. ok I guess. However, once it was done and I finally got to watch it, I realized the obvious: it will primarily serve as a remarkable memory of a glorious day. Eventually, it will also inspire some of my club comrades; but that\u0026rsquo;s now a secondary goal.\nThe Triumph Owners MotorCycle Club (italy; international)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nFor some quality moto vlogging, see the Itchy Boots on YouTube [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/triumph-bonneville-dolomites-ride-2021/","summary":"\u003cp\u003eSo the motorcycle-touring season has started, albeit a little late this year\nbecause of the COVID situation, and I\u0026rsquo;ve been avidly pursuing it. On Sunday,\nI embarked on a 700 km trip from my place to the Dolomites and back.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s been a glorious day.  We (\u003ca href=\"/musings-on-an-unexpected-motorcycle-trip/\"\u003eAntonio\u003c/a\u003e and I) visited many renowned\nMountain Passes, enjoyed stunning views, ate great food and chatted like\nthere\u0026rsquo;s no tomorrow.\u003c/p\u003e\n\u003cp\u003eI took my GoPro along with me. I wanted to record some scenes to inspire my\nmotorcycle club\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e comrades. However, I admit I was dubious that it would be\nworth the hassle. Filming while driving would be difficult; editing and\nassembling the cuts later would be tedious. Moreover, I have almost no\nexperience with this stuff.\u003c/p\u003e","title":"Triumph Bonneville Dolomites Ride 2021"},{"content":"Linus Torvalds\u0026rsquo; reply to an anti-vaxxer on the Linux kernel list is a must-read. Pre-2018, Linus would have destroyed the poor chump. He\u0026rsquo;s discouraging further discussion (Kernel list is not the place for that) while providing crystal clear and detailed mRNA vaccine information, all without renouncing to an opening salvo of his good-ole, grumpy style.\nAs John Gruber affirms, this is one rant we can all get behind.\n","permalink":"https://nicolaiarocci.com/linus-torvalds-addresses-an-anti-vaxxer/","summary":"\u003cp\u003eLinus Torvalds\u0026rsquo; \u003ca href=\"https://lore.kernel.org/ksummit/CAHk-=wiB6FJknDC5PMfpkg4gZrbSuC3d391VyReM4Wb0+JYXXA@mail.gmail.com/\"\u003ereply to an anti-vaxxer\u003c/a\u003e on the Linux kernel list is\na must-read. Pre-2018, Linus would have destroyed the poor chump. He\u0026rsquo;s\ndiscouraging further discussion (Kernel list is not the place for that) while\nproviding crystal clear and detailed mRNA vaccine information, all without\nrenouncing to an opening salvo of his good-ole, grumpy style.\u003c/p\u003e\n\u003cp\u003eAs John Gruber \u003ca href=\"https://daringfireball.net/linked/2021/06/10/linus-torvalds\"\u003eaffirms\u003c/a\u003e, this is one rant we can all get behind.\u003c/p\u003e","title":"Linus Torvalds addresses an anti-vaxxer"},{"content":"When dealing with dictionaries, a typical problem is when an operation attempts to retrieve an element using a key that does not exist in the dictionary. In .NET, a KeyNotFoundException is raised, and that\u0026rsquo;s the desired behaviour in most circumstances. Sometimes, however, you know that your program will frequently try to retrieve keys that do not exist. In such cases, it is more efficient to use the TryGetValue method:\nThis method returns the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter is returned (source)\nThe devil hides in details. TryGetValue returns the default value for the type of the value parameter. So, if you use TryGetValue to look into a dictionary of strings, null is returned on a missing key. That is probably ok in most cases. Howewer, if your logic requires a custom default value instead, then you are out of luck. You have to set it yourself on TryGetValue failure. A typical implementation would be:\nvar result = MyDictionary.TryGetValue(\u0026#34;key\u0026#34;, var out value) ? value : \u0026#34;not found\u0026#34;; It is a minor annoyance but still a hassle. Our solution has always been a homemade GetValueOrDefault extension method, something like this:\npublic static TValue GetValueOrDefault\u0026lt;TKey, TValue\u0026gt; (this IDictionary\u0026lt;TKey, TValue\u0026gt; dictionary, TKey key, TValue defaultValue) { return dictionary.TryGetValue(key, var out value) ? value : defaultValue; } Usage:\nvar result = MyDictionary.GetValueOrDefault(\u0026#34;key\u0026#34;, \u0026#34;not found\u0026#34;); We\u0026rsquo;ve been using it since forever, and we are still using it even in recent projects.\nToday, as I was looking at something only tangentially related, I learned that our extension method is obsolete, and it\u0026rsquo;s been for a while. NetStandard 2.1 and NetCore 2 added a new extension method to the official API. It\u0026rsquo;s called, you guessed it, GetValueOrDefault. It extends ÌReadOnlyDictionary\u0026lt;TKey, TValue\u0026gt;, so it applies to all generic dictionaries, which is cool.\nWe could continue with our extension method. It has the advantage of working across all .NET platforms, not just recent ones. Implementations are likely similar, and there’s probably little (if any) performance difference (I am too lazy to compare). With NETCore (now NET5), APIs have not only acquired cross-platform compatibility and improved performance but they have also been expanded and amended, something often not very apparent. Not to me, at least.\nThe point I want to make here, I think, is that nothing is set in stone. Today\u0026rsquo;s little event shows how my knowledge becomes stagnant over time. Setting apart the time to learn new things is good, but acquired ones need sharping too.\n","permalink":"https://nicolaiarocci.com/custom-default-values-for-not-existing-dictionary-items-and-a-lesson-learned/","summary":"\u003cp\u003eWhen dealing with dictionaries, a typical problem is when an operation attempts\nto retrieve an element using a key that does not exist in the dictionary. In\n.NET, a \u003ccode\u003eKeyNotFoundException\u003c/code\u003e is raised, and that\u0026rsquo;s the desired behaviour in\nmost circumstances. Sometimes, however, you know that your program will\nfrequently try to retrieve keys that do not exist. In such cases, it is more\nefficient to use the \u003ccode\u003eTryGetValue\u003c/code\u003e method:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis method returns the value associated with the specified key, if the key\nis found; otherwise, the default value for the type of the value parameter is\nreturned (\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.trygetvalue?view=net-5.0\"\u003esource\u003c/a\u003e)\u003c/p\u003e","title":"Custom default values for not existing dictionary items (and a lesson learned)"},{"content":"The idea behind this book is fascinating. As the subtitle suggests, the book collects stories of rebel mountaineers of all kinds. Some chose to disobey orders; others built refuges of resistance, outposts of autonomy and laboratories of social innovation.\nThe collection is rich and varied. We go from the heretics who went with Fra Dolcino to the partisans who stopped the Nazi fascists in the mountains of Cuneo and Belluno, up to the contemporary movements against the high-speed train in the Susa Valley. Some high-profile mountain climbers are present as well. Tita Piaz, the Dolomiti Devil; the Nuovo Mattino climbers who, inspired by the revolution going in Yosemite , let go of the classic \u0026ldquo;fight with the Alp\u0026rdquo; approach to mountain climbing; the very notable (and totally unknown to me) story of Guido Rossa, worker, trade unionist, and fantastic rock climber. The Italian Alpine Club internal struggle from which the Mountain Wilderness association originated.\nEnrico Camanni, the author, is essentially a journalist, and it shows. I know him since the mid-90s when he was the editorial director of the then best mountain magazine, Alp. I might be wrong, but I suspect that this work is mainly composed of articles previously written for magazines and other works, here edited and enriched. That is not necessarily a negative, but I find the prose sometimes short-lived, other times emphatic, erratic in some ways.\nOverall a good book. I appreciated some reflections and considerations, especially those around the now unbreakable, intertwined bonds between the lowlands and the highlands.\n","permalink":"https://nicolaiarocci.com/book-review-alpi-ribelli-storie-di-montagna-resistenza-e-utopia/","summary":"\u003cp\u003eThe idea behind this book is fascinating. As the subtitle suggests, the book\ncollects stories of rebel mountaineers of all kinds. Some chose to disobey\norders; others built refuges of resistance, outposts of autonomy and\nlaboratories of social innovation.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Alpi Ribelli book cover\" loading=\"lazy\" src=\"/images/alpi-ribelli-book-cover.jpeg#right\"\u003e\nThe collection is rich and varied. We go from the heretics who went with Fra\nDolcino to the partisans who stopped the Nazi fascists in the mountains of\nCuneo and Belluno, up to the contemporary movements against the high-speed\ntrain in the Susa Valley. Some high-profile mountain climbers are present as\nwell. Tita Piaz, the Dolomiti Devil; the Nuovo Mattino climbers who, inspired\nby the revolution going in Yosemite , let go of the classic \u0026ldquo;fight with the\nAlp\u0026rdquo; approach to mountain climbing; the very notable (and totally unknown to\nme) story of Guido Rossa, worker, trade unionist, and fantastic rock climber.\nThe Italian Alpine Club internal struggle from which the Mountain Wilderness\nassociation originated.\u003c/p\u003e","title":"Book Review: Alpi Ribelli: Storie di montagna, resistenza e utopia"},{"content":"The article I\u0026rsquo;m linking today is authored by Aaron Stannard and focuses on the drama currently going on in the .NET Open Source ecosystem. We\u0026rsquo;ve all been there. A dependency we took aeons ago goes unmaintained or changes its licensing model. Why does this happen? Because at some point, projects need to become sustainable or else they fail.\n[\u0026hellip;] it\u0026rsquo;s inexpensive for maintainers to support a small number of users with relatively similar demands - but once a project achieves critical mass and the demand on the maintainers exceeds their desire to supply, something will have to give.\nCase in point, IdentityServer. The license change was, in my opinion, long overdue. The new agreement is very reasonable; the package remains free for most users. I understand the so-called \u0026ldquo;Procurement Rage.\u0026rdquo;\n[\u0026hellip;] once maintainers affix a dollar amount as the entry fee to benefit from all of their institutionalized knowledge and expertise developers now have no choice other than violating the license terms (legal won\u0026rsquo;t stand for that) or dealing with the procurement bureaucracy to allocate company money for the purchase.\nProcurement is undoubtedly an obstacle to open-source adoption within the Enterprise. Yet, it is true that there is no such a thing as a free lunch. Either be prepared to pay or send some value back to your dependencies, in one form or another (the article lists several great options). The conclusion is just perfect:\nCreating virtuous cycles where you continuously exchange value with OSS producers is the inevitable conclusion to the “Open Source Sustainability Crisis” - and everyone will be better off for it. So you should start the conversation with your team and find some projects to support - because it’s in your own self-interest to see them sustained.\nI subscribe to every single word. I find this case even more disheartening because most protesters are asking Microsoft to roll their own alternative. No gratitude or sympathy, nothing, really, for the people who worked hard for years, covering complex and strategic subjects such as authentication and authorization, providing excellent value for free. Baby-crying and asking Microsoft to \u0026ldquo;solve the problem\u0026rdquo; is so sad. It\u0026rsquo;s also so typical of certain Enterprise culture. They just don\u0026rsquo;t understand open-source or, just for convenience, they pretend not to get it.\nIt should also be mentioned that there already exist some valid, open-source, IdentityServer alternatives (IS4 included.) These should be the default go-to solution for those who abandon ship. The last thing we need is yet another \u0026ldquo;official\u0026rdquo; package by the behemoth. If anything, we need more variance, certainly not less.\n","permalink":"https://nicolaiarocci.com/open-source-what-happens-when-the-free-lunch-ends/","summary":"\u003cp\u003eThe article I\u0026rsquo;m linking today is authored by Aaron Stannard and focuses on \u003ca href=\"https://aaronstannard.com/dotnetoss-free-lunch-ends/\"\u003ethe\ndrama currently going on in the .NET Open Source ecosystem\u003c/a\u003e. We\u0026rsquo;ve all been\nthere. A dependency we took aeons ago goes unmaintained or changes its\nlicensing model. Why does this happen? Because at some point, projects need to\nbecome sustainable or else they fail.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e[\u0026hellip;] it\u0026rsquo;s inexpensive for maintainers to support a small number of users\nwith relatively similar demands - but once a project achieves critical mass\nand the demand on the maintainers exceeds their desire to supply, something\nwill have to give.\u003c/p\u003e","title":"Open Source: What Happens When the Free Lunch Ends?"},{"content":"Trade Wars 2002 was a great 1991 online game I hosted on one of my BBSes back in the day. Not sure if it was Lorien or Phoenix BBS; it might have been the latter given the game\u0026rsquo;s release date. I totally forgot TW2002 until yesterday when I spotted this 1991: Trade Wars 2002 article on the 50 Years of Text Games newsletter.\nI humbly confess that, until yesterday, I never made the obvious connection between TW2002 and Eve Online. That\u0026rsquo;s quite startling considering that I\u0026rsquo;ve been a beta player first and then an avid Eve player for a few years (Eve was also the last game I seriously played on a computer.)\nIn retrospect, what\u0026rsquo;s surprising is that Station Interaction, possibly the best trait of TW2002, never really made it to Eve Online (not in my playing timeframe, at least).\nThe StarDock was a key addition to Martin’s version of the game that went a long way toward making its galaxy feel more like a dynamic, living place. It’s filled with things to do: shop, gamble, visit a theatre to watch ASCII-art sci-fi parody “movies” (short animations) with titles like Vulcan Thunder. But more interesting are the chances for community interaction. The StarDock’s tavern provides a range of different ways to interact with fellow players: among other options, you can pay credits to post a public message that everyone will see, add to the graffiti scrawled on the bathroom wall, or pay a “grimy Trader” in the back room to learn information about other players, such as what sector their ship was last seen in. The grimy trader could share a huge selection of hints and useful info about the game state, provided you could think of the right things to ask him about and had the credits to pay.\nAnd of course:\nThe StarDock also holds secrets: the large menu of available commands doesn’t show all the options available. Pressing a key not listed on the menu would describe your character exploring the seedier, lesser-known parts of the station. A particular unlisted key would lead you to a locked door and a secret password which, once learned—from the grimy Trader, perhaps, or another player—admits you to the Underground, where nefarious players can buy illicit goods and coordinate against law-abiding Federation forces.\nEve was (probably still is) a fantastic concept. I was Jexter the Caldari. With my friend Fist, we founded a small roleplaying space-pirate group known as Jokers. Back in our time, I think we made the news.\nBut what we found always missing was space station interaction. Besides a generic system-wide chat, nothing encouraged players to spend time (and roleplay!) while their ships were docked at those stunning space stations. That\u0026rsquo;s something TW2002 nailed down to near perfection. I wish Eve had that. It could have kept me in the game for far longer.\n","permalink":"https://nicolaiarocci.com/trade-wars-2002-and-its-connection-to-eve-online/","summary":"\u003cp\u003eTrade Wars 2002 was a  great 1991 online game I hosted on one of my BBSes \u003ca href=\"https://nicolaiarocci.com/a-trip-down-memory-lane-fidonet-and-usenet/\"\u003eback\nin the day\u003c/a\u003e. Not sure if it was Lorien or Phoenix BBS; it might have been\nthe latter given the game\u0026rsquo;s release date. I totally forgot TW2002 until\nyesterday when I spotted this \u003ca href=\"https://if50.substack.com/p/1991-trade-wars-2002\"\u003e1991: Trade Wars 2002\u003c/a\u003e article on the \u003cem\u003e50\nYears of Text Games\u003c/em\u003e newsletter.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Trade Wards 2002\" loading=\"lazy\" src=\"/images/trade-wars-2002.png\"\u003e\u003c/p\u003e\n\u003cp\u003eI humbly confess that, until yesterday, I never made the obvious connection\nbetween TW2002 and Eve Online. That\u0026rsquo;s quite startling considering that I\u0026rsquo;ve\nbeen a beta player first and then an avid Eve player for a few years (Eve was\nalso the last game I seriously played on a computer.)\u003c/p\u003e","title":"Trade Wars 2002 and its connection to Eve Online"},{"content":"Pardon me while I\u0026rsquo;m venting out my frustration. I am so tired of Homebrew messing up with my stuff. It used to be the perfect tool for the right job until they decided to auto-brew-update-and-cleanup at every new install. Another day another issue, today with vim not running anymore:\ndyld: Library not loaded: /usr/local/opt/lua/lib/liblua.5.3.dylib Referenced from: /user/local/bin/vi Reason: image not found Lua has suddenly gone missing. Ah, but of course. I installed something with Homebrew this morning. The fix is to brew reinstall vim, which then leads to the following error:\nError: python@3.9 the bottle needs the Apple Command LIne Tools to be installed. You can install them, if desired, with: xcode-select --install An xcode-select install and another brew reinstall later, vim is back home. It\u0026rsquo;s only a minor annoyance —only a few wasted minutes, but the point is, they didn\u0026rsquo;t need to be wasted. If you\u0026rsquo;re frequently installing stuff via Homebrew, this is quite a common, unpleasant occurrence (python virtual environments being hit with alarming frequency).\nI know that one can disable automatic cleanups by setting the HOMEBREW_NO_INSTALL_CLEANUP environment variable. I will end up doing that out of frustration sooner or later. Again, the point is I should not need to do that. It all adds unnecessary friction, especially for someone who\u0026rsquo;s been religiously running manual cleanups (I concede that an un-maintained brew cache can grow to very sizable dimensions).\nHomebrew is still an essential tool; just not so enjoyable anymore. It\u0026rsquo;s not like we have a valid alternative at hand, anyway.\n","permalink":"https://nicolaiarocci.com/so-tired-of-homebrew-messing-up-with-my-stuff/","summary":"\u003cp\u003ePardon me while I\u0026rsquo;m venting out my frustration. I am so tired of Homebrew\nmessing up with my stuff. It used to be the perfect tool for the right job\nuntil they decided to auto-brew-update-and-cleanup at every new install.\nAnother day another issue, today with vim not running anymore:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003edyld: Library not loaded: /usr/local/opt/lua/lib/liblua.5.3.dylib\nReferenced from: /user/local/bin/vi\nReason: image not found\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eLua has suddenly gone missing. Ah, but of course. I installed something with\nHomebrew this morning. The fix is to \u003ccode\u003ebrew reinstall vim\u003c/code\u003e, which then leads to\nthe following error:\u003c/p\u003e","title":"So tired of Homebrew messing up with my stuff"},{"content":"My brilliant friend Salvatore Sanfilippo (otherwise known as antirez of Redis fame) has an interesting write-up on his website. How similar is programming to prose writing? After getting his own feet wet with novel writing, he is convinced that the two activities share many common traits.\nOne year ago I paused my programming life and started writing a novel, with the illusion that my new activity was deeply different than the previous one. A river of words later, written but more often rewritten, I’m pretty sure of the contrary: programming big systems and writing novels have many common traits and similar processes.\nIt is a worthy read. I especially appreciate his conclusions on what programming can actually learn from writing:\nI believe programming, in this regard, can learn something from writing: when writing the first core of a new system, when the original creator is still alone, isolated, able to do anything, she should pretend that this first core is her only bullet. During the genesis of the system she should rewrite this primitive kernel again and again, in order to find the best possible design. My hypothesis is that this initial design will greatly inform what will happen later: growing organically something that has a good initial structure will result in a better system, even after years of distance from the original creation, and even if the original core was just a tiny faction of the future mass the system would eventually assume.\nI suspect that his line of reasoning might be influenced by some sort of confirmation bias1. We are inclined to notice similarities between our own activities, especially so when we perform them passionately. While common patterns emerge naturally, differences, even remarkable ones, tend to go unnoticed.\nThe term confirmation bias is probably misused in this context. I am sure there is a better definition; it just eludes me and my own ignorance.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/on-programming-and-writing/","summary":"\u003cp\u003eMy brilliant friend Salvatore Sanfilippo (otherwise known as antirez of Redis\nfame) has an interesting write-up on \u003ca href=\"http://antirez.com/news/135\"\u003ehis website\u003c/a\u003e. How similar is\nprogramming to prose writing? After getting his own feet wet with novel\nwriting, he is convinced that the two activities share many common traits.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOne year ago I paused my programming life and started writing a novel, with\nthe illusion that my new activity was deeply different than the previous one.\nA river of words later, written but more often rewritten, I’m pretty sure of\nthe contrary: programming big systems and writing novels have many common\ntraits and similar processes.\u003c/p\u003e","title":"On Programming and Writing"},{"content":" According to a famous and fortunate Homeric expression, words are winged, not so much like birds but rather like arrows, which cut the air quickly to go straight to the target and break through the listener\u0026rsquo;s heart. The Greeks have always known that the word is used to convince and show truth and correctness. But they also know that it has a magical force in it: it can turn into a spell, capable of dominating and dragging the listener\u0026rsquo;s soul; to bewitch like music and to heal like medicine; but, above all, to deceive and mislead.\nLaura Pepe teaches ancient greek law at the University of Milan. In her career, she published many academic works and also scientific divulgation books. The Voice of the Sirens falls in the latter category.\nFor the ancients, the Sirens were horrifying monsters, half birds and half women. Yet, they had something that made them irresistible: the voice, persuasive and captivating. In this book, along with other similar mythological figures such as Circe, Calypso and Elena, Sirens are protagonists of a journey that starts from Homer and focuses on the Athens of the 5th century. Athens, the city of democracy and, even before that, of the word. Retracing little-known stories and famous passages of prose and poetry, Professor Pepe investigates the incredible potential of peithó, persuasion, the word that both seduces and convinces.\nThe word, the most powerful sovereign, can carry out the most divine deeds: it knows how to convince the true and the just, but it can also deceive and mislead. Pepe shows its strengths by looking at the protagonists of politics who address people gathered in assembly, and then at accusers and accused, who work hard to convince the court\u0026rsquo;s judges. Finally, she looks at the masters of persuasion, the sophists, who were also active in 5th century Athens.\nProfessor Pepe does a great job at reminding us how and why Ancient Greece\nbetween history, myth, poems and philosophy - has shaped our way of thinking and dealing with the world. In almost thousands of years, we have significantly progressed in many incredible ways. Yet the mechanisms that drive modern societies have evolved only marginally and, what\u0026rsquo;s humbling, the fundamental questions raised by the great minds of that age remain unanswered1. Unfortunately, I am not aware of any international edition currently available for this book. It deserves one. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-the-voice-of-the-sirens.-the-greeks-and-the-art-of-persuasion/","summary":"\u003cblockquote\u003e\n\u003cp\u003eAccording to a famous and fortunate Homeric expression, words are winged, not\nso much like birds but rather like arrows, which cut the air quickly to go\nstraight to the target and break through the listener\u0026rsquo;s heart. The Greeks\nhave always known that the word is used to convince and show truth and\ncorrectness. But they also know that it has a magical force in it: it can\nturn into a spell, capable of dominating and dragging the listener\u0026rsquo;s soul; to\nbewitch like music and to heal like medicine; but, above all, to deceive and\nmislead.\u003c/p\u003e","title":"Book Review: The Voice of the Sirens. The Greeks and the art of persuasion"},{"content":"Flask 2.0 has just been released. Along with it come many other major satellite releases: Werkzeug 2.0, Jinja 3.0, Click 8.0, ItsDangerous 2.0, and MarkupSafe 2.0.\nAcross all projects, Python 3.6+ is now required, and comprehensive type annotations are supported. At a glance, I\u0026rsquo;d say that the biggest news is async views in Flask 2. Work has also been done around Werkzeug Request and Response classes to allow for better sync and async in the future (it\u0026rsquo;s not a public API yet.) Jinja, Click and ItsDangerous come with a lot of new niceties. Details are available on the Pallets website.\nFlask is, of course, the giant on which shoulders the whole Eve project rests. To say that the Pallets team has been working hard at the forge is an understatement—huge congrats to all of them.\n","permalink":"https://nicolaiarocci.com/flask-2.0/","summary":"\u003cp\u003eFlask 2.0 has just been released. Along with it come many other major satellite\nreleases: Werkzeug 2.0, Jinja 3.0, Click 8.0, ItsDangerous 2.0, and MarkupSafe\n2.0.\u003c/p\u003e\n\u003cp\u003eAcross all projects, Python 3.6+ is now required, and comprehensive type\nannotations are supported. At a glance, I\u0026rsquo;d say that the biggest news is async\nviews in Flask 2. Work has also been done around Werkzeug \u003ccode\u003eRequest\u003c/code\u003e and\n\u003ccode\u003eResponse\u003c/code\u003e classes to allow for better sync and async in the future (it\u0026rsquo;s not\na public API yet.) Jinja, Click and ItsDangerous come with a lot of new\nniceties. Details are available on the \u003ca href=\"https://palletsprojects.com/blog/flask-2-0-released/\"\u003ePallets website\u003c/a\u003e.\u003c/p\u003e","title":"Flask 2.0"},{"content":"For decades Scandinavian countries have been renowned for their educational systems, low levels of corruption, sustainable economy, social justice, overall quality of life. According to Jukka Savolainen on Slate, the reason why Finns have now been dominating the World Happiness Report four years in a row has little to do with these factors and more with their life expectations.\nSavolainen perspective is interesting because he is a Finn living in the US. He experienced the Scandinavian system first hand, then moved to a (very) different culture.\nThe Nordic ethos stands in particularly stark contrast to the American culture characterized by \u0026ldquo;extreme emphasis upon the accumulation of wealth as a symbol of success,\u0026rdquo; as observed by the sociologist Robert K. Merton in the 1930s.\nIn comparing the different lifestyles, he also touches on the social differences. Scandinavian people are not famous for their openness or the quality of their small talk, that\u0026rsquo;s for sure. I do admire their low-aspirations attitude, which is well described in the article.\nMoreover, they embrace a cultural orientation that sets realistic limits to one\u0026rsquo;s expectations for a good life. [\u0026hellip;] People are socialized to believe that what they have is as good as it gets—or close enough. This mindset explains why Finns are the happiest people in the world despite living in small apartments, earning modest incomes—with even more limited purchasing power thanks to high prices and taxes—and, unlike Iceland, having never even made it to the World Cup!\nI have always been fascinated by the North. When I went to Stockholm to present at Pycon Sweden, I fell in love with the city. I was lucky, though. We were in May, and the weather was beautiful all week. Daylight lasted until midnight. To my enthusiasm, the locals objected I should come back in the winter season to really appreciate what living in the North entails. As a Mediterranean guy, I imagine I might soon feel the long for warmer climates and still, the dream of moving North persists.\n","permalink":"https://nicolaiarocci.com/the-grim-secret-of-nordic-happiness/","summary":"\u003cp\u003eFor decades Scandinavian countries have been renowned for their educational\nsystems, low levels of corruption, sustainable economy, social justice, overall\nquality of life. According to \u003ca href=\"https://slate.com/news-and-politics/2021/04/finland-happiness-lagom-hygge.html\"\u003eJukka Savolainen on Slate\u003c/a\u003e, the reason why\nFinns have now been dominating the World Happiness Report four years in a row\nhas little to do with these factors and more with their life expectations.\u003c/p\u003e\n\u003cp\u003eSavolainen perspective is interesting because he is a Finn living in the US. He\nexperienced the Scandinavian system first hand, then moved to a (very)\ndifferent culture.\u003c/p\u003e","title":"The Grim Secret of Nordic Happiness"},{"content":"I am very late to the party, but today I learned that the good old dotnet SmptClient is considered obsolete and should not be used. Quoting the documentation:\nWe don\u0026rsquo;t recommend using the SmtpClient class for new development because SmtpClient doesn\u0026rsquo;t support many modern protocols. Use MailKit or other libraries instead. (source)\nInterestingly, Microsoft is recommending a third-party open-source library as an alternative. I hope we\u0026rsquo;ll see more of that in the future.\nI just finished integrating MailKit in our backend. I must say that I\u0026rsquo;m pleasantly surprised by its rich feature-set and the elegant and straightforward design, which makes getting on-board super easy. It\u0026rsquo;s built on top of the excellent MimeKit, after all, and authored by the very same author Jeffrey Stedfast.\n","permalink":"https://nicolaiarocci.com/dotnet-smtpclient-should-not-be-used/","summary":"\u003cp\u003eI am very late to the party, but today I learned that the good old dotnet\n\u003ccode\u003eSmptClient\u003c/code\u003e is considered obsolete and should not be used. Quoting the\ndocumentation:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe don\u0026rsquo;t recommend using the SmtpClient class for new development because\nSmtpClient doesn\u0026rsquo;t support many modern protocols. Use MailKit or other\nlibraries instead. (\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.mail.smtpclient?view=net-5.0\u0026amp;viewFallbackFrom=netcore-5.0#remarks\"\u003esource\u003c/a\u003e)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eInterestingly, Microsoft is recommending a third-party open-source library as an\nalternative. I hope we\u0026rsquo;ll see more of that in the future.\u003c/p\u003e","title":"dotnet SmtpClient should not be used"},{"content":"Robert Edison Fulton was the first solo round-the-world motorcycle tourer. He made his worldwide trip on a two-cylinder Douglas motorcycle between July 1932 and December 1933, more or less 90 years ago. On his way from London to the colonial Middle East, Fulton crossed Nazi Germany. Some of the countries and places he passed do not exist anymore. Most have changed dramatically; others, not so much. I suspect, for example, that his adventures in Syria, Afghanistan, or at the Indian-Pakistani borders might have been written today.\nFulton was in his early twenties when he started his journey. The book was published only a few years later, in 1937. Stories were still fresh and not conditioned by the passing age. That is important because within the next decade the world would change forever. Take Japan. There he is greeted by a flock of enthusiast, merry motorcyclists who will accompany him across the country, celebrating the strong bond between the United States and the Rising Sun. In few years, the same situation will be inconceivable.\nThis book is not your typical motorcycle log. It is about stories, people, and societies more than routes, timetables, and usual motorcycle porn. The Author might happily skip thousands of miles across some undoubtedly incredible terrain just because he feels the urge to tell about that memorable encounter he had in Teheran or Tokyo or that otherwise small insignificant Malaysian village.\nThe tone is often naive and amusing. Even dramatic events are often narrated in a light, entertaining fashion. But make no mistake, this was a genuine adventure, filled with thrilling and dangerous moments. It is somewhat startling that the Author could cross so many God-forsaken places only to get his bike stolen when he was back home in New York. Thankfully he got it back one week later.\nIn few occurrences, a colonial attitude surfaces. That might sound jarring to the modern educated reader, but we have to put it all in context. After all, in 1932, Fulton was the offspring of a wealthy American family. He was studying in London when he left to explore the world in reply to a dare. Given the premise, I think he instead emerges as a curious, unassuming person who is willing to learn, understand and, of course, explore.\nIn the same years, Patrick Leigh Fermor, another young student, embarked on a similar journey. He went all the way across Europe down to Constantinople, on foot. Leigh Fermor memories are also available for your reading pleasure in a remarkable three-book series1. Together, the stories of these two fearless authors draw a great picture of an age when the world was still enormous and divided into many diverse, often isolated cultures and societies.\nFirst one being A Time of Gifts: On Foot to Constantinople: from the Hook of Holland to the Middle Danube. Browse some of his books in my reading list. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-one-man-caravan/","summary":"\u003cp\u003eRobert Edison Fulton was the first solo round-the-world motorcycle tourer. He\nmade his worldwide trip on a two-cylinder Douglas motorcycle between July 1932\nand December 1933, more or less 90 years ago. On his way from London to the\ncolonial Middle East, Fulton crossed Nazi Germany. Some of the countries and\nplaces he passed do not exist anymore. Most have changed dramatically; others,\nnot so much.  I suspect, for example, that his adventures in Syria,\nAfghanistan, or at the Indian-Pakistani borders might have been written today.\u003c/p\u003e","title":"Book Review: One Man Caravan"},{"content":"The official Git documentation presents the following example as a valid use-case for the worktree command:\nYou are in the middle of a refactoring session and your boss comes in and demands that you fix something immediately. You might typically use git-stash1 to store your changes away temporarily. However, your working tree is in such a state of disarray (with new, moved, and removed files and other bits and pieces strewn around) that you don\u0026rsquo;t want to risk disturbing any of it. (source)\nIf you don\u0026rsquo;t know about worktree, you should check it out. It is a handy, powerful yet little known command. I don\u0026rsquo;t use it, however. It will check out a new branch to a new directory, and I don\u0026rsquo;t like that. I prefer to keep the simple, default 1:1 relationship between the repository and the file system. Managing multiple working trees seems like an unnecessary complication when similar results can be achieved with a few aliases.\nIndeed, for the use-case above, my workflow revolves around three git-aliases. Over the years, I collected many. Most of them (like the ones mentioned here) are not my doing. I stumbled upon them somewhere, tinkered as needed, and then incorporated them into my daily workflow.\ngit save This adds all changes, including untracked files, to the staging area and then commits with a SAVEPOINT message. When an emergency hits and I need to quickly switch context, I\u0026rsquo;ll just git save and check out to a new branch to do whatever I am tasked to do. When I\u0026rsquo;m done, I\u0026rsquo;ll switch back to my original branch, git undo(see below), and resume work. It\u0026rsquo;s easily configured with:\n$ git config --global alias.save '!git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;SAVEPOINT\u0026quot;' git wip wip is similar to save. It stages all tracked changes and then commits with a WIP message. So yes, it offers the same features as above but leaves untracked files unstaged, a significant difference. Like above, when done with the extra work, I\u0026rsquo;ll switch back, git undo, and resume. Set it up with:\n$ git config --global alias.wip '!git add -u \u0026amp;\u0026amp; git commit -m \u0026quot;WIP\u0026quot;' git undo This alias allows me to quickly resume work after a save or wip. It undoes the last commit but keeps its changes, with files unstaged. It can also be used in other circumstances (for those, however, I have a functionally identical r1 alias at hand). Configure with:\n$ git config —-global alias.undo 'reset HEAD^ —-mixed' git wipe This is a special, use-with-caution one. It adds changes in the working tree to a WIPE SAVEPOINT commit, then it wipes the commit. At that point, the working tree is clean, but I can still go back to that work if the need arises (via reflog). Seldom used, this wipe comes in handy when I have some experimental code that is not going into production and yet, I want to keep it around. Set it up with:\n$ git config --global alias.wipe \\ '!git add -A \u0026amp;\u0026amp; git commit -qm \u0026quot;WIPE SAVEPOINT\u0026quot; \u0026amp;\u0026amp; git reset HEAD~1 --hard' If you are not familiar with the git reflog, you might want to stay clear from wipe, though.\nOne advantage of this workflow is that saved changes will stay with their relevant branch. When you get back to it, git log will hint at what happened when you left. Assuming it is a private branch, you might even decide to push it for backup before starting the hotfix work.\n","permalink":"https://nicolaiarocci.com/git-worktree-vs-git-savepoints/","summary":"\u003cp\u003eThe official Git documentation presents the following example as a valid\nuse-case for the \u003ccode\u003eworktree\u003c/code\u003e command:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou are in the middle of a refactoring session and your boss comes in and\ndemands that you fix something immediately. You might typically use\ngit-stash\u003ca href=\"https://git-scm.com/docs/git-worktree\"\u003e1\u003c/a\u003e to store your changes away temporarily. However, your working\ntree is in such a state of disarray (with new, moved, and removed files and\nother bits and pieces strewn around) that you don\u0026rsquo;t want to risk disturbing\nany of it. (\u003ca href=\"https://git-scm.com/docs/git-worktree\"\u003esource\u003c/a\u003e)\u003c/p\u003e","title":"Git Worktree vs Git Savepoints"},{"content":" Only 24 people have journeyed far enough to see the whole Earth against the black of space. The images they brought back changed our world. Here is a selection of the most beautiful photographs of Earth — iconic images and unknown gems — digitally restored to their full glory.\nToby Ord\u0026rsquo;s recent Earth Restored project is a must-see.\n","permalink":"https://nicolaiarocci.com/earth-restored/","summary":"\u003cblockquote\u003e\n\u003cp\u003eOnly 24 people have journeyed far enough to see the whole Earth against the\nblack of space. The images they brought back changed our world. Here is\na selection of the most beautiful photographs of Earth — iconic images and\nunknown gems — digitally restored to their full glory.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eToby Ord\u0026rsquo;s recent \u003ca href=\"https://www.tobyord.com/earth\"\u003eEarth Restored\u003c/a\u003e project is\na must-see.\u003c/p\u003e","title":"Earth Restored"},{"content":"It\u0026rsquo;s maintenance day in my little Python world. I just released new versions of two small but apparently quite popular packages:\neve-swagger, the OpenAPI/Swager extensions for Eve-powered APIs, hits v0.1.4. It\u0026rsquo;s just a single fix for API breakage introduced with the previous release; details available here. Thanks to Asger Gitz-Johansen for the help with this release.\nFlask-Sentinel, an Oauth2 Provider for Flask, hits v0.0.8. This also is a small release that fixes 500 errors if you were using unpinned versions of redis. This time, my gratitude goes to Adrian Cin.\nEnjoy.\n","permalink":"https://nicolaiarocci.com/new-eve-swagger-and-flask-sentinel-releases/","summary":"\u003cp\u003eIt\u0026rsquo;s maintenance day in my little Python world. I just released new versions of\ntwo small but apparently quite popular packages:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://pypi.org/project/Eve-Swagger/\"\u003eeve-swagger\u003c/a\u003e, the OpenAPI/Swager\nextensions for \u003ca href=\"https://python-eve.org\"\u003eEve\u003c/a\u003e-powered APIs, hits v0.1.4. It\u0026rsquo;s\njust a single fix for API breakage introduced with the previous release;\ndetails available\n\u003ca href=\"https://github.com/pyeve/eve-swagger/blob/master/CHANGES.rst\"\u003ehere\u003c/a\u003e. Thanks to\nAsger Gitz-Johansen for the help with this release.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://pypi.org/project/Flask-Sentinel/\"\u003eFlask-Sentinel\u003c/a\u003e, an Oauth2 Provider\nfor Flask, hits v0.0.8. This also is a small release that fixes 500 errors if\nyou were using unpinned versions of redis. This time, my gratitude goes to Adrian Cin.\u003c/p\u003e","title":"New Eve-Swagger and Flask-Sentinel releases"},{"content":" As I was browsing my RSS feed this morning, I came across a [new blog][1] from Nat Friedman over at GitHub. The piece was titled \u0026ldquo;Open source goes to Mars\u0026rdquo;, and, of course, it caught my interest. In the article, Nat announced a Mars 2020 Helicopter Mission badge added to GitHub profiles contributing to open-source projects and libraries used by Ingenuity. Some time ago, like many others, I was granted the Arctic Code Vault badge, so I am familiar with the concept. I quickly dismissed the information as \u0026ldquo;nice, not gonna get it\u0026rdquo; and moved along.\nLater during the day, I got a mail from an Eve contributor. In between other things, he briefly congratulated me on my new GitHub badge. I went to check my profile, only to find that, indeed, I am a Mars Helicopter Contributor. I was bewildered. To my knowledge, I never worked on something even remotely related to the Ingenuity mission.\nYears ago, I received a package from a software team at a private space agency whose name I cannot tell. They sent me a lot of cool swag and a hand-written letter signed by all team members. In it, I learned that they had been using one of my open-source projects with success. They added that I should take pride, as my work was used in one of their renowned space ships projects. The package was their way to express gratitude. If you\u0026rsquo;ve attended any of my talks in the past, you probably know this story. You might have seen me wearing one of their t-shirts too. I knew my work was used in many places; I certainly did not expect it was contributing to a space ship program.\nSo when I reached for my profile page on GitHub today, I was confused, yes, but not wholly unprepared. And indeed, there it is, the new, shiny Mars Helicopter Contributor badge. A quick investigation revealed that I earned it as a Flask contributor. To be honest, I don\u0026rsquo;t even remember contributing to it1. I know I\u0026rsquo;ve used it extensively, of course, as [Eve][4] inherits from and builds on it.\nSo, what to make of all of this? I am happy, of course. I have a badge of honor to show off to my kids later this evening. I appreciate the intent:\n“Many of the people who are getting a badge probably have no idea their software is being used to fly a helicopter on another planet,” says GitHub Senior Director of Developer Relations Martin Woodward. “We wanted to make sure everyone was recognized for their contributions to this incredible human achievement.” (source)\nThese badges surely help raise awareness of open-source relevance in the modern-day world. I am grateful for it. I have to say, however, that I am not a fan of the current gamification process going on at GitHub. I cringed when I saw the \u0026ldquo;How do you feel today\u0026rdquo; box in my profile page a while ago2. This Achievements feature looks good on the surface. Still, it leans itself to be leveraged in many different, even subtle ways. Let\u0026rsquo;s hope for the best.\nA quick git shortlog -sne on the flask repo confirms the rumors.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIt seems gone now? [4]: https://github.com/pyeve/ [1]: https://github.blog/2021-04-19-open-source-goes-to-mars/ [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/i-am-a-mars-helicopter-contributor/","summary":"\u003cp\u003e\u003cimg alt=\"The Mars Helicopter Contributor badge\" loading=\"lazy\" src=\"/images/mars-achievement.webp#right\"\u003e\nAs I was browsing my RSS feed this morning, I came across a [new blog][1] from\nNat Friedman over at GitHub. The piece was titled \u0026ldquo;Open source goes to Mars\u0026rdquo;,\nand, of course, it caught my interest. In the article, Nat announced a Mars\n2020 Helicopter Mission badge added to GitHub profiles contributing to\nopen-source projects and libraries used by Ingenuity. Some time ago, like many\nothers, I was granted the Arctic Code Vault badge, so I am familiar with the\nconcept. I quickly dismissed the information as \u0026ldquo;nice, not gonna get it\u0026rdquo; and\nmoved along.\u003c/p\u003e","title":"I am a Mars Helicopter Contributor"},{"content":"Consider the 10x10 grids of green and white boxes below. How would you make them symmetrical? Most people would add green boxes to the emptier half of the grid rather than remove them from the fuller half. Even when the latter would have been more efficient.\nThe case, along with a similar problem revolving around the stability of a peculiar lego structure, is reported by an intriguing Nature article on the topic of psychology and human behaviour. The paper linked to the piece demonstrates that people consistently consider changes that add components over those that subtract them.\nWhat are the implications of Adams and colleagues’ findings? There are many real-world consequences of failing to consider that situations can often be improved by removing rather than adding. For instance, when people feel dissatisfied with the decor of their home, they might address the situation by going on a spending spree and acquiring more furniture — even if it would be equally effective to get rid of a cluttering coffee table. [\u0026hellip;] On a grander scale, the favouring of additive solutions by individual decision-makers might contribute to problematic societal phenomena, such as the increasing expansion of formal organizations4 and the near-universal but environmentally unsustainable quest for economic growth. (source)\nIs the innate tendency to favour additive solutions contributing to the entropy of the software systems we build? And if so, isn\u0026rsquo;t over-engineering, the scarecrow of software systems, its most apparent consequence? I\u0026rsquo;m in no way an expert in human behaviour and its implications in software engineering. Still, my bet is on a hard yes on both questions.\n","permalink":"https://nicolaiarocci.com/adding-is-favoured-over-subtracting-in-problem-solving-and-software-systems/","summary":"\u003cp\u003eConsider the 10x10 grids of green and white boxes below. How would you\nmake them symmetrical? Most people would add green boxes to the emptier half of\nthe grid rather than remove them from the fuller half. \u003cem\u003eEven when the latter\nwould have been more efficient\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/asymmetrical-grid.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eThe case, along with a similar problem revolving around the stability of\na peculiar lego structure, is reported by an \u003ca href=\"https://www.nature.com/articles/d41586-021-00592-0\"\u003eintriguing Nature article\u003c/a\u003e on\nthe topic of psychology and human behaviour. The paper linked to the piece\ndemonstrates that people consistently consider changes that add components over\nthose that subtract them.\u003c/p\u003e","title":"Adding is favoured over subtracting in problem solving (and software systems)"},{"content":" The name SQLite is a nice name, but the \u0026ldquo;lite\u0026rdquo; part is misleading, it sounds like it is only useful for tiny things - which is very wrong. SQLite should be named AwesomeSQL, because that is what it is. SQLite is probably the only database you will ever need in most cases\nYeah. This article resonates with me. SQLite is the de-facto standard engine for embedded systems. But it should also be the go-to database for all those websites and services that don\u0026rsquo;t need to scale to multiple machines. Which, in the real world, happens way more frequently than we all imagine.\n","permalink":"https://nicolaiarocci.com/sqlite-is-the-only-database-you-will-ever-need-in-most-cases/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe name SQLite is a nice name, but the \u0026ldquo;lite\u0026rdquo; part is misleading, it sounds\nlike it is only useful for tiny things - which is very wrong. SQLite should\nbe named AwesomeSQL, because that is what it is. SQLite is probably the only\ndatabase you will ever need in most cases\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eYeah. \u003ca href=\"https://unixsheikh.com/articles/sqlite-the-only-database-you-will-ever-need-in-most-cases.html\"\u003eThis article\u003c/a\u003e resonates with me. SQLite is the de-facto standard\nengine for embedded systems. But it should also be the go-to database for all\nthose websites and services that don\u0026rsquo;t need to scale to multiple machines.\nWhich, in the real world, happens way more frequently than we all imagine.\u003c/p\u003e","title":"SQLite is the only database you will ever need in most cases"},{"content":" It is Super Bowl Sunday in the year 2022. Five people, dinner, an apartment on the east side of Manhattan. The retired physics professor and her husband and her former student waiting for the couple who will join them from what becomes a dramatic flight from Paris. The conversation ranges from a survey telescope in North-central Chile to a favorite brand of bourbon to Einstein’s 1912 Manuscript on the Special Theory of Relativity. Then something happens and the digital connections that have transformed our lives are severed. What follows is a dazzling and profoundly moving conversation about what makes us human.\nWhat happens when our technology suddenly abandons us? In this novella, DeLillo explores the immediate consequences of such an event. It\u0026rsquo;s a brief exploration, though. We don\u0026rsquo;t get to go too far into the story. The book ends abruptly, and we\u0026rsquo;re left stranded there, pondering and wondering. I imagine this is intentional. Upon reflection, I concede the author\u0026rsquo;s goal is achieved, but I have to say, my immediate feeling is unfinished work.\nThe writing meets DeLillo\u0026rsquo;s high standards. If you\u0026rsquo;ve read him before, you\u0026rsquo;ll recognize his peculiar style at first sight. The idea is also good, albeit not super-original.\nI found The Silence to be good, but not as good as I expected. After reading Underworld, the bar is set pretty damn high. Anything from DeLillo should pertain to the mind-boggling department. This novel fits more in the ok department. It could serve as a great, gentle introduction to DeLillo, though, as his other works can indeed be intimidating.\n","permalink":"https://nicolaiarocci.com/book-review-the-silence-a-novel/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIt is Super Bowl Sunday in the year 2022. Five people, dinner, an apartment\non the east side of Manhattan. The retired physics professor and her husband\nand her former student waiting for the couple who will join them from what\nbecomes a dramatic flight from Paris. The conversation ranges from a survey\ntelescope in North-central Chile to a favorite brand of bourbon to Einstein’s\n1912 Manuscript on the Special Theory of Relativity. Then something happens\nand the digital connections that have transformed our lives are severed. What\nfollows is a dazzling and profoundly moving conversation about what makes us\nhuman.\u003c/p\u003e","title":"Book Review: The Silence, A Novel"},{"content":"What a fascinating read. It sits right at the intersection of two of my (too many) vicious interests: Jazz music and books.\nSince the mid-1970s, almost every jazz musician has owned a copy of the same book. It has a peach-colored cover, a chunky, 1970s-style logo, and a black plastic binding. It’s delightfully homemade-looking—like it was printed by a bunch of teenagers at a Kinkos. And inside is the sheet music for hundreds of common jazz tunes—also known as jazz “standards”—all meticulously notated by hand. It’s called the Real Book.\nBut if you were going to music school in the 1970s, you couldn’t just buy a copy of the Real Book at the campus bookstore. Because the Real Book… was illegal. The world’s most popular collection of Jazz music was a totally unlicensed publication. It was a self-published book created without permission from music publishers or songwriters. It was duplicated at photocopy shops and sold on street corners, out of the trunks of cars, and under the table at music stores where people used secret code words to make the exchange. The full story of how the Real Book came to be this bootleg bible of jazz is a complicated one. It’s a story about what happens when an insurgent, improvisational art form like Jazz gets codified and becomes something that you can learn from a book.\nThe whole story, both as text or podcast, is available here.\n","permalink":"https://nicolaiarocci.com/the-real-book-of-jazz/","summary":"\u003cp\u003eWhat a fascinating read. It sits right at the intersection of two of my (too\nmany) vicious interests: Jazz music and books.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSince the mid-1970s, almost every jazz musician has owned a copy of the same\nbook. It has a peach-colored cover, a chunky, 1970s-style logo, and a black\nplastic binding. It’s delightfully homemade-looking—like it was printed by\na bunch of teenagers at a Kinkos. And inside is the sheet music for hundreds\nof common jazz tunes—also known as jazz “standards”—all meticulously notated\nby hand. It’s called the Real Book.\u003c/p\u003e","title":"The Real Book (of Jazz)"},{"content":"I never see my macOS desktop. It\u0026rsquo;s always cluttered with way too many open windows. When I spot those fantastic, tidy and clean Desktops on the internet, I envy their owners. I wonder if and how they manage to keep those desktops tidy like that the whole workday. It must feel so good.\nI try to keep my windows well arranged. The typical setup might be two windows, from two different apps, tiled side by side. Maybe the browser, or Postman, on the right, and my favourite editor on the left. Stuff like that.\nHookshot is excellent for doing just that. I discovered this tiny little app a few weeks ago, thanks to Robin Rendle. Before, I was using Moom, which is also good. I like Hookshot\u0026rsquo;s dead-simple keyboard shortcuts. Once the single modifier key combo Control+Command clicks, you\u0026rsquo;re done. Rearranging windows becomes a no-brainer. In a way, the experience reminds me of Vim and its unique muscle-memory superpower. The ten days trial ended today, and I purchased the license right away.\n","permalink":"https://nicolaiarocci.com/quicker-window-snapping-on-macos/","summary":"\u003cp\u003eI never see my macOS desktop. It\u0026rsquo;s always cluttered with way too many open\nwindows. When I spot those fantastic, tidy and clean Desktops on the internet,\nI envy their owners. I wonder if and how they manage to keep those desktops\ntidy like that the whole workday. It must feel so good.\u003c/p\u003e\n\u003cp\u003eI try to keep my windows well arranged. The typical setup might be two windows,\nfrom two different apps, tiled side by side. Maybe the browser, or Postman, on\nthe right, and my favourite editor on the left. Stuff like that.\u003c/p\u003e","title":"Quicker window snapping on macOS"},{"content":"Giulia got an exciting assignment from her teacher:\nWrite a C program that simulates (a simplified version of) COVID outbreak spreading across a population of 200 people. When a healthy person comes into contact with a sick person, the healthy person becomes ill, too. After some time, a sick person will recover. A recovered person cannot infect a healthy person nor become sick again after coming in contact with a sick person.\nIn more prosaic terms: the world comprises a 30*50 cell grid. Of these, 200 cells are randomly selected to be alive. Throughout the simulation, each of these cells can be in one of the following three states: healthy, sick, or recovered. If a cell is ill, at the next cycle, all neighbouring cells will also be diseased. A cell stays sick for 14 cycles. At cycle 15, it is healed. The simulation ends when all 200 cells are either recovered or healthy.\nGiulia\u0026rsquo;s implementation was fine, but a couple of subtle bugs prevented it from succeeding, and that\u0026rsquo;s how I got involved. In general, she doesn\u0026rsquo;t ask for help, nor do I ask her about her progress. If she reaches out to me, it\u0026rsquo;s only for serious trouble, and when that happens, I enjoy working with her. Besides, while I do a lot C# these days, I don\u0026rsquo;t do C since aeons ago, so it\u0026rsquo;s great to get back to it every once in a while.\nAbove, the healthy population inhabiting its 1500-cells world, right before the outbreak.\nHalfway through the simulation, 86 cells are healthy, 46 are sick, and 68 are healed.\nEnd of the simulation. It doesn\u0026rsquo;t matter how many times you run it; the number of people who were never infected is stunningly low by the end. Moreover, a simulation like this one, albeit simplified, reveals how dramatically an epidemic can spread if not contained with social distancing.\nI was pleasantly surprised by this assignment. Here we have a teacher who doesn\u0026rsquo;t constraint herself to the standard, well-established routine. Instead, she keeps her students engaged and challenges them. At the same time, she takes the chance to educate them on the current sanitary emergency. Giulia tells me that her teacher was inspired by a March 2020 Washington Post article: Why outbreaks like coronavirus spread exponentially, and how to \u0026ldquo;flatten the curve.\u0026rdquo; That\u0026rsquo;s excellent work. It includes several animated simulations, Giulia\u0026rsquo;s assignment being one of them.\n","permalink":"https://nicolaiarocci.com/school-assignments-that-count-simulating-the-covid-outbreak-with-the-c-language/","summary":"\u003cp\u003eGiulia got an exciting assignment from her teacher:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWrite a C program that simulates (a simplified version of) COVID outbreak\nspreading across a population of 200 people. When a healthy person comes into\ncontact with a sick person, the healthy person becomes ill, too. After some\ntime, a sick person will recover. A recovered person cannot infect a healthy\nperson nor become sick again after coming in contact with a sick person.\u003c/p\u003e","title":"School assignments that count: simulating the COVID outbreak with the C language"},{"content":"While reading Erebus, The Story of a Ship, my attention was caught by a brief mention of the Whaleship Essex. Being the sucker that I am for exploration and dramatic adventure stories from the early days, I researched it, only to surface with Nathaniel Philbricks\u0026rsquo; In The Heart of the Sea in my hands.\nIn the Heart of the Sea brings to new life the incredible story of the wreck of the whaleship Essex - an event as mythic in its own century as the Titanic disaster in ours, and the inspiration for the climax of Moby-Dick. In a harrowing page-turner, Nathaniel Philbrick restores this epic story to its rightful place in American history.\nIn The Heart of the Sea is a nonfiction work. By telling the story of the Essex Whaleship\u0026rsquo;s final voyage, it successfully brings back the difficult, dangerous, and adventurous lives of the 19th-century whalers.\nThe book is organized into four main parts. In the first part, the author recounts Nantucket\u0026rsquo;s culture and it\u0026rsquo;s people way of life. The isle of Nantucket was the then flourishing world capital of the whale-hunting industry. It is difficult for a modern-world citizen to conceive how big a deal the whale-hunting industry was back then. Just think that, back then, all the street lamps and most common lamps were burning - you guessed it - whale oil.\nIn the second part, we follow the Whaleship Essex and its crew as they hunt sperm whales across the Atlantic Ocean and the Pacific. This is where we learn what living the whale-hunter life on board an 18th-century ship was like, and let me tell you, it wasn\u0026rsquo;t pretty. We also get to know most crew members, starting from Captain George Pollard Jr. and First Mate Owen Chase. They will both have a prominent role in the events that will follow.\nThe third part is the earth of the story. Essex\u0026rsquo;s wreck was caused by an enraged sperm whale. After the disaster, the crew then had to go through a dramatic ordeal. They were alone, on three tiny whaleboats in the middle of the Pacific, 3.700km west of South America, with scarce food and water. The choices they made at that moment were crucial. Unfortunately, they weren\u0026rsquo;t the right ones. I think this is an essential point in the story. Ignorance, and superstitions, induced the survivors to make the wrong call on their next move, which led to terrible, unbearable consequences.\nThe fourth part follows the survivors as they come back to the isle and then spend the rest of their lives struggling to arrive at peace with the events they lived and the actions they were forced to commit during their 1820 ordeal (Philbrick just loves using this world, \u0026ldquo;ordeal\u0026rdquo;.)\nI thoroughly enjoyed this book. Philbrick did a great job reconstructing and then telling the events in a fascinating, engaging way. Not that the story needed embellishments, really. Having read the account of the disaster compiled by First Mate Owen Chase, Hermann Melville used it as inspiration for his Moby-Dick. Philbrick actually tries to reconstruct Melville\u0026rsquo;s encounters with both Captain Pollard and First Mate Chase. I appreciate how the author always informs the reader when he\u0026rsquo;s entering speculation territory.\n","permalink":"https://nicolaiarocci.com/book-review-in-the-heart-of-the-sea-the-tragedy-of-the-waleship-essex/","summary":"\u003cp\u003eWhile reading \u003ca href=\"/book-review-erebus-the-story-of-a-ship/\"\u003eErebus, The Story of a Ship\u003c/a\u003e, my attention was caught by\na brief mention of the Whaleship Essex.  Being the sucker that I am for\nexploration and dramatic adventure stories from the early days, I researched\nit, only to surface with Nathaniel Philbricks\u0026rsquo; In The Heart of the Sea in my\nhands.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the Heart of the Sea brings to new life the incredible story of the wreck\nof the whaleship Essex - an event as mythic in its own century as the Titanic\ndisaster in ours, and the inspiration for the climax of Moby-Dick. In\na harrowing page-turner, Nathaniel Philbrick restores this epic story to its\nrightful place in American history.\u003c/p\u003e","title":"Book Review: In the Heart of the Sea, The Tragedy of the Waleship Essex"},{"content":" This is a maintained technical guide that aims to provide introduction to various online tracking techniques, online id verification techniques and guidance to creating and maintaining (truly) anonymous online identities including social media accounts safely and legally. No pre-requisites besides English reading are required.\nAt a glance, I suspect most people will be tempted to dismiss The Hitchhiker\u0026rsquo;s Guide to Online Anonymity as borderline paranoia. But make no mistake, it is a great resource. Granted, not everyone on the Internet is interested in anonymous identities (I am not) or concerned about NSA or the Mossad hunting them down. People have different threat levels.\nIdeally, however, everyone should have a basic understanding of how his/her activities can be tracked down on the Internet. The Hitchhiker\u0026rsquo;s Guide does a great job at panning out of all that. Armed with this kind of knowledge, we can then decide our threat level and act accordingly. The website is also chocked-full of links to valuable resources.\n","permalink":"https://nicolaiarocci.com/the-hitchhikers-guide-to-online-anonymity/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis is a maintained technical guide that aims to provide introduction to\nvarious online tracking techniques, online id verification techniques and\nguidance to creating and maintaining (truly) anonymous online identities\nincluding social media accounts safely and legally. No pre-requisites besides\nEnglish reading are required.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eAt a glance, I suspect most people will be tempted to dismiss \u003ca href=\"https://anonymousplanet.org/index.html\"\u003eThe Hitchhiker\u0026rsquo;s\nGuide to Online Anonymity\u003c/a\u003e as borderline paranoia. But make no mistake, it\nis a great resource. Granted, not everyone on the Internet is interested in\nanonymous identities (I am not) or concerned about NSA or the Mossad hunting\nthem down. People have different threat levels.\u003c/p\u003e","title":"The Hitchhiker’s Guide to Online Anonymity"},{"content":"Phil and Jeremy both turned 50 this year. They took the opportunity to write some half-century notes. Having turned 50 myself and inspired by them, I thought I would do the same.\n0-10 I see the light 50 years ago in Molise, a southern region of Italy that also happens to be the smallest and less known. One year later, my brother joins the family. Our parents are from a small village in Molise heights. When I am three, my family moves to Nigeria, following my dad, who is employed in the oil field. We spend about two years there. The memories from that period are scavenged from some clips recorded by my dad at the time. A female monkey used to live in our garden. Our home was part of a walled complex. Two soldiers were guarding the entrance, night and day. The wall, I remember, was built with wooden pales, very much like those wild-west forts from the old movies. When we move back, it is for the North-Eastern part of Italy, in the Ferrara province first, and then in Ravenna. I guess there\u0026rsquo;s not a lot to say about this decade; the usual baby-son-of-a-middle-class-emigrant-family routine applies here.\n10-20 Teenage turmoil. I\u0026rsquo;m an insecure, shy adolescent with way too much imagination and lots of unreleased energy to handle. The neighbourhood offers a good pack of friends. I tend to keep most of my super-fancy thoughts to myself. It does not help that I get strange looks when I try to share them with friends. Midway into the decade, I find out about computers. Claudio, who\u0026rsquo;s living next door, has a Sinclair Spectrum ZX. I am fascinated by it. After some little moral suasion, my dad gets me a Commodore 64, which I immediately nick-name Charlie. It unlocks a universe of possibilities.\nAt school, I meet Serena. In 1987, at seventeen, I overcome my shyness, go to the local computer shop, and ask if they\u0026rsquo;d be interested in sponsoring the first Bulletin Board System, or BBS, in town. Freddy, the guy at the counter, replies with a convinced yes. A few weeks later, Lorien BBS is alive and kicking from the shop\u0026rsquo;s backroom. Around it, a gang of local wanna-be hackers gathers. Among them is Stefano. I graduate from Ravenna\u0026rsquo;s accounting school with a computer-programming degree.\n20-30 I spend one hell of a challenging year in the navy. It\u0026rsquo;s my first experience away from home, discipline is rigid, and the Gulf War is in full swing. After three months of training, I am deployed as a signaler on board a navy ship in the Mediterranean sea. When I get back from the navy and am about to enroll in the Computer Science course at the University of Bologna, Stefano and Freddy come up with this weird idea that we could start a software company. I enthusiastically agree. It\u0026rsquo;s the early 90s, I am 21, and the world is my oyster. We begin with courses, then pivot to what we were set to do: writing computer programs and selling them. The original Lorien BBS from the 80s moves into new offices and becomes Phoenix BBS, a fully-fledged FidoNet node1.\nMS-DOS is dominating the market. We bet on Windows 3.1 and start writing software for it. One week I spend at my desk, hacking code; the next week, I load my car\u0026rsquo;s trunk with my software and travel around Italy, proposing my boxes to computer stores. At that time, software was sold on floppy disks, along with a printed manual, all packaged in cardboard boxes. I remember resellers asking why in the world we were selling Windows software when everyone was on MS-DOS. Later on, to leverage our now developed resellers' network, we begin distributing third-party products, mainly anti-virus software: McAfee and, later, Norton and others. The Internet appears out of nowhere, and I don\u0026rsquo;t immediately grasp its innovative potential. I marry Serena. We live in a house we bought years before, with help from my family and a 20-year loan. Besides hacking at computers, my hobbies are hiking and climbing the Alps.\n30-40 In 2000 our first son Marco is born. Giulia arrives four years later. Then comes Anna in 2006. Meanwhile, Serena goes back from teaching to being an epidemiologist, and then she eventually sets back again into teaching math in high school. I slow down on hiking and climbing and take on running, even competitively, and swimming. We sell our home, a townhouse, and move into a flat with an extra bedroom. In the process, we extinguish the loan. We are now debt-free, and it feels good. I miss the tiny little garden we had; we traded it for more indoor space: three kids and all. The company grows; we hire people. The 2000-2010 decade is a fast-paced one for me. A lot of work. The Millennium Bug; the advent of the Euro. I write the second installment of our company\u0026rsquo;s primary software product, an accounting application. By the mid-2000s, we are selling it all across the country with success.\nSoftware distribution is a bitch, however. It grants high revenues but tiny, close-to-none profits. Meanwhile, the market has shifted from a network of myriads of small, independent, local computer shops to big franchises and, a bit later, malls. Many computer shops are forced to close down or join the franchise, losing their independence. Also, the software starts selling on the Internet. While our self-produced accounting application keeps selling well and for a good profit, third-party software distribution comes to a halt. Producers, anti-virus houses especially, are now by-passing independent software distributors like us, making direct deals with franchising chains and malls. Professional accounting applications are not attractive to malls and franchises, as they are all about consumers. Our infrastructure, built to accommodate for high volumes thanks to distribution deals, is now an incumbent. Struggling to survive, we pivot into selling our software online2. That\u0026rsquo;s when the world economic crisis of 2008 hits the streets.\n40-50 We barely survive, not without scratches and pain. We\u0026rsquo;re essentially back where we started. Only a handful of us, revenues significantly reduced. Expenses, however, are also dramatically reduced. In 2012 we are all remote workers. Our premises (that we own) are rented. Somehow in the process, or maybe because of the process, I start open-sourcing some of my work3. That leads to a surprising and somewhat winding path where I emerge as an open-source author, conference speaker, consultant, and teacher. Somehow I am awarded the MongoDB Master and then Microsoft MVP awards. All of this is very rewarding personally and emotionally and is much needed after all the struggle. The smaller and agile company structure allows us to keep going. I drop running in favor of body-weight training (I think it is now called calisthenics). I finally get myself a motorcycle4; I always dreamed of owning one. Kids have grown. Marco, our first son, is currently studying in France at the university, and the girls are in their teenage years, doing what teenagers do.\nLike I think everyone else, looking back, I often question some choices I made in my life. Ditching university to co-found a company at 21 was, of course, fundamental. Another pivotal moment was in the mid-2000s when the crisis hit us hard. I could have parted ways with my colleagues and attempt new ventures. But it\u0026rsquo;s all in vain. We\u0026rsquo;re left with what we have. I am proud of many achievements and don\u0026rsquo;t regret the mistakes. I (we) learned from them, and they also were, to some extent, the vectors for new opportunities.\nNext We\u0026rsquo;re about to launch the third installment of our main application. We\u0026rsquo;ve been working hard on it, and I can\u0026rsquo;t wait to see it being used by our beloved clients. This decade and the next one will see me still hacking and working on computers. More or less of the same? Possibly. Thankfully, I still love my profession. I can\u0026rsquo;t wait to see how our kids pursue their path in life. We will be accompanying them from a distance and when necessary. The world is their oyster.\nI wrote a little about my time as a BBS Sysop, see here.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIn 2021 I gave a talk about our switch to the online market. Both slides and video are available (Italian).\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nSee my Open Source page. Also, I have a presentation titled My Story With Open Source. I presented it at several conferences. [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nA Triumph Bonneville T120. I also ended up founding and running the Italian branch of the Triumph Owners Motorcycle Club.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/half-century-of-service/","summary":"\u003cp\u003e\u003ca href=\"https://www.gyford.com/phil/writing/2021/03/18/half-century-notes/\"\u003ePhil\u003c/a\u003e and \u003ca href=\"https://adactio.com/journal/17974\"\u003eJeremy\u003c/a\u003e both turned 50 this year. They took the opportunity\nto write some half-century notes. Having turned 50 myself and inspired by them,\nI thought I would do the same.\u003c/p\u003e\n\u003ch3 id=\"0-10\"\u003e0-10\u003c/h3\u003e\n\u003cp\u003eI see the light 50 years ago in Molise, a southern region of Italy that also\nhappens to be the smallest and less known. One year later, my brother joins the\nfamily. Our parents are from a small village in Molise heights. When I am\nthree, my family moves to Nigeria, following my dad, who is employed in the oil\nfield. We spend about two years there. The memories from that period are\nscavenged from some clips recorded by my dad at the time. A female monkey used\nto live in our garden. Our home was part of a walled complex. Two soldiers were\nguarding the entrance, night and day. The wall, I remember, was built with\nwooden pales, very much like those wild-west forts from the old movies. When we\nmove back, it is for the North-Eastern part of Italy, in the Ferrara province\nfirst, and then in Ravenna. I guess there\u0026rsquo;s not a lot to say about this decade;\nthe usual baby-son-of-a-middle-class-emigrant-family routine applies here.\u003c/p\u003e","title":"Half-century of service"},{"content":" When we talk about getting better at programming, we often talk about testing, writing reusable code, design patterns, and readability. All of those things are important. But in this blog post, I want to talk about a different way to get better at programming: learning how the systems you’re using work! This is the main way I approach getting better at programming.\nOnce again, Julia Evans has great sensible advice up on her site.\nI appreciate her note on how today we work with so many complex systems that it is next to impossible to understand all of them. The experienced developer comes at peace with that, acknowledges ignorance, and, more importantly, understands when it\u0026rsquo;s worth digging deeper. In other words:\nBeing a senior developer is less about knowing absolutely everything and more about quickly being able to recognize when you don’t know something and learn it.\n","permalink":"https://nicolaiarocci.com/get-better-at-programming-by-learning-how-things-work/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhen we talk about getting better at programming, we often talk about\ntesting, writing reusable code, design patterns, and readability. All of\nthose things are important. But in this blog post, I want to talk about\na different way to get better at programming: learning how the systems you’re\nusing work! This is the main way I approach getting better at programming.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eOnce again, Julia Evans has great sensible advice up on \u003ca href=\"https://jvns.ca/blog/learn-how-things-work/\"\u003eher site\u003c/a\u003e.\u003c/p\u003e","title":"Get better at programming by learning how things work"},{"content":"Write libraries instead of services is an interesting article I read a while ago. I cannot get it off my head. In an attempt to clear up my mind, I decided to sit down and write about it. I have been writing libraries for a good part of my life. Most of my earlier dev-work resides on thousands of computers in the form of libraries. More recently, I have been writing and deploying remote services. Libraries versus Services is a topic I care about.\nLet\u0026rsquo;s jump into the article.\nA service has constant administration costs which are paid by the service provider. A properly designed library instead moves these costs to the users of the library.\nThis ignores the issue of support. You are going to have to support your users. Support comes at a cost. I would argue that, given the distributed nature of libraries, supporting them can become very costly. Your library is probably residing in a myriad of diverse, local environments. Issues are hard to replicate or reason about. It is hard to isolate your own code from the surrounding environment.\nPeople say, \u0026ldquo;services are easy because you can upgrade them centrally, so you can avoid slow-to-upgrade users making everyone\u0026rsquo;s lives worse.\u0026rdquo; But this assumes that slow-to-upgrade users can have negative effects on everyone else. If one user can\u0026rsquo;t have a negative impact on other users, then you don\u0026rsquo;t care if some users are slow to upgrade; they\u0026rsquo;re only hurting themselves.\nAgain, support. Those slow-to-upgrade users are going to not just hurt but torture your support service with years-old obsolete issues. If you think it\u0026rsquo;s the user\u0026rsquo;s responsibility to keep dependencies up to date, good luck with that. That assumes that developers adopting the library control their deployments, which isn\u0026rsquo;t often the case. They might employ the library in a desktop application distributed to dozens (or thousands) of end-users. It could be next to impossible for them to make sure that all their deployments are up to speed. Old versions are a pain point and one (if not the most) significant cost factor. Maintaining a service comes at a cost too, and you\u0026rsquo;ll likely need to offer some sort of support there as well. A service, however, ensures that all your users are on the same version, which tremendously reduces the support effort.\nWhen weighting costs, support must be factored in, along with all the rest: development, maintenance, distribution, documentation, etc. Maybe the article\u0026rsquo;s author has the luxury of not having to deal with support himself. Still, there\u0026rsquo;s someone else at his company who has to do that.\nA service, on the other hand, represents a single point of failure. If it goes down, all users are immediately affected1. By contrast, a nasty bug in your library will only affect the unlucky users on that version. Now, this makes a significant advantage for distributed libraries.\nYour service, however, will talk to all languages via REST, GraphQL, or any other interface of choice. The library will usually speak just one language. Yes, you might provide language-specific SDKs for your service, but that\u0026rsquo;s just an option.\nDo you need to hold state? If you do, most of the time, a service will be a better option. With state comes responsibility, however. You have to ensure regular backups, resilience, and maintenance, all of them at a cost.\nThe author suggests a few approaches to circumventing library limitations. Some are reasonable, like dynamic linking where it is applicable (not all stacks support it). Others, quite frankly, I don\u0026rsquo;t understand.\nMany factors influence the choice between service and library, use case and prevailing circumstances being the main ones. I am not even sure they are comparable, as they tend to solve different problems.\nI know first hand. We\u0026rsquo;ve recently been impacted by a catastrophic event that happened to one of our providers. Our services went down and, with them, a good part of our users. How we overcame the situation and what we learned in the process would probably be worth telling, maybe in a future article.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/write-libraries-not-services-not-so-fast/","summary":"\u003cp\u003e\u003ca href=\"http://catern.com/services.html\"\u003eWrite libraries instead of services\u003c/a\u003e is an interesting article I read\na while ago. I cannot get it off my head. In an attempt to clear up my mind,\nI decided to sit down and write about it. I have been writing libraries for\na good part of my life. Most of my earlier dev-work resides on thousands of\ncomputers in the form of libraries. More recently, I have been writing and\ndeploying remote services. Libraries versus Services is a topic I care about.\u003c/p\u003e","title":"Write libraries, not services? Not so fast"},{"content":"How do you add an empty directory to a Git repository? It\u0026rsquo;s a classic, and yet, I have to look it up every single time. Git does not support this out of the box:\nCurrently the design of the Git index (staging area) only permits files to be listed, and nobody competent enough to make the change to allow empty directories has cared enough about this situation to remedy it. Directories are added automatically when adding files inside them. That is, directories never have to be added to the repository, and are not tracked on their own. You can say git add \u0026lt;dir\u0026gt; and it will add the files in there. If you really need a directory to exist in checkouts you should create a file in it. .gitignore works well for this purpose; you can leave it empty or fill in the names of files you do not expect to show up in the directory. (source)\nThe same answer offers a workaround: just save an empty .gitignore file into the directory. At that point, git status shows the file as untracked. We can add it to the repository, and presto, our folder ends up captured in version control.\nI don\u0026rsquo;t like using .gitignore for this. That file serves a different, unrelated goal. Finding it in an otherwise empty directory would cause puzzlement to my colleagues and my future self in six months. For better semantic and clarity, what I do is add a .keep file instead:\n$ touch mydir/.keep Same trick. Better semantics. When I pull this repository in six months, I will immediately grasp what\u0026rsquo;s going on (an alternative would be a README.md file with an explanation.)\nOf course, if the dir is meant to fill-up over time, but we still want to ignore its future contents in version control, then .gitignore is the right tool for the job. Something like this would work (I dug it up on Stack Overflow, where else):\n# Ignore everything in this directory * # Except this file !.gitignore I should probably adopt the #tirl tag, as in \u0026ldquo;Today I Re-Learned.\u0026rdquo;\n","permalink":"https://nicolaiarocci.com/how-to-add-an-empty-directory-to-a-git-repository/","summary":"\u003cp\u003eHow do you add an empty directory to a Git repository? It\u0026rsquo;s a classic, and yet,\nI have to look it up every single time. Git does not support this out of the\nbox:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCurrently the design of the Git index (staging area) only permits files to be\nlisted, and nobody competent enough to make the change to allow empty\ndirectories has cared enough about this situation to remedy it. Directories\nare added automatically when adding files inside them. That is, directories\nnever have to be added to the repository, and are not tracked on their own.\nYou can say \u003ccode\u003egit add \u0026lt;dir\u0026gt;\u003c/code\u003e and it will add the files in there. \u003cstrong\u003eIf you really\nneed a directory to exist in checkouts you should create a file in it\u003c/strong\u003e.\n.gitignore works well for this purpose; you can leave it empty or fill in\nthe names of files you do not expect to show up in the directory.\n(\u003ca href=\"https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F\"\u003esource\u003c/a\u003e)\u003c/p\u003e","title":"How to add an empty directory to a Git repository"},{"content":"If you are a grumpy old geek like me, you are probably a sucker for vintage computer games too. I don\u0026rsquo;t play games. Not anymore. I still enjoy reading about them, though. I guess it\u0026rsquo;s mostly nostalgia. I also believe that the mid-80s up to the mid-90s really was the golden age of computer games. In my book, innovation started with Infocom\u0026rsquo;s text adventures and soft-ended with Origin\u0026rsquo;s Ultima Online. After that, it\u0026rsquo;s been a constant evolution. \u0026ldquo;Harder, better, faster, stronger\u0026rdquo;, yes, but hardly a revolution.\nMy pusher of digital memorabilia is Jimmy Maher, also known as [The Digital Antiquarian][5]. One month ago, he wrote a [fantastic article][3] on Origin\u0026rsquo;s Ultima VIII Pagan. Then, just the other day, he doubled down with a [terrific piece][4] on Looking Glass\u0026rsquo; System Shock. Both are games I played fervidly1.\nMaher is not kind to Pagan:\nBut then, for the eighth game in the mainline Ultima series, Origin decided to try something just a little bit different. They made a game in which you played a thoughtless jerk moving on rails through a linear series of events; in which you never went to Britannia at all, but stayed instead on a miserable hellhole of a world called Pagan; in which you spent the whole game adventuring alone (after all, who would want to adventure with a jerk like you?); in which the core mechanics were jumping between pedestals like Super Mario and pounding your enemies over the head with your big old hammer.\nIt hurts to admit it, but he\u0026rsquo;s exactly right. Nonetheless, I enjoyed exploring Pagan\u0026rsquo;s world. When I later joined the Ultima Online Beta, it was amazing to see that the same graphic engine and all of Pagan\u0026rsquo;s art were recycled.\nSystem Shock was a game I loved. I found it to be revolutionary. Games like this one were precisely the kind of entertainment I strived for: immersive simulations.\n[\u0026hellip;] Moving through said spaces, picking up bits and pieces of the horrible events which have unfolded there, quickly becomes highly unnerving. The sense of embodied realism that clings to every aspect of the game is key to the sense of genuine, oppressive fear it creates in its player. Tellingly, Looking Glass liked to call System Shock a “simulation,” even though it simulates nothing that has ever existed in the real world. The word is rather shorthand for its absolute commitment to the truth — fictional truth, yes, but truth nevertheless — of the world it drops you into.\nI have always been a System Shock guy more than a DOOM person. I really like how Maher compares the two games and the software companies that produced them, more or less in the same time-span2.\nIn Maher\u0026rsquo;s reconstructions, what I find to be more appealing is not the games themselves with their mechanics but rather the history behind them. How the dev-team conceived and then developed their projects.\nAfter so many years, I am thankful to Maher for bringing these two games back to memory. Now, I am impatiently waiting for his Ultima Online installment. I know it must be on his list, right?\nIn my library, I keep the original Pagan box as a relic, along with Ultima VII Serpent Island and a few other titles from around that age: Spectrum Holobyte\u0026rsquo;s Falcon 3.0, Command and Conquer, Dune II Battle for Arrakis, Ultima Online: Charter Edition, and a few others.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nBy the way, if you haven\u0026rsquo;t already, I strongly advise you to read Masters of Doom: How Two Guys Created an Empire and Transformed Pop Culture by David Kushner. [3]: https://www.filfre.net/2021/02/ultima-viii-or-how-to-destroy-a-gaming-franchise-in-one-easy-step/ [4]: https://www.filfre.net/2021/03/system-shock/ [5]: https://www.filfre.net/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/my-pusher-of-digital-memorabilia/","summary":"\u003cp\u003eIf you are a grumpy old geek like me, you are probably a sucker for vintage\ncomputer games too. I don\u0026rsquo;t play games. Not anymore. I still enjoy reading\nabout them, though. I guess it\u0026rsquo;s mostly nostalgia. I also believe that the\nmid-80s up to the mid-90s really was the golden age of computer games. In my\nbook, innovation started with Infocom\u0026rsquo;s text adventures and soft-ended with\nOrigin\u0026rsquo;s Ultima Online. After that, it\u0026rsquo;s been a constant evolution. \u0026ldquo;Harder,\nbetter, faster, stronger\u0026rdquo;, yes, but hardly a revolution.\u003c/p\u003e","title":"My Pusher of Digital Memorabilia"},{"content":"I am very ignorant about the Istrian Peninsula\u0026rsquo;s history, a gap I always wanted to fill. After some research, Fulvio Tomizza\u0026rsquo;s book, Materada, surfaced as a good fit to fill this gap. It\u0026rsquo;s a semi-biographic historical novel set in the Istria of the author\u0026rsquo;s youth. Fulvio Tomizza was born in Giurizzani di Materada, Istria, in 1935. He had to go through all the torments caused in that disputed area by Fascism first (forced Italianization, cultural suppression), and then by the Second World War and the terrible events that followed: the Foibe massacres and the Istrian-Dalmatian exodus.\nIn the spring of 1955, in the countryside around the village of Materada, Francesco Koslovic \u0026ndash;even his name straddles two cultures\u0026ndash; world is falling apart. Following the Paris Peace Treaties of 1947, Istrian-Italians and Dalmatian-Italians, who have long and peacefully inhabited the area with Croatian and Slovene communities, have to choose. Abandon their homes and the hard-worked atavistic land, migrate to Italy, become Italian, or stay in a now-hostile territory. Francesco and his brother have to make the call with their families. They had a portion of their land confiscated by the Yugoslavian regime. They know the situation is dire. But this is their promised land. As they procrastinate and time goes by, most farmers around them, the friends who make their community, slowly but inevitably leave along with their families. The sense of abandonment is palpable.\nThis novel tells the experience the author had to experience himself, along with his own family. He moved to Trieste in 1954. Throughout his whole life, however, he kept going back to Materada, to his roots. Writing this tale must have been a cathartic effort. Initially, I had a hard time connecting with the story. That happened, I think, precisely because of my ignorance about surrounding historical events. Materada was a great, painful, worthwhile read.\n","permalink":"https://nicolaiarocci.com/book-review-materada/","summary":"\u003cp\u003eI am very ignorant about the Istrian Peninsula\u0026rsquo;s history, a gap I always wanted\nto fill. After some research, Fulvio Tomizza\u0026rsquo;s book, Materada, surfaced as\na good fit to fill this gap. It\u0026rsquo;s a semi-biographic historical novel set in the\nIstria of the author\u0026rsquo;s youth. Fulvio Tomizza was born in Giurizzani di\nMaterada, Istria, in 1935. He had to go through all the torments caused in that\ndisputed area by Fascism first (forced Italianization, cultural suppression),\nand then by the Second World War and the terrible events that followed: the\nFoibe massacres and the Istrian-Dalmatian exodus.\u003c/p\u003e","title":"Book Review: Materada"},{"content":"So today, I was setting up a cronjob on my trusty MacBook Pro. The goal was to backup some folders from a remote Linux server via rsync. The script is simple. It goes something like this:\nrsync -avz -e \u0026quot;ssh -i ~/.ssh/my_rsa_keyfile\u0026quot; myuser@myserver:remotedir/ ~/localdir/ Launched by hand, it works seamlessly. Call it from a cron job via crontab, and I get a permission denied error. I then enabled ssh -v option to gather a little intel on what was actually going on. As it turns out, the exact error was:\n`read_passphrase: can't open /dev/tty: Device not configured` Quite puzzling. Long story short, the error message was misleading. It took me an embarrassingly long time to figure out what the real problem was. The identity file I was using has a passphrase, which is saved in macOS Keyring. When the ssh -i command is launched via cron, no Keyring is used. Not unless you explicitly instruct ssh to do. See, my ~/.ssh/config file was something like this:\nHost * ServerAliveInterval 360 AddKeysToAgent yes [...] Host myserver HostName 123.123.123.123 User myuser See, in myserver section there was no Usekeychain option. Launching the script interactively worked because of AddkeysToAgent in the general section. It enables the ssh-agent for the current terminal session, for all hosts. But cron jobs, well, they don\u0026rsquo;t run in the same session, and certainly don\u0026rsquo;t run the agent. I could eval the agent in the script, of course, but the simplest solution was to update myserver section:\nHost myserver HostName 123.123.123.123 Usekeychain yes User myuser Now ssh knows it should use the keychain when resolving myserver RSA key, even when no agent is running. I am not sure why I did not have Usekeychain there; I do have it enabled for other hosts in the same file. As said, I wasted way too much time on this issue. At least, I hope my experience will be useful to someone else, or, more likely, to my future self in a few months or years.\n","permalink":"https://nicolaiarocci.com/battling-with-ssh-cron-jobs-and-macos-keyring/","summary":"\u003cp\u003eSo today, I was setting up a cronjob on my trusty MacBook Pro. The goal was to\nbackup some folders from a remote Linux server via rsync. The script is simple.\nIt goes something like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ersync -avz -e \u0026quot;ssh -i ~/.ssh/my_rsa_keyfile\u0026quot; myuser@myserver:remotedir/ ~/localdir/\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eLaunched by hand, it works seamlessly. Call it from a cron job via crontab, and\nI get a permission denied error. I then enabled ssh \u003ccode\u003e-v\u003c/code\u003e option to gather\na little intel on what was actually going on. As it turns out, the exact\nerror was:\u003c/p\u003e","title":"Battling with SSH, cron jobs, and macOS Keyring"},{"content":" There is a secret that needs to be understood in order to write good software documentation: there isn’t one thing called documentation, there are four. They are: tutorials, how-to guides, technical reference and explanation. They represent four different purposes or functions, and require four different approaches to their creation. Understanding the implications of this will help improve most documentation - often immensely.\nI dig Daniele Procida\u0026rsquo;s take on writing good software documentation. It just makes sense. The system is simple, comprehensive, and, crucial, universally-applicable. The \u0026ldquo;four different functions\u0026rdquo; scheme works equally well if you are writing for a technical-savvy audience or the general public, which is excellent. The users I\u0026rsquo;m writing for are software developers, in some cases, and desktop or web application users in others.\nI also like how he goes deep into explaining how and why each function has a different goal, should be isolated and written differently from others.\nEach of them requires a distinct mode of writing. People working with software need these four different kinds of documentation at different times, in different circumstances - so software usually needs them all, and they should all be integrated into your documentation. And documentation needs to be explicitly structured around them, and they all must be kept separate and distinct from each other.\nLast but not least, the framework itself serves as a guide for the author.\nThis division makes it obvious to both author and reader what material, and what kind of material, goes where. It tells the author how to write, and what to write, and where to write it. It saves the author from wasting a great deal of time trying to wrestle the information they want to impart into a shape that makes sense, because each of these kinds of documentation has only one job.\nI wish I had this resource at hand when I was writing the docs for my open source projects. I think will adopt this framework on the next occasion, which will be very soon.\n@nicolaiarocci on Twitter*\n","permalink":"https://nicolaiarocci.com/how-to-write-good-software-documentation/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThere is a secret that needs to be understood in order to write good software\ndocumentation: there isn’t one thing called documentation, there are four.\nThey are: tutorials, how-to guides, technical reference and explanation. They\nrepresent four different purposes or functions, and require four different\napproaches to their creation. Understanding the implications of this will\nhelp improve most documentation - often immensely.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI dig Daniele Procida\u0026rsquo;s take on \u003ca href=\"https://documentation.divio.com/\"\u003ewriting good software documentation\u003c/a\u003e. It\njust makes sense. The system is simple, comprehensive, and, crucial,\nuniversally-applicable. The \u0026ldquo;four different functions\u0026rdquo; scheme works equally\nwell if you are writing for a technical-savvy audience or the general public,\nwhich is excellent. The users I\u0026rsquo;m writing for are software developers, in some\ncases, and desktop or web application users in others.\u003c/p\u003e","title":"How to Write Good Software Documentation"},{"content":" I discovered you can use the \u0026ldquo;diskpart\u0026rdquo; tool to compact a VHDX. This allows you to shrink a WSL2 virtual disk file, reclaiming disk space. It appeared to work for me without any data corruption, taking the file size down from 100GB to 15GB. (source)\nI adore Parallels \u0026ldquo;reclaim disk space\u0026rdquo; feature. Just the other day, I got back 70GB off my Windows Guest in a breeze. I\u0026rsquo;m coming from VirtualBox, where reclaiming disk space is a significant pain. I would expect optimize-vhd to achieve the goal with WSL2, but it\u0026rsquo;s nice to know there are alternatives, like Stephen\u0026rsquo;s above\n","permalink":"https://nicolaiarocci.com/how-to-shrink-a-wsl2-virtual-disk/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI discovered you can use the \u0026ldquo;diskpart\u0026rdquo; tool to compact a VHDX. This allows\nyou to shrink a WSL2 virtual disk file, reclaiming disk space. It appeared to\nwork for me without any data corruption, taking the file size down from 100GB\nto 15GB. (\u003ca href=\"https://stephenreescarter.net/how-to-shrink-a-wsl2-virtual-disk/\"\u003esource\u003c/a\u003e)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI adore Parallels \u0026ldquo;reclaim disk space\u0026rdquo; feature. Just the other day, I got back\n70GB off my Windows Guest in a breeze. I\u0026rsquo;m coming from VirtualBox, where\nreclaiming disk space is a significant pain. I would expect \u003ccode\u003eoptimize-vhd\u003c/code\u003e to\nachieve the goal with WSL2, but it\u0026rsquo;s nice to know there are alternatives, like\nStephen\u0026rsquo;s above\u003c/p\u003e","title":"How to Shrink a WSL2 Virtual Disk"},{"content":"The Literary Hub has a great short interview with Ian McEwan.\nWhat’s the best writing advice you’ve ever received? When I was living in London at the start of my career in the mid-1970s, I became friends with Philip Roth, who took an avuncular interest in my work. Where many others thought my writing was wild and weird, he thought I wasn’t being wild enough. He once came to my apartment and spread the typescript of my first novel (The Cement Garden) over the floor. He was on his hands and knees, moving the chapters around. What he wanted was for me to be bolder, crazier. He said, “You have to write as though your parents are dead.” My parents were alive. I took that advice.\nGreat advice. How often do we restrain from writing, posting, or expressing our thoughts because of our shyness? Or fear of being judged? Besides, I would take any advice from someone who has this to say about Bach:\nWhich non-literary piece of culture—film, TV show, painting, song—could you not imagine your life without? Since the age of 16, my constant resource has been the music of Bach. Piano first, then all the rest. Like all music, it is as abstract as literature is specific, but Bach’s inventions are more so—like the processes of thought before language, deeply human without saying anything at all. In his music I think I confront the most naked demonstration of genius. Wrapped inside the beauty is a form of merriness and a joyful pulse. The same pieces that thrilled me in my teens—the Goldberg Variations, the Well-tempered Clavier—thrill me now.\nI loved how he saved the day by brilliantly answering the most boring writer question of all times.\nWhat time of day do you write? The morning. My philosopher friend Galen Strawson divides humanity into those who feel they are living in a constantly unfolding narrative, a life story that informs our every moment, and those who existence is discontinuous. I now understand that I belong in this latter group, even while I’ve often persuaded myself I was in the first. [\u0026hellip;] Now I can relax. I belong with those whose lives are lived in discrete patches. We can, of course, remember our childhoods, our first loves, our failures and joys when asked to, but almost all of our daily experience is disconnected from any awareness of the past. We also acknowledge that most of that past is lost to us forever. We, the non-narrativists, or episodists, wake in the mornings and we begin anew. I am my own blank sheet. As the day wears on, familiar concerns—domestic, professional, political, crowd in. The thing about that waiting desk is that you must turn up—and get there before the blank sheet that is you turns dog-eared.\n","permalink":"https://nicolaiarocci.com/you-have-to-write-as-though-your-parents-are-dead/","summary":"\u003cp\u003eThe Literary Hub has a great short \u003ca href=\"https://lithub.com/ian-mcewan-on-bach-philip-roth-and-living-an-episodic-life/\"\u003einterview\u003c/a\u003e with Ian McEwan.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eWhat’s the best writing advice you’ve ever received?\u003c/strong\u003e\nWhen I was living in London at the start of my career in the mid-1970s,\nI became friends with Philip Roth, who took an avuncular interest in my work.\nWhere many others thought my writing was wild and weird, he thought I wasn’t\nbeing wild enough. He once came to my apartment and spread the typescript of\nmy first novel (The Cement Garden) over the floor. He was on his hands and\nknees, moving the chapters around. What he wanted was for me to be bolder,\ncrazier. He said, “You have to write as though your parents are dead.” My\nparents were alive. I took that advice.\u003c/p\u003e","title":"You Have to Write As Though Your Parents Are Dead"},{"content":"I am an application/backend developer who has to quibble with databases more often than desired. I can get my way around Postgres pretty well, but I can always use a hint or two, especially when it comes to fine-tuning and performance.\nI stumbled upon Cleaning Up Your Postgres Databases. It offers useful advice on spotting performance bottlenecks in your Postgres database. Take the cache and index hit queries, for example.\nThe first thing you\u0026rsquo;re going to want to look at is your cache hit ratio and index hit ratio. Your cache hit ratio is going to give the percentage of time your data is served from within memory vs. having to go to disk. Generally serving data from memory vs. disk is going to orders of magnitude faster, thus the more you can serve from memory the better. For a typical web application making a lot of short requests I\u0026rsquo;m going to target \u0026gt; 99% here.\nI will be trying them real soon. Like, today.\n","permalink":"https://nicolaiarocci.com/cleaning-up-your-postgres-database/","summary":"\u003cp\u003eI am an application/backend developer who has to quibble with databases more\noften than desired. I can get my way around Postgres pretty well, but I can\nalways use a hint or two, especially when it comes to fine-tuning and\nperformance.\u003c/p\u003e\n\u003cp\u003eI stumbled upon \u003ca href=\"http://blog.crunchydata.com/blog/cleaning-up-your-postgres-database\"\u003eCleaning Up Your Postgres Databases\u003c/a\u003e. It offers useful\nadvice on spotting performance bottlenecks in your Postgres database. Take the\ncache and index hit queries, for example.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe first thing you\u0026rsquo;re going to want to look at is your cache hit ratio and\nindex hit ratio. Your cache hit ratio is going to give the percentage of time\nyour data is served from within memory vs. having to go to disk. Generally\nserving data from memory vs. disk is going to orders of magnitude faster,\nthus the more you can serve from memory the better. For a typical web\napplication making a lot of short requests I\u0026rsquo;m going to target \u0026gt; 99% here.\u003c/p\u003e","title":"Cleaning Up Your Postgres Database"},{"content":"As any other bookworm worth its salt, I digested a generous amount of books on books and the history of libraries. Alberto Manguel\u0026rsquo;s The Library at Night was last, and that is a pity. It probably arrived just a little too late on my shelves. I wish I found it at the beginning of my reading journey when my enthusiasm for libraries and their contents was pristine.\nManguel\u0026rsquo;s writing is mesmerizing and capable. The lover of libraries and their books (in that order because this text is more about libraries than the books they contain) will undoubtedly fall into the rabbit hole and devour this book. Check this out:\nBut at night, when the library lamps are lit, the outside world disappears and nothing but this space of books remains in existence. To someone standing outside, in the garden, the library at night appears like a vast vessel of some sort, like that strange Chinese villa that, in 1888, the capricious Empress Cixi caused to be built in the shape of a ship marooned in a garden lake of her Summer Palace. In the dark, with the windows lit and the rows of books glittering, the library is a closed space, a universe of self-serving rules that pretend to replace or translate those of the shapeless universe beyond.\nThis book is a treasure chest filled with remarkable, carefully crafted gems. With books like this one, I feel bad for not taking notes as I read. Each chapter is on a topic: the library as power, as order, shape, shadow, mind, workshop, and the list goes on. Some are more exciting than others, but overall the selection is rich, varied, and original enough to keep the reader entertained all along. The author\u0026rsquo;s library, assembled during his whole life, spent a \u0026ldquo;professional reader\u0026rdquo; (not kidding, as a teenager, he was reading books for a now-blind Jorge Luis Borges) and collecting books all-along while moving across three continents, is the recurring theme. One way or another, you\u0026rsquo;ll find it mentioned in every chapter, and for good reasons, because it must have been formidable1.\nThe text mentions a remarkable number of ancient and modern authors with their works. The author shows his culture, but not in a pedantic or annoying way. One chapter is about the advent of digital libraries. I share his preference for the printed form. He goes a great length into explaining why old school is better, and I tend to agree with most of his reasoning. I think, however, that he is too dismissive of the digital form. It brings so many previously unthinkable features. He acknowledges some. It has always been my dream to own both forms of all my books: printed and digital. If there were one service that allowed me to buy both at once, at the same price, I would be all-in.\nLast but not least, my favorite quote from the book:\nImmensely generous, my books make no demands on me but offer all kind of illuminations.\nSpoiler alert. I researched into the matter. It turns out that Manguel\u0026rsquo;s library counted 40,000 titles. In 2020, he donated them all to Lisbon\u0026rsquo;s Centre for Research into the History of Reading.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/book-review-the-library-at-night/","summary":"\u003cp\u003eAs any other bookworm worth its salt, I digested a generous amount of books on\nbooks and the history of libraries. Alberto Manguel\u0026rsquo;s The Library at Night was\nlast, and that is a pity. It probably arrived just a little too late on my\nshelves. I wish I found it at the beginning of my reading journey when my\nenthusiasm for libraries and their contents was pristine.\u003c/p\u003e\n\u003cp\u003eManguel\u0026rsquo;s writing is mesmerizing and capable. The lover of libraries and their\nbooks (in that order because this text is more about libraries than the books\nthey contain) will undoubtedly fall into the rabbit hole and devour this book.\nCheck this out:\u003c/p\u003e","title":"Book Review: The Library at Night"},{"content":"The always brilliant Hynek recently posted Semantic Versioning Will Not Save You. Primarily targeted at consumers of SemVer-versioned packages, it is full of insightful advice.\nFrom my perspective as an open-source maintainer, I can tell you that versioning is hard. Judging when a new release is going to break backward compatibility is not as simple as it might seem on the surface, and Hynek does a great job explaining why. Sometimes it is also hard for me to tell if a change in a codebase classifies as a new feature, small improvement, or fix—subtle differences. In the context of SemVer, it matters a lot because version numbers have a meaning. Consumers will likely decide whether to upgrade or not based on that meaning.\nAdmittedly, and precisely because I did not feel comfortable giving guarantees, the Eve project has been 0-versioned for seven years. Seven years! I wanted it to be mature, battle-tested and stable; only then would I feel comfortable going 1.0. In Eve\u0026rsquo;s case, 1.0 means not only \u0026ldquo;stable\u0026rdquo; but also \u0026ldquo;done.\u0026rdquo; All major features are in, and they are stable. I am not alone, of course. Flask, the web-framework on which Eve builds, has been 0-versioned for many years too. I\u0026rsquo;ve also been on the receiving hand of SemVer-related issues, check the Eve backlog. The same happened with my other projects (Cerberus is the exception as it has no dependencies.)\nHynek\u0026rsquo;s point, I think, is that SemVer is a just convention. At each new release, a semantic-versioned package expresses the maintainer\u0026rsquo;s intention, but there are no guarantees.\nThis does not mean that SemVer is bad or worthless. Knowing the intentions of a maintainer can be valuable – especially when things break. Because that’s all SemVer is: a TL;DR of the changelog. What it does mean though, is that you can’t rely on the semantic meaning of SemVer and you must treat every update as potentially breaking.\nMake sure you read the Taking Responsibility section. It has sound advice on protecting your project from dependency hell.\n","permalink":"https://nicolaiarocci.com/semantic-versioning-will-not-save-you/","summary":"\u003cp\u003eThe always brilliant Hynek recently posted \u003ca href=\"https://hynek.me/articles/semver-will-not-save-you/\"\u003eSemantic Versioning Will Not Save\nYou\u003c/a\u003e. Primarily targeted at \u003cem\u003econsumers\u003c/em\u003e of SemVer-versioned packages, it is\nfull of insightful advice.\u003c/p\u003e\n\u003cp\u003eFrom my perspective as an open-source maintainer, I can tell you that\nversioning is hard. Judging when a new release is going to break backward\ncompatibility is not as simple as it might seem on the surface, and Hynek does\na great job explaining why. Sometimes it is also hard for me to tell if\na change in a codebase classifies as a new feature, small improvement, or\nfix—subtle differences. In the context of SemVer, it matters a lot because\nversion numbers have a meaning. Consumers will likely decide whether to upgrade\nor not based on that meaning.\u003c/p\u003e","title":"Semantic Versioning Will Not Save You"},{"content":"Today\u0026rsquo;s mandatory reading is How I cut GTA Online loading times by 70%.\nAs someone who\u0026rsquo;s been fighting the protection/obfuscation cat \u0026amp; mouse game for twenty+ years, let me tell you one thing. The way this guy reverse-engineered parts of the GTA5 codebase and then proceeded to single-handly triage and fix a long-standing (7+ years) performance issue is simply mindblowing. All he had to work with were heavily obfuscated dlls. This also shows how we, the protectors, are always playing a losing game.\nThere seems to be some sort of an obfuscation/encryption at play here that has replaced most instructions with gibberish. Not to worry, we simply need to dump the game\u0026rsquo;s memory while it\u0026rsquo;s executing the part we want to look at. The instructions have to be de-obfuscated before running one way or another.\nMake sure you read this stuff.\n","permalink":"https://nicolaiarocci.com/reverse-engineering-an-obfuscated-codebase-and-fixing-it-in-the-process/","summary":"\u003cp\u003eToday\u0026rsquo;s mandatory reading is \u003ca href=\"https://nee.lv/2021/02/28/How-I-cut-GTA-Online-loading-times-by-70/\"\u003eHow I cut GTA Online loading times by 70%\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAs someone who\u0026rsquo;s been fighting the protection/obfuscation cat \u0026amp; mouse game for\ntwenty+ years, let me tell you one thing. The way this guy reverse-engineered\nparts of the GTA5 codebase and then proceeded to single-handly triage and fix\na long-standing (7+ years) performance issue is simply mindblowing. All he had\nto work with were heavily obfuscated dlls.  This also shows how we, the\nprotectors, are always playing a losing game.\u003c/p\u003e","title":"Reverse engineering an obfuscated codebase and fixing it in the process"},{"content":"Last weekend\u0026rsquo;s reading list also included Taking Back Our Privacy, yet another1 New Yorker piece but this time signed by Anna Wiener. This article is a long-read on Moxie Marlinspike, co-founder and CEO of Signal. Moxie is a childhood nickname. That alone signals (pun intended) an original personality. I mean, how many times have you heard of a CEO going by his childhood nickname?\nIndeed the personal story of Marlinspike, along with that of the ascent of Signal, is fascinating. I did not know, for example, that in 2013 he met Brian Acton, founder of WhatsApp. Brian expressed interest in adding end-to-end encryption into WhatsApp. Then came Facebook\u0026rsquo;s acquisition, and, for obvious reasons, Signal Protocol never landed into the messaging service. The story was not over, however:\nThat year, Acton left Facebook, later attributing his departure to intractable differences about privacy practices. At the heart of the conflict was tension with Facebook’s top executives, Sheryl Sandberg and Mark Zuckerberg, who wanted to extend Facebook’s targeted-ad network to WhatsApp. End-to-end encryption precluded the collection of message content that would be valuable to advertisers. In early 2018, Acton and Marlinspike announced the formation of the Signal Foundation, a nonprofit. Acton, the foundation’s chairman and sole member, seeded it with a no-interest, fifty-million-dollar loan.\nWhat a plot twist. What\u0026rsquo;s even more remarkable is Moxie\u0026rsquo;s personal biography. He is not your average startup co-founder, not by any mean. He kind stands at the interconnection between activism, ethical hacking, and anarchy, and yet he\u0026rsquo;s the CEO of a booming startup.\nSee The Activists Who Embrace Nuclear Power [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/on-the-ceo-and-founder-of-signal/","summary":"\u003cp\u003eLast weekend\u0026rsquo;s reading list also included \u003ca href=\"https://www.newyorker.com/magazine/2020/10/26/taking-back-our-privacy\"\u003eTaking Back Our Privacy\u003c/a\u003e, yet\nanother\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e New Yorker piece but this time signed by Anna Wiener. This article is\na long-read on Moxie Marlinspike, co-founder and CEO of Signal. Moxie is\na childhood nickname. That alone signals (pun intended) an original\npersonality. I mean, how many times have you heard of a CEO going by his\nchildhood nickname?\u003c/p\u003e\n\u003cp\u003eIndeed the personal story of Marlinspike, along with that of the ascent of\nSignal, is fascinating. I did not know, for example, that in 2013 he met Brian\nActon, founder of WhatsApp. Brian expressed interest in adding end-to-end\nencryption into WhatsApp. Then came Facebook\u0026rsquo;s acquisition, and, for obvious\nreasons, Signal Protocol never landed into the messaging service. The story was\nnot over, however:\u003c/p\u003e","title":"On the CEO and founder of Signal"},{"content":"Today, my Sunday long-reading list included New Yorker\u0026rsquo;s The Activists Who Embrace Nuclear Power by Rebecca Tuhus-Dubrow. Can nuclear power possibly be a viable solution for climate change? Twenty or even ten years ago, my answer would have been a big fat No. Today? Not so sure anymore.\nToday, the looming disruptions of climate change have altered the risk calculus around nuclear energy. James Hansen, the NASA scientist credited with first bringing global warming to public attention, in 1988, has long advocated a vast expansion of nuclear power to replace fossil fuels. Even some environmental groups that have reservations about nuclear energy [\u0026hellip;] have recognized that abruptly closing existing reactors would lead to a spike in emissions.\nI am surprised that the author, who clearly researched the topic well, did not mention Bill Gates\u0026rsquo; Mini-Reactors approach to the problem. It might have been a deliberate choice, as at some point, she does note that \u0026ldquo;scientists are working on smaller, more nimble nuclear reactors.\u0026rdquo;\n","permalink":"https://nicolaiarocci.com/the-activists-who-embrace-nuclear-power/","summary":"\u003cp\u003eToday, my Sunday long-reading list included New Yorker\u0026rsquo;s \u003ca href=\"https://www.newyorker.com/tech/annals-of-technology/the-activists-who-embrace-nuclear-power\"\u003eThe Activists Who\nEmbrace Nuclear Power\u003c/a\u003e by Rebecca Tuhus-Dubrow. Can nuclear power possibly\nbe a viable solution for climate change? Twenty or even ten years ago, my\nanswer would have been a big fat No. Today? Not so sure anymore.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eToday, the looming disruptions of climate change have altered the risk\ncalculus around nuclear energy. James Hansen, the NASA scientist credited\nwith first bringing global warming to public attention, in 1988, has long\nadvocated a vast expansion of nuclear power to replace fossil fuels. Even\nsome environmental groups that have reservations about nuclear energy [\u0026hellip;]\nhave recognized that abruptly closing existing reactors would lead to a spike\nin emissions.\u003c/p\u003e","title":"The Activists Who Embrace Nuclear Power"},{"content":"Today I learned the hard way that since ASP.NET Core 2.0, the request body has acquired a default size limit at 30MB (~28.6 MiB).\nIf the request body size exceeds the configured max request body size limit, the call to Request.Body.ReadAsync will throw an IOException. If this exception is uncaught, Kestrel will respond with a 413 Payload Too Large response and HttpSys will respond with a generic 500 Internal Server Error response (source).\nThis will be a breaking change if your endpoint is expected to handle large uploads. The solution is simple, just decorate your MVC action or controller with the RequestSizeLimit attribute, like so:\n[HttpPost] [RequestSizeLimit(100_000_000)] public IActionResult MyAction([FromBody] MyViewModel data) { DisableRequestSizeLimit can be used to make request size unlimited. This effectively restores pre-2.0.0 behavior for just the attributed action or controller. You can also change or disable the limit programmatically, either on a per-request basis or globally (see the instructions at this link.)\nIn my case, however, disabling the request limit was not enough. Because my endpoint is expecting an IFormFile argument, I also had to set the RequestFormLimits attribute:\n[HttpPost] [DisableRequestSizeLimit, RequestFormLimits(MultipartBodyLengthLimit = int.MaxValue, ValueLengthLimit = int.MaxValue)] public async Task\u0026lt;ActionResult\u0026gt; BulkAdd(string schema, IFormFile file) { Please note that all of this happened on a .NET 5 Linux application with Kestrel running behind nginx. As pointed out at the link above, if you\u0026rsquo;re running behind IIS, then the limit is disabled, and the usual web.config limit applies.\nFor future reference, here are the current Kestrel limits.\n","permalink":"https://nicolaiarocci.com/how-to-increase-upload-file-size-in-asp.net-core/","summary":"\u003cp\u003eToday I learned the hard way that since ASP.NET Core 2.0, the request body has\nacquired a default size limit at 30MB (~28.6 MiB).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf the request body size exceeds the configured max request body size limit,\nthe call to Request.Body.ReadAsync will throw an IOException. If this\nexception is uncaught, Kestrel will respond with a 413 Payload Too Large\nresponse and HttpSys will respond with a generic 500 Internal Server Error\nresponse (\u003ca href=\"https://github.com/aspnet/Announcements/issues/267\"\u003esource\u003c/a\u003e).\u003c/p\u003e","title":"How to increase upload file size in ASP.NET Core"},{"content":"I already mentioned what background music (or sounds) I like when I am coding. In that list, I included classical music. I know classical is not exactly a favorite. Not in my field, at least. I suspect the vast majority of people disregard it in advance, not really knowing what they\u0026rsquo;re missing out on, just because, well, you know, it\u0026rsquo;s dinosaurs stuff. If you are among them, you should reconsider and repent your sins. But have no worries, and rejoice, for I am here to save your soul.\nZachary Woolfe, The New York Times\u0026rsquo;s classical music editor, has been working on Five Minutes To Make You Love Classical Music. This remarkable project aims at \u0026ldquo;hooking readers on classical music, five minutes at a time.\u0026rdquo;\nOnce a month online, about 15 musicians, pop-culture figures and Times writers and editors each select the piece they would play for a friend tied to a theme, be it an instrument, composer, genre or voice type. The series aims to make classical music accessible to readers as a Top 40 track [\u0026hellip;]. You don\u0026rsquo;t need to know the difference between a cadenza and a concerto. \u0026ldquo;It\u0026rsquo;s about pure pleasure and exploration.\u0026rdquo; (source)\nI find this project interesting for many reasons, the main one being the variance of choices and themes. Picks are often excellent and not obvious. This is, I think, because of the wide range of people involved with the selections. You may have Yo-Yo Ma suggest a Concerto for the Cello installment, and then Mark Hamill or Condoleeza Rice propose a listening for the Mozart segment. How about Cecilia Bartoli for Baroque music?\nMind you, I am not a classical music expert. I just try and like to listen to good music, regardless of the genre. I am probably the ideal target for a project like this, which explains why I keep coming back. My favorite? Probably Five Minutes That Will Make You Love the Cello, although I am having a hard time accepting that Bach\u0026rsquo;s Suite No. 1 is not included in the selection (Suite No. 5 is, though.)\nOfficial NYT playlists for the series are available on Spotify and, I presume, other platforms. I know because I wasted a couple hours building my own before finding out.\n","permalink":"https://nicolaiarocci.com/five-minutes-to-make-you-love-classical-music/","summary":"\u003cp\u003eI already \u003ca href=\"/what-i-listen-to-while-programming\"\u003ementioned\u003c/a\u003e what background music (or sounds) I like when I am\ncoding. In that list, I included classical music. I know classical is not\nexactly a favorite. Not in my field, at least. I suspect the vast majority of\npeople disregard it in advance, not really knowing what they\u0026rsquo;re missing out on,\njust because, well, you know, it\u0026rsquo;s dinosaurs stuff. If you are among them, you\nshould reconsider and repent your sins. But have no worries, and rejoice, for\nI am here to save your soul.\u003c/p\u003e","title":"Five Minutes to Make You Love Classical Music"},{"content":"Pattern Matching is coming to Python, and I am not sure I like it. Don\u0026rsquo;t get me wrong, I love pattern matching. I use it all the time in F#. I am sure that once it lands in the language, it will be wildly adopted.\nSo what\u0026rsquo;s the problem with Python\u0026rsquo;s pattern matching? The community, some core developers included, has expressed several concerns. The Python Steering Council has acknowledged them and is willing to look into improvements should they be proposed. I am not going into the details here. You can look them up yourself. Let\u0026rsquo;s just say that there are a few gotchas, like the requirement to use dotted names as constants, to prevent them from being interpreted as capture variables instead (doh!) The lack of local scope bites hard here.\nIf we look at pattern matching in isolation, it is undoubtedly desirable. There ought to be a reason why every language on the planet is trying to adopt it. Is it pythonic? I doubt it. With all its corner cases and the odd syntax, I think that the current design adds quite a bit of complexity to the language. As someone noted, core dev Larry Hastings puts it well:\nI dislike the syntax and semantics expressed in PEP 634. I see the match statement as a DSL contrived to look like Python and to be used inside of Python, but with very different semantics. When you enter a PEP 634 match statement, the rules of the language change completely, and code that looks like existing Python code does something surprisingly very different (source)\nI especially agree with this sentiment, and I am still quoting Hastings:\nI think the bar for adding new syntax to Python at this point in its life should be set very high. The language is already conceptually pretty large, and every new feature means new concepts one must learn if one is to read an arbitrary blob of someone else\u0026rsquo;s Python code. The bigger the new syntax, the higher the bar should become, and so the bigger payoff the new syntax has to provide.\nUnfortunately, I feel like this trend of getting away from pythonic-Python has been going on for a while. As my friend Alessandro Molina mentioned just today:\nI have been thinking about how Python has been moving away from its own Zen since the time of \u0026ldquo;async\u0026rdquo; keyword. Convenience rarely values added complexity. Never been a big fan of adding keywords that will be misused by the majority to deal with the vertical needs of a minority (source)\nHe was referring to group exceptions, not pattern matching. Still, his tweet struck a nerve as I was busy writing down these thoughts.\nMore generally, I am concerned with all the recent attempts to take features from functional languages and bring them over to object-oriented languages. It\u0026rsquo;s not just a Python thing; C# just ported Records, pattern matching, and a few other things over from F#/ML. I understand that like 85% of the software development crowd is into object-oriented languages, but look, it\u0026rsquo;s going to exceptionally hard to successfully and seamlessly move features from apples to oranges.\n","permalink":"https://nicolaiarocci.com/musings-on-pythons-pattern-matching/","summary":"\u003cp\u003ePattern Matching \u003ca href=\"https://lwn.net/Articles/845480/\"\u003eis coming\u003c/a\u003e to Python, and I am not sure I like it. Don\u0026rsquo;t get me\nwrong, I love pattern matching. I use it all the time in F#. I am sure that\nonce it lands in the language, it will be wildly adopted.\u003c/p\u003e\n\u003cp\u003eSo what\u0026rsquo;s the problem with Python\u0026rsquo;s pattern matching? The community, some core\ndevelopers included, has expressed \u003ca href=\"https://discuss.python.org/t/gauging-sentiment-on-pattern-matching/5770\"\u003eseveral concerns\u003c/a\u003e. The Python Steering\nCouncil has acknowledged them and is willing to look into improvements should\nthey be proposed. I am not going into the details here. You can look them up\nyourself. Let\u0026rsquo;s just say that there are a few gotchas, like the requirement to\nuse dotted names as constants, to prevent them from being interpreted as\ncapture variables instead (doh!) The lack of local scope bites hard here.\u003c/p\u003e","title":"Musings on Python's Pattern Matching"},{"content":"In March 1970, Dr. John Conway sent the \u0026ldquo;fatal\u0026rdquo; (as he later referred to it) letter to Martin Gardner. He was submitting ideas for Gardner\u0026rsquo;s Mathematical Games column in Scientific American.\nThe New York Times features a good article on the fifty-year parable of The Game of Life. What\u0026rsquo;s appreciable, they asked some of Life\u0026rsquo;s most steadfast friends to reflect upon its influence and lessons over half a century. Among them, Brian Eno, who, being Brian Eno, has some smart things to say:\n[The Game of] Life shows you two things. The first is sensitivity to initial conditions. A tiny change in the rules can produce a huge difference in the output, ranging from complete destruction (no dots) through stasis (a frozen pattern) to patterns that keep changing as they unfold.\nThe second thing Life shows us is something that Darwin hit upon when he was looking at Life, the organic version. Complexity arises from simplicity! That is such a revelation; we are used to the idea that anything complex must arise out of something more complex. Human brains design airplanes, not the other way around. Life shows us complex virtual \u0026ldquo;organisms\u0026rdquo; arising out of the interaction of a few simple rules — so goodbye \u0026ldquo;Intelligent Design.\u0026rdquo;\nThe Lasting Lessons of John Conway\u0026rsquo;s Game of Life, on NYT ","permalink":"https://nicolaiarocci.com/the-lasting-lessons-of-john-conways-game-of-life/","summary":"\u003cp\u003eIn March 1970, Dr. John Conway sent the \u0026ldquo;fatal\u0026rdquo; (as he later referred to it)\nletter to Martin Gardner. He was submitting ideas for Gardner\u0026rsquo;s Mathematical\nGames column in Scientific American.\u003c/p\u003e\n\u003cp\u003eThe New York Times features a good article on the fifty-year parable of The\nGame of Life. What\u0026rsquo;s appreciable, they asked some of Life\u0026rsquo;s most steadfast\nfriends to reflect upon its influence and lessons over half a century. Among\nthem, Brian Eno, who, being Brian Eno, has some smart things to say:\u003c/p\u003e","title":"The Lasting Lessons of John Conway's Game of Life"},{"content":"I\u0026rsquo;m a space junkie. So tonight, like all the other space junkies on the planet, I watched in awe as Perseverance seamlessly and beautifully landed on the surface of Mars. This is a phenomenal achievement. Of course, I will eagerly follow her1 progress.\nAs I was following the live broadcast, I wondered: What kind of hardware and software runs all this incredible technology? It was launched in 2020, so it must be some cutting-edge stuff. As it turns out, that isn\u0026rsquo;t really the case.\nPerseverance computer uses the BAE RAD750 radiation-hardened single board computer2. Released twenty years ago (2001), the RAD750 is based on the PowerPC 750, designed by IBM and Motorola and released in 19973. The exact same computer is mounted on Curiosity4, which launched ten years ago.\nIt basically has the power of a circa 1992 Pentium 1 chip and will be responsible for handling the entire avionics architecture of the rover designed and programmed by NASA\u0026rsquo;s Jet Propulsion Laboratory (JPL) ([source][6])\nFrom the same source, we learn that at least good-ole RAD750 is not left alone:\nThe \u0026lsquo;old school\u0026rsquo; RDA750 computer will work in tandem with a series of field-programmable gate array (FPGA) computers to control such things as the drivetrain, wheels, suspension and cameras.\nI could not find any reliable information on the programming languages involved. I am guessing a mix of C/C++ and maybe Ada, as is typical of the aerospace industry. The operating system itself is VxWorks5, a real-time operating system initially released in 1987. This is a fascinating piece of software.\nTwo considerations come to mind. First, and I am repeating myself here, what a phenomenal achievement this landing is. As we watched the broadcast, I told my wife: these guys are literally making the future of humanity. What did I know that they\u0026rsquo;re making it on twenty-year-old technology. Second. We, ordinary people, might all be using way more power (and grid) than is really needed.\nUpdated on February 23th, 2021:\nOn Monday, NASA released [a video][7] of Perseverance\u0026rsquo;s descent to the red planet. If it looks like aliens are descending on the surface, it\u0026rsquo;s because, well, that is what happens. We are the aliens. NASA also released an absolutely mind-blowing [recording][8] of sounds from Mars\u0026rsquo;s surface.\nAs a non-native speaker, I was surprised (and delighted) to note that they refer to the drone as \u0026lsquo;her\u0026rsquo;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nPerseverance\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe RAD750\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nComparison of embedded computer systems on board the Mars rovers\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nVxVorks [6]: https://www.cio.com/article/3569577/the-technology-aboard-the-mars-rover-perseverance-an-inside-look.html [7]: https://youtu.be/4czjS9h4Fpg [8]: https://soundcloud.com/nasa/first-sounds-from-mars-filters-out-rover-self-noise [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/perseverance-made-it-to-mars-on-twenty-year-old-hardware/","summary":"\u003cp\u003eI\u0026rsquo;m a space junkie. So tonight, like all the other space junkies on the planet,\nI watched in awe as Perseverance seamlessly and beautifully landed on the\nsurface of Mars. This is a phenomenal achievement. Of course, I will eagerly\nfollow her\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e progress.\u003c/p\u003e\n\u003cp\u003eAs I was following the live broadcast, I wondered: What kind of hardware and\nsoftware runs all this incredible technology? It was launched in 2020, so it\nmust be some cutting-edge stuff. As it turns out, that isn\u0026rsquo;t really the case.\u003c/p\u003e","title":"Perseverance made it to Mars on twenty-year-old hardware"},{"content":"I came back to reading Shirley Jackson almost by coincidence. I had just finished watching The Haunting of Hill House, and, as I always do with stuff that tickles my curiosity, I was doing a little research on it. That\u0026rsquo;s how I learned that the TV Series is loosely based on a novel by the same name written by\u0026hellip; Shirley Jackson.\nStill imbued by the TV Series\u0026rsquo;s atmospheres, now knowing about its connection with Jackson, I was ready for another dive into her literature of psychological suspense and terror. Terror, not horror. Because one thing to appreciate in Jackson\u0026rsquo;s writing is that she relies on the former rather than the latter. To elicit emotion in the reader, she uses the tension between characters\u0026rsquo; psyches and the complex relationships between mysterious events. Stephen King opens his own novel, Firestarter, with this dedication: \u0026ldquo;In memory of Shirley Jackson, who never needed to raise her voice.\u0026rdquo;\nWe Have Always Lived in the Castle is a masterpiece. Let\u0026rsquo;s just marvel for a moment at the mastery of the incipit:\nMy name is Mary Katherine Blackwood. I am eighteen years old, and I live with my sister Constance. I have often thought that with any luck at all, I could have been born a werewolf, because the two middle fingers on both my hands are the same length, but I have had to be content with what I had. I dislike washing myself, and dogs, and noise. I like my sister Constance, and Richard Plantagenet, and Amanita phalloides, the death-cup mushroom. Everyone else in my family is dead.\nTone and pace are subtly, masterfully set right there in the opening paragraph. The main character is already outlined. In hindsight, by the end of the book, we can tell that we were hinted at a lot more than we initially thought. As I was reading, I could not help but think how clear and terse Jackson\u0026rsquo;s prose is. Only apparently simple, it draws scenes and characters with gem-cut precision. The unsaid does matter.\nAs Jonathan Lethem once noted, all of Jackson\u0026rsquo;s work creates an atmosphere of strangeness and contact with a vast intimacy with everyday evil\u0026hellip; and how that intimacy affects a village, a family, a self. This is, in fact, true for all the three Jacksons\u0026rsquo; works I read. Another common theme is the persecution of people who exhibit \u0026ldquo;otherness\u0026rdquo; or become outsiders in small communities, like those found in remote villages. This mirrors the author\u0026rsquo;s own experience. When she moved with her husband from New York to a small, rural Vermont village, they were isolated and ostracized by the local community. According to Letham, mainly because of anti-Semitism and anti-intellectualism.\nIn We Have Always Lived in the Castle, however, there is room for love and devotion. Only, they are probably extreme or distorted in sinister and remarkable ways.\nThis book is brilliant because it takes the canonical witch/haunted house theme and flips it over, instantly reversing the perspective. The story is told from within the house. Village folks are the bad guys. Those who seem to be motivated by good intentions are only fulfilling their own ego or striving to behave with good manners, as society expects them to do. We cannot help but feel at least a drop of compassion and sympathy for the devil.\n","permalink":"https://nicolaiarocci.com/book-review-we-have-always-lived-in-the-castle/","summary":"\u003cp\u003eI came back to reading Shirley Jackson almost by coincidence. I had just\nfinished watching The Haunting of Hill House, and, as I always do with stuff\nthat tickles my curiosity, I was doing a little research on it. That\u0026rsquo;s how\nI learned that the TV Series is loosely based on a novel by the same name\nwritten by\u0026hellip; Shirley Jackson.\u003c/p\u003e\n\u003cp\u003eStill imbued by the TV Series\u0026rsquo;s atmospheres, now knowing about its connection\nwith Jackson, I was ready for another dive into her literature of psychological\nsuspense and terror. Terror, not horror. Because one thing to appreciate in\nJackson\u0026rsquo;s writing is that she relies on the former rather than the latter. To\nelicit emotion in the reader, she uses the tension between characters\u0026rsquo; psyches\nand the complex relationships between mysterious events. Stephen King opens his\nown novel, Firestarter, with this dedication: \u0026ldquo;In memory of Shirley Jackson,\nwho never needed to raise her voice.\u0026rdquo;\u003c/p\u003e","title":"Book Review: We Have Always Lived in the Castle"},{"content":"About seven years ago, I presented the Eve Framework in a very crowded Python room at FOSDEM 2014 in Brussels. If you don\u0026rsquo;t know about FOSDEM, well, you should check it out. Every year thousands of developers who recognize themselves with the free and open-source movement gather in Brussels from all over the world. And I mean thousands of them. According to Wikipedia, since 2011, the meeting hosts about 4,000 visitors every year. It\u0026rsquo;s huge, and it\u0026rsquo;s a one of its kind.\nIn 2021, FOSDEM was held online. I already mentioned how I miss live events. In that post, I also wrote:\nAny conference junkie will tell you that she/he attends for the people first, and only then for the sessions themselves. At these events, the most exciting stuff happens in the corridors, usually during breaks.\nAt that FOSDEM seven years ago, I experienced one of those corridor moments. It did not really happen in a corridor, however.\nI was at the Delirium Cafe one night, with my good friend (and exceptionally skilled Pythonista) Alessandro Molina at my side. Many other conference attendees were there, and we were all having fun doing what nerds do when they gather for a night in the pub. We were sitting at this big round table, me, Alessandro, and three other guys I did not know yet. We all started chatting, enjoying ourselves over a few rounds of tasty Belgian beer. In front of me was sitting this friendly, obviously brilliant (if a little shy) guy from Switzerland. At some point, I don\u0026rsquo;t remember why, we were talking about PyPy, and getting technical about it. This guy was giving me a rundown on the ins-and-outs of PyPy, and well, I was surprised at how profound his knowledge was. In passing, I said that Alessandro and I knew one guy from the core team, Antonio Cuni. Then I mentioned the original author of the project, Armin Rigo, I think complimenting him on that significant achievement. The guy in front of me nodded and then smiled at me. And then came this weird, jarring moment of silence. That\u0026rsquo;s when my friend Alessandro nudged me and whispered, \u0026ldquo;Hey man, that\u0026rsquo;s Armin Rigo sitting there. Right in front of you.\u0026rdquo; We all had a good laugh. The next round was on me.\nIt\u0026rsquo;s small moments like these that make attending (and presenting at) conferences worth it.\nPS. I had all the hints—the brilliant guy from Switzerland who knows PyPy like the back of his hand. Someone wasn\u0026rsquo;t so smart on that night.\nThe Python room at FOSDEM 2014\nWith Alessandro at FOSDEM 2014\n","permalink":"https://nicolaiarocci.com/seven-years-ago-at-fosdem/","summary":"\u003cp\u003eAbout seven years ago, I presented the Eve Framework in a very crowded Python\nroom at FOSDEM 2014 in Brussels. If you don\u0026rsquo;t know about FOSDEM, well, you\nshould check it out. Every year thousands of developers who recognize\nthemselves with the free and open-source movement gather in Brussels from all\nover the world. And I mean thousands of them. According to Wikipedia, since\n2011, the meeting hosts about 4,000 visitors every year. It\u0026rsquo;s huge, and it\u0026rsquo;s\na one of its kind.\u003c/p\u003e","title":"Seven years ago at FOSDEM"},{"content":"Today I learned the hard way: don\u0026rsquo;t you dare running a vanilla install of VirtualBox together with Windows Subsystem for Linux v2 (WSL2). It won\u0026rsquo;t work. That\u0026rsquo;s because WSL2 uses Hyper-V under the hood, which is incompatible with VirtualBox.\nAccording to the official documentation for VirtualBox v6.0:\nOracle VM VirtualBox can be used on a Windows host where Hyper-V is running. This is an experimental feature. No configuration is required. Oracle VM VirtualBox detects Hyper-V automatically and uses Hyper-V as the virtualization engine for the host system.\nWell, that did not prove to be true in my case. Hence the experimental clause, I guess. A little googling revealed that, indeed, it did work for a while, then a new Windows 10 release broke it again:\nThe Hyper-V API became a viable reality with 1803, practically with 1809. And it went fine with 1903. And it broke with 1909. Please use your favorite search engine for \u0026ldquo;Immature API\u0026rdquo;\u0026hellip; (source)\nEven if it did work, however, you\u0026rsquo;d run into some (possibly) severe performance degradation. Quoting from the same official documentation page:\nWhen using this feature, some host systems might experience significant Oracle VM VirtualBox performance degradation.\nIf you don\u0026rsquo;t need to run WSL2 and your VMs simultaneously, one workaround is to disable WSL2 in the Windows Features. There, you have to disable Hyper-V, Virtual Machine Platform, and Windows Subsystem for Windows. Yes, I had to explicitly disable all three of them. When you eventually reactivate them, WSL2 will start working again, configurations included.\nAnother option is to fallback to WSL1. That will work. Unlike WSL2, WSL1 does not run in a VM. Also, converting back and forth between WSL1 and WLS2 is dead simple. I did not go this route because, well, I like the performance that comes with WSL2. I also plan to use VirtualBox only rarely, when I need to test new versions of our desktop application\u0026rsquo;s installation procedure.\nThis is all not ideal, of course. The situation is evolving. This ticket on the WSL documentation repository is probably the place to watch for updates.\nHopefully, soon, once the currently \u0026ldquo;immature API\u0026rdquo; stabilizes, I will be able to come back to this article, edit it, and note that now everything works as expected.\n","permalink":"https://nicolaiarocci.com/troubles-with-virtualbox-and-the-windows-subsystem-for-linux/","summary":"\u003cp\u003eToday I learned the hard way: don\u0026rsquo;t you dare running a vanilla install of\nVirtualBox together with Windows Subsystem for Linux v2 (WSL2). It won\u0026rsquo;t work.\nThat\u0026rsquo;s because WSL2 uses Hyper-V under the hood, which is incompatible with\nVirtualBox.\u003c/p\u003e\n\u003cp\u003eAccording to the \u003ca href=\"https://docs.oracle.com/en/virtualization/virtualbox/6.0/admin/hyperv-support.html\"\u003eofficial documentation\u003c/a\u003e for VirtualBox v6.0:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOracle VM VirtualBox can be used on a Windows host where Hyper-V is running.\n\u003cstrong\u003eThis is an experimental feature\u003c/strong\u003e. No configuration is required. Oracle VM\nVirtualBox detects Hyper-V automatically and uses Hyper-V as the\nvirtualization engine for the host system.\u003c/p\u003e","title":"Troubles with VirtualBox and the Windows Subsystem for Linux"},{"content":"What music do you listen to while programming?1 For me, it\u0026rsquo;s usually jazz, classical, electronic, lots of it, or nothing. There are some specialized websites and podcasts I sometimes recur to, like [Music for Programming][1]. Several Spotify playlists I dig a lot, [Every Day I\u0026rsquo;m Nerdin\u0026rsquo;][2] being one of them. What can I say? I am musically omnivore.\nHowever, I recently discovered something different: the [Field Recordings podcast][3]. \u0026ldquo;A podcast where audio-makers stand silently in fields (or things that could be broadly interpreted as fields).\u0026rdquo; I am told it was launched last year, just about when the COVID lockdowns started, by acclaimed UK audio artist and producer Eleanor McDowall. It\u0026rsquo;s free, updated daily with submissions coming from all over the world, and holds many treasures. Most episodes are short, I\u0026rsquo;d say around the 5 minutes mark, with some notable exceptions like [The Sound of 2020][4], \u0026ldquo;A slow weave of some of 2020\u0026rsquo;s Field Recordings in chronological order\u0026rdquo;. One of my favorites has got to be the \u0026ldquo;[Inside the log burner][5]\u0026rdquo; episode by Chris Attaway (Devoran, Cornwall, UK, January 2021):\n\u0026ldquo;I was prepping a fire in our log burner on a cold, blustery day here in Devoran, Cornwall and the wind whistling through the vents was really creepy! So I stuck my Zoom inside and recorded it for a bit. It was like it had its own little atmosphere and weather inside!\u0026rdquo;\nAt my desk churning out code, I hit play, and that stove is instantly teleported here, right by my side. I can almost feel its warmth. Indeed, there\u0026rsquo;s something cathartic about listening to these sound fragments from all over the world.\nAs I write this, news of the passing of Chick Corea hit me. Today his Plays album is on repeat. [5]: https://fieldrecordings.xyz/2021/01/12/inside-the-log-burner-devoran-cornwall-in-january-2021-by-chris-attaway/ [4]: https://fieldrecordings.xyz/2020/12/14/the-sound-of-2020/ [3]: https://fieldrecordings.xyz/ [2]: https://open.spotify.com/playlist/1itC2kKqIqun8OU05J5G8v?si=iYtyuKAfT4ejArv1aaT4FQ [1]: http://www.musicforprogramming.net/ [rss]: https://nicolaiarocci.com/index.xml [tw]: http://twitter.com/nicolaiarocci [nl]: https://buttondown.email/nicolaiarocci\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/what-i-listen-to-while-programming/","summary":"\u003cp\u003eWhat music do you listen to while programming?\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e For me, it\u0026rsquo;s usually jazz,\nclassical, electronic, lots of it, or nothing. There are some specialized\nwebsites and podcasts I sometimes recur to, like [Music for Programming][1].\nSeveral Spotify playlists I dig a lot, [Every Day I\u0026rsquo;m Nerdin\u0026rsquo;][2] being one of\nthem. What can I say? I am musically omnivore.\u003c/p\u003e\n\u003cp\u003eHowever, I recently discovered something different: the [Field Recordings\npodcast][3]. \u0026ldquo;A podcast where audio-makers stand silently in fields (or things\nthat could be broadly interpreted as fields).\u0026rdquo; I am told it was launched last\nyear, just about when the COVID lockdowns started, by acclaimed UK audio artist\nand producer Eleanor McDowall. It\u0026rsquo;s free, updated daily with submissions coming\nfrom all over the world, and holds many treasures. Most episodes are short, I\u0026rsquo;d\nsay around the 5 minutes mark, with some notable exceptions like [The Sound of\n2020][4], \u0026ldquo;A slow weave of some of 2020\u0026rsquo;s Field Recordings in chronological\norder\u0026rdquo;. One of my favorites has got to be the \u0026ldquo;[Inside the log burner][5]\u0026rdquo;\nepisode by Chris Attaway (Devoran, Cornwall, UK, January 2021):\u003c/p\u003e","title":"What I listen to while programming"},{"content":"Ever had your old, trusty Python virtual environment fail on you? I sure did. Sometimes, when I activate or switch between virtual environments, I get the following error:\n$ workon eve dyld: Library not loaded: @executable_path/../.Python I never really took the time to look into it. When this happens, because I am in a rush (and because I am a lazy old fart), I shrug it off, recreate the virtual environment on the spot, and get back to work.\nMy friend Justin Mayer knows better. The other day, he posted a short insightful article about this very same issue:\nPerhaps you heard stories about why you shouldn’t use the system-bundled Python, so instead you use Homebrew to install Python and then use its interpreter to create a virtual environment. A month later, you activate that same environment, and when you try to use it, you see this inscrutable error: (\u0026hellip;) What happened? The Python interpreter referenced by the virtual environment… no longer exists. But how can that be? You didn’t change anything! You didn’t change anything… but Homebrew did.\nHomebrew is the culprit. If you have been affected (and if you have done any length of serious Python work, you have), then go read Justin\u0026rsquo;s piece. He explains the whys and then goes into the hows you solve the problem for good.\n","permalink":"https://nicolaiarocci.com/when-homebrew-breaks-your-python-virtual-environment/","summary":"\u003cp\u003eEver had your old, trusty Python virtual environment fail on you? I sure did.\nSometimes, when I activate or switch between virtual environments, I get the\nfollowing error:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ workon eve\ndyld: Library not loaded: @executable_path/../.Python\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI never really took the time to look into it. When this happens, because I am\nin a rush (and because I am a lazy old fart), I shrug it off, recreate the\nvirtual environment on the spot, and get back to work.\u003c/p\u003e","title":"When Homebrew breaks your Python virtual environment"},{"content":"The Water Dancer is the debut novel for Ta-Nehisi Coates, an author and journalist best known for his nonfiction works. Set in a slave plantation located in pre-civil war Virginia, this is a bold and ambitious story about slavery. From the editor website:\nYoung Hiram Walker was born into bondage. When his mother was sold away, Hiram was robbed of all memory of her—but was gifted with a mysterious power. Years later, when Hiram almost drowns in a river, that same power saves his life. This brush with death births an urgency in Hiram and a daring scheme: to escape from the only home he’s ever known.\nGiven the premise, one might expect an action-packed escape story. Instead, the rhythm is deliberately slow-paced, and the tone is quiet. In fact, some reviewers find the book a little slow. I disagree. It\u0026rsquo;s calm, yes, but definitely not slow. Hiram Walker, the main character, has this quiet attitude. Because he is the narrator, we see the world from his own perspective.\nCoates prose is excellent if sometimes a little meandering. Several times while reading, I was brought back to scenes from Quentin Tarantino\u0026rsquo;s Django Unchained. Mind you, this novel is nothing at all like Django. There is violence, and brutality too, but they stay under trace. Yet, somehow this novel manages to validate the movie\u0026rsquo;s events; it makes them very believable.\nI was a little disconcerted when supernatural elements started pouring into the story. The plot deviating from the historic genre into what, fantasy? Then it landed on me. This work is obviously the result of long and passionate research. If fantastical elements are introduced, it must be because they fit with the story somehow. A little research reveals that, indeed, that is the case. Myths of slaves escaping their condition by magic means or powerful ritual songs were deep-rooted within their culture. In this novel, legend becomes reality. What I initially found to be jarring turns out to be the perfect plot-twist, the expedient that allows the story to unfold.\nThe Underground Railroad, the network of secret routes and safe houses used by the enslaved to escape into the free states of the North, is a fascinating subject. I did not know about it, and I am grateful to this book for teaching me.\nI think this book does an excellent job at recounting slavery from the enslaved (or the Tasked, as the author calls them) viewpoint and their culture.\n","permalink":"https://nicolaiarocci.com/book-review-the-water-dancer/","summary":"\u003cp\u003eThe Water Dancer is the debut novel for Ta-Nehisi Coates, an author and\njournalist best known for his nonfiction works. Set in a slave plantation\nlocated in pre-civil war Virginia, this is a bold and ambitious story about\nslavery. From the editor \u003ca href=\"https://www.penguinrandomhouse.com/books/550171/the-water-dancer-by-ta-nehisi-coates/\"\u003ewebsite\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYoung Hiram Walker was born into bondage. When his mother was sold away,\nHiram was robbed of all memory of her—but was gifted with a mysterious power.\nYears later, when Hiram almost drowns in a river, that same power saves his\nlife. This brush with death births an urgency in Hiram and a daring scheme:\nto escape from the only home he’s ever known.\u003c/p\u003e","title":"Book Review: The Water Dancer"},{"content":"After six years in the field, Chris has shared his strong opinions on software development practices, languages, and methodologies. I like his attitude. Willingness to continuously put one\u0026rsquo;s personal views under scrutiny, eventually adapting or even changing them as needed, is not a common trait. Not in our field. While I generally agree with most of his opinions, I feel the urge to comment on a few of them.\nTyped languages are better when you\u0026rsquo;re working on a team of people with various experience levels\nTyped languages are better, period.\nSoftware architecture probably matters more than anything else. A shitty implementation of a good abstraction causes no net harm to the code base. A bad abstraction or missing layer causes everything to rot.\nPerfect. I am stealing this line.\nClever code isn\u0026rsquo;t usually good code. Clarity trumps all other concerns.\nGood and clever code is very possible, though. Agree on the second part.\nBad code can be written in any paradigm\nÇa va sans dire\nSo called \u0026ldquo;best practices\u0026rdquo; are contextual and not broadly applicable. Blindly following them makes you an idiot\nNot following them also makes you an idiot.\nDesigning scalable systems when you don\u0026rsquo;t need to makes you a bad engineer.\nBut how do I know in advance whether I need to be scalable or not? Not always an easy call. Also, scalability doesn\u0026rsquo;t necessarily imply complexity.\nIn general, RDBMS \u0026gt; NoSql\nIn general, use the right tool for the right job.\nFunctional programming is another tool, not a panacea.\nThe jury is out on this one. In my admittedly limited experience, functional programming tends to win over OOP. It\u0026rsquo;s not a coincidence that most OOP languages keep adding functional features (looking at you, C#.).\nPencil and paper are the best programming tools and vastly under used\nOld fart me concurs.\nTrading purity in exchange for practicality is usually a good call\nDon\u0026rsquo;t get carried away with that.\nTalking directly to the customer always reveals more about the problem, in less time, and with higher accuracy\n:s/always/sometimes\nThe word \u0026ldquo;scalable\u0026rdquo; has a mystical and stupefying power over the mind of the software engineer. Its mere utterance can whip them into a depraved frenzy. Grim actions have been justified using this word\nI plea guilty on this one.\nDespite being called \u0026ldquo;engineers,\u0026rdquo; most decision are pure cargo-cult with no backing analysis, data, or numbers\nI am a software craftsman.\nPeople who stress over code style, linting rules, or other minutia are insane weirdos\nI am an insane weirdo.\nCode coverage has absolutely nothing to do with code quality\nIt also has nothing to do with tests quality.\nMonoliths are pretty good in most circumstances\n:s/most/some\nTDD purists are just the worst. Their frail little minds can\u0026rsquo;t process the existence of different workflows.\nOuch. This hurts.\nI am not sure I would have had so many well-formed opinions only six years in. Read them all on Chris\u0026rsquo; website.\n","permalink":"https://nicolaiarocci.com/strong-opinions-on-software-development/","summary":"\u003cp\u003eAfter six years in the field, Chris has \u003ca href=\"https://chriskiehl.com/article/thoughts-after-6-years\"\u003eshared\u003c/a\u003e his strong opinions on\nsoftware development practices, languages, and methodologies. I like his\nattitude. Willingness to continuously put one\u0026rsquo;s personal views under scrutiny,\neventually adapting or even changing them as needed, is not a common trait. Not\nin our field. While I generally agree with most of his opinions, I feel the\nurge to comment on a few of them.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTyped languages are better when you\u0026rsquo;re working on a team of people with\nvarious experience levels\u003c/p\u003e","title":"Strong opinions on software development"},{"content":"As a non-native English reader, I had to look up the true meaning of \u0026ldquo;Unbundling\u0026rdquo; as a neologism. According to Wikipedia\nUnbundling is a neologism to describe how the ubiquity of mobile devices, Internet connectivity, consumer web technologies, social media and information access in the 21st century is affecting older institutions (education, broadcasting, newspapers, games, shopping, etc.) by \u0026ldquo;break[ing] up the packages they once offered (possibly even for free), providing particular parts of them at a scale and cost unmatchable by the old order.\u0026rdquo; Unbundling has been called \u0026ldquo;the great disruptor.\u0026rdquo;\nEvery year Benedict Evans, former Andreessen Howoritz partner and now independent analyst, produces a big presentation digging into macro and strategic trends in the tech industry. This year, The Great Unbundling.\nCovid brought shock and a lot of broken habits to tech, but mostly, it accelerates everything that was already changing. 20 trillion dollars of retail, brands, TV and advertising is being overturned, and software is remaking everything from cars to pharma. Meanwhile, China has more smartphone users than Europe and the USA combined, and India is close behind\ntechnology and innovation will be much more widely spread. For that and lots of other reasons, tech is becoming a regulated industry, but if we step over the slogans, what does that actually mean? Tech is entering its second 50 years. I find this work to be worth studying. It draws a detailed, informed picture of what happened in technology and the economy these last years. It also offers insights, with some foresight, into what might come next.\nFind the presentation at ben-evans.com\n","permalink":"https://nicolaiarocci.com/the-great-unbundling-according-to-benedict-evans/","summary":"\u003cp\u003eAs a non-native English reader, I had to look up the true meaning of\n\u0026ldquo;Unbundling\u0026rdquo; as a neologism. According to Wikipedia\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eUnbundling is a neologism to describe how the ubiquity of mobile devices,\nInternet connectivity, consumer web technologies, social media and\ninformation access in the 21st century is affecting older institutions\n(education, broadcasting, newspapers, games, shopping, etc.) by \u0026ldquo;break[ing]\nup the packages they once offered (possibly even for free), providing\nparticular parts of them at a scale and cost unmatchable by the old\norder.\u0026rdquo; Unbundling has been called \u0026ldquo;the great disruptor.\u0026rdquo;\u003c/p\u003e","title":"The Great Unbundling according to Benedict Evans"},{"content":"I am presenting at two different events in February next month. Given the current COVID situation, that is entirely unexpected. In 2020 I only gave four talks, three of which were virtual. I am not holding my breath for 2021. Conferences are going virtual all year-long. Next year too, most likely.\nThere are some clear advantages in going virtual, but the final result is a net negative. Any conference junkie will tell you that she/he attends for the people first, and only then for the sessions themselves. At these events, the most exciting stuff happens in the corridors, usually during breaks. A little story here. You might know that I run a motorcycle club. Well, the very idea of founding it was actually ignited by a corridor chat, few minutes after I delivered a session. Replicating this kind of in-person interaction online is, well, next to impossible.\nAs a speaker, I miss presenting live. A simple glance at the audience helps me assess how\u0026rsquo;s going and eventually adjust my talk direction. The Q\u0026amp;A session at the end? That is often a matter of eye contact and body language. Not to mention the \u0026ldquo;offline session\u0026rdquo; that follows if your presentation had any degree of success. With online delivery, that\u0026rsquo;s all lost.\nAlso, I suspect not many online attendees actually pay due attention, not compared to the same session presented in-person. I know that\u0026rsquo;s true for me. When I\u0026rsquo;m comfortably sitting at my desk, too many things compete for my attention. Every possible distraction is just one click away. And then there\u0026rsquo;s the family. And my cat, of course.\nSpeaking of attendance, I would not be surprised to find that many people who sign up for the event won\u0026rsquo;t actually show up. Again, I know because it happens to me all the time. The commitment I have to put in for attending an in-person conference is much higher, making it more likely that I will actually participate.\nOrganizers, on the other hand, are incredible. They do a fantastic job in attempting to provide an experience as close as possible to the real one. They are the true heroes of this kind of event. They always have been, even more so now that we\u0026rsquo;re forced to go virtual. Remember to always have a word of gratitude for your fellow organizer. She/he deserves that.\nAlright, enough with the rambling. Here\u0026rsquo;s where I\u0026rsquo;m presenting next month:\nPython REST APIs for Humans at CloudGen 2021 Introduction to F# and functional languages at Scottish Summit 2021 One significant advantage of virtual conferences is that anybody can take part no matter where she/he lives on the planet. So, maybe you will fancy join us?\n","permalink":"https://nicolaiarocci.com/upcoming-speaking-engagements-with-ramblings/","summary":"\u003cp\u003eI am presenting at two different events in February next month. Given the\ncurrent COVID situation, that is entirely unexpected. In 2020 I only gave \u003ca href=\"/speaking\"\u003efour\ntalks\u003c/a\u003e, three of which were virtual. I am not holding my breath for 2021.\nConferences are going virtual all year-long. Next year too, most likely.\u003c/p\u003e\n\u003cp\u003eThere are some clear advantages in going virtual, but the final result is a net\nnegative. Any conference junkie will tell you that she/he attends for the\npeople first, and only then for the sessions themselves. At these events, the\nmost exciting stuff happens in the corridors, usually during breaks. A little\nstory here. You might know that I run a motorcycle club. Well, the very idea of\nfounding it was actually ignited by a corridor chat, few minutes after\nI delivered a session. Replicating this kind of in-person interaction online\nis, well, next to impossible.\u003c/p\u003e","title":"Upcoming speaking engagements, with ramblings"},{"content":"We\u0026rsquo;ve seen other articles pointing the finger at unnecessarily bloated websites. Terence Eden\u0026rsquo;s On the unreasonable effectiveness of simple HTML deserves mention, I think, for two reasons. First, the delivery is incredibly effective. Second, it is effective because of the storytelling.\nBy enveloping the message into an original short, touching story, he achieves two goals. First, he captures the reader\u0026rsquo;s attention; second, he makes the experience memorable. Please, go and read it; I\u0026rsquo;ll wait here.\nIn the second paragraph, we\u0026rsquo;re already knee-deep into the story:\nIn the middle, a young woman sits on a hard plastic chair. She is surrounded by canvas-bags containing her worldly possessions. She doesn’t look like she is in a great emotional place right now. Clutched in her hands is a games console – a PlayStation Portable. She stares at it intensely; blocking out the world with Candy Crush. Or, at least, that’s what I thought.\nThen, in the second to last paragraph, when the story is long over, notice the expedient of echoing elements from the story (the woman\u0026rsquo;s chair; the small obsolete device; both uncomfortable) to reinforce the message:\nGo sit in an uncomfortable chair, in an uncomfortable location, and stare at an uncomfortably small screen with an uncomfortably outdated web browser. How easy is it to use the websites you’ve created?\nFor added momentum, the last paragraph reconciliates the story and the message—worth a read. Style notes aside, of course, unless your website serves static content, some Javascript is probably going to be unavoidable. The point still stands, though: do not overdo it. Or, as Confucius would say, do not use a cannon to kill a mosquito.\n","permalink":"https://nicolaiarocci.com/the-unreasonable-effectiveness-of-simple-html/","summary":"\u003cp\u003eWe\u0026rsquo;ve seen other articles pointing the finger at unnecessarily bloated\nwebsites. Terence Eden\u0026rsquo;s \u003cem\u003e\u003ca href=\"https://shkspr.mobi/blog/2021/01/the-unreasonable-effectiveness-of-simple-html/\"\u003eOn the unreasonable effectiveness of simple\nHTML\u003c/a\u003e\u003c/em\u003e deserves mention, I think, for two reasons. First, the delivery is\nincredibly effective. Second, it is effective because of the storytelling.\u003c/p\u003e\n\u003cp\u003eBy enveloping the message into an original short, touching story, he achieves\ntwo goals. First, he captures the reader\u0026rsquo;s attention; second, he makes the\nexperience memorable. Please, go and read it; I\u0026rsquo;ll wait here.\u003c/p\u003e","title":"The unreasonable effectiveness of simple HTML"},{"content":"Bless the Internet Archive and its Wayback Machine. With it, we can go back in time and read The short, tormented life of computer genius Phil Katz, an unusually detailed and accurate article published in the April 14, 2000 issue of the Milwaukee Journal Sentinel.\nWhen he was found dead April 14, Phil Katz was slumped against a nightstand in a south side hotel, cradling an empty bottle of peppermint schnapps. The genius who built a multimillion-dollar software company known worldwide for its pioneering \u0026ldquo;zip\u0026rdquo; files had died of acute pancreatic bleeding caused by chronic alcoholism. He was alone, estranged long ago from his family and a virtual stranger to employees of his own company, PKWare Inc. He was 37.\nIn the late 80s, when the culmination of Katz\u0026rsquo;s work on compression algorithms, PKZIP, emerged as the clear winner of the so-called \u0026ldquo;compressors war,\u0026rdquo; I was running my own little BBS, Lorien, which later evolved into Phoenix BBS, a fully-fledged FidoNet node. When Lorien went first online in 1987, most if not all downloadables were in ARC format. Three years later, in 1990, when Phoenix emerged from Lorien\u0026rsquo;s ashes, ZIP archives ruled the world. Fast forward 30 years. A couple of days ago, I wrote C# code that receives data streams over a REST API and then stores them as ZIP files.\nI would be hard-pressed to find another piece of shareware, single-handly developed software that has been as influential, pervasive, and widespread in the industry as PKZIP from PKWare. Of course, Linux and SQLite, although both came later (the former in 1991, the latter in the spring of 2000.)\nKatz\u0026rsquo;s story is indeed a cautionary tale of genius, torment, and horrible demise. I cannot help but wonder: would his life trajectory have been different had he not been so successful? Probably not, given the details revealed in the article, but who knows. For sure, the tormented story of Phil Katz leaves me with one clear takeaway. Success does not grant happiness.\n","permalink":"https://nicolaiarocci.com/on-the-short-tormented-life-of-phil-katz/","summary":"\u003cp\u003eBless the Internet Archive and its Wayback Machine. With it, we can go back in\ntime and read \u003ca href=\"https://web.archive.org/web/20000829071343/http://www2.jsonline.com/news/state/may00/katz21052000a.asp\"\u003eThe short, tormented life of computer genius Phil\nKatz\u003c/a\u003e, an unusually detailed and accurate article published in the April 14,\n2000 issue of the Milwaukee Journal Sentinel.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen he was found dead April 14, Phil Katz was slumped against a nightstand\nin a south side hotel, cradling an empty bottle of peppermint schnapps. The\ngenius who built a multimillion-dollar software company known worldwide for\nits pioneering \u0026ldquo;zip\u0026rdquo; files had died of acute pancreatic bleeding caused by\nchronic alcoholism. He was alone, estranged long ago from his family and\na virtual stranger to employees of his own company, PKWare Inc. He was 37.\u003c/p\u003e","title":"On the short, tormented life of Phil Katz"},{"content":"I finished reading Erebus: The Story of a Ship by Michael Palin, an excellent book on the dramatic adventures of the HMS Erebus with her sister ship, the HMS Terror, first in James Clark Ross\u0026rsquo;s Antarctic expedition of 1839-43, and then during Franklin’s ill-fated Arctic expedition in search of the Northwest Passage. I knew Michael Palin as a member of the Monty Python comedy group. As it turns out, since 1980, he has also made many travel documentaries and books.\nI first became interested in these two ships’ Arctic adventure after watching the fictionalized TV series The Terror with my son Marco. As a former navy sailor myself, I appreciated how they realistically reconstructed the claustrophobic every-day life on board the Victorian age ships. However, I did not enjoy how the script soon took part from the real events, turning the story into something closer to Jurassic Park, and that’s where I stopped watching the series.\nThis book, instead, is incredibly well-researched and written. To help tell the story, Palin has traveled to various locations across the world – Tasmania, the Falklands, the Canadian Arctic – to search for local information and experience the terrain and the conditions that would have confronted the Erebus and her crew. For anyone interested in history, exploration and heroic tales, this is a book for you.\nEnjoyed this post? Subscribe to the newsletter or follow @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/book-review-erebus-the-story-of-a-ship/","summary":"\u003cp\u003eI finished reading \u003cem\u003eErebus: The Story of a Ship\u003c/em\u003e by Michael Palin, an excellent\nbook on the dramatic adventures of the HMS Erebus with her sister ship, the HMS\nTerror, first in James Clark Ross\u0026rsquo;s Antarctic expedition of 1839-43, and then\nduring Franklin’s ill-fated Arctic expedition in search of the Northwest\nPassage. I knew Michael Palin as a member of the Monty Python comedy group. As\nit turns out, since 1980, he has also made many travel documentaries and books.\u003c/p\u003e","title":"Book Review: Erebus, The Story of a Ship"},{"content":"Here are five books I read in 2020 that I would recommend. I read several fine books last year, so please check out my reading history if you are unsatisfied with this selection.\nMani: Travels in the Southern Peloponnese, by Patrick Leigh Fermor. I love Patrick Leigh Fermor. Over the years, I read almost everything he wrote. He has been described as \u0026ldquo;a cross between Indiana Jones, James Bond, and Graham Greene,\u0026rdquo; and for a good reason. He bridges the genres of adventure story, travel writing, and memoir to reveal an ancient world living alongside the twentieth century. Here he carries the reader with him on his journeys among the Greeks of the mountains, exploring their history and time-honored lore. The Mani, at the tip of Greece\u0026rsquo;s-and Europe\u0026rsquo;s-southernmost peninsula, is one of the most isolated regions of the world. Cut off from the rest of the country by the high range of the Taygetus and hemmed in by the Aegean and Ionian seas, it is a land where the past is still very much a part of its people\u0026rsquo;s daily lives.\nBonus tip. The book that got me hooked with Patrick Leigh Fermor is A Time of Gifts, a memoir of the first part of his journey on foot across Europe, from the Hook of Holland to Constantinople in 1933/34. A fascinating read.\nSwann\u0026rsquo;s Way, by Marcel Proust. This is the first volume of Marcel Proust\u0026rsquo;s In Search of Lost Time, arguably the twentieth century\u0026rsquo;s finest novel. Indeed, while reading the first part, a boy\u0026rsquo;s impressions of his family and neighbors, all brought dazzling back to life years later by the taste of a madeleine, I could appreciate why Marcel Proust is considered the best writer of all time. The second part, the short novel Swann in Love, \u0026ldquo;an incomparable study of sexual jealousy,\u0026rdquo; which follows, is also excellent. I have to admit I kept postponing this book basically for all my life, as I was intimidated by its fame. I am glad I finally got to read it as a mature adult but make no mistake, this book is a must-read, in due time, for any avid reader.\nThe Master and Margarita, by Mikhail Bulgakov. An audacious revision of Faust and Pontius Pilate\u0026rsquo;s stories, The Master and Margarita is recognized as one of the essential classics of modern Russian literature. I was surprised by both the audacity and modernity of the story and Bulgakov\u0026rsquo;s own writing style. Of all the scenes, those that probably impressed me the most were Satan\u0026rsquo;s ball and Margarita\u0026rsquo;s flight. The Master and Margarita is a true masterpiece. With Swann\u0026rsquo;s Way, it sits right there at the top of my classics stack.\nHelgoland, by Carlo Rovelli. Carlo Rovelli is a theoretical physicist and writer. His work is mainly in quantum gravity, where he is among the founders of the loop quantum gravity theory. In this book, Rovelli recounts the story of what has been acknowledged as the most radical scientific revolution of modern times: quantum physics. In June 1925, in Helgoland, a bare and windswept isle in the North Sea, a 23 years old Werner Heisenberg started it all. Since then, in almost one century, quantum physics revealed many controversial if not disturbing new ideas, most of them confirmed over time, leading to all kinds of technological innovations. I don\u0026rsquo;t think this book has been translated to languages other than Italian as of yet. By googling a little bit around, I found English translations announced by Penguin and other editors.\nDe Brevitate Vitae (On the Shortness of Life), by Seneca. I am impressed by this short book. I expected it to be a challenging, hard descent into the ancient philosopher\u0026rsquo;s mind. It was a joyful read instead. Even today, Seneca\u0026rsquo;s writings offer potent insights into the art of living, the importance of reason and morality and continue to provide profound guidance to many through their eloquence, lucidity, and timeless wisdom.\nOn a more personal note I strive to read good books. Of course, defining what makes a good book is is very subjective. In my case, good books challenge my understanding of the world in which I live. That might sound too broad (and ambitious) of a goal, and probably it is. I tend to read all kinds of different books: novels, essays, classics, with non-fiction gravitating towards topics such as history, science, and, only more recently, economy and finance. As you might have guessed from the list above, lately, I have been reading classics a lot. I don\u0026rsquo;t read too many programming or computer science books. Not these days anyway. As I get older, I prefer to distance myself from the topics I focus on at work all day long.\nReading is my zen mode. I do other activities that achieve similar results, such as walking, hiking, motorcycling and working out, but reading, I come to recognize, reigns supreme. It\u0026rsquo;s been with me since I was a kid and, also, compared to the other activities, it is very affordable in terms of time and effort.\nI read 28 books in 2020. It appears I have performed slightly below my recent average. I once commented on Twitter that \u0026ldquo;the number of books per year\u0026rdquo; does not make for a useful metric. At the very least, it doesn\u0026rsquo;t tell the whole story. Take 2018 and 2019. In 2018 I read 30 books; in 2019 I only read 25. It sounds like a steep decline until we look at the \u0026ldquo;pages read per year\u0026rdquo; metric. As it turns out, I actually read more in 2019 than in 2018 (8394 vs. 8322. Ok, it\u0026rsquo;s more of a tie.)\nEnjoyed this post? Subscribe to the newsletter or follow @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/five-good-books-i-read-in-2020/","summary":"\u003cp\u003eHere are five books I read in 2020 that I would recommend. I read several fine\nbooks last year, so please check out my \u003ca href=\"https://nicolaiarocci.com/books-i-have-read/\"\u003ereading history\u003c/a\u003e if you are unsatisfied\nwith this selection.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Mani%3A_Travels_in_the_Southern_Peloponnese\"\u003eMani: Travels in the Southern Peloponnese\u003c/a\u003e, by \u003ca href=\"https://en.wikipedia.org/wiki/Patrick_Leigh_Fermor\"\u003ePatrick Leigh\nFermor\u003c/a\u003e\u003c/em\u003e. I love Patrick Leigh Fermor. Over the years, I read almost\neverything he wrote. He has been described as \u0026ldquo;a cross between Indiana Jones,\nJames Bond, and Graham Greene,\u0026rdquo; and for a good reason. He bridges the genres of\nadventure story, travel writing, and memoir to reveal an ancient world living\nalongside the twentieth century. Here he carries the reader with him on his\njourneys among the Greeks of the mountains, exploring their history and\ntime-honored lore. The Mani, at the tip of Greece\u0026rsquo;s-and Europe\u0026rsquo;s-southernmost\npeninsula, is one of the most isolated regions of the world. Cut off from the\nrest of the country by the high range of the Taygetus and hemmed in by the\nAegean and Ionian seas, it is a land where the past is still very much a part\nof its people\u0026rsquo;s daily lives.\u003c/p\u003e","title":"Five Good Books I Read in 2020"},{"content":"Today I was happily migrating some C# projects to Net 5 when I stumbled upon something unexpected. My focus was on a library (a NetStandard2.0 REST API client, an SDK) and its associated test suite. The test project was a NetCore 3.1 application.\nAs you can imagine, being a REST API client, the library does a lot of talking with a remote Web Service. It does that by leveraging the almightly System.Net.HttpClient. The library has a private, static HttpResponseMessage parser method. Its job is, well, to parse all responses from the remote. It looks for known, expected headers, gracefully handle them, and then deserializes the response content, if there is any.\nThe test suite has one primary task: to ensure that the SDK can adequately handle the request-response cycle. It does that by mocking a HttpMessageHandler, which is then used by the library HttpClient on every test run.\nUntil this morning, all 239 tests were passing just fine. Then, I switched the test project\u0026rsquo;s target framework moniker (TFM) to net5.0. Suddenly, most tests went red.\nWith no code changes, only a rebuild after the TFM switch, I knew I was up to something weird.\nA couple of debug breakpoints later, I was back looking at my little response parser, contemplating the following, rather innocent-looking line:\nif (httpResponseMessage.Content == null) return (response, token); Its purpose is to skip deserialization if there no content in the response. I knew all the failing tests had no response content.\nWhen the caller (the test suite in this case) is a NetCore 3.1 application, it passes a HttpResponseMessage whose Content value is null, as expected. Instead, it appears that when a NET5 application invokes the same method, the HttpResponseMessage.Content carries an obscure EmtpyContent value. Unexpected and, more importantly, undocumented (at least to my knowledge1.)\nA not-so-quick investigation revealed that, in fact, sometime during the NET5 development process, the type of HttpResponseMessage.Content has changed from nullable to non-nullable2.\nif (httpResponseMessage.Content == null || httpResponseMessage.Content.Headers.ContentLength == 0) return response; The double condition makes sure that no matter the calling moniker, we\u0026rsquo;ll handle it just fine.\nThere we go. All tests are green again.\nEnjoyed this post? Subscribe to the newsletter or follow @nicolaiarocci on Twitter.\nBreaking changes in .NET 5.0\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMake HttpResponseMessage.Content non-nullable\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/httpresponsemessage.content-is-non-nullable-in-net5/","summary":"\u003cp\u003eToday I was happily migrating some C# projects to Net 5 when I stumbled upon\nsomething unexpected. My focus was on a library (a NetStandard2.0 REST API\nclient, an SDK) and its associated test suite. The test project was a NetCore\n3.1 application.\u003c/p\u003e\n\u003cp\u003eAs you can imagine, being a REST API client, the library does a lot of talking\nwith a remote Web Service. It does that by leveraging the almightly\n\u003ccode\u003eSystem.Net.HttpClient.\u003c/code\u003e The library has a private, static\n\u003ccode\u003eHttpResponseMessage\u003c/code\u003e parser method. Its job is, well, to parse all responses\nfrom the remote. It looks for known, expected headers, gracefully handle them,\nand then deserializes the response content, if there is any.\u003c/p\u003e","title":"HttpResponseMessage.Content is non-nullable in NET5"},{"content":"So last week I got an email from my friend Michael Kennedy. Michael runs the TalkPython Training website, arguably the best place where you can learn Python today. He also hosts two popular Python podcasts: TalkPython and PythonBytes, the latter co-hosted with Brian Okken. He is super active in the Python space, so much that he received the Python Software Foundation Fellow Membership back in 2018. I first met Michael back in 2014, I think, at MongoDB Headquarters in New York, where we were both invited as part of the MongoDB Masters program. We shared a C#/.NET background, which was something of note in that context, and I remember Michael being curious about me embracing Python and my first open-source release in that space. Fun times.\nAnyways, back to his email. He mentioned my little Events library and told me that they covered it in episode #194 of the PythonBytes podcast. I was delighted, of course, and a little surprised too, as Events has been out for several years. Like its bigger brother Cerberus, I built Events as I was working on the Eve project. Unlike Cerberus, which got a lot of traction on its own (outside of the Eve eco-system), Events did not get a lot of attention. Not as a stand-alone at least. People are leveraging its features every time they use event hooks in Eve, but, albeit mentioned in the documentation, few realize that they can add support for dynamic callbacks directly to their projects.\nMichael mentioning Events in the podcast was gratifying. He also published a gist with a concrete usage example, and then he went ahead and submitted a pull request with some documentation improvements, with some more PRs to come in the future.\nBut what exactly is Events? The C# language provides a handy way to declare, subscribe to, and fire events. Technically, an event is a \u0026ldquo;slot\u0026rdquo; where callback functions (event handlers) can be attached to - a process referred to as \u0026ldquo;subscribing to an event.\u0026rdquo; Events is a little handy package that encapsulates the core to C# event subscription and firing, to make it feel like a natural part of the Python language. Not surprisingly, Events is dubbed Python Event Handling, the C# Style.\n\u0026gt;\u0026gt;\u0026gt; def something_changed(reason): ... print \u0026#34;something changed because %s\u0026#34; % reason ... \u0026gt;\u0026gt;\u0026gt; from events import Events \u0026gt;\u0026gt;\u0026gt; events = Events() \u0026gt;\u0026gt;\u0026gt; events.on_change += something_changed Multiple callback functions can subscribe to the same event. When the event fires, all attached event handlers are invoked in sequence. To fire the event, perform a call on the slot:\n\u0026gt;\u0026gt;\u0026gt; events.on_change(\u0026#39;it had to happen\u0026#39;) \u0026#39;something changed because it had to happen\u0026#39; Intrigued? I sure hope so. Check out the Events repository on GitHub.\nEnjoyed this post? Subscribe to the newsletter or follow @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/events-and-callbacks-in-the-python-language/","summary":"\u003cp\u003eSo last week I got an email from my friend Michael Kennedy. Michael runs the\n\u003ca href=\"https://training.talkpython.fm/\"\u003eTalkPython Training\u003c/a\u003e website, arguably the best place where you can learn\nPython today. He also hosts two popular Python podcasts: \u003ca href=\"https://talkpython.fm/\"\u003eTalkPython\u003c/a\u003e and\n\u003ca href=\"https://pythonbytes.fm/\"\u003ePythonBytes\u003c/a\u003e, the latter co-hosted with Brian Okken. He is super active in\nthe Python space, so much that he received the Python Software Foundation\nFellow Membership back in 2018. I first met Michael back in 2014, I think, at\nMongoDB Headquarters in New York, where we were both invited as part of the\nMongoDB Masters program. We shared a C#/.NET background, which was something of\nnote in that context, and I remember Michael being curious about me embracing\nPython and my first open-source release in that space. Fun times.\u003c/p\u003e","title":"Events and callbacks in the Python language"},{"content":"I went on a motorcycle trip. A fellow TOMCC1 member was planning a solo trip to Campo Imperatore (\u0026ldquo;Emperor\u0026rsquo;s Fields\u0026rdquo;), the well known alpine meadow in the Apennine ridge. He called me as he was looking for some advice, and well, I ended up joining him.\nWhat sparked my interest was the destination, of course, because Campo Imperatore is a superb place to visit, especially on a motorcycle, but also Antonio\u0026rsquo;s peculiar take on the journey. By self-admission, he is old-school. His motorcycle forays, no matter how long they are, all have something in common: as little technology as possible. He also goes out of his league to avoid highways and, god forbid, toll-roads. He is keen on secondary roads and, most importantly, he does not plan any route. Antonio will write down a few waypoints on paper, just the names of maybe two or three places worth visiting, and that\u0026rsquo;s it. If the trip is going to be very long, he might take a (paper) road atlas with him. The little details, like filling the gaps between waypoints, or how one would go to reach the waypoints themselves, well, they are all left out for the adventure.\nBy this point, most motorcyclists will roll their eyes, and quit reading. We are there to enjoy the ride, right, not to role-play the cowboy riding down the lone adventurous path. Nuances like planning the fastest route to the destination, gas stops, places to eat, well, those are all dealt with GPSes, and other apps like, say, TripAdvisor. That\u0026rsquo;s right. But frankly, Antonio\u0026rsquo;s old-style take to motorcycle traveling is intriguing to me and also challenging. Motorcycling is about freedom. And what is the best freedom than being free to change and choose the route arbitrarily, at every single crossroad if so you desire?\nIt is remarkable, by the way, how something mundane until not too long ago looks ancient by today\u0026rsquo;s standards: in another life, many years ago, I was a traveling salesman (actually I was half programmer, half salesman, but that\u0026rsquo;s another story, maybe for another post.) Back then, using road atlases and maps was the norm. I would waste hours bent over maps, just trying to figure out my way around. Today, no one, maybe except the oldster, uses paper maps.\nSo we met early on Saturday, at a truckers bar not too far away from my place. At that point, Antonio had already covered a steady 140KM, 2-hours long road stretch. To my relief, he had his old-school road atlas with him. We both had a strong black coffee, then off we went, southbound.\nAs expected, we had to stop every once in a while to check our bearings. We had to ask for directions a couple of times. And yes, of course, we ended up logging way more kilometers (and time) than we would have logged if we followed my TomTom directions (admittedly, I had it with me tucked somewhere - I could not resist the urge to take it along.)\nWe reached the beautiful town of Teramo at nine in the evening, about twelve hours after we departed. We found ourselves a cozy place for the night, had a quick shower, and then off we went down the historic town center, looking for a meal and a glass of wine. The next day, more or less the same story, but including the incredible views over Gran Sasso, the visit to Campo Imperatore, and other scenic places along the route.\nEvidence that Antonio\u0026rsquo;s Triumph Trophy successfully made it to Campo Imperatore.\nI breathe technology for a living, but from time to time, I do have to disconnect. In the past, I used to achieve disconnection with several activities like hiking, climbing, running, or even reading a good book. I find that riding a motorcycle, bet it for a quick, post-work evening cruise around town, or an extended, multi-day road trip instead, that gives me just that. Surprisingly, though, because when I was hiking on a trail, or puffing and sweating while hanging off a Dolomites wall, I sure as hell was not too fond of the occasional motorcycle noise down the road.\nThis trip with Antonio taught me that unbound motorcycling, with just a clean sheet, can be even more liberating. I thought it could be stressful; it turns out it can be exciting instead. Going analog is good. Embracing the chance of getting lost is good. Running some (reasonable) risk is good as well. After that trip, I got back to my everyday coding refreshed, internal batteries replenished, likely just as much as they would after a mountain hike, climb, or run. The added benefit was learning about beautiful new unknown places, seeing terrific, unexpected views, meeting and talking to new people along the road.\nNot all motorcycle adventures can be this bold, though. The following weekend I went on another motorcycle trip, this time with my spouse. We visited the beautiful Tuscany. She would not appreciate the braveness (or stupidity) of leaving with no plans and no route. And that is ok.\nWith Antonio, we are now determined to make gypsy trips (as we ended up calling them) an annual event. Rare enough stay desirable, frequent enough to remain a tradition.\nAnd now, back to coding.\nPS. In terms of disconnecting, reading a good book still reigns supreme. It also happens to be both more affordable and more accessible than, say, motorcycling.\nEnjoyed this post? Subscribe to the newsletter or follow @nicolaiarocci on Twitter.\nTriumph Owners Motorcycle Club, of which I happen to run the Italian branch\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://nicolaiarocci.com/musings-on-an-unexpected-motorcycle-trip/","summary":"\u003cp\u003eI went on a motorcycle trip. A fellow TOMCC\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e member was planning a solo\ntrip to Campo Imperatore (\u0026ldquo;Emperor\u0026rsquo;s Fields\u0026rdquo;), the well known alpine\nmeadow in the Apennine ridge. He called me as he was looking for some advice,\nand well, I ended up joining him.\u003c/p\u003e\n\u003cp\u003eWhat sparked my interest was the destination, of course, because Campo\nImperatore is a superb place to visit, especially on a motorcycle, but also\nAntonio\u0026rsquo;s peculiar take on the journey. By self-admission, he is old-school.\nHis motorcycle forays, no matter how long they are, all have something in\ncommon: as little technology as possible. He also goes out of his league to\navoid highways and, god forbid, toll-roads. He is keen on secondary roads and,\nmost importantly, he does not plan any route. Antonio will write down a few\nwaypoints on paper, just the names of maybe two or three places worth visiting,\nand that\u0026rsquo;s it. If the trip is going to be very long, he might take a (paper)\nroad atlas with him. The little details, like filling the gaps between\nwaypoints, or how one would go to reach the waypoints themselves, well, they\nare all left out for the adventure.\u003c/p\u003e","title":"Musings on an unexpected motorcycle trip"},{"content":"Creatures of Thought is a project I discovered just recently. It is about the history of science and technology, and it revolves around two primary tracks: The Switch and The Backbone. The former covers the digital switch; the latter is the story of how the world got online. Both sections are well written, researched, and curated. The latest installment of The Backbone covers Usenet\u0026rsquo;s invention, then FidoNet, and well, it sent me on a mesmerizing trip down memory lane.\nIn 1987 I was the operator (sysop) behind Lorien, the first online bulletin board system (BBS) that went online in my area. It was running in the back room of the local computer shop (appropriately named Computer House.) They had graciously sponsored my initiative with a desk, a PC/XT clone (which featured a 20MB hard disk), a green display monochrome monitor, and a 1200 baud modem if memory serves me well. At home, I only had a Commodore 64 with a 300 baud modem, so the XT with a speedy 1200 modem was luxury to me.\nThe shop was the only one in town, and a ragtag group of individuals frequented it. They met there to discuss all-things hardware and software, with the main thing being the smuggling floppy-disks and data-cassettes loaded with pirated games. As you can imagine, some of these hackers were immediately intrigued by the 17-year-old kid in the back room who was obscurely hacking at a PC all day long. It was the modem, however, with all its blinking lights, that caught the most attention. Modems back then, in Italy, were extremely rare. The original Hayes modems mentioned in the article, they existed only in our dreams.\nSoon a small yet vibrant user base, mostly comprised of local hackers, developed around Lorien BBS. Among them, the guy who later became my co-founder, which I think tells a lot about the relevance of that teenager experience (to this day, almost 30 years later, we still work together.) Long story short, at some point in history (1990), Lorien evolved into Phoenix BBS. Phoenix was hosted in our brand new company office, was running on a PC/AT machine, boasted an 80MB hard disk, and a 2400 baud modem.\nMost relevant to me, Phoenix was an active node of the FidoNet network. I had wanted to join FidoNet since the very first Lorien days. Tom Jennings, the creator of FidoNet, was a legend to me. Back then, however, long-distance phone calls were costly, and the computer shop could not afford them (FidoNet nodes used nightly, mostly long-distance, phone calls to keep in sync with each other.) Now at our company, we didn\u0026rsquo;t have a higher budget, but we were free to allocate money differently. According to FidoNet records, Phoenix was initially node 2:332/24 of the network. A couple of months later, for some reason, which I cannot recall, we became node 2:332/304. The same records show that at some point in 1993, we hit 9600 baud on connection speed and that the BBS was active for another four years.\nIt makes sense. By 1994 the Internet and the World Wide Web had come to life. Everyone quickly moved on there, and FidoNet became ghost town. Game over.\nIf you want to learn (a lot) more about those seminal years, do not miss the article that spawned all these memories. Here is an excerpt:\nBut even as the poor man’s ARPANET spread across the globe, microcomputer hobbyists, with far fewer resources than even the smallest of colleges, were still largely cut off from the experience of electronic communication. But they soon began their own shoe-string experiments in low-cost peer-to-peer networking, starting with something called bulletin boards.\nThe Era of Fragmentation, Part 4: The Anarchists\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/a-trip-down-memory-lane-fidonet-and-usenet/","summary":"\u003cp\u003e\u003ca href=\"https://technicshistory.com/\"\u003eCreatures of Thought\u003c/a\u003e is a project I discovered just recently. It is about the\nhistory of science and technology, and it revolves around two primary tracks:\nThe Switch and The Backbone. The former covers the digital switch; the latter\nis the story of how the world got online. Both sections are well written,\nresearched, and curated. The latest installment of The Backbone covers Usenet\u0026rsquo;s\ninvention, then FidoNet, and well, it sent me on a mesmerizing trip down\nmemory lane.\u003c/p\u003e","title":"A trip down memory lane: FidoNet and Usenet"},{"content":"As a non-native English speaker, presenting at conferences has always been super challenging and intimidating. It\u0026rsquo;s even worse now that we\u0026rsquo;re forced into online presenting because of the COVID19 situation. James Whittaker has a good post on the topic, with great advice:\nRemember, the inability to see and hear your audience is disconcerting but it doesn’t mean you should give up. There are much bigger audiences in the wide world that you will not have local access to. Getting good at video presentations means expanding your audience and increasing your influence.\nHow to Present Over Video Conference\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/how-to-present-over-video-conference/","summary":"\u003cp\u003eAs a non-native English speaker, presenting at conferences has always been super\nchallenging and intimidating. It\u0026rsquo;s even worse now that we\u0026rsquo;re forced into\nonline presenting because of the COVID19 situation. James Whittaker has a good\npost on the topic, with great advice:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eRemember, the inability to see and hear your audience is disconcerting but it\ndoesn’t mean you should give up. There are much bigger audiences in the wide\nworld that you will not have local access to. Getting good at video\npresentations means expanding your audience and increasing your influence.\u003c/p\u003e","title":"How to Present Over Video Conference"},{"content":"FatturaElettronica for .NET 3.0 is now available on NuGet. It brings full support for the latest technical specifications (v1.6.1) issued by the Italian Public Administration. These come with a number of relevant changes, which were originally supposed to be effective starting May 4, 2020. We were ready well in advance (v3.beta-1 package was available on March 20) but then, because of the COVID19 situation (and, I suspect, pressure from relevant \u0026ldquo;not-ready-to-deliver\u0026rdquo; software companies) the deadline was pushed forward to October 1, 2020.\nSo yes, you have plenty of time, but the good news is you can upgrade today and spare yourself some of the inevitable pain that comes with uprading your software too close to the deadline. Just download FatturaElettronica 3.0 and upgrade your projects. The new format is mostly backwards-compatible, which means that it will read and write old format (pre-v1.6) XML files just fine. In fact, companies have been using v3.0 beta since March with no issues. I am confident that the upgrade process will be relatively straightforward.\nJust keep in mind that v3 unifies all FatturaElettronica packages (Core, Extensions, and FatturaElettronica itself) into one, single package. This makes all the powerful extension methods available right away, and also simplifies the development, building, and installation processes. If you were using the Extensions package before, and after the upgrade you get warning messages, then you need to uninstall the Extensions and Core packages, which are not needed as stand-alones anymore.\nHow to install .NET CLI:\ndotnet add package FatturaElettronica --version 3.0.0 Package Manager:\nInstall-Package FatturaElettronica -Version 3.0.0 Package Reference:\n\u0026lt;PackageReference Include=\u0026quot;FatturaElettronica\u0026quot; Version=\u0026quot;3.0.0\u0026quot; /\u0026gt; packet CLI:\npaket add FatturaElettronica --version 3.0.0 As always, make sure you read the changelog. Most importantly in this case, for a rundown on the new specifications and the upgraded file format, check out the new specifications.\nLastly, this is your friendly reminder that if you are using this package in a revenue-generating project, it is your best interest to consider supporting it.\nEnjoy!\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v3.0-released/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET\"\u003eFatturaElettronica for .NET\u003c/a\u003e 3.0 is now available on \u003ca href=\"https://www.nuget.org/packages/FatturaElettronica/3.0.0\"\u003eNuGet\u003c/a\u003e. It brings full support for the \u003ca href=\"https://www.agenziaentrate.gov.it/portale/documents/20143/2370834/Allegato+A+-+Specifiche+tecniche+vers+1.6_.pdf/a9917ec2-29a3-4f4a-a7d0-93af96fcaad5\"\u003elatest technical specifications\u003c/a\u003e (v1.6.1) issued by the Italian Public Administration. These come with a number of relevant changes, which were originally supposed to be effective starting May 4, 2020. We were ready well in advance (v3.beta-1 package was available on March 20) but then, because of the COVID19 situation (and, I suspect, pressure from relevant \u0026ldquo;not-ready-to-deliver\u0026rdquo; software companies) the deadline was pushed forward to October 1, 2020.\u003c/p\u003e","title":"FatturaElettronica for .NET v3.0 released"},{"content":"Apparently, .NET 5 brings support for Windows TaskDialog to Windows Forms, and that is relevant for several reasons. Before I dig in, let me start by addressing your inevitable question right away.\nIn essence, yes, Windows Forms is old technology. It has been around since like 20 years ago, and yes, newer Windows UI frameworks have (or try to have) traction today, but no, that is not a good reason for Microsoft to let WinForms rest in peace. See the thing is right now, as I am writing this piece, there are millions of desktop applications running on Windows machines all around the world and rest assured, an essential portion of them is running on, you guessed it, your good old Windows Forms.\nI know first hand how essential is WinForms today. An application I wrote with Forms many years ago, at the end of the 90s, still pays a good portion of my income. Incidentally, that one application (along with its weight on my salary) is why that single twitter stood out on my feed this morning.\nWindows Forms is so relevant that it is now part of NETCore (soon to be rebranded NET 5.) By the way, bringing Windows Forms into NETCore was a monumental piece of work. At the time of this writing, the Designer (the main reason, I think, behind Forms incredible success) is receiving its final touches before the final release.\nSo with that out of the way, let me elaborate on why this tweet is important. One thing is supporting an admittedly old technology for legacy reasons, and a different one is to keep improving it. Yes, the NETCore port was great, but it was just that, a port. We have not seen relevant new features such a long time that everyone assumed nothing new was going to happen in this space. After all, it makes sense with WPF, then UWP taking the stage in recent years. Then, out of the blue comes this little precious new feature.\nIt is not a coincidence that TaskDialog support comes as a community contribution. The author is Konstantin Preißer (@kpreisser), and he improves on a little fundamental pillar of Windows Forms, the MessageBox. Quoting from his original ticket:\nOn Windows Vista and higher, the Task Dialog is available that provides many more features than a Message Box. While you can show a Message Box in WinForms and WPF, there is no \u0026ldquo;official\u0026rdquo; implementation of the Task Dialog yet in .NET WinForms/WPF (\u0026hellip;) Do you think a Task Dialog could also be added directly to WinForms/WPF?\nNow, this ticket dates December 4, 2018. That\u0026rsquo;s almost one and a half years ago. Since then, he\u0026rsquo;s been hard at work. Then just yesterday, 169 commits, 59 files changed, his pull request was merged by Igor Velikorossov (@RussKie) into the official dotnet/winforms repository. Big props to Igor, by the way, who spent all that time code-reviewing more than 10K lines of code.\nSo let\u0026rsquo;s recap what we are dealing with here—one monster open-source, community-driven contribution to an old, stagnant yet relevant Microsoft stack. If, like me, you come from the \u0026ldquo;old Microsoft\u0026rdquo; era, you know how the previous sentence would sound impossible only a handful years ago. To add to that, let\u0026rsquo;s ponder on Microsoft personnel taking the time to carefully peer-review, then accept and merge the whole thing and, finally, celebrate the event on social networks and whatnot:\nThank you for your patience and commitment. We made the history my friend, the first major addition to Windows Forms in 15 years! Hope you have a champagne on ice, it is time to pop the cork. - @RussKie on GitHub\nI think we can reasonably say that yes, the rumors of Windows Forms death have been greatly exaggerated. That is primarily due to Microsoft going the full monty on open-source and, secondarily, on the fantastic community that has been growing around its core technology.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/rumors-of-windows-forms-death-have-been-greatly-exaggerated/","summary":"\u003cp\u003eApparently, .NET 5 brings support for Windows TaskDialog to Windows Forms, and\nthat is relevant for several reasons. Before I dig in, let me start by\naddressing your inevitable question right away.\u003c/p\u003e\n\u003cp\u003eIn essence, yes, Windows Forms is old technology. It has been around since like\n20 years ago, and yes, newer Windows UI frameworks have (or try to have)\ntraction today, but no, that is not a good reason for Microsoft to let WinForms\nrest in peace. See the thing is right now, as I am writing this piece, there\nare \u003cem\u003emillions\u003c/em\u003e of desktop applications running on Windows machines all around\nthe world and rest assured, an essential portion of them is running on, you\nguessed it, your good old Windows Forms.\u003c/p\u003e","title":"Rumors of Windows Forms death have been greatly exaggerated"},{"content":"Seven years since the first commit, I am glad to announce that Eve v1.0 has been released. Check it out on PyPI.\nIf you are using Eve, Cerberus, FatturaElettronica for .NET or any other one of my open source projects in a revenue-generating product, it would make business sense to sponsor my open source development. Learn how to do that at my GitHub Sponsors page.\nHappy holidays to all of you and have a wonderful start in the new year.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/eve-1.0-has-been-released/","summary":"\u003cp\u003eSeven years since the first commit, I am glad to announce that Eve v1.0 has been released. \u003ca href=\"https://pypi.org/project/Eve/1.0/\"\u003eCheck it out on PyPI.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIf you are using Eve, Cerberus, FatturaElettronica for .NET or any other one of my open source projects in a revenue-generating product, it would make business sense to sponsor my open source development. Learn how to do that at \u003ca href=\"https://github.com/sponsors/nicolaiarocci\"\u003emy GitHub Sponsors page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Eve 1.0\" loading=\"lazy\" src=\"/images/Eve1.0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eHappy holidays to all of you and have a wonderful start in the new year.\u003c/p\u003e","title":"Eve 1.0 has been released"},{"content":"Today I pushed version 2.0 of FatturaElettronica to NuGet. This release comes with full support for Fattura Semplificata, something that has been on the back-burner for a while. Special thanks to Gaetano Pizzol for single-handly contributing this feature.\nNow for the bad news. Since we were to add a new invoice type whereas so far we only had one, I decided to take the plunge and break backward compatibility a little bit. The relevant changes are as follows:\nFattura class renamed as FatturaOrdinaria; FatturaOrdinaria, its whole hierarchy, and validators moved to the new FatturaElettronica.Ordinaria namespace; These changes leave us with what I think is a cleaner and symmetric API surface. We now have:\nFatturaOrdinaria.cs in the FatturaElettronica.Ordinaria namespace; A new FatturaSemplificata.cs in the FatturaElettronica.Semplificata namespace; A new FatturaBase abstract class in root FatturaElettronica namespace; So yes, you will have to recompile after the update. However, you will find that the changes needed are marginal:\n# using FatturaElettronica; using FatturaElettronica.Ordinaria; # new # var fattura = new Fattura(); var fattura = new FatturaOrdinaria(); # new Satellite projects Core, Extensions, and Forms are also available on NuGet with a matching version number. By the way, in case you did not know, the Extensions package just recently saw the addition of a WriteHtml extension method, prompted by Alessandro Scardova.\nI want to take a moment to mention the vibrant community that is growing around this project. As of today, we count ten contributors to the main project alone, and many others have been chiming in either by opening tickets, mailing me, or providing suggestions at the various events that I attend. The contribution rate is a meaningful metric to me. After the years spent in the Python open-source community, I came back hoping I could help and encourage the growth of the Italian open source movement within the .NET eco-system.\nConsidering the relatively small audience for this project, the adoption rate is also satisfying. I think the main package recently surpassed 13K downloads.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v2.0/","summary":"\u003cp\u003eToday I pushed version 2.0 of \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET\"\u003eFatturaElettronica\u003c/a\u003e to NuGet. This release\ncomes with full support for \u003ca href=\"https://www.agenziaentrate.gov.it/wps/content/Nsilib/Nsi/Schede/Comunicazioni/Fatture+e+corrispettivi/Fatture+e+corrispettivi+ST/ST+invio+di+fatturazione+elettronica/?page=ivacomimp\"\u003eFattura Semplificata\u003c/a\u003e, something that has\nbeen on the back-burner for a while. Special thanks to \u003ca href=\"https://github.com/tanogae\"\u003eGaetano Pizzol\u003c/a\u003e\nfor single-handly contributing this feature.\u003c/p\u003e\n\u003cp\u003eNow for the bad news. Since we were to add a new invoice type whereas so far\nwe only had one, I decided to take the plunge and break backward\ncompatibility a little bit. The relevant changes are as follows:\u003c/p\u003e","title":"FatturaElettronica for .NET v2.0"},{"content":"It is a common misconception that F# is just for data science, machine learning, and quantitative finance; in the .NET eco-system you turn to C# for enterprise and web development and, eventually, you\u0026rsquo;ll look at F# for serious number crunching.\nWhile it is undoubtedly true that functional languages are ideally suited for solving numerical problems, some of them - and F# in particular - are perfectly fine for tackling so many different domains other than scientific ones. F# is a cross-platform, functional-first, general purpose language. Stress on functional-first and general purpose. Line-of-business applications are almost always perfect candidates for F# development. On this topic, I recommend you take a look at Scott Wlaschin\u0026rsquo;s \u0026ldquo;Why F# is the best enterprise language\u0026rdquo;\nOn my part I am going to show you how easily we can build a RESTful WebAPI with F# on NetCore, taking no compromises on its C# counterpart.\nCreate, build, run Open up your terminal and type the following:\n$ dotnet new webapi -o MyWebApi -lang f# The template \u0026quot;ASP.NET Core Web API\u0026quot; was created successfully. The command above creates the MyWebApi directory and initializes an F# WebApi project in it, which you can build right away:\n$ cd MyWebApi \u0026amp;\u0026amp; dotnet build Microsoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core Copyright (C) Microsoft Corporation. All rights reserved. Build succeeded. 0 Warning(s) 0 Error(s) And while we are at it, let\u0026rsquo;s launch it:\n$ dotnet bin/Debug/\u0026lt;dotnetcoreapp_version\u0026gt;/MyWebApi.dll Now listening on: http://localhost:5000 Now listening on: https://localhost:5001 Application started. Press Ctrl+C to shut down. Our WebApi is up and running, ready for us to play with it:\n$ curl -k https://localhost:5001/api/values [\u0026quot;value1\u0026quot;,\u0026quot;value2\u0026quot;] The -k option tells curl to skip certificate verification on the https connection to localhost. Alternatively, you can open the same URL from your browser.\nWe did not write a single line of code, and yet we have a web API up and running. Yes, this is the same experience we get when we create a C# WebApi project. If you want to see that, try launching the same dotnet new command, minus the -lang option.\nShow me the code These days I use Visual Studio Code and the Unix (MacOS) terminal for most of my development, be it Python, JavaScript, C#, or F#. If you are on Visual Studio, you should still be able to follow along.\nLet\u0026rsquo;s fire up VSCode:\ncode . The F# development experience in VSCode is excellent thanks to the Ionide project, an open source cross-platform package for F# development. It brings IntelliSense, tooltips, document formatting, syntax checking, error highlighting, and more to VSCode. Just go to the Extensions tab and search for Ionide. Once you install and activate the extension, a brand new F# tab appears in VSCode. Click it. This tab lets you look at the project from the F# perspective.\nIn F#, the file order matters. That\u0026rsquo;s a consequence of another important rule: in F#, the order in we define types does matter. Files at the bottom of the project can access types and values defined above them, but not the other way around. In the F# tab, stuff is ordered for you by dependency. You can add new files, or move them up and down the hierarchy as needed.\nClick on Contollers/ValuesControllers.fs, so we can view its code. It begins like this:\nnamespace MyWebApi.Controllers open Microsoft.AspNetCore.Mvc F# namespaces work like C# ones. They allow you to organize data types and modules (not functions!) and yes, you can nest them in a hierarchy. The open statement, you guessed it, is F# flavor of C#\u0026rsquo;s using.\nBut! Where are the curly braces? Well, the thing is, in F# we don\u0026rsquo;t need curly braces. Don\u0026rsquo;t run away now; we\u0026rsquo;ll get back to this.\nLet\u0026rsquo;s go on with the code review:\n[\u0026lt;Route(\u0026quot;api/[controller]\u0026quot;)\u0026gt;] [\u0026lt;ApiController\u0026gt;] type ValuesController () = inherit ControllerBase() We decorate the ValuesController type (think C# classes) with two attributes. First one defines the general route to the controller endpoints (/api/values/); the second one informs .NET that ValuesController is, in fact, a controller.\nFinally, we get to look at one of the controller members:\n[\u0026lt;HttpGet\u0026gt;] member this.Get() = let values = [|\u0026quot;value1\u0026quot;; \u0026quot;value2\u0026quot;|] ActionResult\u0026lt;string[]\u0026gt;(values) Again, very much like with C#, we have an attribute binding an HTTP method to this member (Get). Every time a GET request hits the controller route, Get executes. What\u0026rsquo;s more interesting here, however, is the member scope.\nFor starters, no curly braces. F#, like Python and others, is a whitespace-significant language: we indent code to tell the compiler that we\u0026rsquo;re in a nested scope. At first, coming from other .NET languages, this might come as a shock. It sure was for me, although I had to make this jump way back when I got first into Python.\nSecondly, the values assignment has no type declaration what-so-ever. It looks like we\u0026rsquo;re dealing with a dynamic language like JavaScript or, again, Python. Only, F# is static. In F# you rarely have to specify types, and that\u0026rsquo;s thanks to its powerful type inference system. If you hover your mouse over the values word, you\u0026rsquo;ll see that good old IntelliSense is on duty, as usual, reporting values as an array of strings.\nF# type inference is so robust that sometimes can feel like magic, but it is not. It follows a set of precedence rules that drive the compiler. The result is that you get the best of both worlds: a language that is concise as a dynamic one, yet it is strongly typed and compiled, as a static one. By the way: thanks of type inference, F# functions are implicitly generic.\nCombined with the removal of noise, such as curly braces and semicolons, you will find that the type inference system makes writing, reading and, more importantly, reasoning about code a pleasant experience.\nSo why do we have to declare ActionResult type on the following line? Because that\u0026rsquo;s a .NET BCL type, not an F# type. Type inference won\u0026rsquo;t work as well when applied to the BCL. Fortunately, the compiler (IntelliSense) will let you know when an explicit type is needed.\nNotice that on the last line there is no return. In F#, return is implicit. I should probably mention immutability. That values array over there, is immutable like all F# types are unless they are explicitly made mutable with the mutable keyword. Immutability is a big deal in functional languages.\nLet\u0026rsquo;s assume that we want to replace this template code with something more meaningful. Maybe we have a repository object that allows us to retrieve data from a backend. This repository an external C# package and it has this nice Find(Expression\u0026lt;Func\u0026lt;T, bool\u0026gt;\u0026gt;) method that we want to leverage, to enable filtering on our API endpoint.\nThe client can use a query string (?name=john); If included, parse the query into a lambda expression (x =\u0026gt; x.Name==john); Pass the lambda to repository\u0026rsquo;s Find method; Return lookup results to the client. For simplicity, we don\u0026rsquo;t want to support multiple query keys, or various values for the same key;\nWe want to achieve this:\n[\u0026lt;HttpGet\u0026gt;] member this.Get() = let filter = getFilter this.Request.Query let result = repository.Find\u0026lt;License\u0026gt;(filter).Result; ActionResult\u0026lt;License List\u0026gt;(result) On the first line, we pass the query to the getFilter helper function. In F# there\u0026rsquo;s no notion of wrapping function arguments with parenthesis. Again, succinctness. getFilter will return either null if there is no query string or a lambda filter.\nOn the second line, we invoke the Find method, passing our filter to it. We then send back the results to the client. Notice that we are returning a List\u0026lt;Value\u0026gt; or, in F# syntax, a Value List. We do not have to update the Get signature. Type inference quietly takes note.\nWith the general business logic out of our way, let\u0026rsquo;s get to the only remaining piece of the puzzle, the getFilter function. For this, it is probably a good idea to add a Helpers.fs file, with a Helpers module in it.\nnamespace MyWebApi open Microsoft.AspNetCore.Http open System.Linq.Expressions open System module private Helpers = let getFilter (query:IQueryCollection) = let expr (key:string, value) = let entity=Expression.Parameter(typeof\u0026lt;'T\u0026gt;) let body= Expression.Equal(Expression.Property(entity, key), Expression.Constant(value)) Expression.Lambda\u0026lt;Func\u0026lt;'T, bool\u0026gt;\u0026gt;(body, entity) match query.Count with | 0 -\u0026gt; null | _ -\u0026gt; query |\u0026gt; Seq.head |\u0026gt; fun kvp -\u0026gt; (kvp.Key, kvp.Value |\u0026gt; Seq.head) |\u0026gt; expr Now, this is interesting. We briefly touched on the fact that namespaces can\u0026rsquo;t hold functions. You use modules for that (F# modules can also store types, however, like namespaces.). Here we define a Helpers module, with one function getFilter in it. To use this module in ValueController, we will need to open MyWebApi.Helpers there. Alternatively, we could decorate the module with the [\u0026lt;AutoOpen\u0026gt;] attribute, so that adopters do not need to open it explicitly. AutoOpen is a nice feature, but please don\u0026rsquo;t overuse it.\nLet\u0026rsquo;s look at getFilter implementation. First, we define an inner function expr. It takes a key-value tuple (one argument, not two!), does its magic, and, returns a lambda expression with the required signature of Func\u0026lt;'T, bool\u0026gt;. This code is not particularly interesting; you would do something similar in C#. Notice, however, that we are forced to declare the type one of the tuple values. That\u0026rsquo;s because the compiler needs to know which of the (way too many) overloads of Expression.Property we want to use. We could strongly type the second argument instead; it would be the same. Also, take note of how we declare a generic type in F#. The convention is not to use uppercase as we do here, you typically use 'a for example, but 'T is also ok. I tend to use ``T` when I am working on the boundaries between the BCL and F#, like in here.\nThe match...with block is the heart of getFilter.\nmatch query.Count with | 0 -\u0026gt; null | _ -\u0026gt; ... It matches query.Count value with some alternatives.\nif no items are in the query, then return null; any other value (_ is a catchall), do something else. Pattern matching is super interesting in F#. You can think of match...with as a switch/case on steroids. Here, let\u0026rsquo;s stress one of its many features: exhaustive checking. We used the catchall _ symbol on the second branch. Had we used a specific value instead, the compiler would throw an \u0026ldquo;incomplete pattern matching\u0026rdquo; error. Think of how many subtle bugs this feature alone cuts out.\nLet\u0026rsquo;s now consider the second and last branch in our pattern matching code. All the time in our code, no matter the language, we call a sequence of methods. In this concatenation, the output of one method serves as the input for the next. In these situations we have two options: either we use a temporary variable to hold the result of one method call, then we pass said variable to the next, or, if the call sequence is not too long, we nest one method call within the other. In both cases, code quickly becomes hard to read and, what\u0026rsquo;s worse, it becomes difficult to grasp its intentions. F# forward pipe operator aims to solve this problem. Let\u0026rsquo;s look back at our pipeline:\nquery |\u0026gt; Seq.head |\u0026gt; fun kvp -\u0026gt; (kvp.Key, kvp.Value |\u0026gt; Seq.head) |\u0026gt; expr In his book Get Programming with F#, Isaac Abraham provides us with what I think is the best explanation of what the forward pipe operator means:\nTake the value on the left-hand side of the pipe and flip it over to the right-hand side as the last argument to the function. [\u0026hellip;] The beauty of this is that as long as the output of one function matches the input of the next one, any function can be chained with another one.\nOnce it clicks, you\u0026rsquo;ll love it.\nWe start with query, our input argument, which is pipelined (passed) to the Seq.head function. This function returns the first element (head) of the input sequence. Now, query is an IQueryCollection, which happens to implement IEnumerable which, in turn, is an alias for F# seq\u0026lt;'T\u0026gt; so yes, query is a sequence. Here we don\u0026rsquo;t want to support multiple keys, so we only take the first one. Next up in the pipeline we have an inline function or lambda. This one accepts the kvp argument (a KeyValuePair) and returns a tuple with kvp key and the value. The lambda is interesting because it comes with a nested pipeline. Querystrings can come with multiple values for the same key (i.e. ?name=john\u0026amp;name=mike), so kvp.Value is itself a sequence of strings. Again, we don\u0026rsquo;t support multiple key values, so we keep the first one. The last step in our pipeline is, of course, the call to our expr function, which will take the tuple as input, and return the corresponding expression filter.\nOne last thing. Remember that explicit type declaration we had to add to expr\u0026rsquo;s input tuple? That one was weird, although it did have a reason. Let\u0026rsquo;s refactor our code to be more compact, so we inline expr into the pipeline:\nlet getFilter (query:IQueryCollection) = match query.Count with | 0 -\u0026gt; null | _ -\u0026gt; query |\u0026gt; Seq.head |\u0026gt; fun kvp -\u0026gt; (kvp.Key, kvp.Value |\u0026gt; Seq.head) |\u0026gt; fun (key, value) -\u0026gt; let entity=Expression.Parameter(typeof\u0026lt;'T\u0026gt;) let body= Expression.Equal(Expression.Property(entity, key), Expression.Constant(value)) Expression.Lambda\u0026lt;Func\u0026lt;'T, bool\u0026gt;\u0026gt;(body, entity) See? Now we don\u0026rsquo;t need to declare key type. It is inferred from the input function (the left-hand side of the pipe!)\nWrapping up Building and running a RESTful API with F# is simple. Sure, the template code above does not look very functional, and it isn\u0026rsquo;t. Once you get more confident with F#, you should probably move to functional web frameworks, like Giraffe. The takeaway point I am trying to make, however, is that F# with pure NetCore delivers. Functional purists may shiver, but my advice is that you begin doing F# right away, solving problems that you are already familiar with.\nI learned about F# back in 2010-11 when it was very new, and I immediately fell in love with it. Then I spent years and years waiting for the right project, the one with a perfect \u0026ldquo;functional fit\u0026rdquo; that would allow me to use F# in the real world. Guess what? It never happened. Either we had a good candidate but we were in a hurry, so no time for learning, or we got \u0026ldquo;less-than-ideal-for-functional\u0026rdquo; projects (in our mind) to work on.\nThen I was tasked to write yet another RESTful web service. We have plenty scattered around, both in Python and C#. RESTful services have been my bread and butter for such a long time; I even went around to release a Python REST framework called Eve.\nThis time, I thought, I am going to do it differently. This time, I am going down the F# rabbit hole. What I found at the bottom of it was pure joy.\nPS: That fictional repository we\u0026rsquo;ve been using, well, that\u0026rsquo;s a concrete thing, an open source project I have been working on called Boxroom. When it is ready for prime time, I will post about it here on my site. Interested? Join the newsletter; a link is right down here.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/building-a-restful-webapi-with-fsharp-and-netcore/","summary":"\u003cp\u003eIt is a common misconception that F# is just for data science, machine\nlearning, and quantitative finance; in the .NET eco-system you turn to C#\nfor enterprise and web development and, eventually, you\u0026rsquo;ll look at F# for\nserious number crunching.\u003c/p\u003e\n\u003cp\u003eWhile it is undoubtedly true that functional languages are ideally suited for\nsolving numerical problems, some of them - and F# in particular - are\nperfectly fine for tackling so many different domains other than scientific\nones. F# is a cross-platform, functional-first, general purpose language.\nStress on functional-first and general purpose. Line-of-business applications\nare almost always perfect candidates for F# development. On this topic, I\nrecommend you take a look at Scott Wlaschin\u0026rsquo;s \u0026ldquo;\u003ca href=\"https://fsharpforfunandprofit.com/posts/fsharp-is-the-best-enterprise-language/\"\u003eWhy F# is the best enterprise\nlanguage\u003c/a\u003e\u0026rdquo;\u003c/p\u003e","title":"Building a RESTful WebApi with F# and NetCore"},{"content":"This handy little package does one simple thing, and it does it well. According to its description, DeepEqual is:\nAn extensible deep comparison library for .NET.\nI am sure you too have come across this a few times. You have some code that shuffles around objects, and at some point, you\u0026rsquo;d like to make sure that two instances of the same class are, indeed, equal. And no, you don\u0026rsquo;t mean \u0026ldquo;equal\u0026rdquo; as in reference equality. That\u0026rsquo;s easy to achieve with .NET. Most of the time, what you want is to check for value equality.\nNow, when it comes to value equality, there are a few things you can do in .NET: override Object.Equals() (which, by the way, if the type is a reference type, by default will check for reference equality), implement the IEquatable interface, override the == operator or, most commonly, a combination of these techniques.\nThe problem with this is, it can get messy real quick, especially if you are checking instances of non-sealed classes. Quoting the documentation\u0026rsquo;s Note for Callers:\nWhen you call the Equals method to test for equality, you should know whether the current instance overrides Object. Equals and understand how a particular call to an Equals method is resolved. Otherwise, you may be performing a test for equality that is different from what you intended, and the method may return an unexpected value (source).\nSometimes you don\u0026rsquo;t know the inner details about the classes you are playing with. Also, at least in my case, many times I am performing these checks in my tests, not in the application itself. Implementing all this comparison logic just for the sake of testing would be, in my opinion, overkill.\nSometimes (most of the times?), you only need to make sure two instances are equal by value, and very deeply at that. DeepEqual comes in handy:\nbool result = object1.IsDeepEqual(object2); Simple as that. Again, I find this package invaluable especially when doing tests. Actually, I suspect I am only using it in my test. When used inside a test, you can call ShouldDeepEqual:\nobject1.ShouldDeepEqual(object2); This method throws an exception with a detailed description of the differences between the two objects. You can pass a custom comparison as the second argument to the ShouldDeepEqual method, to override the default behavior. You can also customize the behavior inline, using the WithDeepEqual extension method:\nobject1.WithDeepEqual(object2) .SkipDefault\u0026lt;MyEntity\u0026gt;() .IgnoreSourceProperty(x =\u0026gt; x.Id) .Assert() I have been using this package for a long time. At some point, I even submitted a pull request to port it to NetStandard. Despite a lot of people loving it, the pull request was left there unnoticed for quite some time. I was asked to release a fork, I declined (somebody else did). In the end, the package author came back from the void to release a new, NetStandard compatible, update, which is fantastic. Sometimes in open source, it takes a little patience.\nEnjoy.\nDeepEqual Join the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/nuget-gems-deepequal/","summary":"\u003cp\u003eThis handy little package does one simple thing, and it does it well. According to its description, DeepEqual is:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAn extensible deep comparison library for .NET.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI am sure you too have come across this a few times. You have some code that shuffles around objects, and at some point, you\u0026rsquo;d like to make sure that two instances of the same class are, indeed, equal. And no, you don\u0026rsquo;t mean \u0026ldquo;equal\u0026rdquo; as in \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/equality-comparisons#reference-equality\"\u003ereference equality\u003c/a\u003e. That\u0026rsquo;s easy to achieve with .NET. Most of the time, what you want is to check for \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/how-to-define-value-equality-for-a-type\"\u003evalue equality\u003c/a\u003e.\u003c/p\u003e","title":"NuGet Gems: DeepEqual"},{"content":"FatturaElettronica for .NET v0.9 has been released. The companion Extensions package also hits v0.4.\nThe main new feature is the FromJson() extension method which allows, you guessed it, for deserialization of a JSON stream into a Fattura class instance:\nvar fattura = Fattura.CreateInstance(Instance.Privati); fattura.FromJson(new JsonTextReader(new StringReader(json))); // or, if FatturaElettronica.Extensions v0.4 is being used: fattura.FromJson(json); // Invoice is now ready for inspection. foreach (var documento in fattura.Body) { var dati = documento.DatiGenerali.DatiGeneraliDocumento; Console.WriteLine($\u0026#34;fatt. num. {dati.Numero} del {dati.Data}\u0026#34;); } I should probably mention that FatturaElettronica.Core 0.4 is also out, and that that is the actual place where all the new juice comes from, courtesy of Emanuele Zavallone. You don\u0026rsquo;t have to directly install Core, it will be pulled down for you by the main packages.\nSo enjoy, and go get them while they are hot:\nFatturaElettronica for .NET (nuget, github) FatturaElettronica Extensions (nuget, github) Join the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/fatturaelettronica-for-.net-v0.9-has-been-released/","summary":"\u003cp\u003eFatturaElettronica for .NET v0.9 has been released. The companion Extensions\npackage also hits v0.4.\u003c/p\u003e\n\u003cp\u003eThe main new feature is the \u003ccode\u003eFromJson()\u003c/code\u003e extension method which allows, you\nguessed it, for deserialization of a JSON stream into a \u003ccode\u003eFattura\u003c/code\u003e class\ninstance:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c#\" data-lang=\"c#\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"\"\u003evar\u003c/span\u003e fattura = Fattura.CreateInstance(Instance.Privati);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    fattura.FromJson(\u003cspan style=\"font-weight:bold\"\u003enew\u003c/span\u003e JsonTextReader(\u003cspan style=\"font-weight:bold\"\u003enew\u003c/span\u003e StringReader(json)));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-style:italic\"\u003e// or, if FatturaElettronica.Extensions v0.4 is being used:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    fattura.FromJson(json);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-style:italic\"\u003e// Invoice is now ready for inspection.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"font-weight:bold\"\u003eforeach\u003c/span\u003e (\u003cspan style=\"\"\u003evar\u003c/span\u003e documento \u003cspan style=\"font-weight:bold\"\u003ein\u003c/span\u003e fattura.Body)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"\"\u003evar\u003c/span\u003e dati = documento.DatiGenerali.DatiGeneraliDocumento;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        Console.WriteLine(\u003cspan style=\"font-style:italic\"\u003e$\u0026#34;fatt. num. {dati.Numero} del {dati.Data}\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eI should probably mention that FatturaElettronica.Core 0.4 is also out, and\nthat that is the actual place where all the new juice comes from, courtesy of\n\u003ca href=\"https://github.com/emazv72\"\u003eEmanuele Zavallone\u003c/a\u003e. You don\u0026rsquo;t have to directly install Core, it will be\npulled down for you by the main packages.\u003c/p\u003e","title":"FatturaElettronica for .NET v0.9 has been released"},{"content":"Just a quick note to report that Eve v0.8.1 is out and ready to rock. It brings a number of fixes, some improvements as well as a couple of new features. Check out the changelog for details.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/eve-0.8.1-has-been-released/","summary":"\u003cp\u003eJust a quick note to report that \u003ca href=\"http://python-eve.org\"\u003eEve v0.8.1\u003c/a\u003e is out and \u003ca href=\"https://pypi.org/project/Eve/\"\u003eready to\nrock\u003c/a\u003e. It brings a number of fixes, some improvements as well as a couple\nof new features. Check out the \u003ca href=\"http://docs.python-eve.org/en/latest/changelog.html\"\u003echangelog\u003c/a\u003e for details.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eJoin the \u003ca href=\"http://eepurl.com/b-_Pzz\"\u003enewsletter\u003c/a\u003e to get an email alert when a new post surfaces on\nthis site. If you want to get in touch, I am @\u003ca href=\"http://twitter.com/nicolaiarocci\"\u003enicolaiarocci\u003c/a\u003e on twitter.\u003c/em\u003e\u003c/p\u003e","title":"Eve 0.8.1 has been released"},{"content":" Sorry folks. Because of its target audience, this post is in Italian.\nHo appena rilasciato FatturaElettronica.Extensions. Si tratta di un package che estende FatturaElettronica.NET aggiungendo (per ora) un solo extension method: ReadXmlSigned\nIl metodo si affianca all\u0026rsquo;esistente ReadXml ed accetta un file in formato standard fattura elettronica già firmato digitalmente (estensione .p7m), lo legge, verifica che le firme siano valide, quindi lo carica in un oggetto FatturaElettronica che lo rappresenta interamente:\nusing System; using FatturaElettronica; using FatturaElettronica.Extensions; using FatturaElettronica.Impostazioni; namespace DemoApp { class Program { static void Main(string[] args) { var fattura = Fattura.CreateInstance(Instance.Privati); // lettura da file con firma digitale fattura.ReadXmlSigned(\u0026#34;IT02182030391_31.xml.p7m\u0026#34;); // la fattura è ora pronta per l\u0026#39;uso foreach (var documento in fattura.Body) { var dati = documento.DatiGenerali.DatiGeneraliDocumento; Console.WriteLine($\u0026#34;fatt. num. {dati.Numero} del {dati.Data}\u0026#34;); } } } } Come già per il fratello maggiore, Extensions è rilasciato con licenza open source BSD. Il package è già disponibile su nuget ed è NetStandard 2.0, quindi compatibile con un gran numero di piattaforme.\nPer informazioni dettagliate vi rimando al repository su GitHub.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/lettura-di-fatture-elettroniche-con-firma-digitale-in-.net-.p7m/","summary":"\u003cblockquote\u003e\n\u003cp\u003eSorry folks. Because of its target audience, this post is in Italian.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eHo appena rilasciato \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.Extensions\"\u003eFatturaElettronica.Extensions\u003c/a\u003e. Si tratta di un package che\nestende \u003ca href=\"https://github.com/FatturaElettronica/FatturaElettronica.NET\"\u003eFatturaElettronica.NET\u003c/a\u003e aggiungendo (per ora) un solo extension method:\n\u003ccode\u003eReadXmlSigned\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eIl metodo si affianca all\u0026rsquo;esistente \u003ccode\u003eReadXml\u003c/code\u003e ed accetta un file in formato\nstandard fattura elettronica già firmato digitalmente (estensione .p7m), lo\nlegge, verifica che le firme siano valide, quindi lo carica in un oggetto\n\u003ccode\u003eFatturaElettronica\u003c/code\u003e che lo rappresenta interamente:\u003c/p\u003e","title":"Lettura di fatture elettroniche con firma digitale in .NET (.p7m)"},{"content":"On the July/August issue of Code Magazine, available both printed and online, you can find my article Learn Python with Visual Studio.\nFrom the incipit:\nIn the Stack Overflow Developer Survey for 2018, Python sits comfortably in the first place as the most wanted programming language, with JavaScript and Go coming second and third. Python also ranks third in the \u0026ldquo;most loved\u0026rdquo; category.\nDespite the age (20 years and counting), Python’s popularity keeps growing, and for good reasons. It’s reliable, flexible, easy to learn, open-source, and cross-platform since the beginning. It also helps that, over time, it enjoys a robust and active developer community and incredibly rich eco-system of free libraries supporting all kind of usages: Web applications and services, desktop apps, scientific computing, scripting—you name it.\nSurprisingly enough, not many .NET developers know that their favorite development tool, Visual Studio, offers superb support for Python. In this article, you’ll see how you can leverage your hard-acquired Visual Studio skills to work immediately and efficiently with this fantastic language.\nContinue reading on Code Magazine website.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/code-magazine-learn-python-with-visual-studio/","summary":"\u003cp\u003eOn the July/August issue of \u003ca href=\"https://www.codemag.com/Magazine/Issue/2234cd29-d38d-43ae-a08e-e8c4d277b061\"\u003eCode Magazine\u003c/a\u003e, available both printed and\nonline, you can find my article \u003cem\u003eLearn Python with Visual Studio\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Code Magazine\" loading=\"lazy\" src=\"/images/codemag.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eFrom the incipit:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the Stack Overflow Developer Survey for 2018, Python sits comfortably in\nthe first place as the most wanted programming language, with JavaScript and\nGo coming second and third. Python also ranks third in the \u0026ldquo;most loved\u0026rdquo;\ncategory.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDespite the age (20 years and counting), Python’s popularity keeps growing,\nand for good reasons. It’s reliable, flexible, easy to learn, open-source,\nand cross-platform since the beginning. It also helps that, over time, it\nenjoys a robust and active developer community and incredibly rich eco-system\nof free libraries supporting all kind of usages: Web applications and\nservices, desktop apps, scientific computing, scripting—you name it.\u003c/p\u003e","title":"Code Magazine: Learn Python with Visual Studio"},{"content":"I am pleased to announce that the latest version of Eve, v0.8, has been released. As always, this release has been carefully crafted with love and passion by yours truly, with the help of a fantastic bunch of contributors.\nHighlights include data-validation-on-steroids thanks to the full support for Cerberus 1.x, also recently released, partial media requests (think media streaming), new hooks which allow you to attach custom callbacks to aggregation and soft deletion events, some new query operators, support for the mongo decimal type, and more. There are also many critical fixes and improvements.\nPlease note that v0.8 does not support Python 2.6 and 3.3 anymore. For the few vintage developers left out there, I also released v0.7.9, which is the last version with support for these legacy Python versions (no new features there, though).\nBefore upgrading, make sure you check the breaking changes.\nEve on PyPI Project website Changelog Join the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/eve-0.8-has-been-released/","summary":"\u003cp\u003eI am pleased to announce that the latest version of Eve, v0.8, has been\nreleased. As always, this release has been carefully crafted with love and\npassion by yours truly, with the help of a fantastic bunch of contributors.\u003c/p\u003e\n\u003cp\u003eHighlights include data-validation-on-steroids thanks to the full support for\nCerberus 1.x, also recently released, partial media requests (think media\nstreaming), new hooks which allow you to attach custom callbacks to aggregation\nand soft deletion events, some new query operators, support for the mongo\ndecimal type, and more. There are also many critical fixes and improvements.\u003c/p\u003e","title":"Eve 0.8 has been released"},{"content":"I had this happen to me a few times already. Notification Center on the Mac goes completely numb: no more notifications and the list is empty. I\u0026rsquo;m writing down the fix, so I do not have to google the forums once again the next time.\nOpen the Terminal, then:\n# this usually fails, as the notification server is already running launchctl load -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist # kills and restarts the notification center - fixed!. killall NotificationCenter Join the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/mac-notification-center-does-not-work-the-quick-fix/","summary":"\u003cp\u003eI had this happen to me a few times already. Notification Center on the Mac\ngoes completely numb: no more notifications and the list is empty. I\u0026rsquo;m writing\ndown the fix, so I do not have to google the forums once again the next time.\u003c/p\u003e\n\u003cp\u003eOpen the Terminal, then:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# this usually fails, as the notification server is already running\nlaunchctl load -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist\n\n# kills and restarts the notification center - fixed!.\nkillall NotificationCenter\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cem\u003eJoin the \u003ca href=\"http://eepurl.com/b-_Pzz\"\u003enewsletter\u003c/a\u003e to get an email alert when a new post surfaces on\nthis site. If you want to get in touch, I am @\u003ca href=\"http://twitter.com/nicolaiarocci\"\u003enicolaiarocci\u003c/a\u003e on twitter.\u003c/em\u003e\u003c/p\u003e","title":"Mac Notification Center does not work: the Quick Fix"},{"content":"I am super excited to announce the launch of Eve: Building RESTful APIs with MongoDB and Flask, a brand new TalkPython Training course.\nAuthoring this course has been a new experience for me, and I must say that I very much enjoyed every minute of it. Finding myself in the exciting position being at the same time both the project author and the instructor, I did my best to focus on the typical issues I know from experience most people face when they start setting up their first RESTful web service with Flask and Eve.\nConveniently priced at $49 it\u0026rsquo;s five hours long, and it\u0026rsquo;s for anyone who wants to leverage Eve to build robust RESTful APIs quickly. We do assume you know basic Python concepts but advanced features and knowledge of MongoDB, Flask, and REST is not required.\nWe dive deep into all major aspects of the Eve REST framework. After a quick introduction to MongoDB and Flask, we\u0026rsquo;ll dig into Eve, build our schemas and endpoints and start serving HTTP clients right away, and that\u0026rsquo;s just the beginning.\nIn this course, you will:\nCreate a new Eve web service application Define data schemas for the service and MongoDB Issue queries from the client straight into the service Validate inbound data (including custom rules) Add and configure paging for large datasets Project responses for just the data you need Switch between JSON and XML per client request Secure your service with authentication Add event hooks such as pre-insert actions Limit the rate of your clients to avoid abuse Deploy your service Learn how to consume the service with JavaScript, Python and Postman And lots more View the full course outline\nI am a firm believer that code is taught best when it\u0026rsquo;s hands-on and real. In this course, live coding happens before your eyes, and you will see the entire application built in front of your eyes.\nInterested? Jump to the course page right now!.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/announcing-my-first-online-course/","summary":"\u003cp\u003eI am super excited to announce the launch of \u003ca href=\"https://training.talkpython.fm/courses/explore_eve/eve-building-restful-mongodb-backed-apis-course\"\u003eEve: Building RESTful APIs with\nMongoDB and Flask\u003c/a\u003e, a brand new TalkPython Training course.\u003c/p\u003e\n\u003cp\u003eAuthoring this course has been a new experience for me, and I must say that\nI very much enjoyed every minute of it. Finding myself in the exciting position\nbeing at the same time both the project author and the instructor, I did my\nbest to focus on the typical issues I know from experience most people face\nwhen they start setting up their first RESTful web service with Flask and Eve.\u003c/p\u003e","title":"Announcing my first online course"},{"content":"So today I was trying to store some decimal fields on a MongoDB 3.4 instance and I kept failing, miserably.\nIn Compass I was getting a somewhat obscure \u0026ldquo;connection lost\u0026rdquo; message on every save attempt. Upgrading to Mongo 3.4.10 (I was on 3.4.4) improved things, as the error message was now hinting at the setFeatureCompatibilityVersion setting which, apparently, was preventing some features to be made available.\nNow that made sense, as this specific database had been upgraded all the way from up Mongo 2.6. A quick lookup revealed that, when upgrading to 3.4, setFeatureCompatibilityVersion is automatically set to \u0026quot;3.2\u0026quot;. As we all know, support for Decimal type only comes with Mongo 3.4.\nSetting setFeatureCompatibilityVersion to \u0026quot;3.4\u0026quot; was the obvious fix, and I am now happily storing decimals with my documents. As I was on a standalone dev instance all I had to do was hop on the mongo shell and fire the following command:\ndb.adminCommand( { setFeatureCompatibilityVersion: \u0026quot;3.4\u0026quot; } ) If you are on a replica set, then make sure to hit your primary with the above command. For all the details, see the documentation.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/quick-fix-mongodb-fails-when-saving-decimal-fields/","summary":"\u003cp\u003eSo today I was trying to store some decimal fields on a MongoDB 3.4\ninstance and I kept failing, miserably.\u003c/p\u003e\n\u003cp\u003eIn \u003ca href=\"https://www.mongodb.com/products/compass\"\u003eCompass\u003c/a\u003e I was getting a somewhat obscure \u0026ldquo;connection lost\u0026rdquo; message on\nevery save attempt. Upgrading to Mongo 3.4.10 (I was on 3.4.4) improved things,\nas the error message was now hinting at the \u003ccode\u003esetFeatureCompatibilityVersion\u003c/code\u003e\nsetting which, apparently, was preventing some features to be made available.\u003c/p\u003e\n\u003cp\u003eNow that made sense, as this specific database had been upgraded all\nthe way from up Mongo 2.6. A \u003ca href=\"https://docs.mongodb.com/master/reference/command/setFeatureCompatibilityVersion/#dbcmd.setFeatureCompatibilityVersion\"\u003equick lookup\u003c/a\u003e revealed that, when upgrading to\n3.4, \u003ccode\u003esetFeatureCompatibilityVersion\u003c/code\u003e is automatically set to \u003ccode\u003e\u0026quot;3.2\u0026quot;\u003c/code\u003e. As we\nall know, support for Decimal type only comes with Mongo 3.4.\u003c/p\u003e","title":"Quick fix: MongoDB fails when saving Decimal fields"},{"content":"apologies, this post is about an Italian open source release, so it’s going to be in Italian\nSpesometro.NET è un nuovo progetto open source che ho rilasciato con la mia azienda. Si tratta di un package .NET che permette di leggere, scrivere e convalidare lo Spesometro o, come è chiamato formalmente, la Comunicazione delle Fatture Emesse e Ricevute.\nSi tratta di un adempimento che in tempi recenti, per ragioni che non è il caso di affrontare in questo articolo, ha causato grosse difficoltà sia ai fornitori di soluzioni software che, e soprattutto, agli utenti finali di dette soluzioni.\nVista la nostra attività, anche noi ci siamo trovati subito in prima linea, schiacciati tra l\u0026rsquo;incudine (l\u0026rsquo;aspettativa di migliaia di piccole aziende che usano il software Amica) e il martello (le scadenze incalzanti e i problemi tecnici imposti dalla Pubblica Amministrazione). Non senza difficoltà siamo riusciti a consegnare la soluzione una settimana prima della scadenza ufficiale (alla quale sono seguite diverse proroghe, ma questa è un\u0026rsquo;altra storia).\nCome già fatto in passato per la Fattura Elettronica, anche per questo progetto abbiamo deciso il rilascio con licenza open source. Potete contribuire al codice, aprire ticket laddove necessario, installarlo ed usarlo nelle vostre applicazioni. In questo articolo vediamo come usarlo.\nCaratteristiche di Spesometro.NET Il package mette a disposizione una classe Spesometro che rappresenta per intero il tracciato ufficiale dello Spesometro 2017. Una istanza di questa classe può essere usata per leggere, modificare e salvare un file spesometro conforme allo standard. E\u0026rsquo; anche disponibile una intera collezione di validatori che consentono di certificare che lo Spesometro sia conforme alle regole di convalida ufficiali.\nSpesometro.NET è rilasciato una licenza libera BSD ed è NetStandard 2.0, cosa che consente di utilizzarlo su un ampio numero di piattaforme.\nCome usare Spesometro.NET Sul repository su GitHub troverete una semplice applicazione NetCore di esempio. La stessa è anche disponibile nel README a corredo. esempio. Qui ne ripercorriamo le caratteristiche principali.\nLeggere uno spesometro già esistente è semplice quanto leggere un qualunque file XML:\nUna volta caricato uno spesometro possiamo manipolarlo liberamente. Qui aggiungiamo alle fatture emesse un committente (cliente) con una nostra fattura emessa nei suoi confronti.\nI validatori consentono di assicurarsi che le proprietà siano impostate correttamente rispetto alle regola di convalida previste dallo standard.\nInfine, salvare lo spesometro su file un XML conforme alle specifiche della PA è banale:\nRicordo che il file così creato dovrà essere firmato digitalmente prima di poter essere consegnato, pena il rigetto. Per quanto riguarda il nome del file, va rispettata una convenzione. Il file avrà sempre un nome costruito questo modo: IT\u0026lt;codicefiscaleazienda\u0026gt;_DF_\u0026lt;progressivounivoco\u0026gt;.XML. Il codice univoco di presentazione può essere numerico o alfanumerico, e deve sempre essere di cinque caratteri. Un esempio potrebbe essere: IT01180680937_DF_00001.XML. Le lettere devono essere sempre maiuscole, altrimenti il file verrà scartato.\nInstallazione Spesometro è un package NuGet quindi tutto quel che serve è eseguire Install-Package Spesometro dalla Package Console o dalla command line, oppure usare il comando equivalente in Visual Studio.\nConclusioni Rilasciare il progetto Fattura Elettronica con licenza open source si è rivelata una ottima iniziativa e, viste le difficoltà in cui molti si trovano con lo Spesometro, crediamo e speriamo di fare cosa buona e giusta anche con questo secondo rilascio. Come al solito non esistate a mettervi in contatto per qualunque suggerimento, consiglio, o problema riscontrato.\nPS: nota a margine, anche Fattura Elettronica è stato aggiornato. La versione 0.7 è su nuget, ed è anch\u0026rsquo;essa NetStandard compatibile.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/spesometro-open-source-per-.net/","summary":"\u003cp\u003e\u003cem\u003eapologies, this post is about an Italian open source release, so it’s\ngoing to be in Italian\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/FatturaElettronica/Spesometro.NET\"\u003eSpesometro.NET\u003c/a\u003e è un nuovo progetto open source che ho rilasciato con la \u003ca href=\"http://gestionaleamica.com\"\u003emia\nazienda\u003c/a\u003e. Si tratta di un package .NET che permette di leggere, scrivere\ne convalidare lo Spesometro o, come è chiamato formalmente, la Comunicazione\ndelle Fatture Emesse e Ricevute.\u003c/p\u003e\n\u003cp\u003eSi tratta di un adempimento che in tempi recenti, per ragioni che non è il caso\ndi affrontare in questo articolo, ha causato grosse difficoltà sia ai fornitori\ndi soluzioni software che, e soprattutto, agli utenti finali di dette\nsoluzioni.\u003c/p\u003e","title":"Spesometro Open Source per .NET"},{"content":"Visual Studio 2017 just received an update (version 15.2). Among other nice things, this update brings full support for Python back into the official release of VS2017. As you might recall (see my old whiny post), previously Python was only available with Visual Studio 2017 Preview (a separate install).\nI just upgraded my copy of Visual Studio, added the Python Development Workload to it via the VS Installer, and finally (and very happily) uninstalled the whole Visual Studio Preview thingie. Alleluja!\nIn case you are wondering what this is all about, well you should know that Python in Visual Studio is very powerful. The Release Notes provide a quick overview:\nWe have enhanced the Python development workload in Visual Studio to maximize your productivity in Python. We offer improved IntelliSense, web development projects, Git, and VSTS integration to save you time and effort on everyday tasks. Use world class debugging (local, remote, cross-platform, and Python/native) and profiling tools to improve the quality and performance of your Python code.\nYou can also check out my Python on Windows Like a Boss talk (although I guess it will kind of suck without the live demo), or jump over to the official Python information page.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/python-workload-now-officially-supported-in-visual-studio-2017/","summary":"\u003cp\u003eVisual Studio 2017 just received an update (\u003ca href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-relnotes\"\u003eversion 15.2\u003c/a\u003e). Among other\nnice things, this update brings full support for Python back into the official\nrelease of VS2017. As you might recall (see my \u003ca href=\"https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/\"\u003eold whiny post\u003c/a\u003e), previously\nPython was only available with Visual Studio 2017 Preview (a separate install).\u003c/p\u003e\n\u003cp\u003eI just upgraded my copy of Visual Studio, added the Python Development Workload\nto it via the VS Installer, and finally (and very happily) uninstalled the\nwhole Visual Studio Preview thingie.  Alleluja!\u003c/p\u003e","title":"Python Workload now officially supported in Visual Studio 2017"},{"content":"I have been upgrading a few projects from their original PCL profiles (now deemed obsolete) to the Net Standard platform specification. It turned out to be a relatively straightforward process, but it does have its small hurdles, especially so if in the meantime you also want to transition to the new, streamlined, .csproj format as the migration will leave you with a now obsolete project.json project. In this article, I will cover upgrading a project from Portable Class Library to NetStandard. In a follow-up post, I plan to write about the switch from project.json to the new .csproj format.\nSo let us take the Eve.NET project as an example. It makes a good candidate because it is an open source project, so you can go and have a look at the source code before and after the switch from PCL to NetStandard.\nThe first step was, of course, opening the project in Visual Studio 2017. If you are on an older VS version, you should upgrade. For many valid reasons indeed, among them the fact that Visual Studio 2017 comes with a built-in option to switch a project to NetStandard.\nAs you can see, before the upgrade Eve.NET was a Profile259 PCL project. As metioned, Visual Studio offers the option to switch to the .NET Platform Standard. By clicking the link, you get a fair warning that you might not be able to use the same APIs when targeting NetStandard. That makes sense because, as you probably know already, NetStandard is an API specification while a PCL essentially is the intersection (or lowest common denominator) of the APIs available on target platforms. PCL compatibility has never been the design goal of NetStandard.\nGenerally speaking, NetStandard offers a wider range of APIs compared to most PCL profiles and, most importantly, is planned to go through a cycle of incremental upgrades of the API specification, each one denoted by a version number. We already went from 1.0 to 1.6, with 2.0 currently being developed. NetStandard 2 will be a significant milestone, just give a look at the impressive diff between 1.6 and 2.0. A lot of open source projects are eagerly waiting on NetStandard 2 release (Q3 2017).\nUpon confirming the switch, you might get the following show-stopper (I did):\nThis dialog will pop up if your project never has opted-in for NuGet 3.0. If this is the case, you have to go back, uninstall all NuGet packages, then attempt the switch again. When the migration is complete, you will have to re-install the packages, provided that they are compatible with NetStandard. In Eve.NET case the only dependency is Json.NET, which supports NetStandard 1.3, which also means that Eve cannot support previous NetStandard versions.\nNow, if you give a look at the installed packages, you will find that you have a couple of new entries: NETStandard.Library, which is pretty self-explanatory, and Microsoft.NETCore.Portable.Compatibility. This one will only appear when you convert from a PCL: a brand new NetStandard project will not take a dependency on it. If you are not using any legacy code, like NET 4.0-only, or Silverlight, you should be able to drop this dependency safely (I did with no consequences).\nThe project is now NetStandard and ready to be used on all the platforms supporting your chosen version: NETCore, Windows, Xamarin, UWP, you name it.\nHowever, you will soon notice that the project has gained a project.json file. It is ok, it works just fine, but it is obsolete: with Visual Studio 2017 project.json was abandoned for a new, streamlined and pretty darn powerful, .csproj project file. In the next article, I will show you how to move your project forward by dropping project.json and embracing the new project type (and other niceties, like dropping the .nuspec file in the process).\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/how-to-convert-a-pcl-portable-project-to-netstandard/","summary":"\u003cp\u003eI have been upgrading a few projects from their original PCL profiles (now\ndeemed obsolete) to the \u003ca href=\"https://docs.microsoft.com/it-it/dotnet/articles/standard/library\"\u003eNet Standard\u003c/a\u003e platform specification. It turned out\nto be a relatively straightforward process, but it does have its small hurdles,\nespecially so if in the meantime you also want to transition to the new,\nstreamlined, \u003ccode\u003e.csproj\u003c/code\u003e format as the migration will leave you with a now\nobsolete \u003ccode\u003eproject.json\u003c/code\u003e project. In this article, I will cover upgrading\na project from Portable Class Library to NetStandard. In a follow-up post,\nI plan to write about the switch from \u003ccode\u003eproject.json\u003c/code\u003e to the new \u003ccode\u003e.csproj\u003c/code\u003e\nformat.\u003c/p\u003e","title":"How to convert a PCL (Portable) project to NetStandard"},{"content":"Last February I published The State of Eve REST Framework. Among other things in that post, I mentioned that I was looking for ways that would allow me to allocate more time to the project (and its satellites).\nI really feel like I should put more effort into Eve, Cerberus and satellite projects Eve-Swagger, Flask-Sentinel, Eve.NET, etc. I love working on these projects and I know a lot of people rely on them. Also, I have big ideas that I would like to play with. At this point in time however, I cannot afford allocating more time to not-paying-the-bill activities.\nWell, I went and looked at the possibilities, and finally settled down on a model which would probably be best defined as a blend between the Vue.js and the Django REST framework models.\nEffective now, the Eve REST framework, Cerberus, and the whole eco-system are collaboratively funded projects. If you run a business and are using either Eve or Cerberus a revenue-generating product, it would make business sense to sponsor their development: it ensures the project that your product relies on stays healthy and actively maintained. Individual users are also welcome to make either a recurring pledge or a one-time donation if Eve and/or Cerberus have helped you in your work or personal projects. Every single sign-up makes a significant impact towards making Eve possible.\nRest assured, Eve continues to be open-source and permissively licensed. It is also maintained and developed in my free time, and by the awesome community which has matured around it. I firmly believe, however, that it is in the commercial best-interest for users of the project to invest in its ongoing development (make sure you check the exciting Things I Would Be Working On section on the Patreon page).\nTo join the backer ranks, check out Eve campaign on Patreon, or donate via PayPal.\nThank you, Nicola.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/eve-and-cerberus-funding-campaign/","summary":"\u003cp\u003eLast February I published \u003ca href=\"https://nicolaiarocci.com/the-state-of-the-eve-rest-framework-project/\"\u003eThe State of Eve REST Framework\u003c/a\u003e. Among other\nthings in that post, I mentioned that I was looking for ways that would allow\nme to allocate more time to the project (and its satellites).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI really feel like I should put more effort into Eve, Cerberus and satellite\nprojects Eve-Swagger, Flask-Sentinel, Eve.NET, etc. I love working on these\nprojects and I know a lot of people rely on them. Also, I have big ideas that\nI would like to play with. At this point in time however, I cannot afford\nallocating more time to not-paying-the-bill activities.\u003c/p\u003e","title":"Eve and Cerberus funding campaign"},{"content":"So yesterday Visual Studio 2017 was released. Big news. Lots of cool stuff. As I write this I am watching the live stream of the 2 days-long launch event. If you want to learn about Python support in VS2017 though, you have to dig deeper and head over to the Python Engineering blog at Microsoft.\nAs expected, the official release is actually coming out with no support for Python. It will come in a few months. Bummer. In the meanwhile however you can go and grab the (also newly released) Visual Studio Preview. This new kid on the block has the ability to be installed and used side-by-side with the official release and will be used - you guessed it - as an early preview of what’s coming next for Visual Studio.\nTwo key things to note here:\nEverything that is in Visual Studio 2017 is also in Visual Studio Preview; They are two separate installations with separate workloads and settings. Now you might be thinking that two installs are overkill, and I concur. Because Preview includes all the official features, you might also think that you can probably get away with only installing Visual Studio Preview. That would work, but here is the catch: Visual Studio Preview has no support for paid product offerings. So if you are a Professional or Enterprise user well, you are out of luck.\nThis is not ideal. Python pulled out of RC3 was understandable, although unsettling. Not included with the official release? Not pretty. For most people, I suspect, the gimmicks required to get Python to work with Visual Studio 2017 are unbearable. Personally, I will fallback to other solutions and wait until Python Workload gets merged back with the official offering.\nI am still convinced that in the long run Visual Studio with its Python Workload will become the best option to do Python on Windows (Visual Studio Code being the second best candidate). I mean, look at this beauty:\nCombined with the VsVim extension it makes Python coding on Windows almost as great as Vim+bash I\u0026rsquo;ve been using so far, but within Visual Studio which I use for all my other coding (don\u0026rsquo;t get me started on C# in Vim. That is material for another post maybe.) I am also totally sympathetic with the dev team. I have been in this business for longer than I care to admit and I do know these things happen. But still, there is no dobut that this unfortunate incident marks a serious setback.\nIn less than one month I will be givin a talk at PyCon Italy. It is titled Python on Windows Like a Boss and the heart of it was of course going be the Python Workload for Visual Studio 2017. With this turn of events I will probably end up going on stage with the previous version of the tool, and Visual Studio 2015.\nOr I will bite the bullet and install 35 gigs of mostly duplicated software.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/python-support-in-visual-studio-2017-or-the-lack-thereof/","summary":"\u003cp\u003eSo yesterday Visual Studio 2017 was released. Big news. Lots of \u003ca href=\"https://www.visualstudio.com/vs/whatsnew/\"\u003ecool\nstuff\u003c/a\u003e. As I write this I am watching the \u003ca href=\"https://launch.visualstudio.com\"\u003elive stream\u003c/a\u003e of the\n2 days-long launch event. If you want to learn about Python support in VS2017\nthough, you have to dig deeper and head over to the \u003ca href=\"https://blogs.msdn.microsoft.com/pythonengineering/2017/03/07/python-support-in-vs2017/\"\u003ePython Engineering\u003c/a\u003e\nblog at Microsoft.\u003c/p\u003e\n\u003cp\u003eAs \u003ca href=\"https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/\"\u003eexpected\u003c/a\u003e, the official release is actually coming out with no support for\nPython. It will come in a few months. Bummer. In the meanwhile however you can go and grab the\n(also newly released) \u003ca href=\"https://visualstudio.com/vs/preview?wt.mc_id=blogs_msdn_python\"\u003eVisual Studio Preview\u003c/a\u003e. This new kid on the block\nhas the ability to be installed and used side-by-side with the official release\nand will be used - you guessed it - as an early preview of what’s coming next for Visual Studio.\u003c/p\u003e","title":"Python support in Visual Studio 2017 or the lack thereof"},{"content":"So yesterday I pushed some code over to GitHub, then went off to work on a different project. A few seconds later I got an email from AppVeyor telling me that my CI build worker was reporting a failure. I was surprised as just ahead of the push I had tests all green in local.\nTurned out failure was on an equality assertion between two date values:\nAs you can see the mismatch was precisely two hours. That always rings a Time Zone alarm bell in my head. I was under the assumption that since my time zone was correctly set in my account settings, the workers would pick it up. Well as it turns out, that is not the case as that setting is only used for notifications and NuGet feeds. The AppVeyor app worker runs on UTC by default.\nSolution was straightforward. I edited the appveyor.yml file and instructed the worker to launch tzutil and set the desired time zone immediately, before anything else is executed:\nAnd that was it. Remember, you can use tzutil /l on your local box to get a list of the available timezones.\nAnother minor (and temporary) issue I have with AppVeyor is that they do not officially support C# 7.0 yet. Try using an inline temporary variable in your code. Tests will be green in local and happily fail on AppVeyor, as the VM runs MSBuild 14. The Visual Studio 2017 RC image is in beta and not available in the Environment settings unless you explictly ask for it here. They are quick to reply though and then, not without some more fiddling (see the post at the top of the thread), you can get C# 7.0 features to run seamlessly in the VM.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/setting-the-default-timezone-in-appveyor-and-c-sharp-7-support/","summary":"\u003cp\u003eSo yesterday I pushed some code over to GitHub, then went off to work on\na different project. A few seconds later I got an email from \u003ca href=\"https://www.appveyor.com\"\u003eAppVeyor\u003c/a\u003e\ntelling me that my CI build worker was reporting a failure. I was surprised as\njust ahead of the push I had tests all green in local.\u003c/p\u003e\n\u003cp\u003eTurned out failure was on an equality assertion between two date values:\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/appveyor-failure-on-date-fields.png\"\u003e\u003c/p\u003e\n\u003cp\u003eAs you can see the mismatch was \u003cem\u003eprecisely\u003c/em\u003e two hours. That always rings a Time\nZone alarm bell in my head. I was under the assumption that since my time zone\nwas correctly set in my account settings, the workers would pick it up. Well as\nit turns out, that is not the case as that setting is only used for\nnotifications and NuGet feeds. The AppVeyor app worker runs on UTC by default.\u003c/p\u003e","title":"Setting the default timezone in AppVeyor build worker (and C# 7.0 support)"},{"content":"So how do you install the awesome Python Development Tools on the latest Visual Studio 2017 RC? That might seem a stupid question considering that the Data Science and Python Development workload has been available with every Release Candidate so far. You simply select the workload during the installation and you\u0026rsquo;re done, right? Not quite.\nI found out the hard way this morning as I wanted to install VS 2017 RC3 on my development machine and, to my surprise, I could not find Python Development anywhere on the workloads window (which itself is a huge improvement over the VS 2015 install experience, by the way). Easy, I thought, they moved it to some secondary \u0026ldquo;optional workloads\u0026rdquo; tab, but a quick scan did not reveal any of that.\nConcerned now, I turned to the Oracle of All Things only to find that the Python Workload has been pulled off the Visual Studio 2017 RC3 (January 2017). It was actually reported in the release notes:\nRemoved the Data Science and Python Development workloads as some of the components weren’t meeting the release requirements, such as translation to non-English languages. They will be available soon as separate downloads.\nWhen I glanced over them I (and probably you too) did not notice this little paragraph. But wait, it\u0026rsquo;s even worse than you would expect:\nUpgrading to current version will remove any previously installed Python and Data Science workloads/components.\nThat\u0026rsquo;s right. If you upgrade to RC3 you win a wipe out of your Python environment. Further research revelead an open ticket on GitHub. Apparently they are working on a way to install the Python and Data Science workloads on top of an existing VS 2017 install, but I would not hold my breath on it:\nThanks everyone for the support and understanding. It\u0026rsquo;s still not clear to us how we\u0026rsquo;re going to be releasing Python support, but the plan is definitely to have something when VS 2017 releases next month.\nSince the official VS 2017 release is planned early next month it is very likely that we will just have to wait until then. In the meantime, you better have a VS 2015 sitting side by side with your brand new, mutilated, Visual Studio 2017. Or you switch to Visual Studio Code, which offers fantastic support for Python.\nOr you fallback to good ole trusted Vim, like I did.\nUPDATE (Feb 22, 2017). There\u0026rsquo;s now an official post up at the Microsoft Python Engineering blog, by Steve Dower. Looks like using Python with Visual Studio 2017 will initially require a separate \u0026ldquo;preview\u0026rdquo; build of VS itself. Only months later Python support will be merged to the official bundle.\nUPDATE (Mar 8, 2017). I posted a follow-up article, as VS2017 has finally been released.\nJoin the newsletter to get an email alert when a new post surfaces on this site. If you want to get in touch, I am @nicolaiarocci on twitter.\n","permalink":"https://nicolaiarocci.com/python-workload-pulled-off-visual-studio-2017-rc3/","summary":"\u003cp\u003eSo how do you install the awesome \u003ca href=\"https://www.visualstudio.com/vs/python/\"\u003ePython Development Tools\u003c/a\u003e on the latest\nVisual Studio 2017 RC? That might seem a stupid question considering that the\nData Science and Python Development workload has been available with every\nRelease Candidate so far. You simply select the workload during the\ninstallation and you\u0026rsquo;re done, right? Not quite.\u003c/p\u003e\n\u003cp\u003eI found out the hard way this morning as I wanted to install VS 2017 RC3 on my\ndevelopment machine and, to my surprise, I could not find Python Development\nanywhere on the workloads window (which itself is a huge improvement over the\nVS 2015 install experience, by the way). Easy, I thought, they moved it to some\nsecondary \u0026ldquo;optional workloads\u0026rdquo; tab, but a quick scan did not reveal any of\nthat.\u003c/p\u003e","title":"Python Workload pulled off Visual Studio 2017 RC3"},{"content":"A new major release of the Eve REST API Framework is finally out with a number of cool new features (MongoDB Aggregations!), few fixes, and a couple of minor breaking changes. On the Eve blog you can find a detailed article about this important release.\nI am glad to report that the Eve-SQLAlchemy community extension, which allows SQL databases to serve as Eve backends, has seen a surge of activity around it. There is a new maintainer, Dominik Kellner, and a bunch of active contributors. Work is being done to align the extension with latest Eve release. If interested, please join the efforts there. Speaking of community extensions, only a few days ago Eve-Elastic version 2 has been released too.\nNext major release will of course be version 0.8 and it should come relatively soon. It will be focused on adding Cerberus 1.0 support. That will add superpowers and more flexibility to areas like data validation and API endpoints definition. Work on adding Cerberus 1 to Eve has actually been ongoing. In fact, we were ready to release the feature with the current release, but I decided against it as I wanted to deliver all the new features before the inevitable breaking changes that will come with Cerberus 1. The idea is to let most users take advantage of new features with as little effort as possible. They will then have the option to bite the bullet and upgrade to 0.8 at their own pace.\nThe current release has been cooking for a long time, way more than I anticipated. I have simply been too busy with normal day work, the kind of activity that pays the bills. That is good for me I guess, but not so much for the project. I really feel like I should put more effort into Eve, Cerberus and satellite projects Eve-Swagger, Flask-Sentinel, Eve.NET, etc. I love working on these projects and I know a lot of people rely on them. Also, I have big ideas that I would like to play with. At this point in time however, I cannot afford allocating more time to not-paying-the-bill activities. Rest assured the project is not going stale. Worse case scenario, nothing changes and it will just proceed at current pace. But I have been wondering what would allow me to put more into it.\nI am particulary fond of the collaboratively funded project model adopted by the Django REST Framework, and I wonder if it would work for Eve too. Of course I know that Eve is a smaller project with a smaller ecosystem. I also know however that many companies and institutions, big and small are using Eve in production and with good results. In the past I even did the occasional consulting gig for them. Maybe some would be willing to help with some form of financing and/or sponsorship, adopting the project in exchange for some visibility and, more importantly, project growth?\nIf you have some advice to share on this topic, please do so. I am very hesitant and unsure about this whole thing. Part of me just wants to keep going the way it\u0026rsquo;s always been, as with any form of financing also comes more responsability. The other half of me wants to work more on this thing, make it bigger. Eventually we will get there but, unless something changes, it will take quite some time.\nBy the way, next March I am speaking about RESTful Web Services at Codemotion Rome 2017. Presentation will include a Eve live demo, so if you are interested in Eve and/or want to see me fail miserably and blow it up on stage, join me there. Tickets are still available, talk will be in English, and March is a great season to visit Rome. See ya\u0026rsquo;ll there.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/the-state-of-the-eve-rest-framework-project/","summary":"\u003cp\u003eA new major release of the \u003ca href=\"http://python-eve.org\"\u003eEve REST API Framework\u003c/a\u003e is finally out with\na number of cool new features (MongoDB Aggregations!), few fixes, and a couple\nof minor breaking changes. On the Eve blog you can find a \u003ca href=\"http://blog.python-eve.org/eve-07-released\"\u003edetailed article\u003c/a\u003e\nabout this important release.\u003c/p\u003e\n\u003cp\u003eI am glad to report that the \u003ca href=\"https://github.com/RedTurtle/eve-sqlalchemy\"\u003eEve-SQLAlchemy\u003c/a\u003e community extension, which\nallows SQL databases to serve as Eve backends, has seen a surge of activity\naround it. There is a new maintainer, Dominik Kellner, and a bunch of active\ncontributors. Work is being done to align the extension with latest Eve\nrelease. If interested, please join the efforts there. Speaking of community\nextensions, only a few days ago \u003ca href=\"https://github.com/petrjasek/eve-elastic\"\u003eEve-Elastic\u003c/a\u003e version 2 has been released\ntoo.\u003c/p\u003e","title":"The state of the Eve REST framework project"},{"content":"Recently I had to build and deploy a private NuGet server. The official documentation is quite good, but I did hit some (admittedly small) hitches along the way, so I thought I might as well share the whole process. Hopefully this post will be helpful to the next guy or gal adventuring down the same path.\nIf I don\u0026rsquo;t need to convince you on the usefulness and importance of packages in modern software development, then you can safely jump to The case for private NuGet feeds, and spare yourself some of my ramblings.\nWhy you should package Before I get down to business allow me a little digression to stress the importance of packaging, even for small teams. Packaging is not new. The practice is considered to be well settled, even in the .NET community where it became mainstream in relatively recent times with the advent of NuGet (2010). Nonetheless, I have seen the discussion going oh so many times, even in recent times, in shops big and small: should we package in the first place? Yes you should.\nYou don\u0026rsquo;t want to just get along with loose .dll files being distributed (zipped or not) by hand, email, or any other means. We have all done it at some point or another. Over time even that single, very simple, self-contained library file is going to outgrow itself. New releases will happen. Some of those releases might happen to be outright broken. Bugs and/or regressions will surface. They always do. Maybe your library will take on a few dependencies. Good luck getting all your peers to upgrade or downgrade painlessly.\nAnd yes I know. Nowadays we have version control systems. A team can simply share code via git. But often times you don\u0026rsquo;t necessarily want/can share the code with your colleagues. More importantly, in most scenarios your peers only need the features that your library offers, not the burden that comes with adding your project to their solution and then keeping their clones up to date. They simply need to add a reference to your library. It might make sense to keep everything fluid (no release, no package) at the very early stages, when your API is not ironed out yet but really, just don\u0026rsquo;t. Especially so if you can rely on a private NuGet feed which you can setup to allow for all kind of dirty (and inadvisable) tricks, like enabling package overwriting which is disabled on the public feed.\nPackages are the way to go. They give you versioning and dependency management. They also encorage a distribution model made of small, mostly self-contained files, which is both a best and common pattern (just look at the path taken by Microsoft itself with the .NET Core distribution model).\nThe case for private NuGet feeds Now, with that out of the way, let\u0026rsquo;s give a look at the official NuGet feed. According to the NuGet blog itself:\nNuGet.org is growing blazingly fast. The past couple of years have seen a tremendous growth in the usage of packages from the NuGet gallery.\nBut let\u0026rsquo;s just dig into that giant haystack for a little while. Just a quick glance will suffice to determine that the feed is a big mess. Besides the top packages, the tip of the iceberg, you will easily spot a whole lot of packages that are clearly intended to be only consumed by a handful of people. Descriptions are often very short, to the point of being unintelligible. Sometimes they are totally (purposely?) cryptic, or just speak some kind of internal lingo. Heck, even the package names are at times so obscure that I don\u0026rsquo;t even get a hint at what they are supposed to do.\nMind you, this is not limited to the NuGet ecosystem. If we look at the Python Package Index for example, we find the same exact situation: 95K+ packages, many of which are totally unintelligible unless you know what you are looking for. And don\u0026rsquo;t get me started with npm, which reigns supreme with its astounding 350,000 packages count.\nI cannot help but think that many packages would better sit in a private NuGet server. I would not be surprised to learn one day that people are publishing to the public feed just because they don\u0026rsquo;t know they can build their own private server or, even if they do, they think it is just not worth the effort.\nPrivate servers are not a tool just for the enterprise. Small teams will benefit from them too. Aside from the obvious we don’t want/can’t share our packages with the public there are other good reasons to have one. Setting a server up is cheap (host on IIS or Azure), easy, and allows you total control over the feed.\nPrivate NuGet feed options The NuGet framework supports local feeds with three options:\nLocal feed. This is a suitable network file share used to store your pages. Very simple. Probably a good solution if you don\u0026rsquo;t need to share your packages outside your LAN. NuGet.Server. Packages are made available through a HTTP server, local or remote. NuGet Gallery. Packages are hosted using the NuGet Gallery Project available on GitHub. This is the same tool used to host the official feed, with all the features like web browsing and searching, admin interface, etc. There are also third-party NuGet hosting services that support remote private feeds.\nIn this article we will look at NuGet.Server option. This is an actual package provided by the .NET Foundation. It creates an ASP.NET application that can host a package feed on any server that runs IIS. It is simple and quick to setup, and it is ideal for small teams and simple scenarios. Its biggest drawback is that it does not keep state: it does not rely on a local database to store download counts, user logins, etc. If you need that level of detail then you want to look at the NuGet Gallery option. What the NuGet.Server packages does, in practice, is making a folder on the server available through HTTP(S). Visual Studio and nuget.exe can then add the server to the list of available sources and consume it along with other feeds, like the public one.\nIf you played with NuGet.Server in the past and found it slow for large number of packets, please give it another shot now. Besides some internal optimizations, in recent times it has been updated to use the Expanded Folder Format and its performance has skyrocketed since then.\nCreate a NuGet Server in Visual Studio In Visual Studio select File \u0026gt; New \u0026gt; Project to create a new project. In order to get the latest version of NuGet.Server, make sure you set the target framework to .NET Framework 4.6 or above.\nGive the application an appropriate name and click OK. In the following dialog pick the Empty ASP.NET Web Application template and click OK.\nNext you need to install the NuGet.Server package itself. Right-click the project name and select Manage NuGet Packages. In the NuGet Package Manager search and install the latest version of NuGet.Server.\nAlternatively, you can of course install from the Package Manager Console with Install-Package NuGet.Server.\nThe installation process will install the needed dependencies and take care of converting your empty application into an actual package server. It achieves that by overwriting the default web.config to include custom application settings (to which we will get in a second), and by creating a deafult Packages folder where your packages will reside. When you are asked if you want to overwrite the current web.config, say YES.\nWhen the process is complete your server is ready to run. Just hit Ctrl+F5 (no debug) and Edge will fire up at the following page:\nAdding packages to the feed Now, if you go back to the project and inspect the newly created Packages folder, you will find that it is empty except for a readme file, which makes sense since we have not added any package to our repository yet. The readme says that you can simply drag (or paste) your .nupkg files into the folder in order to make them available to clients.\nThat works. I suspect, though, that it used to work better back when NuGet Server did not support the Expanded Folder Format. At the time of this writing (v2.11.3 of the package), dragging packages is an awkward process for a couple of reasons. First, you also need to remember to set the Copy to Output Directory property to Copy Always for every file added this way (that\u0026rsquo;s not mentioned in the readme). Second, as soon as the app is up and runnig it will reconstruct the folder by moving package files, each one into their own sub-folder, as the Expanded Folder Format implies. This will leave your project with orphaned files. My suggestion is to simply use your newly created server the way it is supposed to be: just push your packages to it via nuget.exe.\nInitially your NuGet Server will not allow clients to push packages. You first need to set an API key in web.config, then clients will need to use the key when pushing to the server. As you can see, the apiKey value is blank by default.\nThe key will have to be shared by all clients, so make sure you hand it only to authorized personnel. While you are at it, also make sure that it as strong as it can get. And yes I agree. Along with being statless, the shared API key requirement is probably the biggest drawback to the NuGet.Server option.\nIf your server is secured by other means (e.g. it sits in a firewalled company network), or if you just want to perform some local testing, you can switch the API key requirement off by setting requireApiKey to false.\nOnce your API key is properly configured you can start pushing from the command line:\nnuget.exe push {package file} {apikey} -Source http://localhost:50227/api/v2/package As you can see are still running on localhost. It\u0026rsquo;s almost time to publish our NuGet server to IIS or Azure. Let\u0026rsquo;s first give a look at a couple interesting options we have in web.config.\nAllow overriding on Push As I mentioned in my ramblings above, a private feed offers some more control over the feed compared to the public one. On nuget.org you cannot override an existing package version, period. On you own server you have to option to allow that. Just set allowOverrideExistingPackageOnPush to true (it is disabled by default, and for good reasons).\nSoft deletes (delist) When a client has a valid API key it can not only push, but also delete packages. By default the delete command will do just that, delete the package file from the repository. On your server you can change that behavior and opt for delisting on delete instead. Just set enableDelisting to true.\nBe careful however as a delisted package can still be donwloaded by clients that explictly specify the version, as correctly reported in the comments for the option.\nChange the default folder If you dislike ~/Packages as your packages repository, you can set packagesPath to something other than the default blamk value. This can be a virtual or physical path.\nDeploy to IIS or Azure There is nothing special about deploying the server application to either IIS or Azure. It is just a normal web application and we can leverage Visual Studio\u0026rsquo;s Web Deploy feature to achieve our goal.\nIn the Solution Explorer right click on the project name and hit Publish. In the Publish dialog, if you are publishing to Azure select Microsoft App Service. Sign-if if you need to, and then pick an appropriate service name.\nHit Publish. At the end of the process Edge will open your remote welcome page.\nYou can start to push packages right away.\nIf publishing to IIS in the Publish dialog select the Custom option and fill in server name (IP address works too), site name, username and password. The Destination URL is not strictly necessary. When I first tried this, pushes were failing despite the server app being up and running. The issue was that the application did not have write access to the Packages folder, so you might want to check that too.\nConsume the feed from Visual Studio Once your server is up and running you can add it as a NuGet Source in Visual Studio. Go to Tools \u0026gt; Options and browse to NuGet Package Manager \u0026gt; Package Sources. Alternatively, right click on the project in the Solution Explorer, hit Manage NuGet Packages and then hit the gear icon next to the Package Source combo.\nAdd your server to the list of available sources. As you can see in my case I have nuget.org, a local folder and the test server for this article available. Hit OK once your server has been added. At this point when you go to the NuGet Package Manager window your Package source combo will also list your private server and you can install packages from there.\nThe screenshot above is from Visual Studio for Mac. It shows the actual private feed we use for development. All our packages are nicely listed there, with no interference from the public feed. The public feed is only one click away and, both on Mac and Windows, you can search on all available feeds at once, wich is super convenient.\nWrap up NuGet.Server makes setting up a private NuGet feed a breeze. It does have a few drawbacks. If you can live with it being stateless and not allowing for individual API keys, then this package is probably your best option. The full NuGet Gallery project is still available if you need more power.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\nSpecial thanks to fellow Microsft MVP \u0026amp; Regional Director Andrea Saltarello for peer reviewing this article before publication.\n","permalink":"https://nicolaiarocci.com/how-to-build-and-deploy-a-private-nuget-server-on-iis-or-azure/","summary":"\u003cp\u003eRecently I had to build and deploy a private NuGet server. The\nofficial \u003ca href=\"https://docs.nuget.org/ndocs/hosting-packages/overview\"\u003edocumentation\u003c/a\u003e is quite good, but I did hit some\n(admittedly small) hitches along the way, so I thought I might as well share\nthe whole process. Hopefully this post will be helpful to the next guy or gal\nadventuring down the same path.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eIf I don\u0026rsquo;t need to convince you on the usefulness and importance of packages\nin modern software development, then you can safely jump to \u003ca href=\"#the-case-for-private-nuget-feeds\"\u003eThe case for\nprivate NuGet feeds\u003c/a\u003e, and spare yourself\nsome of my ramblings.\u003c/em\u003e\u003c/p\u003e","title":"How to build and deploy a private NuGet server on IIS or Azure"},{"content":"After a one year long development cycle I am proud to announce that version 1.0 of Cerberus, the data validation and transformation tool for Python, is finally out. A while ago I wrote an article on the new features and breaking changes that come with it, so please check it out carefully along with the changelog.\nI just wish to reiterate my gratitude towards all the contributors to the project. The ones who specifically worked on this awesome release, those who made it all possible, are: Matthew Ellison, Dominik Kellner, David Kirkendall, Damián Nohales, calve, Jonathan Huot, Roman Redkovich and of course the one and the only Frank Sachsenheim, whose role was pivotal to this release.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/cerberus-1-0-released/","summary":"\u003cp\u003eAfter a one year long development cycle I am proud to announce that version 1.0 of \u003ca href=\"http://python-cerberus.org\"\u003eCerberus\u003c/a\u003e, the data validation and transformation tool for Python, is finally out. A while ago I wrote an article on the \u003ca href=\"http://nicolaiarocci.com/cerberus-1-0-coming-going-awesome/\"\u003enew features and breaking changes\u003c/a\u003e that come with it, so please check it out carefully along with the \u003ca href=\"http://docs.python-cerberus.org/en/stable/changelog.html\"\u003echangelog\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI just wish to reiterate my gratitude towards all the contributors to the project. The ones who specifically worked on this awesome release, those who made it all possible, are: Matthew Ellison, Dominik Kellner, David Kirkendall, Damián Nohales, calve, Jonathan Huot, Roman Redkovich and of course the one and the only Frank Sachsenheim, whose role was pivotal to this release.\u003c/p\u003e","title":"Cerberus 1.0 has been released"},{"content":"I just released a long overdue update to Eve.NET. This release marks a significant improvement over the previous one, which was more a prototype than a real package. New features are as follows:\nPostAsync() supports bulk inserts DeleteAsync() supports bulk deletes GetAsync() has a softDelete option to include soft-deleted documents with query results GetAsync() has a rawQuery option to pass raw Eve queries to the server BearerAuthenticator class adds support for Bearer Token authentication Several fixes made it into this release and, most importantly, I switched to portable Profile259 which offers support for the following platforms: Xamarin.iOS, Xamarin.Android, WinPhone 8.1, Windows 8, .NET 4.5+. Yes, that means no more support for .NET 4.0. See the changelog for details.\nEve.NET v0.2 is on NuGet so you can install it either from Visual Studio or with the Package Manager console. Enjoy!\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/eve-sdk-for-net-v0-2-is-out-in-the-wild/","summary":"\u003cp\u003eI just released a long overdue update to \u003ca href=\"https://github.com/nicolaiarocci/Eve.NET/\"\u003eEve.NET\u003c/a\u003e. This release marks a significant improvement over the previous one, which was more a prototype than a real package. New features are as follows:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePostAsync()\u003c/code\u003e supports bulk inserts\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDeleteAsync()\u003c/code\u003e supports bulk deletes\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGetAsync()\u003c/code\u003e has a \u003ccode\u003esoftDelete\u003c/code\u003e option to include soft-deleted documents with query results\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eGetAsync()\u003c/code\u003e has a \u003ccode\u003erawQuery\u003c/code\u003e option to pass raw Eve queries to the server\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBearerAuthenticator\u003c/code\u003e class adds support for Bearer Token authentication\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSeveral fixes made it into this release and, most importantly, I switched to portable Profile259 which offers support for the following platforms: Xamarin.iOS, Xamarin.Android, WinPhone 8.1, Windows 8, .NET 4.5+. Yes, that means no more support for .NET 4.0. See the \u003ca href=\"https://github.com/nicolaiarocci/Eve.NET/blob/master/CHANGES\"\u003echangelog\u003c/a\u003e for details.\u003c/p\u003e","title":"Eve SDK for .NET v0.2 is out in the wild"},{"content":"SimpleObjectCache is a very simple permanent, cross-platform, asynchronous key-value object cache for .NET. It comes with built-in SQLite 3 support. Alternative backends can be added by implementing the IObjectCache or IBulkObjectCache interfaces.\nHow it works First, you need to set the ApplicatioName. This is also going to be the folder where your cache will reside. Depending on the host OS the location of this folder might be different. On Windows it would be something like C:\\ProgramData\\\u0026lt;ApplicationName\u0026gt;\\SimpleObjectCache.\nLet’s instantiate SimpleObjectCache so we can use it:\nNow we create a Person, then store it into our cache.\nAs we insert an object into the cache we can also set its expiration date:\nInserting an object with an already existing key, which we just did, will overwrite the previous object with the same key. Retrieving the object is a matter of providing its key:\nTo remove the object from the cache we use the Invalidate method:\nBulk inserts are also possible:\nNote that we just set the Tom and Mike expiration date to yesterday. Now let’s add John again. For him however, we set an expiration date which is bigger than Tom’s and Mike’s:\nThe Vacuum method removes expired objects from the cache. So Tom and Mike, whose dates are passed, are going to be purged by the following command:\nNow let’s get all the available Person objects from the cache.\nSince Tom and Mike are gone, we only got one object back, and that’s our very own little John.\nInstallation SimpleObjectCache is on NuGet. Run the following command on the Package Manager Console:\nOr install via the NuGet Package Manager in Visual Studio.\nWrapping it up We needed a simple cache that we could use as a component of our cross-platform storage system (more on that in a future post). We wanted the cache to also run seamlessly on the old .NET 4.0 framework. Unfortunately Akavache, to which this project is blatantly inspired, does not run on .NET4, so I decided to roll out my own simplified alternative. This project also offered a great occasion get my feet wet with bait-and-switch portable classes and a few other interesting challenges.\nCurrently supported platforms are iOS and Android (Xamarin) and .NET Framework versions 4.0 and .NET 4.5+.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/introducing-simpleobjectcache-a-simple-cross-platform-object-cache-for-net-systems/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/nicolaiarocci/SimpleObjectCache\"\u003eSimpleObjectCache\u003c/a\u003e is a very simple permanent, cross-platform, asynchronous key-value object cache for .NET. It comes with built-in \u003ca href=\"https://www.sqlite.org\"\u003eSQLite 3\u003c/a\u003e support. Alternative backends can be added by implementing the \u003ccode\u003eIObjectCache\u003c/code\u003e or \u003ccode\u003eIBulkObjectCache\u003c/code\u003e interfaces.\u003c/p\u003e\n\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003cp\u003eFirst, you need to set the \u003ccode\u003eApplicatioName\u003c/code\u003e. This is also going to be the folder where your cache will reside. Depending on the host OS the location of this folder might be different. On Windows it would be something like \u003ccode\u003eC:\\ProgramData\\\u0026lt;ApplicationName\u0026gt;\\SimpleObjectCache\u003c/code\u003e.\u003c/p\u003e","title":"Introducing SimpleObjectCache a simple cross-platform object cache for .NET systems"},{"content":"Released by the nice folks at Drud, EveGenie is a tool for making Eve schema generation easier.\nEve’s schema definitions are full of features, but can take a good amount of time to create when dealing with lots of complex resources. From our experience, it’s often helpful to describe an endpoint in JSON before creating it as an Eve schema. This allows you to make quick decisions about the structure of your entities without spending time moving schema code around. This is where EveGenie comes in.\nEveGenie saves time by creating a ready to use Python Eve schema from a very simple JSON representation of a set of resources.\nInterested? Good! Matt Tucker (@ultimateboy) has a getting started with EveGenie article up for you, so make sure to check it out.\n","permalink":"https://nicolaiarocci.com/evegenie-makes-eve-schema-generation-breeze/","summary":"\u003cp\u003eReleased by the nice folks at Drud, \u003ca href=\"https://github.com/drud/evegenie\"\u003eEveGenie\u003c/a\u003e is a tool for making \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e schema generation easier.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEve’s schema definitions are full of features, but can take a good amount of time to create when dealing with lots of complex resources. From our experience, it’s often helpful to describe an endpoint in JSON before creating it as an Eve schema. This allows you to make quick decisions about the structure of your entities without spending time moving schema code around. This is where EveGenie comes in.\u003c/p\u003e","title":"EveGenie makes Eve schema generation a breeze"},{"content":"Quick note to let you all know that Eve v0.6.4 is out with a few significant updates. Thanks to James Stewart for contributing to this release.\nWork on v0.7, which will include MongoDB Aggregation Framework support (docs) and many other new features, continues steadily.\n","permalink":"https://nicolaiarocci.com/eve-0-6-4-just-released/","summary":"\u003cp\u003eQuick note to let you all know that \u003ca href=\"https://pypi.python.org/pypi/Eve/0.6.4\"\u003eEve v0.6.4\u003c/a\u003e is out with a few significant \u003ca href=\"http://python-eve.org/changelog#version-0-6-4\"\u003eupdates\u003c/a\u003e. Thanks to James Stewart for contributing to this release.\u003c/p\u003e\n\u003cp\u003eWork on v0.7, which will include MongoDB Aggregation Framework support (\u003ca href=\"http://python-eve.org/features.html#mongodb-aggregation-framework\"\u003edocs\u003c/a\u003e) and many other \u003ca href=\"http://python-eve.org/changelog#version-0-7\"\u003enew features\u003c/a\u003e, continues steadily.\u003c/p\u003e","title":"Eve REST API Framework v0.6.4 now available"},{"content":"Eve-Swagger is a swagger.io extension for Eve powered RESTful APIs. It has been around for a while on GitHub but I never managed to officially release it. So rejoice! it is now available on PyPI.\nBut what is Swagger, and why is it useful to your RESTful API? With a Swagger-enabled API you can get interactive documentation, client SDK generation and discoverability, all for free. From Swagger website:\nSwagger is a simple yet powerful representation of your RESTful API. With the largest ecosystem of API tooling on the planet, thousands of developers are supporting Swagger in almost every modern programming language and deployment environment. With a Swagger-enabled API, you get interactive documentation, client SDK generation and discoverability.\nWhen Eve-Swagger is installed and properly configured your Eve API exposes a special /api-docs endpoint which returns a 100% swagger-compliant JSON response. This JSON can then be processed by the swagger tools like Swagger UI and Swagger Editor. Here we can appreciate Swagger UI providing API documentation out of the box (click to zoom):\nLike most Eve extensions Eve-Swagger comes as a standard Flask Blueprint and, as such, using it is very simple:\nOnce the blueprint has been registered all you have to do is add a SWAGGER_INFO node to your settings. It maps to a swagger infoObject and contains some simple, human readable information. The extension will also scan your endpoint settings to figure out the API graph and document it. Of course, in order to not to clutter your launch script, you could (and probably should) set SWAGGER_INFO in your configuration file.\nInstallation is super easy:\nThis is just version 0.0.2 so many parts might still be moving, but you are encouraged to start using it right away. Also if you appreciate this extension please let me know by either starring it on GitHub or with a tweet or email, so I will know that I should really try hard and allocate more time to this project. As always, feel free to contribute via pull request!\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/announcing-eve-swagger/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/nicolaiarocci/eve-swagger\"\u003eEve-Swagger\u003c/a\u003e is a swagger.io extension for \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e powered RESTful APIs. It has been around for a while on GitHub but I never managed to officially release it. So rejoice! it is now available on PyPI.\u003c/p\u003e\n\u003cp\u003eBut what is Swagger, and why is it useful to your RESTful API? With a Swagger-enabled API you can get interactive documentation, client SDK generation and discoverability, all for free. From \u003ca href=\"http://swagger.io\"\u003eSwagger website\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSwagger is a simple yet powerful representation of your RESTful API. With the largest ecosystem of API tooling on the planet, thousands of developers are supporting Swagger in almost every modern programming language and deployment environment. With a Swagger-enabled API, you get interactive documentation, client SDK generation and discoverability.\u003c/p\u003e","title":"Meet Eve-Swagger the swagger.io extension for your Eve powered REST API"},{"content":"Cerberus is a lightweight and extensible data validation library for Python. Beta has been around since 2012. During this time Cerberus has been serving as the validation system for Eve core. It has been also adopted by a quite a lot open source projects, averaging around 18K downloads per month on PyPI and collecting some remarkable endorsements.\nAll things considered, I would dare to claim that Cerberus is battle tested to death. This is, in fact, one reason why I believe that the time for a canonical and stable release has come. Another reason is that next release is a major one. It brings a ton of important new features along with very significant code refactoring and a redesigned, powerful API. Third, next release breaks backward compatibility, and we want to signal that in the version number.\nSo next Cerberus release will be 1.0. If you have been following the development this will come as no surprise, as a Release Candidate has been out for a while. As a Cerberus user you will want to take the plunge and upgrade to 1.0 because well, it is just too cool to be true. If new to Cerberus you will also want to adopt 1.0 right away, for the same reason. If you are new however, make sure you get the basics covered before reading further. By the way, at latest PyCon Italy I gave a talk on Cerberus which also included a preview of several 1.0 features. You can check the slides to get a general idea of the tool, its usage, and upcoming features.\nLet’s now look at some of the relevant features and changes introduced with Cerberus 1.0. For a (mostly) accurate list of changes and new features, have a look at the changelog.\nTransformation and normalization Big news in the normalization department. Similar to validated(), the new normalized() method returns a normalized copy of a document without validating it.\nRenaming of Fields You can now define a field to be renamed before any further processing.\nTo let a callable rename a field or arbitrary fields, you can define a handler for renaming. If the constraint is a string, it points to a custom method.\nIf the constraint is an iterable, the value is processed through that chain.\nPurging Unknown Fields After renaming, unknown fields will be purged if the purge_unknown property of a Validator instance is True.\nYou can set the property per keyword-argument upon initialization or as rule for subdocuments like allow_unknown. The default is False.\nDefault Values You can set default values for missing fields in the document by using the default rule.\nYou can also define a default setter callable to set the default value dynamically. The callable gets called with the current (sub)document as the only argument. If the constraint is a string, it points to a custom method.\nValue Coercion Coercion has been introduced with 0.9. It allows you to apply a callable to a value before the document is validated. The return value of the callable replaces the new value in the document. This can be used to convert values or sanitize data before it is validated.\nIf the constraint is an iterable, the value is processed through that chain.\nPlease note that coerce kicks in with validate(), not with normalized().\nSchema Validation This is another area the is seeing a lot of changes and new, powerful things.\nRegistries Schema registries are awesome if your schemas shall include references to themselves (recursion) and if they contain a lot of reused parts and are supposed to be serialized. There are two default registries in the cerberus module namespace. You can use schema_registry to store definitions for schemas which can later be re-used:\nAnd you can extend rules_set_registry with rules-sets which can then be referenced in validation schemas:\nSchema Constraints in docstrings Validation schemas themselves are validated when passed to the validator or a new set of rules is set for a document’s field. A SchemaError is raised when an invalid validation schema is encountered.\nNow you can provide constraints as literal Python expression in the docstring of the rule’s implementing method to validate the arguments given in a schema for that rule. Either the docstring contains solely the literal or the literal is placed at the bottom of the docstring preceded by the following sentence: The rule's arguments are validated against this schema.\nThe example below is comes directly from Cerberus’ own test suite:\nValidation Rules forbidden Opposite to allowed, this new rule validates if a value is any but one of the defined values:\nmin, max Up to 0.9 you could only use min and max to compare numeric types. Now they define minimum and maximum values allowed for any types that implement comparison operators.\nkeyschema For better consistency, the propertyschema rule has been renamed to keyschema. This is the counterpart to valueschema and validates the keys of a dict.\ntype Data type validation now also supports the binary type.\nBreaking Changes This is a major release which breaks backward compatibility in several ways. Don’t worry, these changes are for the better. However, if you are upgrading, then you should really take the time to read the list of changes in the changelog and consider their impact on your codebase, especially so if you have custom validators sitting around. For your convenience, there are also some upgrade notes available.\nAcknowledgements Cerberus 1.0 would not exist in its current form without the incredible work done by Frank “funkyfuture” Sachsenheim. After his initial, timid, set of v0.9 contributions, Frank went on a rage. He really adopted the project and went on touching on every aspect of it: documentation, new features, proposal, fixes, refactoring, ticket triaging, you-name-it. His efforts have been instrumental in taking the project to the next level. As a token of appreciation for his work, I’m tagging this release with the funkyfuture codename.\nOf course he was not alone. Other contributors were Matthew Ellison, Dominik Kellner, Damián Nohales, calve, Roman Redkovich. And then are all the other people who helped by opening tickets and spreading the word around. Thank you all, folks.\nClosing notes Cerberus 1.0 is an important milestone. I consider the API to be reasonably stable and, once it is released, I plan to let it settle down for a while. Release Candidate will stay out for a couple more weeks, which is ideal for you to experiment a little bit before the final release.\nIf you are a Eve user you probably see the potential that new Cerberus can offer to your RESTful API, especially in the normalization department. Don’t get too excited though as I do not plan on immediately adding Cerberus 1.0 to Eve. Next Eve release (v0.7), which is also upcoming, will be focused on MongoDB Aggregation Framework and other things. That is more than enough for a major release. I am targeting the following release (v0.8) for Cerberus 1.0 support.\nSo, have fun with New Cerberus. As usual, please report any issue on the ticket system.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/cerberus-1-0-coming-going-awesome/","summary":"\u003cp\u003e\u003ca href=\"http://python-cerberus.org\"\u003eCerberus\u003c/a\u003e is a lightweight and extensible data validation library for Python. Beta has been around since 2012. During this time Cerberus has been serving as the validation system for \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e core. It has been also adopted by a \u003ca href=\"https://github.com/search?q=from+cerberus+import+Validator\u0026amp;type=Code\u0026amp;utf8=%E2%9C%93\"\u003equite a lot\u003c/a\u003e open source projects, averaging around 18K downloads per month on PyPI and collecting some remarkable \u003ca href=\"https://speakerdeck.com/nicola/cerberus?slide=56\"\u003eendorsements\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAll things considered, I would dare to claim that Cerberus is battle tested to death. This is, in fact, one reason why I believe that the time for a canonical and stable release has come. Another reason is that next release is a major one. It brings a ton of important \u003ca href=\"http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0\"\u003enew features\u003c/a\u003e along with very significant code refactoring and a redesigned, powerful \u003ca href=\"http://docs.python-cerberus.org/en/latest/api.html\"\u003eAPI\u003c/a\u003e. Third, next release \u003ca href=\"http://docs.python-cerberus.org/en/latest/changelog.html#breaking-changes\"\u003ebreaks\u003c/a\u003e backward compatibility, and we want to signal that in the version number.\u003c/p\u003e\n\u003cp\u003eSo next Cerberus release will be 1.0. If you have been following the development this will come as no surprise, as a Release Candidate has been out for a while. As a Cerberus user you will want to take the plunge and upgrade to 1.0 because well, it is just too cool to be true. If new to Cerberus you will also want to adopt 1.0 right away, for the same reason. If you are new however, make sure you get the \u003ca href=\"https://cerberus.readthedocs.io/en/latest/usage.html#cerberus-usage\"\u003ebasics covered\u003c/a\u003e before reading further. By the way, at latest PyCon Italy I gave a talk on Cerberus which also included a preview of several 1.0 features. You can check the \u003ca href=\"https://speakerdeck.com/nicola/cerberus\"\u003eslides\u003c/a\u003e to get a general idea of the tool, its usage, and upcoming features.\u003c/p\u003e\n\u003cp\u003eLet’s now look at some of the relevant features and changes introduced with Cerberus 1.0. For a (mostly) accurate list of changes and new features, have a look at the \u003ca href=\"http://docs.python-cerberus.org/en/latest/changelog.html#version-1-0\"\u003echangelog\u003c/a\u003e.\u003c/p\u003e","title":"Cerberus 1.0 is coming and it is going to be awesome"},{"content":"Ho appena pubblicato su NuGet l’ultimo aggiornamento di FatturaElettronicaPA, il package .NET per la compilazione e convalida delle fatture elettroniche per la Pubblica Amministrazione. Si tratta della versione 0.2.1 che fa proprie le novità annunciate il 9 Maggio scorso:\nA partire dal 9 maggio 2016 sono introdotti nuovi controlli sui file trasmessi al Sistema di Interscambio. Per consentire il necessario adeguamento al nuovo regime di verifiche, fino al 31 luglio 2016 il mancato superamento di uno o più di questi nuovi controlli non comporterà lo scarto del file ma solo una segnalazione che verrà riportata all’interno della Ricevuta di consegna o della Notifica di mancata consegna. Dal 1 agosto 2016 i file che non dovessero superare uno o più di questi controlli verranno scartati.\nSe per ora i nuovi controlli non sono vincolanti, lo saranno a partire dal 1 agosto. Poiché si tratta di una serie di convalide sui conteggi consiglio di passare alla versione 0.2.1 al più presto, così da verificare che in effetti le vostre fatture elettroniche siano in linea con le aspettative della PA: potreste avere qualche sorpresa.\nNel nostro caso, per esempio, abbiamo dovuto prendere atto che gli importi imponibili relativi alle aliquote IVA, così come le corrispondenti imposte, devono essere indicati al lordo degli eventuali sconti generali del documento, pena il rifiuto dello stesso da parte del sistema di interscambio. Date una occhiata al changelog per l’elenco completo delle novità.\nVoglio aggiungere un commento sulle modalità di pubblicazione degli aggiornamenti tecnici da parte di Agenzia Entrate/Sogei. Sebbene siano dotati di data e numero di versione, questi sono da considerarsi, ad essere buoni, puramente indicativi. Per esempio l’attuale versione 1.2 dell’elenco controlli è stata aggiornata “silenziosamente” un paio di giorni dopo la pubblicazione (hanno aggiunto una tolleranza di 1 Euro al controllo 00422). Così lo sviluppatore incauto che si limiti a controllare la data e il numero di versione del documento rischia di vedersi respingere fatture per lui del tutto corrette, a meno che non di prenda la briga di verificare, riga per riga, la corrispondenza tra la documentazione in suo possesso e quella disponibile sul sito in quel momento. Chiaramente in PA non hanno idea di cosa sia il Semantic Versioning.\nUn ringraziamento al mio collega Stefano Gardini. Il suo nome non compare nelle commit ma, quando si stratta di fatturazione e contabilità, è come se ci fosse.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-per-la-pa-v0-2-1/","summary":"\u003cp\u003eHo appena pubblicato su NuGet l’ultimo aggiornamento di \u003ca href=\"https://github.com/FatturaElettronicaPA/FatturaElettronicaPA/\"\u003eFatturaElettronicaPA\u003c/a\u003e, il package .NET per la compilazione e convalida delle fatture elettroniche per la Pubblica Amministrazione. Si tratta della \u003ca href=\"https://www.nuget.org/packages/FatturaElettronicaPA/0.2.1\"\u003eversione 0.2.1\u003c/a\u003e che fa proprie le novità annunciate il 9 Maggio scorso:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA partire dal 9 maggio 2016 sono introdotti nuovi controlli sui file trasmessi al Sistema di Interscambio. Per consentire il necessario adeguamento al nuovo regime di verifiche, fino al 31 luglio 2016 il mancato superamento di uno o più di questi nuovi controlli non comporterà lo scarto del file ma solo una segnalazione che verrà riportata all’interno della Ricevuta di consegna o della Notifica di mancata consegna. Dal 1 agosto 2016 i file che non dovessero superare uno o più di questi controlli verranno scartati.\u003c/p\u003e","title":"Fattura Elettronica per la PA v0.2.1"},{"content":"April was definitely my crazy Speaking Month. After an almost one year long self-imposed conference hiatus, I was challenged to deliver four different talks, attend two discussion panels, give one live demo and release one interview. All in a three weeks period span. First I went to PyCon Sette in Florence. A few days later a plane took me to St. Petersburg, Russia, for PiterPy. Finally, the next weekend I was in Rome for the Western Europe Microsoft MVP Community Day. In the meantime several Channel 9 TecHeroes episodes were due for release. This was of course super exciting. And challenging.\nThis post is not much (or only) about my talks or performance, but hopefully more around the different communities I got a chance to interact with.\nPyCon Sette, Florence PyCon Italy is like home to me. Here, back in 2012, I gave my first Python talk which also happened to be my first English talk ever. Back then Italy was hosting EuroPython 2012, the general assembly of the European Python community, so we had people flying in from all over the continent (and beyond). And I was there all alone, a .NET guy who knew no one, pretending to teach pythonistas how to properly build a REST API powered by MongoDB and Flask. Talk about putting myself out of my comfort zone. That talk was important for many reasons, I won’t go into them, suffice to say that, without it, the Eve project would not exist now.\nThe following years I went back with more talks. After the three booming EuroPython years we saw the number of PyCon attendees drop from the 700s to the about 150 at PyCon Cinque. Following that first post-EuroPython event however the numbers started to raise. Fast. So fast, in fact, that this year we ended up celebrating the all-time high of 575 attendees. An impressive result, as it almost tops EuroPython numbers. We owe a lot to the skill, expertise and braveness of the PyCon Italy organizers. They are simply awesome, and tireless. Such a result, however, also a is a testimony of how strong, vibrant and resilient the Italian community around Python is.\nThis year I was there to give my first Cerberus talk. The room was packed full, everything went smoothly (at least from my perspective) and when all was done and said I was left with the impression that the project was well received. My only regret is that I totally forgot to submit the talk for the English track. I also took part in the Python Web Framework Royal Rumble, a panel in which Django, Flask, Pyramid and TurboGear champions were to fight each other. I was defending the Flask flag, and it was a lot of fun.\nThe Italian Python community is cozy and friendly as always, stronger than ever. PyCon in Florence keeps improving its already high standard. My only suggestion would be to reverse the English/Italian tracks ratio. I would go for an all-English conference with just one track for Italian language. I am sure a lot of guests would flock in from nearby countries. I mean who would not want to visit Florence, and Tuscany Plus, many pythonistas already have very fond memories from the Italian EuroPython years and I am sure they would love to come back.\nPiterPy, St. Petersburg PiterPy is an important and very well organized Python event which gathers attendees not only from St. Petersburg, but also from other Russian cities and nearby countries.\nI was invited by the conference organizers to talk about project Eve. I was honoured, excited and curious to meet fellow pythonistas from the Eastern Europe. Other headliners were Chris Ewing, Gael Varoquaux, Hynek Schlawack, Simone Soldateschi and Fabio Natali. As you can tell, we all have different backgrounds and specialize on different things, as it should be when you want to present your audience with different interesting aspects of your stack of choice.\nI did my Eve talk and then even managed to sneak in lightening talk on Cerberus. I was also interviewed by Vladimir Filonov (I think the recording is due out soon) and to my surprise the interview was not on my open source activity but rather on the Italian Python community. It turns out that in Russia they care a lot about the community, and they are eager to know more about other Python communities scattered all around Europe. Freaking awesome, if you ask me.\nOrganizers were professional and friendly all the time, letting me feel comfortable right from the start. In fact I was just off the plane when I met with Maxim Klymyshyn, who took me from the Airport to the conference location. The venue itself (Original Sokos Olympia Garden, conveniently located close to St. Petersburg’s city center) was probably one of the best, if not the best, conference venue I ever been at. And what about the attendees? They were very welcoming with their international guests and language barrier was not an issue as many of them speak very good English (often better than mine). Be warned however, when given the opportunity they will not hesitate to challenge the unwary speaker with the hardest of questions. I am told (by the attendees themselves) that this is in fact a trait of the Russian people. They won’t be shy when they have something to say. As a speaker, I really appreciated the attitude!\nThe day after the conference a cultural trip to Catherine Palace in Pushkin was planned for both speakers and attendees. That was terrific. Should you go to St. Petersburg, on a business trip or just as a tourist, make sure you visit Catherine Palace. You won’t regret it.\nMy eternal gratitude goes to Vladimir Shulyak and Dmitry Nazarov for taking me and my new buddy Chris Ewing out for diner and then on a super nice walk around the city center. Special thanks to Serge Matveenko, Diana Lyubavskaya and the rest of the team for inviting us and, most importantly, for putting up such a great event. I am sure PiterPy will soon become a relevant event within the international community.\nWestern Europe MVP Community Day, Rome This was my first time as a MVP to a Microsoft event. Not only that. This was actually a MVP-only event and I was there to give a talk to experienced MVPs who, for the most part, have been in the program for years. Kind of intimidating, although I was reassured by the fact that my proposal had been voted by the MVP community itself.\nLike at my first Python conference years ago I knew no one there, not personally at least, so it took some balls win my shyness and introduce myself to the first person I recognized, that one being Alessandro Del Sole, a long time MVP veteran. He and his pals were super nice and only moments after introducing myself to them I was already feeling part of the community. A very empowering feeling. Later during the evening and even more so the following day, at the conference, I got to meet and know a lot of new friends, all very knowledgeable in their craft, which is awesome.\nI would say that the focus of the event was about Microsoft’s new openness toward other stacks and communities, which also helped in making me feel comfortable. I gave my Real Life .NET Cross Platform talk, with good feedback. SimpleCache, which was used as an example project and wasn’t really the main topic, got a lot of interest so I may actually release it on NuGet soon (blog post coming). My highlight for the event though, would be Karen Juhl keynote during which I suddenly realized that a picture of me, along with quotes from one of my articles, was being shown on stage. It took me a few seconds to realize what was going on, as it was totally unexpected. That was crazy, and mesmerizing. Later, when I got to talk with Karen, I learned that that very same slide has been used at several MVP events across Europe. So exciting!\nThe conference was closed by an Open Source Communities Panel, to which I was invited as a member of multiple communities.\nThe next day I was at the OpenDomus.net event, where I got a chance to repeat my cross platform talk (this time in Italian), and then to give a live demo of Ubuntu Bash on Windows. That one was interesting, and surprising I think, for many attendees. A few days later, with Lorenzo Barbieri, we recorded a Best of Build 2016 episode on the same topic (link below).\nTecHeroes Interlude April and March were also the months in which I and Lorenzo Barbieri recorded and released a few MSDN TecHeroes Italy episodes:\nVim for Visual Studio Python Tools for Visual Studio CoderDojo Coding Clubs for Kids Real Life .NET Cross Platform Bash on Ubuntu on Windows (actually a Best of Build episode) Wrapping it up As I mentioned at the OSS panel I am lucky to have an active role in more than one community and to work every day with diverse technologies. Now, most of the times the problems tackled by these stacks are, in fact, the same. Besides the obvious differences in semantics, what really changes and is most interesting to me is the approach, the path if you will, taken by each individual stack. For me, being exposed to multiple approaches and therefore getting a chance to appreciate the differences, the pros and cons of each one (which tend to vary depending on the situation at hand) has been invaluable. I could (and probably should) fill a blog post with the things I learned working on Python that I am now using, with profit, in C#. And vice-versa.\nAnd what about the communities? Different communities, again, expose me to different cultures. That is a good thing. Being rooted into a community is great but being active in multiple communities is even better, in essence for the same reasons you’d want to become a polyglot programmer.\nSo my invite is to get involved once again, no matter how active and fit you are into a stack and its community. Try something totally new, even if it doesn’t really sound like something immediately useful to you. Because you know, cross-pollination is a good thing. And you get to party twice the time, too.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/crazy-speaking-month/","summary":"\u003cp\u003eApril was definitely my crazy Speaking Month. After an almost one year long self-imposed conference hiatus, I was challenged to deliver four different talks, attend two discussion panels, give one live demo and release one interview. All in a three weeks period span. First I went to \u003ca href=\"http://www.pycon.it\"\u003ePyCon Sette\u003c/a\u003e in Florence. A few days later a plane took me to St. Petersburg, Russia, for \u003ca href=\"http://www.it-sobytie.ru/en/events/5862\"\u003ePiterPy\u003c/a\u003e. Finally, the next weekend I was in Rome for the \u003ca href=\"https://mvp.microsoft.com\"\u003eWestern Europe Microsoft MVP Community Day\u003c/a\u003e. In the meantime several Channel 9 TecHeroes episodes were due for release. This was of course super exciting. And challenging.\u003c/p\u003e","title":"My Crazy Speaking Month"},{"content":"Today I released Eve 0.6.2. It includes many fixes and improvements over the previous releases. Areas addressed are CORS management, soft deletes, token authentication, oplog, data validation, and others. Please see the changelog for details.\nWork on v0.7 is also ongoing. It will include new features such as support for the MongoDB Aggregation Framework (docs) and a few breaking changes, so you might want to check it out in advance.\nSpecial thanks to Arnau Orriols, Cyril Bonnard, Hamdy, Luca Di Gaspero, Manquer, Nick Park, Patrick Decat, Prayag Verma, Ralph Smith, Stratos Gerakakis, Valerie Coffman and Wei Guan who contributed to this release.\n","permalink":"https://nicolaiarocci.com/eve-rest-api-framework-v0-6-2-is-out/","summary":"\u003cp\u003eToday I released \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e 0.6.2. It includes many fixes and improvements over the previous releases. Areas addressed are CORS management, soft deletes, token authentication, oplog, data validation, and others. Please see the \u003ca href=\"http://python-eve.org/changelog\"\u003echangelog\u003c/a\u003e for details.\u003c/p\u003e\n\u003cp\u003eWork on v0.7 is also ongoing. It will include new features such as support for the MongoDB Aggregation Framework (\u003ca href=\"http://python-eve.org/features.html#mongodb-aggregation-framework\"\u003edocs\u003c/a\u003e) and a few breaking changes, so you might want to check it out in advance.\u003c/p\u003e\n\u003cp\u003eSpecial thanks to Arnau Orriols, Cyril Bonnard, Hamdy, Luca Di Gaspero, Manquer, Nick Park, Patrick Decat, Prayag Verma, Ralph Smith, Stratos Gerakakis, Valerie Coffman and Wei Guan who contributed to this release.\u003c/p\u003e","title":"Eve REST API Framework v0.6.2 is out"},{"content":"There is a new episode up at Channel9 TecHeroes. It is called Real Life .NET Cross Platform and it is about developing production-ready, cross-platform applications with today’s .NET. In the interview we talk about SimpleCache, an asynchronous, permanent and cross-platform key-value object cache powered by SQLite3. The project is still a work in progress so there is no NuGet package available yet, but it is quite usable already. The talk slides are also available.\n","permalink":"https://nicolaiarocci.com/real-life-net-cross-platform/","summary":"\u003cp\u003eThere is a new episode up at Channel9 TecHeroes. It is called \u003ca href=\"https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-Real-Life-Net-Cross-Platform\"\u003eReal Life .NET Cross Platform\u003c/a\u003e and it is about developing production-ready, cross-platform applications with today’s .NET. In the interview we talk about \u003ca href=\"https://github.com/CIR2000/Amica.vNext.SimpleCache\"\u003eSimpleCache\u003c/a\u003e, an asynchronous, permanent and cross-platform key-value object cache powered by SQLite3. The project is still a work in progress so there is no NuGet package available yet, but it is quite usable already. The \u003ca href=\"https://speakerdeck.com/nicola/real-life-net-cross-platform\"\u003etalk slides\u003c/a\u003e are also available.\u003c/p\u003e","title":"Real Life .NET Cross Platform"},{"content":"I was recently interviewed at Channel 9 TecHeroes. Topic was CoderDojo, the network of free computer programming clubs for young people. The show is run by Microsoft Italy, so the interview is in Italian. Enjoy the show.\n","permalink":"https://nicolaiarocci.com/my-coderdojo-interview-at-chennel-9-techeroes/","summary":"\u003cp\u003eI was recently interviewed at Channel 9 TecHeroes. Topic was CoderDojo, the network of free computer programming clubs for young people. The show is run by Microsoft Italy, so the interview is in Italian. \u003ca href=\"https://channel9.msdn.com/Shows/TecHeroes/TecHeroes-CoderDojo-Coding-Club-for-Kids\"\u003eEnjoy the show\u003c/a\u003e.\u003c/p\u003e","title":"CoderDojo interview at Channel 9"},{"content":"A few hours ago I was notified that I have been awarded with the Microsoft MVP Award for Development Technologies.\nThis came totally unexpected. Especially so considering that during the last few years I have been splitting my time between Microsoft and other open source technologies. My public work has mostly been on Python and MongoDB. Yes I also released .NET open source projects in the meantime (more are coming soon) and yes, I wrote a few articles here and on the MSDN Blog, attended Microsoft events and did interviews. But really, I did not expect these activities to have an impact. This is probably why only a couple minutes from learning about the award I was suffering Impostor Syndrome symptoms.\nNow however, as I ponder on the whole issue a little bit, I start to realise how this could probably make (at least some sort of) sense. New Microsoft has been eager to catalyse attention and interest from the open source community and, in a broader sense, from people not yet accustomed to the brand. In light of this, people who have been active in communities other than Microsoft’s and have also been exposed to different technologies, mindsets and approaches to common IT problems could indeed offer some value. Or at least that’s how I am reading it right now.\nSo a new chapter is unfolding in my twenty-five years long love/hate relationship with Microsoft. It is my intent to live up to this award, for which I am very grateful.\n","permalink":"https://nicolaiarocci.com/look-mum-im-an-mvp/","summary":"\u003cp\u003eA few hours ago I was notified that I have been awarded with the Microsoft MVP Award for Development Technologies.\u003c/p\u003e\n\u003cp\u003eThis came totally unexpected. Especially so considering that during the last few years I have been splitting my time between Microsoft and other open source technologies. My public work has mostly been on Python and MongoDB. Yes I also released .NET open source projects in the meantime (more are coming soon) and yes, I wrote a few articles here and on the MSDN Blog, attended Microsoft events and did interviews. But really, I did not expect these activities to have an impact. This is probably why only a couple minutes from learning about the award I was suffering Impostor Syndrome symptoms.\u003c/p\u003e","title":"Look mum, I’m a MVP"},{"content":"A new version of Eve, the REST API framework for Humans, has been released today. Following the 0.6 milestone released one month ago, v0.6.1 introduces some fixes and few new important features. Upgrade is strongly encouraged. As always, a changelog with full list of updates is available.\n","permalink":"https://nicolaiarocci.com/eve-0-6-1-has-been-released/","summary":"\u003cp\u003eA new version of \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e, the REST API framework for Humans, has been released today. Following the 0.6 milestone released one month ago, v0.6.1 introduces some fixes and few new important features. Upgrade is strongly encouraged. As always, a \u003ca href=\"http://python-eve.org/changelog#version-0-6-1\"\u003echangelog\u003c/a\u003e with full list of updates is available.\u003c/p\u003e","title":"Eve 0.6.1 has been released"},{"content":"The slides of my talk at Percona Live 2015 (Amsterdam) are online. It was titled “MongoDB and REST APIs a Match Made in Heaven” and it was meant as an introduction to Mongo, REST principles and the Eve python framework.\nOverall it has been a pleasant experience, although I found that splitting 300 attendees through seven concurrent tracks ultimately led to too much fragmentation. People often found themselves with 2-3 interesting talks all happening simultaneously, and just had to pick one.\nI could only stay one day so I missed all side events, speakers dinner included, which was a bummer.\n","permalink":"https://nicolaiarocci.com/my-talk-at-percona-live-2015/","summary":"\u003cp\u003eThe slides of my talk at Percona Live 2015 (Amsterdam) are \u003ca href=\"https://speakerdeck.com/nicola/mongodb-and-rest-apis-a-match-made-in-heaven\"\u003eonline\u003c/a\u003e. It was titled “MongoDB and REST APIs a Match Made in Heaven” and it was meant as an introduction to Mongo, REST principles and the Eve python framework.\u003c/p\u003e\n\u003cp\u003eOverall it has been a pleasant experience, although I found that splitting 300 attendees through seven concurrent tracks ultimately led to too much fragmentation. People often found themselves with 2-3 interesting talks all happening simultaneously, and just had to pick one.\u003c/p\u003e","title":"My talk at Percona Live 2015"},{"content":"On Stack Overflow and the Eve mailing list, but also in my mailbox and even on Twitter, I get a lot of enquiries on how to build custom endpoints within a Eve-powered RESTful application. Now, since within Eve all endpoints are fully customizable, what they really mean is:\nHow do I setup endpoints without any binding to a data entity, just connected to a custom method?\nThey would like to call something like /mycustomendpoint and get the response from a method they have defined somewhere in the Python sources. The standard endpoint-entity mapping provided by Eve covers 90% of their needs, but sometimes they just need endpoints that have nothing to do with data entities.\nThis is very easy to achieve. I’m writing it down so I can point people to this post in the future.\nEve is Flask Eve is a Flask application and I really mean it since it is, in fact, a Flask subclass. Eve adds out-of-the-box RESTful capabilities to the Flask micro-framework. Most of the time you will be happy with just Eve’s own features but remember, the full Flask (and Werkzeug at a lower level) features set is also part of your arsenal.\nWhatever you can do with Flask, you can do with Eve\nSo yes, of course you can easily set some functions to be invoked when a custom endpoint is hit with a request. The following snippet is a slightly modified version of Flask’s very own Quickstart tutorial:\nBy decorating the hello_world method with the route decorator we added a new endpoint to the application. Each time a request to /hello comes in, it will be routed to our custom method. Of course the regular API endpoints (either defined in settings.py, passed as a dict at launch, or registered live by calling the register_resource method) will also be available.\nIf you have an Eve authentication class securing regular API endpoints, you can apply it to your custom endpoint too. Just add a requires_auth decorator:\nSay that you saved the above snippet as run.py and also have your RESTful endpoints properly configured. Launch the script:\nYou can now point your browser to http://localhost:5000/hello/ and enjoy the application greeting. Or you can consume any other configured API endpoint.\nAs all of Flask features are at your fingertips you might as well opt for registering a blueprint, which is what the awesome Eve-Docs extension is doing in order to provide a static HTML /docs endpoint on top of any Eve powered API.\n","permalink":"https://nicolaiarocci.com/building-custom-endpoint-handlers-with-eve/","summary":"\u003cp\u003eOn \u003ca href=\"https://stackoverflow.com/questions/24134383/servicing-html-requests-with-eve/\"\u003eStack Overflow\u003c/a\u003e and the Eve \u003ca href=\"https://groups.google.com/forum/?hl=en#!topic/python-eve/LM9kZkgq3vA\"\u003emailing list\u003c/a\u003e, but also in my mailbox and even on Twitter, I get a lot of enquiries on how to build custom endpoints within a Eve-powered RESTful application. Now, since within Eve all endpoints are fully customizable, what they really mean is:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHow do I setup endpoints without any binding to a data entity, just connected to a custom method?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThey would like to call something like \u003ccode\u003e/mycustomendpoint\u003c/code\u003e and get the response from a method they have defined somewhere in the Python sources. The standard endpoint-entity mapping provided by Eve covers 90% of their needs, but sometimes they just need endpoints that have nothing to do with data entities.\u003c/p\u003e","title":"Custom endpoint handlers with Eve"},{"content":"FatturaElettronicaPA has just been updated to v0.1.4. With this release invoice bodies (FatturaElettronicaBody items) are also validated. As always, you can install the package directly from NuGet. See the original post for more info. Also don’t forget to check the related projects.\nUpdate: v0.1.6 has also been released.\n","permalink":"https://nicolaiarocci.com/fatturaelettronicapa-for-net-has-been-updated/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/FatturaElettronicaPA/FatturaElettronicaPA\"\u003eFatturaElettronicaPA\u003c/a\u003e has just been updated to v0.1.4. With this release invoice bodies (\u003ccode\u003eFatturaElettronicaBody\u003c/code\u003e items) are also validated. As always, you can install the package directly from \u003ca href=\"https://www.nuget.org/packages/FatturaElettronicaPA/\"\u003eNuGet\u003c/a\u003e. See the \u003ca href=\"http://nicolaiarocci.com/fattura-elettronica-open-source/\"\u003eoriginal post\u003c/a\u003e for more info. Also don’t forget to check the \u003ca href=\"https://github.com/FatturaElettronicaPA\"\u003erelated projects\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eUpdate: v0.1.6 has also been released.\u003c/p\u003e","title":"FatturaElettronicaPA for .NET has been updated"},{"content":"A few days ago Cerberus 0.9 was released. It includes a bunch of new cool features, let’s browse through some of them.\nCollection rules First up is the new set of anyof, allof, noneof and oneof validation rules. anyof allows you to list multiple sets of rules to validate against. The field will be considered valid if it validates against one set in the list. For example, to verify that a property is a number between 0 and 10 or 100 and 110, you could do the following:\n\u0026gt;\u0026gt;\u0026gt; schema = { ... 'prop1': { ... 'type': 'number', ... 'anyof': [ ... {'min': 0, 'max': 10}, ... {'min': 100, 'max': 110} ... ... ] ... } ... } \u0026gt;\u0026gt;\u0026gt; doc = {'prop1': 5} \u0026gt;\u0026gt;\u0026gt; v.validate(document, schema) True \u0026gt;\u0026gt;\u0026gt; doc = {'prop1': 105} \u0026gt;\u0026gt;\u0026gt; v.validate(document, schema) True \u0026gt;\u0026gt;\u0026gt; doc = {'prop1': 55} \u0026gt;\u0026gt;\u0026gt; v.validate(document, schema) False allof is the same as anyof, except that all rule collections in the list must validate. Same pattern applies to noneof (no rule in collection must validate) and oneof (only one rule in collection must validate).\nType coercion Type coercion allows you to apply a callable to a value before any other validators run. The return value of the callable replaces the new value in the document. This can be used to convert values or sanitize data before it is validated.\n\u0026gt;\u0026gt;\u0026gt; v = Validator({'amount': {'type': 'integer'}}) \u0026gt;\u0026gt;\u0026gt; v.validate({'amount': '1'}) False \u0026gt;\u0026gt;\u0026gt; v = Validator({ ... 'amount': { ... 'type': 'integer', ... 'coerce': int ... } ... }) \u0026gt;\u0026gt;\u0026gt; v.validate({'amount': '1'}) True \u0026gt;\u0026gt;\u0026gt; v.document {'amount': 1} \u0026gt;\u0026gt;\u0026gt; to_bool = lambda v: v.lower() in ['true', '1'] \u0026gt;\u0026gt;\u0026gt; v = Validator({ ... 'flag': { ... 'type': 'boolean', ... 'coerce': to_bool ... } ... }) \u0026gt;\u0026gt;\u0026gt; v.validate({'flag': 'true'}) True \u0026gt;\u0026gt;\u0026gt; v.document {'flag': True} Properties (keys) validation propertyschema is the counterpart to valueschema (also new, it replaces the now deprecated keyschema) and validates the keys of a dictionary.\n\u0026gt;\u0026gt;\u0026gt; schema = 'a_dict': { ... 'type': 'dict', ... 'propertyschema': { ... 'type': 'string', ... 'regex': '[a-z]+' ... } ... } \u0026gt;\u0026gt;\u0026gt; document = {'a_dict': {'key': 'value'}} \u0026gt;\u0026gt;\u0026gt; v.validate(document, schema) True \u0026gt;\u0026gt;\u0026gt; document = {'a_dict': {'KEY': 'value'}} \u0026gt;\u0026gt;\u0026gt; v.validate(document, schema) False List of types The type rule can now be a list of types, to allow for different type of values for the field.\n\u0026gt;\u0026gt;\u0026gt; v = Validator({ ... 'quotes': { ... 'type': ['string', 'list'] ... } ... }) \u0026gt;\u0026gt;\u0026gt; v.validate({'quotes': 'Hello world!'}) True \u0026gt;\u0026gt;\u0026gt; v.validate({'quotes': ['Do not disturb my circles!', ... 'Heureka!']}) True \u0026gt;\u0026gt;\u0026gt; v = Validator({ ... 'quotes': { ... 'type': ['string', 'list'], ... 'schema': {'type': 'string'} ... } ... }) \u0026gt;\u0026gt;\u0026gt; v.validate({'quotes': 'Hello world!'}) True \u0026gt;\u0026gt;\u0026gt; v.validate({'quotes': [1, 'Heureka!']}) False \u0026gt;\u0026gt;\u0026gt; v.errors {'quotes': {0: 'must be of string type'}} And there is more so make sure you check the changelog before upgrading. No breaking changes but there’s at least one deprecation, as mentioned.\nFun fact: Cerberus is currently getting 3x the downloads of his sister project Eve, the REST API Framework for which the tool was originally conceived. Interesting if you consider that Eve is featuring 10x the GitHub stars. Fun, but not really surprising since Cerberus probably has a broader audience.\nSpecial thanks to Frank Sachsenheim, Tobias Betz, Brett and C.D. Clark III for their valuable contributions to this release.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/cerberus-0-9-has-been-released/","summary":"\u003cp\u003eA few days ago \u003ca href=\"https://github.com/nicolaiarocci/cerberus\"\u003eCerberus 0.9\u003c/a\u003e was released. It includes a bunch of new cool features, let’s browse through some of them.\u003c/p\u003e\n\u003ch2 id=\"collection-rules\"\u003eCollection rules\u003c/h2\u003e\n\u003cp\u003eFirst up is the new set of \u003ccode\u003eanyof\u003c/code\u003e, \u003ccode\u003eallof\u003c/code\u003e, \u003ccode\u003enoneof\u003c/code\u003e and \u003ccode\u003eoneof\u003c/code\u003e validation rules. \u003ccode\u003eanyof\u003c/code\u003e allows you to list multiple sets of rules to validate against. The field will be considered valid if it validates against one set in the list. For example, to verify that a property is a number between 0 and 10 or 100 and 110, you could do the following:\u003c/p\u003e","title":"Cerberus 0.9 has been released"},{"content":"I spent the last couple days in Paris with a bunch of smart architects and developers who are about to deal with a complex Monolithic-to-Microservices architecture transition.\nOn my flight back to Italy I jotted down a few thoughts on the topic and then, this morning, the first thing that comes up on my newsfeed is Monolith First by Martin Fowler. Stunning, because the essay content totally resonates with my own notes, so much that it would perfectly serve as a recap for them.\nGoing directly to a microservices architecture is risky, so consider building a monolithic system first. Split to microservices when, and if, you need it.\nAnd also, perhaps more importantly:\nA more common approach is to start with a monolith and gradually peel off microservices at the edges. Such an approach can leave a substantial monolith at the heart of the microservices architecture, but with most new development occurring in the microservices while the monolith is relatively quiescent.\nI find it fascinating that there is a chance that my notes and the essay were written (by astral coincidence?) in the very same minutes.\n","permalink":"https://nicolaiarocci.com/monolith-vs-microservices/","summary":"\u003cp\u003eI spent the last couple days in Paris with a bunch of smart architects and developers who are about to deal with a complex Monolithic-to-Microservices architecture transition.\u003c/p\u003e\n\u003cp\u003eOn my flight back to Italy I jotted down a few thoughts on the topic and then, this morning, the first thing that comes up on my newsfeed is \u003ca href=\"http://martinfowler.com/bliki/MonolithFirst.html\"\u003eMonolith First\u003c/a\u003e by Martin Fowler. Stunning, because the essay content totally resonates with my own notes, so much that it would perfectly serve as a recap for them.\u003c/p\u003e","title":"Monolith vs Microservices"},{"content":"Steven Lowe piece on Composition vs. Inheritance is a must read. Just to wet your appetite, let me quote the opening paragraph:\nIn the beginning, there was no inheritance and no composition, only code. And the code was unwieldy, repetitive, blocky, unhappy, verbose, and tired. Copy and Paste were the primary mechanisms of code reuse. Procedures and functions were rare, newfangled gadgets viewed with suspicion. Calling a procedure was expensive! Separating pieces of code from the main logic caused confusion! It was a Dark Time.\n","permalink":"https://nicolaiarocci.com/composition-vs-inheritance-how-to-choose/","summary":"\u003cp\u003eSteven Lowe piece on \u003ca href=\"http://www.thoughtworks.com/insights/blog/composition-vs-inheritance-how-choose\"\u003eComposition vs. Inheritance\u003c/a\u003e is a must read. Just to wet your appetite, let me quote the opening paragraph:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn the beginning, there was no inheritance and no composition, only code. And the code was unwieldy, repetitive, blocky, unhappy, verbose, and tired. Copy and Paste were the primary mechanisms of code reuse. Procedures and functions were rare, newfangled gadgets viewed with suspicion. Calling a procedure was expensive! Separating pieces of code from the main logic caused confusion! It was a Dark Time.\u003c/p\u003e","title":"Composition vs. Inheritance: How to Choose?"},{"content":"this post is about an all-Italian open source release, so it’s going to be in Italian\nIl progetto Fattura Elettronica Open Source si è arricchito di un nuovo strumento: Web Services. Il namespace FatturaElettronicaPA.WebServices raccoglie una serie di client C# che consentono di consultare i Web Service per la Fattura Elettronica messi a disposizione dalla Pubblica Amministrazione.\nSono disegnati in maniera da esporre tutti la stessa interfaccia ed essere al tempo stesso semplici e leggeri. Al momento lavorano in modalità sincrona ma l’obiettivo è di renderli tutti asincroni.\nCome usare i Web Service Prendiamo per esempio il Web Service che consente di convalidare un Codice Univoco di Fatturazione e recuperare le informazioni relative all’ufficio:\nvar ws = new CodiceUnivocoFatturazioneWebService() // Authorization Id ricevuto dall'ente. ws.AuthId = \u0026quot;\u0026lt;auth Id\u0026gt;\u0026quot;; // Codice univoco dell'ufficio che ci interessa ws.CodiceUfficio = \u0026quot;KN3VNW\u0026quot;; ws.PerformRequest(); if (ws.Ufficio == null) return; // \u0026quot;Ravenna\u0026quot; Console.WriteLine(ws.Ufficio.Comune); Molto semplice. Gli altri WebService (sono sette in tutto) operano secondo lo stesso schema. Ricordo che per l’utilizzo dei Web Services della Pubblica Amministrazione è necessario richiedere una specifica autorizzazione. L’Authorization Id è gratuito ed il rilascio è immediato, ma bisogna compilare un apposito questionario.\nInstallazione FatturaElettronicaPA.WebServices è su NuGet quindi tutto quel che serve è eseguire:\nPM\u0026gt; Install-Package FatturaElettronicaPA.WebServices dalla Package Console, oppure usare il comando equivalente in Visual Studio.\nLa libreria è una portable class library e gira senza modifiche sui seguenti ambienti: .NET Framework 4.0 e superiori; Xamarin.iOS; Xamarin.Android; Windows Phone 8; Windows Store apps (Windows 8); Silverlight 5.0. Enjoy!\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-open-source-web-service-pa/","summary":"\u003cp\u003e\u003cem\u003ethis post is about an all-Italian open source release, so it’s going to be in Italian\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIl progetto \u003ca href=\"http://nicolaiarocci.com/fattura-elettronica-open-source/\"\u003eFattura Elettronica Open Source\u003c/a\u003e si è arricchito di un nuovo strumento: \u003ca href=\"https://github.com/FatturaElettronicaPA/FatturaElettronicaPA.WebServices\"\u003eWeb Services\u003c/a\u003e. Il namespace \u003ccode\u003eFatturaElettronicaPA.WebServices\u003c/code\u003e raccoglie una serie di client C# che consentono di consultare i Web Service per la Fattura Elettronica messi a disposizione dalla Pubblica Amministrazione.\u003c/p\u003e\n\u003cp\u003eSono disegnati in maniera da esporre tutti la stessa interfaccia ed essere al tempo stesso semplici e leggeri. Al momento lavorano in modalità sincrona ma l’obiettivo è di renderli tutti asincroni.\u003c/p\u003e","title":"Fattura Elettronica Open Source: Web Service PA"},{"content":"Last week I was in San Francisco for Build 2015, the annual conference event held by Microsoft and aimed toward software and web developers. Overall it has been a great experience. I especially enjoyed the opportunity to speak with Microsoft executives, Program Managers and developers about the new stuff they are cooking up and, in general, about that New Microsoft we all have been experiencing as of late (I have a guest post on MSDN Italy on that topic).\nIn this week TecHeroes episode I am interviewed along with my buddy Matteo Collina. At about 1m 20s in the episode Matteo and I share a few considerations on Open Source projects and technologies that really caught our attention at the conference, and of course on Microsoft in general. It is all in Italian by the way.\n","permalink":"https://nicolaiarocci.com/on-my-trip-to-microsoft-build-2015/","summary":"\u003cp\u003eLast week I was in San Francisco for Build 2015, the annual conference event held by Microsoft and aimed toward software and web developers. Overall it has been a great experience. I especially enjoyed the opportunity to speak with Microsoft executives, Program Managers and developers about the new stuff they are cooking up and, in general, about that New Microsoft we all have been experiencing as of late (I have a \u003ca href=\"http://nicolaiarocci.com/i-wrote-a-thing-about-new-microsoft/\"\u003eguest post\u003c/a\u003e on MSDN Italy on that topic).\u003c/p\u003e","title":"On my trip to Microsoft Build 2015"},{"content":"The second edition of the Little MongoDB Book Italian Edition is finally up. It is aligned to MongoDB 2.6 and includes a much needed introduction to the Aggregation Frameworks. Enjoy.\n","permalink":"https://nicolaiarocci.com/the-little-mongodb-book-2nd-italian-edition/","summary":"\u003cp\u003eThe second edition of the \u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\"\u003eLittle MongoDB Book Italian Edition\u003c/a\u003e is finally up. It is aligned to MongoDB 2.6 and includes a much needed introduction to the Aggregation Frameworks. Enjoy.\u003c/p\u003e","title":"The Little MongoDB Book 2nd Italian Edition"},{"content":"I have another guest post up at the official MSDN Team Blog. Titled F# Versus C#, it is an attempt at a gentle introduction to F# for the Italian C# developer.\n","permalink":"https://nicolaiarocci.com/f-vs-c/","summary":"\u003cp\u003eI have another guest post up at the official MSDN Team Blog. Titled \u003ca href=\"http://blogs.msdn.com/b/italy/archive/2015/04/17/f-vs-c.aspx\"\u003eF# Versus C#\u003c/a\u003e, it is an attempt at a gentle introduction to F# for the Italian C# developer.\u003c/p\u003e","title":"F# Vs C#"},{"content":"Fattura Elettronica Open Source has been updated to v0.1.3 a few days ago and is available on NuGet. Sources are on GitHub. It fixes a deserialization issue with the ReadXML method.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-open-source-update/","summary":"\u003cp\u003e\u003ca href=\"http://fatturaelettronicaopensource.org/\"\u003eFattura Elettronica Open Source\u003c/a\u003e has been updated to v0.1.3 a few days ago and is available on \u003ca href=\"https://www.nuget.org/packages/FatturaElettronicaPA/\"\u003eNuGet\u003c/a\u003e. Sources are on \u003ca href=\"https://github.com/FatturaElettronicaPA/FatturaElettronicaPA\"\u003eGitHub\u003c/a\u003e. It fixes a deserialization issue with the \u003ccode\u003eReadXML\u003c/code\u003e method.\u003c/p\u003e","title":"Fattura Elettronica Open Source Update"},{"content":"I was lucky enough be the first guest for the shiny new Talk Python To Me Podcast hosted by Michael Kennedy. In this episode we talk about Eve an my other open source releases, which gives us an excuse to touch on a variety of topics such as Polyglot Programming, New Microsoft and the .NET evolution, MongoDB and the Open Source eco-system as seen from the point of view of an old fart who has been spending most of his career in closed systems.\nMichael has a great lineup ready for the next episodes, so make sure you subscribe to his show. It is also available on iTunes.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/talk-python-to-me-podcast-episode-1-eve-restful-apis-for-humans/","summary":"\u003cp\u003eI was lucky enough be the first guest for the shiny new \u003ca href=\"http://www.talkpythontome.com\"\u003eTalk Python To Me Podcast\u003c/a\u003e hosted by Michael Kennedy. In this episode we talk about Eve an my other open source releases, which gives us an excuse to touch on a variety of topics such as Polyglot Programming, New Microsoft and the .NET evolution, MongoDB and the Open Source eco-system as seen from the point of view of an old fart who has been spending most of his career in closed systems.\u003c/p\u003e","title":"Talk Python To Me Podcast Episode #1: EVE RESTful APIs for Humans"},{"content":"Yesterday Cerberus 0.8.1 was released with a few little fixes, one of them being more a new feature than a fix really: sub-document fields can now be set as field dependencies by using a ‘dotted’ notation.\nSo, suppose we set the following validation schema:\nschema = { 'test_field': { 'dependencies': [ 'a_dict.foo', 'a_dict.bar' ] }, 'a_dict': { 'type': 'dict', 'schema': { 'foo': {'type': 'string'}, 'bar': {'type': 'string'} } } } Then, we can validate a document like this:\n\u0026gt;\u0026gt;\u0026gt; v = Validator(schema) \u0026gt;\u0026gt;\u0026gt; document = { 'test_field': 'foobar', 'a_dict': {'foo': 'foo'} } \u0026gt;\u0026gt;\u0026gt; v.validate(document, schema) False \u0026gt;\u0026gt;\u0026gt; v.errors {'test_field': \u0026quot;field 'a_dict.bar' is required\u0026quot;} This release will not work with Eve 0.5.2 or less so if you want to use Cerberus 0.8.1 with Eve make sure you upgrade to Eve 0.5.3, released today. By the way, yesterday we hit 2K stargazers and 70 contributors on the Eve repository, quite the milestone!\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/new-releases-for-cerberus-and-eve/","summary":"\u003cp\u003eYesterday \u003ca href=\"https://github.com/nicolaiarocci/cerberus\"\u003eCerberus 0.8.1\u003c/a\u003e was released with a few little \u003ca href=\"https://github.com/nicolaiarocci/cerberus/blob/master/CHANGES\"\u003efixes\u003c/a\u003e, one of them being more a new feature than a fix really: sub-document fields can now be set as field dependencies by using a ‘dotted’ notation.\u003c/p\u003e\n\u003cp\u003eSo, suppose we set the following validation schema:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eschema = {\n  'test_field': {\n    'dependencies': [\n      'a_dict.foo', \n      'a_dict.bar'\n    ]\n  },\n  'a_dict': {\n    'type': 'dict',\n      'schema': {\n        'foo': {'type': 'string'},\n        'bar': {'type': 'string'}\n      }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThen, we can validate a document like this:\u003c/p\u003e","title":"New Releases for Cerberus and Eve"},{"content":"Today, the New York Times’ SundayReview features a great column by Matthew B. Crawford: The Cost of Paying Attention.\nAttention is a resource; a person has only so much of it […] What if we saw attention in the same way that we saw air or water, as a valuable resource that we hold in common? Perhaps, if we could envision an “attentional commons,” then we could figure out how to protect it.\n","permalink":"https://nicolaiarocci.com/attention-is-a-resource/","summary":"\u003cp\u003eToday, the New York Times’ SundayReview features a great column by Matthew B. Crawford: \u003ca href=\"http://www.nytimes.com/2015/03/08/opinion/sunday/the-cost-of-paying-attention.html\"\u003eThe Cost of Paying Attention\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAttention is a resource; a person has only so much of it […] What if we saw attention in the same way that we saw air or water, as a valuable resource that we hold in common? Perhaps, if we could envision an “attentional commons,” then we could figure out how to protect it.\u003c/p\u003e","title":"Attention is a Resource"},{"content":"Sam Altman has a great short series on the development of superhuman machine intelligence (SMI). Machine intelligence, Part 1 is on why machine intelligence is something that we should be afraid of while Part 2 is on what we should do about it. And then there’s Technology predictions, the perfect closer.\n","permalink":"https://nicolaiarocci.com/sam-altman-on-machine-intelligence/","summary":"\u003cp\u003eSam Altman has a great short series on the development of superhuman machine intelligence (SMI). \u003ca href=\"http://blog.samaltman.com/machine-intelligence-part-1\"\u003eMachine intelligence, Part 1\u003c/a\u003e is on why machine intelligence is something that we should be afraid of while \u003ca href=\"http://blog.samaltman.com/machine-intelligence-part-2\"\u003ePart 2\u003c/a\u003e is on what we should do about it. And then there’s \u003ca href=\"http://blog.samaltman.com/technology-predictions\"\u003eTechnology predictions\u003c/a\u003e, the perfect closer.\u003c/p\u003e","title":"Sam Altman on Machine Intelligence"},{"content":"I have a guest post up at the official Italian MSDN Team Blog. It’s about the new Microsoft I met last Wednesday at the Azure Open Day in Milan.\n","permalink":"https://nicolaiarocci.com/i-wrote-a-thing-about-new-microsoft/","summary":"\u003cp\u003eI have a guest post up at the official Italian \u003ca href=\"http://blogs.msdn.com/b/italy/archive/2015/03/03/guest-post-una-giornata-all-azure-open-day-in-compagnia-di-una-nuova-microsoft.aspx\"\u003eMSDN Team Blog\u003c/a\u003e. It’s about the new Microsoft I met last Wednesday at the Azure Open Day in Milan.\u003c/p\u003e","title":"I wrote a thing about New Microsoft"},{"content":"Today must read is Nine Things to Expect from HTTP/2, brewed for us by one of the HTTP/2 core designers, Mark Nottingham. Ten well spent minutes of your time.\n","permalink":"https://nicolaiarocci.com/so-why-exactly-is-http2-so-cool/","summary":"\u003cp\u003eToday must read is \u003ca href=\"https://www.mnot.net/blog/2014/01/30/http2_expectations\"\u003eNine Things to Expect from HTTP/2\u003c/a\u003e, brewed for us by one of the HTTP/2 core designers, Mark Nottingham. Ten well spent minutes of your time.\u003c/p\u003e","title":"So Why Exactly Is HTTP/2 So Cool?"},{"content":"Eve 0.5.2 has just been released with a bunch of interesting fixes and documentation updates. See the changelog for details.\n","permalink":"https://nicolaiarocci.com/eve-0-5-2-giulia-is-out/","summary":"\u003cp\u003e\u003ca href=\"https://pypi.python.org/pypi/Eve\"\u003eEve 0.5.2\u003c/a\u003e has just been released with a bunch of interesting fixes and documentation updates. See the \u003ca href=\"http://python-eve.org/changelog#version-0-5-2\"\u003echangelog\u003c/a\u003e for details.\u003c/p\u003e","title":"Eve 0.5.2 ‘Giulia’ is Out"},{"content":"If you have time to read just one thing today, then make sure it is March To Triumph As A Mentor, an essay on Mentoring by A. Jesse Jiryu Davis.\n","permalink":"https://nicolaiarocci.com/march-triumph-mentor/","summary":"\u003cp\u003eIf you have time to read just one thing today, then make sure it is \u003ca href=\"http://emptysqua.re/blog/mentoring/\"\u003eMarch To Triumph As A Mentor\u003c/a\u003e, an essay on Mentoring by A. Jesse Jiryu Davis.\u003c/p\u003e","title":"March To Triumph As A Mentor"},{"content":"this post is about an all-italian open source release, so it’s going to be in italian\nFatturaElettronicaPA è un nuovo progetto open source che ho rilasciato qualche giorno fa assieme alla mia azienda. Si tratta di una libreria C# che permette di leggere, scrivere e convalidare le Fatture Elettroniche aderenti alle specifiche del sistema di interscambio della Pubblica Amministrazione.\nRilasciata come Portable Class Library, FatturaElettronicaPA gira senza modifiche sui seguenti ambienti:\n.NET Framework 4.0 e superiori, Xamarin.iOS Xamarin.Android Windows Phone 8 Windows Store apps (Windows 8) Silverlight 5.0 Come usare la Fattura Elettronica PA Usarla è molto semplice. Prima creiamo una istanza di FatturaElettronica:\n// instanzia una nuova fattura elettronica FatturaElettronica fattura = new FatturaElettronica(); Quindi leggiamo da un file standard SDI. E’ sufficiente passare un XmlReader attivo al metodo FatturaElettronica.ReadXml():\n// lettura da file XML compatibile con formato SDI1.1 var s = new XmlReaderSettings {IgnoreWhitespace = true}; var r = XmlReader.Create(\u0026quot;IT01234567890_11111.xml\u0026quot;, s); fattura.ReadXml(r); La fattura si aggiorna cambiando i valori delle sue proprietà. Qui aggiorniamo il regime fiscale del mittente. Basterebbe una sola riga di codice; usiamo tre linee per una migliore leggibilità:\n// modifica valore var header = fattura.FatturaElettronicaHeader var prestatore = header.CedentePrestatore prestatore.DatiAnagrafici.RegimeFiscale = \u0026quot;RF11\u0026quot;; Convalidare una fattura è un gioco da ragazzi. La proprietà Error conterrà tutti gli errori eventualmente riscontrati.\n// convalida documento if (!fattura.IsValid) { Debug.WriteLine(fattura.Error); } Stampiano la fattura come flusso JSON:\n// serializzazione JSON var json = fattura.ToJson(JsonOptions.Indented); Debug.WriteLine(json); Infine, salvarla su file standard SDI è solo questione di aprire un file con XmlWriter e passarlo al metodo WriteXml:\n// serializzazione XML secondo lo standard SDI 1.1 var s = new XmlWriterSettings { Indent = true }; XmlWriter w; var fileName = \u0026quot;IT01234567890_11111.xml\u0026quot; using (w = XmlWriter.Create(fileName, s)) { fattura.WriteXml(w); } Installazione FatturaElettronicaPA è un package NuGet. Per installarlo è sufficiente usare la Package Console manualmente:\nPM\u0026gt; Install-Package FatturaElettronicaPA oppure usare la interfaccia di Visual Studio.\nProgetti satellite FatturaElettronica deriva a sua volta da BusinessObjects, una classe che implementa la (de)serializzazione e la convalida base.\nFatturaElettronica.Forms è invece una libreria WinForms che provvede una UI per l’editing e la segnalazione degli errori di convalida. Al momento supporta l’intestazione (header) e viene già usato in produzione nel nostro software gestionale:\nIn futuro sarebbe utile aggiungere supporto per la visualizzazione e convalida del corpo fattura (Body).\nFatturaElettronica.WebServices consente di interrogare i diversi Web Service della Pubblica Amministrazione dedicati alla fatturazione elettronica. Tutti i progetti relativi alla fatturazione elettronica sono disponibili su GitHub.\nPerché la Fattura Elettronica Open Source? Dallo scorso 6 Giugno 2014 i Ministeri, le Agenzie fiscali, le scuole e gli enti nazionali di previdenza non accettano più fatture emesse o trasmesse in forma cartacea. A partire dal 31 marzo 2015 la stessa disposizione è estesa agli altri Enti a carattere Nazionale ed a tutte le amministrazioni locali.\nL’adozione delle fatture elettroniche è in pieno svolgimento e non crediamo di sbagliarci immaginando un futuro non troppo remoto in cui questo formato verrà adottato (per imposizione, come ci pare probabile, o per comodità) anche dal settore privato, diventando di fatto lo standard di riferimento.\nNoi ci siamo trovati a dover implementare il supporto per la fatturazione elettronica per gli utenti di Amica 10, il nostro software gestionale. Abbiamo pensato che questa fosse una buona occasione per rendere libero il nostro lavoro così che chiunque possa utilizzarlo per mettersi rapidamente al passo e magari decidere di dare una mano in uno dei tanti modi possibili: segnalando problemi, contribuendo direttamente al progetto, o semplicemente parlandone in giro.\nIl software è migliore quando è condiviso.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/fattura-elettronica-open-source/","summary":"\u003cp\u003e\u003cem\u003ethis post is about an all-italian open source release, so it’s going to be in italian\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/FatturaElettronicaPA\"\u003eFatturaElettronicaPA\u003c/a\u003e è un nuovo progetto open source che ho rilasciato qualche giorno fa assieme alla \u003ca href=\"http://gestionaleamica.com\"\u003emia azienda\u003c/a\u003e. Si tratta di una libreria C# che permette di leggere, scrivere e convalidare le Fatture Elettroniche aderenti alle specifiche del \u003ca href=\"http://www.fatturapa.gov.it/export/fatturazione/sdi/Specifiche_tecniche_del_formato_FatturaPA_V1.1.pdf\"\u003esistema di interscambio\u003c/a\u003e della Pubblica Amministrazione.\u003c/p\u003e","title":"Fattura Elettronica Open Source"},{"content":"Tom Christie has some very good things to say on how to successfully maintain an open source project without losing sanity.\nTruth one: There are, and will always be, a non-finite number of possible valid issues to address. Your code can always be better polished, your APIs better defined, and your project more fully featured. Your documentation can always be better. The ecosystem within which your project lives is constantly evolving. You will never run out of things you could work on. Ever.\nTruth two: You have finite resources. Damn.\nIf you are an open source maintainer, contributor or even a user do yourself a favour and read what Tom has to say on the subject. Tom is the creator and maintainer of the Django REST Framework, a hugely successful open source project so he really knows what he’s talking about. And for what is worth, his conclusions mirror mines.\nOn a completely unrelated note, I met Tom at EuroPython 2014. He was so nice to come and meet me minutes after I was done delivering my REST API for Humans talk. Good vibes.\n","permalink":"https://nicolaiarocci.com/sustainable-open-source-management/","summary":"\u003cp\u003eTom Christie has some very good things to say on how to successfully maintain an open source project without losing sanity.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTruth one: There are, and will always be, a non-finite number of possible valid issues to address. Your code can always be better polished, your APIs better defined, and your project more fully featured. Your documentation can always be better. The ecosystem within which your project lives is constantly evolving. You will never run out of things you could work on. Ever.\u003c/p\u003e","title":"On Sustainable Open Source Management"},{"content":"Flask-Sentinel is a OAuth2 Server implementation of the Resource Owner Password Credentials Grant pattern described in Section 1.3.3 of RFC 6749. It is powered by Flask-Oauthlib, Redis and MongoDB and is bundled as a Flask extension so it can be used to add OAuth2 capabilities to an existing application.\nSo what is the Resource Owner Password Credentials Grant pattern? According to the official RFC:\nThe resource owner password credentials (i.e., username and password) can be used directly as an authorization grant to obtain an access token. The credentials should only be used when there is a high degree of trust between the resource owner and the client (e.g., the client is part of the device operating system or a highly privileged application).\nA typical use case would be when the remote API maintainer controls the client application. Say that you have a REST API being consumed by your own iOS, Android, WinPhone, desktop or web applications. Users register to your service by creating their accounts. Then, they consume the service using your applications.\nEven though this grant type requires direct client access to the resource owner credentials, the resource owner credentials are used for a single request and are exchanged for an access token. This grant type can eliminate the need for the client to store the resource owner credentials for future use, by exchanging the credentials with a long-lived access token or refresh token.\nSo let’s get back at the proprietary client scenario. The user has just installed the application on his/her device. On first run he/she is asked to provide his/her username and password. These are sent to the OAuth2 server through a SSL/TLS encrypted channel. If the user is registered for the service and the client id, which has also been sent along with the user credentials, is recognised, then the server sends back a valid access token. Otherwise responds with a 401 Unhautorized.\nFrom now on the application will only be using the access token for all requests until, eventually, the token expires. If that happens, the cycle repeats. Please note that in this scenario the client does not need to (and probably should not) store the username and/or password on the local cache. The User Credentials pattern usually relies on long lived tokens so asking again for username and password is not a big deal (you could also opt for permanent, revokable tokens.)\nFlask-Sentinel provides two endpoints: one for token creation which defaults to /oauth/token and is consumed by clients, and another for users and clients management, accessible at /oauth/management:\nNote that the password is hashed and salted on the server, so no plain password is stored on either sides of the channel.\nOnly existing users and recognised clients will be provided an access token. A typical token request would be as follows:\n$ curl -k -X POST -d \\ \u0026quot;client_id=9qFbZD4udTzFVYo0u5UzkZX9iuzbdcJDRAquTfRk\u0026amp; grant_type=password\u0026amp; username=jonas\u0026amp; password=pass\u0026quot; \\ \u0026lt;api_url\u0026gt;/oauth/token And the response would be like so:\n{ \u0026quot;access_token\u0026quot;: \u0026quot;NYODXSR8KalTPnWUib47t5E8Pi8mo4\u0026quot;, \u0026quot;token_type\u0026quot;: \u0026quot;Bearer\u0026quot;, \u0026quot;refresh_token\u0026quot;: \u0026quot;s6L6OPL2bnKSRSbgQM3g0wbFkJB4ML\u0026quot;, \u0026quot;scope\u0026quot;: \u0026quot;\u0026quot; } The client can now use the access token to access protected API endpoints:\n$ curl -k -H \\ \u0026quot;Authorization:Bearer NYODXSR8KalTPnWUib47t5E8Pi8mo4\u0026quot; \\ \u0026lt;api_url\u0026gt;/endpoint 200 OK There are a number of configuration options of course, for example you can change the url of token and management endpoints, set token expiration, setup database connection, stuff like that. Redis is used to store active access tokens, allows for optimal performance.\nWhile you can use Flask-Sentinel to extend an existing API, you might want to instance it as a stand-alone Flask application to optimize for scalability. You would end up with a distributed network of three different (micro)services: the OAuth2 server, the resouces API with protected endpoints as needed, and the Redis instance bridging the two. Check out the project page on GitHub for details.\nOf course Flask-Sentinel integrates seamlessly with any Eve powered REST API. Check out the Eve-OAuth2 sample, a fork of the original Eve-Demo project with a couple protected endpoints and a static HTML page, also protected.\nThe project is very new and lacks a few little things, but I suspect it is already usable even at this stage. Enjoy!\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/a-sentinel-for-your-flask-applications/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/nicolaiarocci/flask-sentinel\"\u003eFlask-Sentinel\u003c/a\u003e is a OAuth2 Server implementation of the Resource Owner Password Credentials Grant pattern described in \u003ca href=\"http://tools.ietf.org/html/rfc6749#section-1.3.3\"\u003eSection 1.3.3 of RFC 6749\u003c/a\u003e. It is powered by Flask-Oauthlib, Redis and MongoDB and is bundled as a Flask extension so it can be used to add OAuth2 capabilities to an existing application.\u003c/p\u003e\n\u003cp\u003eSo what is the Resource Owner Password Credentials Grant pattern? According to the official RFC:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe resource owner password credentials (i.e., username and password) can be used directly as an authorization grant to obtain an access token. The credentials should only be used when there is a high degree of trust between the resource owner and the client (e.g., the client is part of the device operating system or a highly privileged application).\u003c/p\u003e","title":"How about a Sentinel for your Flask Application?"},{"content":"In spite of being a marketing spin and link bait, Heroku article on microservices does a pretty good job at explaining why microservices matter and, at a very high level, what challenges they pose.\nHowever, microservices aren’t a silver bullet, and they won’t make a sluggish IT organization fast. While individual services become more robust and less complex, the overall system takes on the many challenges of distributed systems at the network level. Despite their challenges, they’re here to stay because they map better than anything else to the software landscape of the future: parallel development, platform-as-a-service deployment, and ubiquitous use.\n","permalink":"https://nicolaiarocci.com/microservices-matter/","summary":"\u003cp\u003eIn spite of being a marketing spin and link bait, Heroku \u003ca href=\"https://blog.heroku.com/archives/2015/1/20/why_microservices_matter\"\u003earticle on microservices\u003c/a\u003e does a pretty good job at explaining why microservices matter and, at a very high level, what challenges they pose.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHowever, microservices aren’t a silver bullet, and they won’t make a sluggish IT organization fast. While individual services become more robust and less complex, the overall system takes on the many challenges of distributed systems at the network level. Despite their challenges, they’re here to stay because they map better than anything else to the software landscape of the future: parallel development, platform-as-a-service deployment, and ubiquitous use.\u003c/p\u003e","title":"Why Microservices Matter"},{"content":"I am not a big fan of top tens but 10 Tips for Better Pull Requests is well worth reading.\nA good Pull Request involves more than just some code. In most cases, there’s one or more reviewer(s) involved, who will have to review your Pull Request in order to evaluate whether it’s a good fit for inclusion in the code base. Not only must you produce good code, but you must also cater to the person(s) doing the review.\nHere’s a list of tips to make your Pull Request better. It isn’t exhaustive, but I think it addresses some of the more important aspects of creating a good Pull Request.\n","permalink":"https://nicolaiarocci.com/better-pull-requests/","summary":"\u003cp\u003eI am not a big fan of top tens but \u003ca href=\"http://blog.ploeh.dk/2015/01/15/10-tips-for-better-pull-requests/\"\u003e10 Tips for Better Pull Requests\u003c/a\u003e is well worth reading.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA good Pull Request involves more than just some code. In most cases, there’s one or more reviewer(s) involved, who will have to review your Pull Request in order to evaluate whether it’s a good fit for inclusion in the code base. Not only must you produce good code, but you must also cater to the person(s) doing the review.\u003c/p\u003e","title":"Better Pull Requests"},{"content":"Eve 0.5.1 was just released with a couple fixes to 0.5 (which was released earlier this week.) Don’t be surprised. Going forward I’m striving for a much faster release cycle, especially so when it comes to fixes.\n","permalink":"https://nicolaiarocci.com/eve-0-5-1-released/","summary":"\u003cp\u003e\u003ca href=\"https://pypi.python.org/pypi/Eve\"\u003eEve 0.5.1\u003c/a\u003e was just released with a \u003ca href=\"http://python-eve.org/changelog#version-0-5-1\"\u003ecouple fixes\u003c/a\u003e to 0.5 (which was released earlier this week.) Don’t be surprised. Going forward I’m striving for a much faster release cycle, especially so when it comes to fixes.\u003c/p\u003e","title":"Eve 0.5.1 Released"},{"content":"I wasn’t aware that The Internet’s Own Boy: The Story of Aaron Swartz is now available with a Creative Common license, free for everyone to enjoy.\n","permalink":"https://nicolaiarocci.com/internet-own-boy-aaron-swartz/","summary":"\u003cp\u003eI wasn’t aware that \u003ca href=\"https://www.youtube.com/watch?v=vXr-2hwTk58\"\u003eThe Internet’s Own Boy: The Story of Aaron Swartz\u003c/a\u003e is now available with a Creative Common license, free for everyone to enjoy.\u003c/p\u003e","title":"The Internet’s Own Boy"},{"content":"Powered by SQLAlchemy and good intentions, Eve-SQLAlchemy is an official Eve extension which allows to effortlessly build and deploy highly customizable, fully featured RESTful Web Services with SQL backends.\nAs with all Eve extensions, once installed with\n$ pip install eve-sqlalchemy using Eve-SQLAlchemy is very simple:\nfrom eve import Eve from eve_sqlalchemy import SQL app = Eve(data=SQL) app.run() On a fresh virtualenv (of course you are using virtualenvs, right?) the install will also setup Eve and all its dependencies for you. For a complete tutorial you can visit the Eve-SQLAlchemy Support Website.\nIf you have been following the Eve development you probably know that the original plan was to release SQL support within the Eve core, alongside with the native MongoDB layer. In fact, in a long rant on open source and code responsibility I took the chance to outline the path forward.\nHowever, if you check the discussion which spread in the comments below that post you can see how both my friend and fellow MongoDB Master Flavio and the main contributor to the sqlalchemy branch Andrew were suggesting that a plugin system for data layers might be more appropriate. Not coincidentally that was easy to accomplish since the Eve data layer system was designed precisely with that goal in mind, right from the start.\nSo, to make a long story short, in agreement with Andrew who volountereed for the task, we changed plans. He refactored the sqlalchemy branch into a separate repository… and then the official Eve SQL extension was born. This approach also allows the extension and Eve to develop asynchronously which is ideal for a faster release cycle.\nI like this setup so much that, if in time it shows to be as good as I think it will be, I will probably want to experiment with taking the MongoDB layer out of Eve core too. So with Eve 0.6 MongoDB support would still be preinstalled along with core (so nothing changes as first time user experience) but, being a separate package, users could easily switch to a different driver as they need, still keeping their Eve setup as light as possible.\nSo if you are willing to help with the development of a mature SQL driver please feel free to join Andrew and other contributors. Your help is more than welcome. Allow me thank them all individually, for the work they’ve been doing on the SQL code is absolutely amazing: Andrew Mleczko, Tomasz Jezierski (Tefnet), Bruce Frederiksen, Jacopo Sabbatini and Peter Zinng.\nGet Eve-SQLAlchemy v0.1 while it’s hot!\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/announcing-eve-sqlalchemy-the-official-sql-extension-for-the-eve-rest-framework/","summary":"\u003cp\u003ePowered by SQLAlchemy and good intentions, \u003ca href=\"https://github.com/RedTurtle/eve-sqlalchemy\"\u003eEve-SQLAlchemy\u003c/a\u003e is an official \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e extension which allows to effortlessly build and deploy highly customizable, fully featured RESTful Web Services with SQL backends.\u003c/p\u003e\n\u003cp\u003eAs with all Eve extensions, once installed with\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ pip install eve-sqlalchemy\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eusing Eve-SQLAlchemy is very simple:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efrom eve import Eve\nfrom eve_sqlalchemy import SQL\n\napp = Eve(data=SQL)\napp.run()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOn a fresh virtualenv (of course you are using virtualenvs, right?) the install will also setup Eve and all its dependencies for you. For a complete tutorial you can visit the Eve-SQLAlchemy \u003ca href=\"http://eve-sqlalchemy.readthedocs.org/\"\u003eSupport Website\u003c/a\u003e.\u003c/p\u003e","title":"Announcing Eve-SQLAlchemy the official SQL extension for the Eve REST Framework"},{"content":"Eve v0.5 was released today. Cerberus v0.8 only a few days ago. A whole lot of new features, changes and fixes are coming with these releases so make sure to check the official release post to gather all the news.\n","permalink":"https://nicolaiarocci.com/eve-0-5-released-today/","summary":"\u003cp\u003e\u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e v0.5 was released today. \u003ca href=\"https://github.com/nicolaiarocci/cerberus\"\u003eCerberus\u003c/a\u003e v0.8 only a few days ago. A whole lot of new features, changes and fixes are coming with these releases so make sure to check the \u003ca href=\"http://blog.python-eve.org/eve-05-released\"\u003eofficial release post\u003c/a\u003e to gather all the news.\u003c/p\u003e","title":"Eve 0.5 released today"},{"content":"A lot of servers have been including a JeSuisCharlie header with their responses. If you haven’t already, try with Charlie Hebdo site itself:\n$ curl -I charliehebdo.fr Date: Mon, 12 Jan 2015 15:56:13 GMT Content-Type: text/html; charset=iso-8859-1 Content-Length: 221 Connection: keep-alive Location: http://www.charliehebdo.fr/index.html Vary: Accept-Encoding X-Charlie-fr: Je suis toujours Charlie. X-Charlie-en: I am still Charlie. X-Charlie-es: Todavia soy Charlie. X-Charlie-de: Ich bin immer Charlie. X-Charlie-ro: Inca sunt Charlie. X-Charlie-cz: Jsem stale Charlie. I find this to be a great way for us techies to somehow contribute and show support for the ongoing anti-terrorism campaign. So if you feel like doing it here is a quick rundown on how to serve custom headers with your Eve-powered REST API. It is actually a very easy task to accomplish.\nEve provides its own set of callback hooks but since we don’t need fine-grained control (we are good with including the new header with all responses), this time we will leverage Flask’s native callback system instead.\n@app.after_request def after_request(response): response.headers.add('X-Charlie', 'Je Suis Charlie.') response.headers.add('X-Ahmed', 'Je Suis Ahmed.') return response A simple run script would then look something like:\nfrom eve import Eve app = Eve() @app.after_request def after_request(response): response.headers.add('X-Charlie', 'Je Suis Charlie.') response.headers.add('X-Ahmed', 'Je Suis Ahmed.') return response if __name__ == '__main__': app.run() All API responses now include the custom headers:\n$ curl http://localhost:5000 HTTP/1.0 200 OK Content-Type: application/json Content-Length: 141 Server: Eve/0.5 Werkzeug/0.9.6 Python/2.7.8 Date: Mon, 12 Jan 2015 15:39:36 GMT X-Charlie: Je Suis Charlie. X-Ahmed: Je Suis Ahmed. If you want to see it in action try sending a GET request with curl, Postman or similar tool to the Eve demo instance (source). Remember Eve is a Flask subclass so whatever works with Flask generally works with Eve too.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/how-to-add-a-je-suis-charlie-header-to-api-responses/","summary":"\u003cp\u003eA lot of servers have been including a \u003ccode\u003eJeSuisCharlie\u003c/code\u003e header with their responses. If you haven’t already, try with Charlie Hebdo site itself:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ curl -I charliehebdo.fr\nDate: Mon, 12 Jan 2015 15:56:13 GMT\nContent-Type: text/html; charset=iso-8859-1\nContent-Length: 221\nConnection: keep-alive\nLocation: http://www.charliehebdo.fr/index.html\nVary: Accept-Encoding\nX-Charlie-fr: Je suis toujours Charlie.\nX-Charlie-en: I am still Charlie.\nX-Charlie-es: Todavia soy Charlie.\nX-Charlie-de: Ich bin immer Charlie.\nX-Charlie-ro: Inca sunt Charlie.\nX-Charlie-cz: Jsem stale Charlie.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI find this to be a great way for us techies to somehow contribute and show support for the ongoing anti-terrorism campaign. So if you feel like doing it here is a quick rundown on how to serve custom headers with your Eve-powered REST API. It is actually a very easy task to accomplish.\u003c/p\u003e","title":"How to: Add custom JeSuisCharlie header to API responses"},{"content":"Robert C. Martin is at it again this time targeting the (infamous?) Interface construct in a funny way. As both a C# and Python coder I couldn’t agree more. Also, let me quote my fellow polyglot developer Nicola Musatti who went all out on the topic:\nSome of us have known that for the best part of the last 20 years 😉\n","permalink":"https://nicolaiarocci.com/interfaces-laziness/","summary":"\u003cp\u003eRobert C. Martin is at it \u003ca href=\"http://blog.cleancoder.com/uncle-bob/2015/01/08/InterfaceConsideredHarmful.html\"\u003eagain\u003c/a\u003e this time targeting the (infamous?) \u003ccode\u003eInterface\u003c/code\u003e construct in a funny way. As both a C# and Python coder I couldn’t agree more. Also, let me quote my fellow polyglot developer \u003ca href=\"http://wthwdik.wordpress.com/\"\u003eNicola Musatti\u003c/a\u003e who went all out on the topic:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSome of us have known that for the best part of the last 20 years 😉\u003c/p\u003e\u003c/blockquote\u003e","title":"Interfaces out of Laziness"},{"content":"Jos de Jong has a great concise write-up on pitfalls and excesses in building reusable software.\n","permalink":"https://nicolaiarocci.com/on-reusable-software/","summary":"\u003cp\u003eJos de Jong has a \u003ca href=\"http://josdejong.com/blog/2015/01/06/code-reuse/\"\u003egreat concise write-up\u003c/a\u003e on pitfalls and excesses in building reusable software.\u003c/p\u003e","title":"On Reusable Software"},{"content":"People keep telling me that they want to validate class and instance attributes (object properties) with Cerberus. While it certainly wasn’t conceived with that goal in mind, it is actually very possible to leverage both the Python data model and Cerberus extensibility to achieve object validation.\nNuts \u0026amp; Bolts Let’s say that we have a simple class:\n\u0026gt;\u0026gt;\u0026gt; class Person(object): ... pass We create a Person instance and add a few properties and values:\n\u0026gt;\u0026gt;\u0026gt; p = Person() \u0026gt;\u0026gt;\u0026gt; p.name = \u0026quot;bill\u0026quot; \u0026gt;\u0026gt;\u0026gt; p.age = 44 Now let’s instance a Cerberus Validator and set up some validation rules for it:\n\u0026gt;\u0026gt;\u0026gt; from Cerberus import Validator \u0026gt;\u0026gt;\u0026gt; schema = { ... 'name': {'type': 'string'}, ... 'age': {'type': 'integer', 'min': 0} ... } \u0026gt;\u0026gt;\u0026gt; v = Validator(schema) As you probably know already, all Python user objects have a __dict__ magic method which exposes class and instance attributes as a dictionary. This means that we can also query our class like this:\n\u0026gt;\u0026gt;\u0026gt; p.__dict__ {'name': 'bill', 'age': 44} \u0026gt;\u0026gt;\u0026gt; p.__dict__['age'] 44 You see where we are going with this: we can exploit the __dict__ method in order to let Cerberus perform validation on our object:\n\u0026gt;\u0026gt;\u0026gt; v.validate(p.__dict__) True Validation succeeds because current attribute values do not break any rule. However, if we break the rules we do get what we deserve:\n\u0026gt;\u0026gt;\u0026gt; p.age = -1 \u0026gt;\u0026gt;\u0026gt; v.validate(p.__dict__) False \u0026gt;\u0026gt;\u0026gt; v.errors {'age': 'min value is 0'} This works, but is somewhat clumsy. We can do better.\nA Custom Object Validator How about letting the Validator do the work for us? We could subclass the standard Validator and extend it to natively support object validation.\n\u0026gt;\u0026gt;\u0026gt; class ObjectValidator(Validator): ... def validate_object(self, obj): ... return self.validate(obj.__dict__) ... \u0026gt;\u0026gt;\u0026gt; v = ObjectValidator(schema) \u0026gt;\u0026gt;\u0026gt; v.validate_object(p) False \u0026gt;\u0026gt;\u0026gt; v.errors {'age': 'min value is 0'} \u0026gt;\u0026gt;\u0026gt; p.age = 44 \u0026gt;\u0026gt;\u0026gt; v.validate_object(p) True Much better. But what happens if we add a new property and then validate the object?\n\u0026gt;\u0026gt;\u0026gt; p.lastname = 'white' \u0026gt;\u0026gt;\u0026gt; v.validate_object(p) False \u0026gt;\u0026gt;\u0026gt; v.errors {'lastname': 'unknown field'} Validation fails because by default unknown fields are not allowed. This might not be the desired behaviour. If this is the case, we simply need to update the helper method in our custom validator class:\n\u0026gt;\u0026gt;\u0026gt; class ObjectValidator(Validator): ... def validate_object(self, obj): ... self.allow_unknown = True ... return self.validate(obj.__dict__) \u0026gt;\u0026gt;\u0026gt; v.validate_object(p) True By setting allow_unknown to True we let unknown fields be ignored by validation. If we are not concerned by state changes between calls we might conveniently choose to move the setting of allow_unknown to the __init__ method so it gets executed only once.\nLooks good so far. We can validate simple objects. But what about complex ones like those exposing other objects as attributes? This is going to require some more tinkering.\nValidating Complex Objects It would be super handy if we could add support for an object data type and then provide a validation schema for it, like we already do with the dict and list types. A revised validation schema would then look like this:\n\u0026gt;\u0026gt;\u0026gt; schema = { ... 'name': {'type': 'string'}, ... 'age': {'type': 'integer', 'min': 0}, ... 'address': { ... 'type': 'object', 'schema': { ... 'street': {'type': 'string'}, ... 'zip': {'type': 'integer'} ... } ... } ... } We could then validate it like so:\n\u0026gt;\u0026gt;\u0026gt; class Address ... pass \u0026gt;\u0026gt;\u0026gt; addr = Address() \u0026gt;\u0026gt;\u0026gt; addr.street = 'Lexington' \u0026gt;\u0026gt;\u0026gt; addr.zip = 50238 \u0026gt;\u0026gt;\u0026gt; p.address = addr \u0026gt;\u0026gt;\u0026gt; v.validate_object(p) True \u0026gt;\u0026gt;\u0026gt; p.address.zip = 'not a number' \u0026gt;\u0026gt;\u0026gt; v.validate_object(p) False \u0026gt;\u0026gt;\u0026gt; v.errors {'address': {'zip': 'must be of integer type'}} It turns out this is also very achievable. We can leverage Cerberus data type extensibility model to add support for the object type. Then it is just a matter of handling the new type when validating the schema rule. I’m not going into details here but you can check Validating complex objects with Cerberus, a trivial implementation I posted as a GitHub gist.\nClosing note You might be wondering why don’t I add object validation to Cerberus core. Actually, I don’t rule out this possibility but see I like to keep tools as simple, targeted and focused as possible. Besides, there are other object validation tools out there, so adding a new flavour does not seem very useful to me (but let me know if you feel otherwise.) Though as we have seen, if you want to validate user objects with Cerberus, you can do that easily enough.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/validating-user-objects-cerberus/","summary":"\u003cp\u003ePeople keep telling me that they want to validate class and instance attributes (object properties) with \u003ca href=\"https://github.com/nicolaiarocci/cerberus\"\u003eCerberus\u003c/a\u003e. While it certainly wasn’t conceived with that goal in mind, it is actually very possible to leverage both the Python \u003ca href=\"https://docs.python.org/2/reference/datamodel.html\"\u003edata model\u003c/a\u003e and Cerberus \u003ca href=\"http://cerberus.readthedocs.org/en/latest/#custom-validators\"\u003eextensibility\u003c/a\u003e to achieve object validation.\u003c/p\u003e\n\u003ch2 id=\"nuts--bolts\"\u003eNuts \u0026amp; Bolts\u003c/h2\u003e\n\u003cp\u003eLet’s say that we have a simple class:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt; class Person(object):\n...     pass\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWe create a \u003ccode\u003ePerson\u003c/code\u003e instance and add a few properties and values:\u003c/p\u003e","title":"Validating user objects with Cerberus"},{"content":"Like all those involved with the .NET ecosystem I’ve been slowly digesting the recent news on the whole thing going open source and cross platform. I’ve been jogging down a few notes in light of a future blog post, but then Jeremy Miller came out with his own Some Thoughts on the New .NET which is almost exactly the post I wanted to write. So when he writes:\nI’ve started to associate .Net “classic” with seemingly constant aggravations like strong naming conflicts, csproj file merge hell, slow compilation, slow nuget restores, and how absurdly heavyweight and bloated that Visual Studio.Net has become over the years.\nIt is me. No it’s actually Jeremy but really it’s me. I also share his concerns on the future OSS .NET community him:\nSo much of .Net is open source now and they even take contributions. Awesome, great, but my very first reaction was that it doesn’t matter much because the .Net community as a whole isn’t as participatory as other communities and that would have to change before ASP.Net vNext being OSS matters. It’ll be interesting to me to see if that changes over time.\nI’m very involved with the Python language and its community. I released open source projects for both platforms and frankly I’ve been shocked by the difference in culture between the two communities. I am really hoping that, in due time, .NET going open source will also cause its community to evolve as a whole.\nAnd what about coding on a Mac (or Linux for the matter)? He goes on with:\nAfter a couple years now of using a Mac, I’d really prefer to stay on that side of things and hopefully give my Windows VM much more time off. Mac OS being a first class citizen for the new .Net and the progress on the OmniSharp tools for Sublime or MacVim is going to make the new ASP.Net vNext runtime a much easier sell in my shop.\nI’ve been working on a Mac for years, confining Windows on a VM, doing Python with Vim as much as possible. My God I love Vim. My Visual Studio runs VsVim (which is open source by the way). Even my Xamarin Studio on OSX runs in vi mode (which sucks unfortunately). I would never go back to a Windows machine but that does not mean that I don’ want to use C# or F#. Even these days most of my coding is C# in XS/OSX or Vim with OmniSharp, a project I’ve been experimenting with since when the plugin for Vim was released. So native .NET on OSX and Unix? Yes please.\nI am in the process of writing a C# iOS application. The data layer is SQLite encapsulated in a Portable Class so we can use it on both Windows and iOS. The HTTP/REST client is also portable, open source and consumed on both platforms. And now even the mobile UI is C# and portable between Android, iOS and Windows Phone thanks to Xamarin.Forms. If you ask me, the future looks bright.\nYou should read Jeremy post on his site.\nIf you want to get in touch, I am @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/some-thoughts-on-the-new-net-redux/","summary":"\u003cp\u003eLike all those involved with the .NET ecosystem I’ve been slowly digesting the recent news on the whole thing going open source and cross platform. I’ve been jogging down a few notes in light of a future blog post, but then Jeremy Miller came out with his own \u003ca href=\"http://jeremydmiller.com/2014/12/02/some-thoughts-on-the-new-net/\"\u003eSome Thoughts on the New .NET\u003c/a\u003e which is almost exactly the post I wanted to write. So when he writes:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI’ve started to associate .Net “classic” with seemingly constant aggravations like strong naming conflicts, csproj file merge hell, slow compilation, slow nuget restores, and how absurdly heavyweight and bloated that Visual Studio.Net has become over the years.\u003c/p\u003e","title":"Some Thoughts on the new .NET (Redux)"},{"content":"Eve.NET is a simple HTTP and REST client for Web Services powered by the Eve Framework. It leverages both System.Net.HttpClient and Json.NET to provide the best possible Eve experience on the .NET platform.\nWritten and maintained by the same author of the Eve Framework itself, Eve.NET is delivered as a portable library (PCL) and runs seamlessly on .NET4, Mono, Xamarin.iOS, Xamarin.Android, Windows Phone 8 and Windows 8. We use Eve.NET internally to power our iOS, Web and Windows applications.\nAnd now please forgive me while I take you on a quick motivational, strongly opinionated, probably boring and overzealous detour\nPython and C# Motherfucker, Do You Speak It? * If you don’t then well, you should consider doing just that. Especially so these days, with C# and the whole .NET platform going open source and cross platform. Actually, thanks to technologies like Mono and Xamarin (also based on Mono) we have been able to run C# code on all major platforms for a while: iOS, Android, OSX, Linux, Windows, Windows Phone, you-name-it. And what’s even better, on mobile platforms C# is compiled to native so performance is a non-issue.\nWhat makes C# a perfect match for a REST API is precisely that: it’s ubiquity. You can have a portable client library like Eve.NET which runs seamlessly (and untouched) on all these mobile desktop and server platforms.\nIf you already have a Web Service running on Eve and are now looking at the client side of things then well, you should consider C# and Eve.NET because you know, you can’t have a native iOS app written in Python anyway. On the other hand if you are a C#/.NET shop consider this: you can have a powerful Web Service up and running in minutes (even if you don’t grok Python yet – trust me on that) and a complete out-of-the-box, cross platform client library ready to go with it.\nA few years ago I gave a talk about leaving my Comfort Zone (**) and getting out of my .NET nest. That opened the path to Python, MongoDB, Node and so many other technologies and best practices and, what’s even more relevant, most of what I learned down that path I ended up using in my .NET projects in the long run. But the point I’m trying to make is don’t be afraid of change, it can only improve your skills making you a better all-around professional programmer.\nNever mind the naysayers. Polyglot is the way.\n(*) I’m paraphrasing Zed A. Shaw’s Programming, Motherfucker. You should get a T-Shirt by the way. They are so cool.\n(**) Since then there have been plenty of talks on the same subject. Mine was an 5 minutes ignite talk and was in Italian, so you probably don’t care (it’s on my Talks page anyway).\nBack to business now.\nUsage Initialization is as simple as instantiating a new client and providing it with the web service entry point.\n// Initialize and set API address. var client = new EveClient(); client.BaseAddress = new Uri(\u0026quot;http://api.com\u0026quot;); // Set target resource for subsequent requests. client.ResourceName = \u0026quot;companies\u0026quot;; Getting a list of objects is pretty straightforward:\n// List\u0026lt;T\u0026gt; companies = await client.GetAsync\u0026lt;Company\u0026gt;(); // Objects changed since DateTime. var ifModifiedSince = DateTime.Now.AddDays(-1); companies = await client.GetAsync\u0026lt;Company\u0026gt;(ifModifiedSince); // Refresh an object company = await client.GetAsync\u0026lt;Company\u0026gt;(company); // Raw, conditional GET request var companyId = \u0026quot;507c7f79bcf86cd7994f6c0e\u0026quot;; var eTag = \u0026quot;7776cdb01f44354af8bfa4db0c56eebcb1378975\u0026quot;; company = await client.GetAsync\u0026lt;Company\u0026gt;(\u0026quot;companies\u0026quot;, companyId, eTag); Other CRUD operations are easy too:\n// Create (POST) company = await client.PostAsync\u0026lt;Company\u0026gt;( new Company { Name = \u0026quot;MyCompany\u0026quot; } ); // Update (PUT) company.Name = \u0026quot;YourCompany\u0026quot;; var result = await client.PutAsync\u0026lt;Company\u0026gt;(company); // Delete (DELETE) var result = await client.DeleteAsync(company); As you can see all methods are Async and return full object instances parsing JSON in and out on for you. If you need more control you can query the HttpResponse property to inspect the original JSON, response headers, status code, etc.\nBehind the scenes data integrity and concurrency control are transparently handled so for example PutAsync performs a If-Match check and same happens with DeleteAsync. On PostAsync new objects are returned with fresh meta-fields such as ETag, DateCreated, DateUpdated and UniqueId. Mapping object properties to JSON fields and Eve metafields is just a matter of setting the JSonPropertyAttribute and RemoteAttribute:\npublic abstract class BaseClass { [JsonProperty(\u0026quot;_id\u0026quot;)] [Remote(Meta.DocumentId)] public string UniqueId { get; set; } [JsonProperty(\u0026quot;_etag\u0026quot;)] [Remote(Meta.ETag)] public string ETag { get; set; } [JsonProperty(\u0026quot;_updated\u0026quot;)] [Remote(Meta.LastUpdated)] public DateTime Updated { get; set; } [JsonProperty(\u0026quot;_created\u0026quot;)] [Remote(Meta.DateCreated)] public DateTime Created { get; set; } } public class Company : BaseClass { [JsonProperty(\u0026quot;n\u0026quot;)] public string Name { get; set; } [JsonProperty(\u0026quot;p\u0026quot;)] public string Password { get; set; } } For a complete list of usage examples see the README\nCurrent Status and License Eve.NET is a Nicola Iarocci and Gestionali Amica open source project distributed under the BSD license. It is a work in progress but it’s pretty stable already. It is available on NuGet as a pre-release package. The test suite can be run against a local Eve instance or, if you don’t grok Python yet, you can use a free test instance which is available online, see the README for details.\nDid you read this far? Well thank you! And please, consider showing your appreciation by starring the project on GitHub. It feels so lonely out there.\nIf you want to get in touch, I’m @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/introducing-eve-net-httprest-client-humans/","summary":"\u003cp\u003e\u003ca href=\"https://github.com/nicolaiarocci/Eve.NET\"\u003eEve.NET\u003c/a\u003e is a simple HTTP and REST client for Web Services powered by the \u003ca href=\"http://python-eve.org\"\u003eEve Framework\u003c/a\u003e. It leverages both \u003ccode\u003eSystem.Net.HttpClient\u003c/code\u003e and \u003ccode\u003eJson.NET\u003c/code\u003e to provide the best possible Eve experience on the .NET platform.\u003c/p\u003e\n\u003cp\u003eWritten and maintained by the same author of the Eve Framework itself, Eve.NET is delivered as a portable library (PCL) and runs seamlessly on .NET4, Mono, Xamarin.iOS, Xamarin.Android, Windows Phone 8 and Windows 8. We use Eve.NET internally to power our iOS, Web and Windows applications.\u003c/p\u003e","title":"Introducing Eve.NET the HTTP/REST Client for Humans™"},{"content":"Robert C.Martin, of Clean Code fame, has something to say on the role of we programmers in today’s society.\nWe rule the world.\nWe don’t quite understand this yet. More importantly, the world doesn’t quite understand it yet. Our civilization doesn’t quite realize how dependent it has become on software — on us.\nHe goes as far as suggesting a programmer’s code of conduct of sorts. Food for thought I guess, although I suspect we’re too much of a wild and scattered bunch for something like that to really stick.\nNonetheless, he raises a very good point about the predominance of software in our society and the risk that soon or later someone will wake up and attempt to impose some sort of regulation on the profession.\nRead it all at the Clean Coder Blog.\n","permalink":"https://nicolaiarocci.com/obligation-programmer/","summary":"\u003cp\u003eRobert C.Martin, of \u003c!-- raw HTML omitted --\u003eClean Code\u003c!-- raw HTML omitted --\u003e fame, has something to say on the role of we programmers in today’s society.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe rule the world.\u003c/p\u003e\n\u003cp\u003eWe don’t quite understand this yet. More importantly, the world doesn’t quite understand it yet. Our civilization doesn’t quite realize how dependent it has become on software — on us.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eHe goes as far as suggesting a programmer’s code of conduct of sorts. Food for thought I guess, although I suspect we’re too much of a wild and scattered bunch for something like that to really stick.\u003c/p\u003e","title":"The Obligation of The Programmer"},{"content":"This originally appeared on Quora and is well worth reading.\nBecoming a good programmer is incredibly difficult and it doesn’t happen quickly. We can’t expect to plant some trees and have 2000-year-old redwoods grow overnight, regardless of the demand for them.\nvia Why Don\u0026rsquo;t More People Work As Programmers? – Forbes.\n","permalink":"https://nicolaiarocci.com/dont-people-work-programmers/","summary":"\u003cp\u003eThis originally appeared on Quora and is well worth reading.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBecoming a good programmer is incredibly difficult and it doesn’t happen quickly. We can’t expect to plant some trees and have 2000-year-old redwoods grow overnight, regardless of the demand for them.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://www.forbes.com/sites/quora/2014/10/31/why-dont-more-people-work-as-programmers/\"\u003eWhy Don\u0026rsquo;t More People Work As Programmers? – Forbes\u003c/a\u003e.\u003c/p\u003e","title":"Why Don’t More People Work As Programmers?"},{"content":"Last week I was speaking at an Open Source panel at Better Software 2014, and one of the topics that we touched was code responsibility. This is an important topic for anyone who is maintaining an open source project, especially when it comes to the process of reviewing and accepting code contributions.\nAt some point during the debate, I argued that when a maintainer merges a pull request, he (or she) implicitly agrees on being responsible for that code. That seemed to strike some surprise into most attendees.\nYes, in theory any contributor is just a ping away so in case trouble arises one can always reach him, or her. Unfortunately this is not always the case. While some contributors will fully embrace your project and keep helping after their initial contribution, truth is that a good number of them will just move on, never to be seen again.\nThere’s nothing wrong with that. Not everyone has spare time to devote to your project, which is perfectly fine. It is natural for most people to contribute what they need to a project and then go on their way. Actually, one could argue that most projects grow and prosper precisely thanks to this kind of contributions.\nHowever this attitude can become an incumbent when big chunks of code get merged, usually as new (big) features. Good practices advice against merging huge pull requests. In fact they are rare and when they do come, it is a good idea to ask for them to be split into smaller ones. But no matter the format, a huge contribution is likely to hit a project one day or another. It might even come from more than one person: a disconnected and distributed team of contributors who have been patiently tinkering on a side branch or a fork for example. When this happens, and provided that the contribution is worth merging, the maintainer should then ask him/herself the obvious question: am I willing to deal with the consequences of this merge?\nIn fact this is the exact scenario I’m dealing with right now. The Eve project has always been a MongoDB shop. Since its inception however people have been asking if (when) SQL support was going to be added. I think we were in Alpha when someone started contributing SQL code. Over time I ended up devoting a specific branch to this feature. Several people have been hacking at it since then, and what a splendid job they did! To say that it was a huge commitment is an understatement but, in time, they managed to deliver. So now we have this awesome sqlalchemy branch which is feature complete and ready to be merged ahead of the new Eve release. We’re talking 4K+ lines of code and 44 files changed. Code quality is not under discussion. I know that several companies and individuals have been using that branch in production with good success, even when it still was at its early stages.\nThis is very exciting as adding SQL support has a good chance to greatly improve the audience of the project. At the same time however, I’m a little bit nervous if not scared, and I have been for a while. Am I ready to deal with the consequences of this supermerge? Inevitably SQLAlchemy tickets will be opened and Stack Overflow questions will be asked. SQL-related pull requests will come in and mailing list posts will flock. To be honest I don’t think I can handle that, let alone allocate more of my free time to the project. Also, I’m not very confident with SQLAlchemy itself so I would not be the best person deal with that code anyway. In the recent past while discussing SQLAlchemy support on the mailing list, I have been very clear about my concerns, so much that I probably scared a few people away. What worries me the most, I suspect, is the risk of new code becoming stale one day or another. In time that would probably impact the reputation of the whole project.\nTo think about it, we already had something similar happen in the past, although for a smaller feature. The Document Versioning pull request, contributed by the amazing Josh Villbrandt, had been daunting me with similar thoughts. New code was going to be be quite intrusive, adding a good deal of complexity to an otherwise relatively simple codebase. Everything went amazingly well though. Josh is still an active contributor. He helps with improving his own feature and, even more importantly, other contributors are now helping with Document Versioning as we speak. Overall, the Eve project as a whole as been enjoying a growing number of skilled contributors and adopters. It’s been a joy to see people commenting on open tickets, offer support on the mailing list and even on Stack Overflow. So that should be encouraging.\nSo here I sit, with 4K LOCs ready to be merged. What do I do with them? I considered a few options. One is leaving the SQL feature in a separate branch. Another is to ask the team to refactor the whole thing into an external extension (we have a few already). By doing any of these Eve-core would remain MongoDB only and I could keep managing it on my own. But then again, none of these options would add native SQL support to Eve. Also, an extension or a branch would run even a greater danger of becoming stale.\nAt some point I guess even mildly successful projects like Eve have to decide wether they want to outgrow their author. I strongly believe that growing and trusting communities is all that open source is about. You release your work out there and, even at that early stage, you are already entrusting people. You trust that they will take notice and then that they will validate your project (or not). Eventually, someone will review your code, adopt it and, in time, contribute. The project then grows up to a point where its community becomes so predominant that you, as the author and maintainer, just have to let some control go.\nSo yes, SQL support is coming to Eve, and as a native feature. I trust that the contributors to the SQLAlchemy backend will stay around and, if they won’t, that someone else will stand up and take the torch. I am also confident that the community as a whole will adopt the feature, make it grow and well… we’ll see what happens next.\nIf you want to get in touch, I’m @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/open-source-and-code-responsibility/","summary":"\u003cp\u003eLast week I was speaking at an Open Source panel at \u003ca href=\"http://www.bettersoftware.it\"\u003eBetter Software 2014\u003c/a\u003e, and one of the topics that we touched was code responsibility. This is an important topic for anyone who is maintaining an open source project, especially when it comes to the process of reviewing and accepting code contributions.\u003c/p\u003e\n\u003cp\u003eAt some point during the debate, I argued that when a maintainer merges a pull request, he (or she) implicitly agrees on being responsible for that code. That seemed to strike some surprise into most attendees.\u003c/p\u003e\n\u003cp\u003eYes, in theory any contributor is just a ping away so in case trouble arises one can always reach him, or her. Unfortunately this is not always the case. While some contributors will fully embrace your project and keep helping after their initial contribution, truth is that a good number of them will just move on, never to be seen again.\u003c/p\u003e\n\u003cp\u003eThere’s nothing wrong with that. Not everyone has spare time to devote to your project, which is perfectly fine. It is natural for most people to contribute what they need to a project and then go on their way. Actually, one could argue that most projects grow and prosper precisely thanks to this kind of contributions.\u003c/p\u003e\n\u003cp\u003eHowever this attitude can become an incumbent when big chunks of code get merged, usually as new (big) features. Good practices advice against merging huge pull requests. In fact they are rare and when they do come, it is a good idea to ask for them to be split into smaller ones. But no matter the format, a huge contribution is likely to hit a project one day or another. It might even come from more than one person: a disconnected and distributed team of contributors who have been patiently tinkering on a side branch or a fork for example. When this happens, and provided that the contribution is worth merging, the maintainer should then ask him/herself the obvious question: \u003cem\u003eam I willing to deal with the consequences of this merge?\u003c/em\u003e\u003c/p\u003e","title":"Open Source and Code Responsibility"},{"content":"The operations log or OpLog is a new Eve feature that I’m currently developing on the oplog experimental branch. It’s supposed to help in addressing a subtle issue that we’ve been dealing with, but I believe it can also emerge as a very useful all-around tool. I am posting about it in the hope of gathering some feedback from Eve contributors and users, so that I can better pinpoint design and implementation before I merge it to the main development branch.\nWhat is the OpLog? The OpLog is a special resource that keeps a record of operations that modify the data stored by the API. Every POST, PATCH, PUT and DELETE operation can eventually be recorded by the oplog.\nAt its core the oplog is simply a server log, something that’s always been on the Eve roadmap. What makes it a little bit different is its ability to be exposed as a read-only API endpoint. This would in turn allow clients to query it as they would with any other standard endpoint.\nEvery oplog entry contains few important informations about the document\ninvolved with the edit operation:\nURL of the endpoint hit by the operation. Kind of operation performed. Unique ID of the document. Date when the document was updated. Date when the document as created. User token, if User Restricted Resource Access is enabled for the endpoint Like any other API-maintained documents, oplog entries also contain:\nUnique ID ETag HATEOAS meta fields, if enabled. A typical oplog entry would look something like this:\n{ \u0026quot;o\u0026quot;: \u0026quot;DELETE\u0026quot;, \u0026quot;r\u0026quot;: \u0026quot;people\u0026quot;, \u0026quot;i\u0026quot;: \u0026quot;542d118938345b614ea75b3c\u0026quot;, \u0026quot;_updated\u0026quot;: \u0026quot;Fri, 03 Oct 2014 08:16:52 GMT\u0026quot;, \u0026quot;_created\u0026quot;: \u0026quot;Fri, 03 Oct 2014 08:16:52 GMT\u0026quot;, \u0026quot;_id\u0026quot;: \u0026quot;542e5b7438345b6dadf95ba5\u0026quot;, \u0026quot;_etag\u0026quot;: \u0026quot;e17218fbca41cb0ee6a5a5933fb9ee4f4ca7e5d6\u0026quot; \u0026quot;_links\u0026quot;: {...}, } To save a little storing space field names have been shortened when possible (what can I say, I’m a MongoDB guy): o stands for operation, r stands for resource, i stands for unique ID and c stands for changes. Other keys are defined by the configuration settings, and their default names are shown here.\nHow is the oplog operated? Three new settings keywords are available:\nOPLOG\nSets the oplog name and defaults to oplog. This is the name of the collection on the database and also the default url for the oplog endpoint.\nOPLOG_METHODS\nA list of HTTP methods for which oplog entries are to be recorded. Defaults to ['DELETE'].\nOPLOG_ENDPOINT\nSet it to True if an oplog endpoint should be made available by the API. Defaults to False.\nOPLOG_AUDIT\nIf enabled, IP addresses and changes introduced with PATCH and PUT methods are also logged. Defaults to True.\nSo by default the oplog is stored on a conveniently named oplog collection, it only stores informations about deleted documents.\nSince the eventual oplog endpoint is a standard API endpoint, if it is enabled the API maintainer can also fiddle with the endpoint settings as he/she would do with any other Eve endpoint. This allows for setting custom authentication (you probably want this resource to be only accessible for administrative purposes), changing the url, etc. Just add an oplog entry to the API domain, like so:\n'oplog': { 'url': 'log', 'auth': my_custom_auth_class, 'datasource': {'source': 'myapilog'} } Note that while you can change most settings, the endpoint will always be read-only, so setting either resource_methods or item_methods to something else than ['GET'] will serve no purpose. Also, unless you need to do so, adding an oplog entry to the API domain is not required as it will be added automatically for you.\nWhy the OpLog? Clients have always been able to retrieve changes by simply querying an endpoint with a If-Modified-Since request. So why do we need an operations log? Of course because server-side logging is cool, and so is auditing, but it’s not only about that.\nSingle entry point for all API updates From the client perspective and for most use cases logging inserted, edited and replaced documents is probably a waste of both space and time, and this is the main reason why only DELETE operations are logged by default. However, I believe there are scenarios where remote access to a full activity log can be useful.\nImagine an API which is accessed by multiple apps (say phone, tablet, web and desktop applications) and all of them need to stay in sync with each other and the server. Instead of hitting every single endpoint with a IMS request they could just access the oplog. That’s a single request vs several, and since the oplog itself is a standard API endpoint, they could also perform IMS requests against it for optimal gains:\nServer, please send me all the changes occurred to the API since my last access. Sincerely, Your Client.\nAgain this is not always the best approach a client could take. Sometimes it is probably better to only query for changes when they are really needed, but it seems cool to have both approaches available (and remember, the oplog endpoint is disabled by default).\nFixing 304s And then there are deleted documents which are a completely different beast. With no oplog we would have no way to tell if and when any document has been deleted, let alone inform clients about that. Actually, there is an open ticket precisely about this, and it’s been sitting there for a while.\nWhen a If-Modified-Since request is received, the API is expected to respond with a 304 Not Modified status if no changes occurred, so that clients can conveniently fallback to cached data. Up to version 0.4 (the official release at the time of this writing) Eve has been doing exactly that, with one caveat: missing documents were being ignored as, in the contest of the IMS request, there was no way to know about them.\nThe operations log will allow Eve powered APIs to take deleted documents into account, returning perfectly proper 304 codes as needed. The impact on performance should be minimal as we will only query the oplog when and if no changes have been detected on the target collection.\nThis solves only one half of the problem however. What happens when a IMS request comes in and deleted documents are found in the backlog? How do we report them back to the client? Three options come to mind which would address this scenario:\nRespond with a 200 OK and a the usual “changes since IMS date” payload, which might happen to be empty if only deletions occurred in the time window. The client can then go and query the oplog endpoint with the same IMS date, finally getting the list of deleted documents IDs.\nInclude deleted documents IDs in the standard payload (within the _items list), maybe with a deleted status tag. This status tag is something new though, and for consistency we should probably add it to other objects in the payload.\nAdd support for a new _deleted meta field in resource payloads. When deleted documents are spotted in the backlog the response payload will include them in their own list. Something like this:\nFirst option is so bad I should probably not be listing it at all. It would take two roundtrips to get the whole update down. Also, it would kind of force API maintainers to open the oplog endpoint to their clients.\nI’m not convinced #2 would be a good idea either, as objects in the items list would not be homogeneous anymore and we would have to add support for a new meta field anyway (the status tag).\nOption #3 on the other hand looks quite good to me. It does not require multiple requests to handle the case of deleted documents on IMS requests, and it is still easy and clean for clients to process. I am going to go with #3 unless feedback is negative and for good reasons, so let your opinion be heard.\nClosing concerns I am slightly concerned about the performance impact, not so much on IMS requests but rather on write operations, especially when a complete, all-operations log is being recorded.\nIn MongoDB world OpLog is probably an ideal candidate for a capped collection. I’m not entirely convinced about that though, as by its nature a capped collection is bound to lose data over time, which again might lead to inaccurate 304 handling.\nI am not implementing the OpLog at the data layer level however. It is a business layer feature to let other engines take advantage of it. Nothing prevents the MongoDB admin from setting the oplog as a capped collection anyway. Also, keep in mind that like all other resources maintained by the API, indexes are not handled by Eve itself so you will have to do your homework in that field too.\nSo here you have it. I’m currently done on both configuration and logging parts and will be working on 304 handling and response payloads in the coming days so that all of this can be included with next version 0.5. Be warned that at the moment the develop branch has no support for IMS requests on resource endpoints. It’s been disabled to avoid providing clients with inaccurate responses (see the ticket above).\nIf you have any comment or feedback to provide, please let me know in the comments below. I’d really appreciate that.\nPS. In case you are wondering yes, the Eve OpLog is heavily inspired by the awesome MongoDB OpLog.\n","permalink":"https://nicolaiarocci.com/feature-overview-the-eve-oplog/","summary":"\u003cp\u003eThe operations log or OpLog is a new \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e feature that I’m currently developing on the \u003ca href=\"https://github.com/nicolaiarocci/eve/tree/oplog\"\u003e\u003ccode\u003eoplog\u003c/code\u003e\u003c/a\u003e experimental branch. It’s supposed to help in addressing a subtle issue that we’ve been dealing with, but I believe it can also emerge as a very useful all-around tool. I am posting about it in the hope of gathering some feedback from Eve contributors and users, so that I can better pinpoint design and implementation before I merge it to the main development branch.\u003c/p\u003e\n\u003ch2 id=\"what-is-the-oplog\"\u003eWhat is the OpLog?\u003c/h2\u003e\n\u003cp\u003eThe OpLog is a special resource that keeps a record of operations that modify the data stored by the API. Every \u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003ePATCH\u003c/code\u003e, \u003ccode\u003ePUT\u003c/code\u003e and \u003ccode\u003eDELETE\u003c/code\u003e operation can eventually be recorded by the oplog.\u003c/p\u003e\n\u003cp\u003eAt its core the oplog is simply a server log, something that’s always been on the Eve roadmap. What makes it a little bit different is its ability to be exposed as a read-only API endpoint. This would in turn allow clients to query it as they would with any other standard endpoint.\u003c/p\u003e","title":"Feature Overview: The Eve OpLog"},{"content":"OrderedDict is a super handy data structure.\nAn OrderedDict is a dict that remembers the order that keys were first inserted. If a new entry overwrites an existing entry, the original insertion position is left unchanged. Deleting an entry and reinserting it will move it to the end.\nProblem is, this stuff is only available in the standard library since Python 2.7 while my project also needs to support Python 2.6. Fortunately there’s a back-port available and it is only a pip install away:\n# make OrderedDict available on Python 2.6-2.4 $ pip install ordereddict ordereddict is based on the awesome recipe by Raymond Hettinger, works with Python 2.4-2.6 and, most importantly, is a drop-in replacement for OrderedDict.\nHowever if you want your code to run seamlessly on all Pythons there’s still some work to be done. First of all you want to make sure that the appropriate OrderedDict is imported, either the standard library version (for Python 2.7 and above) or the back-port release.\nThis is easily accomplished, and in a very pythonic way:\ntry: # try with the standard library from collections import OrderedDict except ImportError: # fallback to Python 2.6-2.4 back-port from ordereddict import OrderedDict Fixing setup.py If you are shipping your code as a package then you also want to make sure that setup.py properly handles the different Python versions. Since setup.py itself is nothing but standard Python module, we can make it more dynamic by applying the same technique above.\n#!/usr/bin/env python from setuptools import setup, find_packages # your standard required modules install_requires = [ 'simplejson', 'cerberus', 'events', ... ] try: from collections import OrderedDict except ImportError: # add backport to list of required modules install_requires.append('ordereddict') setup( name='appname', version='0.1', packages=find_packages(), ... # no matter which Python, we're now good to go install_requires = install_requires, ... ) Handling requirements.txt When it comes to pip’s requirements.txt, what I think works best is to simply add a diff file which targets old Python versions like so:\n# py26-requirements.txt # install from 'canonical' requirements.txt first (DRY) -r requirements.txt # add specific Python 2.6 dependencies ordereddict A developer using Python 2.6 would then go with\n$ pip install -r py26-requirements.txt Whereas someone on a recent Python would simply run\n$ pip install -r requirements.txt Since py26-requirements.txt explicitly lists Python 2.6 dependencies only and then relies on requirements.txt, most likely you will only need to update the main requirements when/if new dependencies are needed.\nYou can check out the commit where Python 2.6 support for OrderDict has been introduced.\nIf you want to get in touch, I’m @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/ordered-dictionaries-with-python-2-4-2-6/","summary":"\u003cp\u003e\u003ca href=\"https://docs.python.org/2/library/collections.html#collections.OrderedDict\"\u003eOrderedDict\u003c/a\u003e is a super handy data structure.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAn OrderedDict is a dict that remembers the order that keys were first inserted. If a new entry overwrites an existing entry, the original insertion position is left unchanged. Deleting an entry and reinserting it will move it to the end.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eProblem is, this stuff is only available in the standard library since Python 2.7 while \u003ca href=\"http://python-eve.org\"\u003emy project\u003c/a\u003e also needs to support Python 2.6. Fortunately there’s a back-port available and it is only a pip install away:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e# make OrderedDict available on Python 2.6-2.4\n$ pip install ordereddict\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ca href=\"https://pypi.python.org/pypi/ordereddict\"\u003eordereddict\u003c/a\u003e is based on the awesome recipe by \u003ca href=\"http://code.activestate.com/recipes/576693\"\u003eRaymond Hettinger\u003c/a\u003e, works with Python 2.4-2.6 and, most importantly, is a drop-in replacement for OrderedDict.\u003c/p\u003e\n\u003cp\u003eHowever if you want your code to run seamlessly on all Pythons there’s still some work to be done. First of all you want to make sure that the appropriate OrderedDict is imported, either the standard library version (for Python 2.7 and above) or the back-port release.\u003c/p\u003e","title":"Ordered Dictionaries with Python 2.4-2.6"},{"content":"If your project is a Portable Class Library and you want it to run with the .NET Framework 4 well, you are in for a few surprises. Especially so if you are using InstallShield for building your deployment package. We’ve been going through this a few days ago and it’s been kind of a wild ride. I thought I could pin the whole thing down so that others might enjoy a painless journey through all this mess.\nPortable Class Libraries and .NET Framework 4 The first thing you should know is that while the .NET Framework 4 does support PCLs, in fact it won’t run them without a patch. For whatever reason, Microsoft decided that PCL compatibility wasn’t a worth a 4.0.4 update. That leaves us with the need to not only make sure that target machines are running the up-to-date .NET4 release (v4.0.3) but also that they’ve been updated with KB2468871.\nYou might be wondering why this is an issue in the first place. We could simply install the .NET Framework 4.5 which is backward compatible with the .NET4 and includes the afore mentioned KB2468871. Even better, we could just target the .NET 4.5 on our PCL. Problem is that besides iOS, Android, WinPhone and Silverlight we also want our libraries to run seamlessly on as many Windows editions as possible, Windows XP included. Here is the catch: .NET4 is the last framework version to run on Windows XP. And yes, we got the memo, Microsoft officially abandoned Windows XP a while ago so why bother? Well it turns out that millions of users are still running XP, especially so in the enterprise and SMB. These PCL are targeting exactly that, precisely the accounting software segment, and believe me there’s a huge number of users happily invoicing and accounting on their old-fart-but-still-splendidly-doing-its-job-for-cheap boxes. Oh and the .NET Framework 3.5 is not an option as it doesn’t support Portable Classes at all.\nAll things considered, it’s still good news. We can build PCL which run everywhere, Windows XP included. We only need to make sure that both the .NET Framework 4 and the KB2468871 are installed on target machines. Easy enough, right?\nThe strange story about KB2468871 InstallShield Prerequisite We rely on InstallShield for building our distributions, so I was delighted to find that it comes with a KB2468871 Setup Prerequisite out of the box. All we had to do was add the prerequisite to our setup and we would be done. In fact, our first test was encouraging. We ran the setup on a pristine Windows XP. It installed the .NET Framework 4, then the KB patch and then, finally, our own application which included the PCL libraries. Everything was running smoothly. We then moved on to test the same identical build on a fresh Windows 7 machine. Again, it installed the .NET4 just fine… and then it crashed. Actually, the setup itself did not crash. It was the KB2468871 which was crashing while the main setup itself was left idle, waiting for the KB install to complete. So, what was going on there?\nCPU Architecture Does Matter To make a long story short, after a lot of investigation and an embarrassingly high number of tests we found that our setup was only crashing on 64bit editions of Windows. It turned out that the issue was with the InstallShield Prerequisite itself. It was broken. In a bad way.\nThe KB2468871 comes in three flavors:\nNDP40-KB2468871-v2-x86.exe NDP40-KB2468871-v2-IA64.exe NDP40-KB2468871-v2-x64.exe Three executables, each one targeting a different architecture. Upon inspection of the stock prerequisite however, we discovered that it was launching the x86 executable no matter what the target edition of Windows was. That explained the crashes on x64 systems.\nThe solution was to create a new custom prerequisite which would download and launch the x64 KB edition on 64bit systems. We then had to update the stock prerequisite too, so that it would only run on x86 systems. So we now had two specialized KB2468871 prerequisites. One for 32 and another for 64 bit systems. They would be launched alternatively depending on the target system. We proceeded to add them both to our InstallShield project and rebuild it. Then we went and tested it against freshly installed Windows. It installed the .NET Framework 4, then totally skipped the KB (like the prerequisite didn’t even exist) and finally proceeded to install both PCL and main application – which of course would crash on execution as there was no KB on the system.\nBeaten, but not ready to admit defeat yet, we went back to the drawing board.\nExecution Order Does Matter. Or Not. Our custom launch conditions for both our KB prerequisites were there, and they looked good. Then there was this other conditional triplet. It was validating two registry keys and then making sure that mscorlib.dll existed in .NET4 folder. So, the idea was that the KB installation should only be executed if the .NET4 was on the target system. That sounded perfectly reasonable. As we could configure the order in which prerequisites were executed, we just had to make sure that the .NET4 prerequisite was assigned a higher priority, so it would run before the KB prerequisites themselves. The prerequisites order was fixed, a new setup was built and… nothing changed. KB were still not being installed.\nPrerequistes order did not seem to matter. In fact, if we removed that check-if-net4-is-there conditional triplet the KB would install. However that was not an acceptable solution because then the KB would always be installed, causing a reinstall (and a waste of time and resources) on most systems.\nThen I had my epiphany. Maybe launch conditions were being evaluated all together at boot time, for all prerequisites, before they were installed and regardless of their execution order? Non-sense you might think (I did). Why allow me to set an execution order in the first place, if launch conditions for each item are not going to be evaluated in that order? Luckily, validating this theory was going to be quick and easy. We just had to reboot the system after the faulty installation was completed, then run the setup again. And guess what? On second run, after the reboot, the KB installation would be executed without a glitch. Bingo. Since the .NET4 had been installed on the previous run, now registry keys were there and the mscorlib.dll was in the right place, so the KB launch conditions were finally met.\nWe ended up replacing that bogus conditional triplet completely and changing the validation logic. Instead of checking if the .NET4 was installed (on pristine XP and Windows 7 systems, which don’t have the .NET Framework 4 preinstalled, it just could not be there yet), we were now simply checking if KB itself was installed. After all it just needs to be there, no matter the Windows or framework version (on .NET 4.5+ the KB will be installed by default).\nSo now, armed with our brand new custom KB2468871-x64 prerequisite and a totally re-imaginated set of launch conditions we were finally able to build a setup that would deliver a fully functional Portable Class Library which would run on all possible Windows: XP, Windows 7, Windows 8… independently of the CPU architecture. Victory!\nIf you read this far you probably noticed that I didn’t include instructions on how to apply these changes to the stock prerequisite, let alone create a new one. You can find those instructions on the InstallShield website, or you can simply use our modified prerequisites. Of course we are providing them without any guarantee that they will work for you. They did for us, and that’s it.\nToo long; didn’t read Portable Class Libraries won’t run on plain vanilla .NET Framework 4.0 unless KB2468871 is installed; If using InstallShield KB2468871 Setup Prerequiste you’re in for a wild ride; However, and until an official fix is released, you can opt to use our modified prerequisites instead. Get the custom KB2468871 (64x) InstallShield prerequisite. Get the custom KB2468871 (x86) prerequisite. Conclusion The stock KB2468871 InstallShield prerequiste has been out for a good while so I’m baffled that to this day I still cannot find any reference about these issues on the internet. Portable Class Libraries are probably still a niche and the fact that most of Macrovision KB resources are hidden behind a wall does not help. Soon or later an official prerequisite update will be released. Until then, feel free to use our mods.\nI’ll just add that if we were dealing with an Open Source project, we’d just open a pull request and be done with it.\nIf you want to get in touch, I’m @nicolaiarocci on Twitter.\n","permalink":"https://nicolaiarocci.com/taming-portable-class-libraries-and-net-framework-4/","summary":"\u003cp\u003eIf your project is a Portable Class Library and you want it to run with the .NET Framework 4 well, you are in for a few surprises. Especially so if you are using InstallShield for building your deployment package. We’ve been going through this a few days ago and it’s been kind of a wild ride. I thought I could pin the whole thing down so that others might enjoy a painless journey through all this mess.\u003c/p\u003e\n\u003ch2 id=\"portable-class-libraries-and-net-framework-4\"\u003ePortable Class Libraries and .NET Framework 4\u003c/h2\u003e\n\u003cp\u003eThe first thing you should know is that while the .NET Framework 4 does support PCLs, in fact it won’t run them without a patch. For whatever reason, Microsoft decided that PCL compatibility wasn’t a worth a 4.0.4 update. That leaves us with the need to not only make sure that target machines are running the up-to-date .NET4 release (v4.0.3) but also that they’ve been updated with \u003c!-- raw HTML omitted --\u003eKB2468871\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003cp\u003eYou might be wondering why this is an issue in the first place. We could simply install the .NET Framework 4.5 which is backward compatible with the .NET4 and includes the afore mentioned KB2468871. Even better, we could just target the .NET 4.5 on our PCL. Problem is that besides iOS, Android, WinPhone and Silverlight we also want our libraries to run seamlessly on as many Windows editions as possible, Windows XP included. Here is the catch: \u003c!-- raw HTML omitted --\u003e.NET4 is the last framework version to run on Windows XP\u003c!-- raw HTML omitted --\u003e. And yes, we got the memo, Microsoft officially abandoned Windows XP a while ago so why bother? Well it turns out that millions of users are still running XP, especially so in the enterprise and SMB. These PCL are targeting exactly that, precisely the accounting software segment, and believe me there’s a huge number of users happily invoicing and accounting on their \u003cem\u003eold-fart-but-still-splendidly-doing-its-job-for-cheap\u003c/em\u003e boxes. Oh and the .NET Framework 3.5 is not an option as it doesn’t support Portable Classes at all.\u003c/p\u003e","title":"Taming Portable Class Libraries and .NET Framework 4"},{"content":"Eve 0.4 adds cool features like Document Versioning and Coherence Mode. Cerberus 0.7 allows regex validation amongst other niceties. Make sure to check the official v0.4 announcement for all the details.\n","permalink":"https://nicolaiarocci.com/eve-0-4-cerberus-0-7-released/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eEve 0.4 adds cool features like Document Versioning and Coherence Mode. Cerberus 0.7 allows regex validation amongst other niceties. Make sure to check the \u003ca href=\"http://blog.python-eve.org/eve-04-released\"\u003eofficial v0.4 announcement\u003c/a\u003e for all the details.\u003c/p\u003e","title":"Eve 0.4 and Cerberus 0.7 Released"},{"content":" When Ballmer famously said, “Linux is a cancer that attaches itself in an intellectual property sense to everything it touches,” it was fair to characterize Microsoft’s approach to open source as hostile. But over time, forces within Microsoft pushed to change this attitude. Many groups inside of Microsoft continue to see the customer and business value in fostering, rather than fighting, OSS.\nvia Microsoft’s New Running Shoes.\n","permalink":"https://nicolaiarocci.com/microsofts-new-running-shoes/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhen Ballmer famously said, “Linux is a cancer that attaches itself in an intellectual property sense to everything it touches,” it was fair to characterize Microsoft’s approach to open source as hostile. But over time, forces within Microsoft pushed to change this attitude. Many groups inside of Microsoft continue to see the customer and business value in fostering, rather than fighting, OSS.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://haacked.com/archive/2014/05/17/microsofts-new-running-shoes/\"\u003eMicrosoft’s New Running Shoes\u003c/a\u003e.\u003c/p\u003e","title":"Microsoft’s New Running Shoes"},{"content":" git is a fantastic choice for tracking the evolution of your code base and to collaborate efficiently with your peers. But what happens when the repository you want to track is really huge?\nvia How to handle big repositories with git – Atlassian Blogs.\n","permalink":"https://nicolaiarocci.com/how-to-handle-big-repositories-with-git/","summary":"\u003cblockquote\u003e\n\u003cp\u003egit is a fantastic choice for tracking the evolution of your code base and to collaborate efficiently with your peers. But what happens when the repository you want to track is really huge?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"https://blogs.atlassian.com/2014/05/handle-big-repositories-git/\"\u003eHow to handle big repositories with git – Atlassian Blogs\u003c/a\u003e.\u003c/p\u003e","title":"How to handle big repositories with git"},{"content":" Python’s simple, easy-to-learn syntax can mislead Python developers – especially those who are newer to the language – into missing some of its subtleties and underestimating the power of the language.\nWith that in mind, this article presents a “top 10” list of somewhat subtle, harder-to-catch mistakes that can bite even the most advanced Python developer in the rear.\nvia 10 Most Common Python Mistakes.\n","permalink":"https://nicolaiarocci.com/10-most-common-python-mistakes/","summary":"\u003cblockquote\u003e\n\u003cp\u003ePython’s simple, easy-to-learn syntax can mislead Python developers – especially those who are newer to the language – into missing some of its subtleties and underestimating the power of the language.\u003c/p\u003e\n\u003cp\u003eWith that in mind, this article presents a “top 10” list of somewhat subtle, harder-to-catch mistakes that can bite even the most advanced Python developer in the rear.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://www.toptal.com/python/top-10-mistakes-that-python-programmers-make\"\u003e10 Most Common Python Mistakes\u003c/a\u003e.\u003c/p\u003e","title":"10 Most Common Python Mistakes"},{"content":" Software development is mostly horseshit. We’re busy trying to build things, trying to estimate when things are done, trying to work with other humans to make sure you don’t break anything when you launch. All of these things can go horribly, horribly wrong without much malice or without much intention. It’s still very difficult.\nvia Why doesn’t GitHub talk about their product roadmap?\n","permalink":"https://nicolaiarocci.com/doesnt-github-talk-product-roadmap/","summary":"\u003cblockquote\u003e\n\u003cp\u003eSoftware development is mostly horseshit. We’re busy trying to build things, trying to estimate when things are done, trying to work with other humans to make sure you don’t break anything when you launch. All of these things can go horribly, horribly wrong without much malice or without much intention. It’s still very difficult.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"https://github.com/holman/feedback/issues/534\"\u003eWhy doesn’t GitHub talk about their product roadmap?\u003c/a\u003e\u003c/p\u003e","title":"Why doesn’t GitHub talk about their product roadmap?"},{"content":" But here’s the rub. Programming, like writing, painting, and music, is chiefly a creative endeavor not a technical one. Practice with any technology or language is useful as a means of learning tools and techniques, but it will not make you a substantially better programmer.\nvia How to be a sane programmer\n","permalink":"https://nicolaiarocci.com/how-to-be-a-sane-programmer/","summary":"\u003cblockquote\u003e\n\u003cp\u003eBut here’s the rub. Programming, like writing, painting, and music, is chiefly a creative endeavor not a technical one. Practice with any technology or language is useful as a means of learning tools and techniques, but it will not make you a substantially better programmer.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://www.nicholascloud.com/2014/03/how-to-be-a-sane-programmer/\"\u003eHow to be a sane programmer\u003c/a\u003e\u003c/p\u003e","title":"How to be a sane programmer"},{"content":" It’s been a very long time since I judged any programmer based on their commit history and I believe if you think you can judge a programmer’s ability by reading his/her code YOU ARE WRONG.\nvia Never judge a programmer by their commit history\n","permalink":"https://nicolaiarocci.com/never-judge-a-programmer-by-their-commit-history/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIt’s been a very long time since I judged any programmer based on their commit history and I believe if you think you can judge a programmer’s ability by reading his/her code YOU ARE WRONG.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://www.mehdi-khalili.com/never-judge-a-programmer-by-their-commit-history\"\u003eNever judge a programmer by their commit history\u003c/a\u003e\u003c/p\u003e","title":"Never judge a programmer by their commit history"},{"content":"Today we released Eve v0.3. It includes customizable Files Storage support (on GridFS by default), a lot of fixes, several breaking changes and a lot of love. Head over to relevant blog post and/or to changelog to know more about it.\n","permalink":"https://nicolaiarocci.com/eve-0-3-released/","summary":"\u003cp\u003e\u003ca href=\"http://python-eve.org\"\u003e\u003c!-- raw HTML omitted --\u003e\u003c/a\u003eToday we released \u003ca href=\"https://pypi.python.org/pypi/Eve\"\u003eEve v0.3\u003c/a\u003e. It includes customizable Files Storage support (on GridFS by default), a lot of fixes, several breaking changes and a lot of love. Head over to relevant \u003ca href=\"http://blog.python-eve.org/eve-03-released\"\u003eblog post\u003c/a\u003e and/or to \u003ca href=\"http://python-eve.org/changelog.html\"\u003echangelog\u003c/a\u003e to know more about it.\u003c/p\u003e","title":"Eve 0.3 Released"},{"content":" This is the problem with emphasizing computer science over learning to code. Without an understanding of what’s happening at a low level, my peers ran into issues […] and had no idea what to do to debug them. This is a problem that stems from teaching people computer science but not teaching them how to code. Learning to code isn’t just teaching people how to spell – it’s teaching people the meaning behind the words.\nvia Learn C, Then Learn Computer Science\n","permalink":"https://nicolaiarocci.com/learn-c-then-learn-computer-science/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis is the problem with emphasizing computer science over learning to code. Without an understanding of what’s happening at a low level, my peers ran into issues […] and had no idea what to do to debug them. This is a problem that stems from teaching people computer science but not teaching them how to code. Learning to code isn’t just teaching people how to spell – it’s teaching people the meaning behind the words.\u003c/p\u003e","title":"Learn C, Then Learn Computer Science"},{"content":"This oh so this.\nIf you look back over the decades at the many high-level complaints that have been leveled at Windows, one in particular sticks out: Unlike Mac OS, in particular, Windows has always attempted to satisfy every possible customer need, and as such it often provides multiple ways to accomplish the same thing. The result is a messy product, if you will, one that lacks the singular vision that is typically associated with the Mac and Apple’s other products.\nvia What the Heck is Happening to Windows?ì\n","permalink":"https://nicolaiarocci.com/what-the-heck-is-happening-to-windows/","summary":"\u003cp\u003eThis oh so this.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you look back over the decades at the many high-level complaints that have been leveled at Windows, one in particular sticks out: Unlike Mac OS, in particular, Windows has always attempted to satisfy every possible customer need, and as such it often provides multiple ways to accomplish the same thing. The result is a messy product, if you will, one that lacks the singular vision that is typically associated with the Mac and Apple’s other products.\u003c/p\u003e","title":"What the Heck is Happening to Windows?"},{"content":"If you are using Python and the awesome Boto library to access Amazon S3, make sure you don’t miss How to Save 90% on Your S3 Bill.\n","permalink":"https://nicolaiarocci.com/how-to-save-90-on-your-s3-bill/","summary":"\u003cp\u003eIf you are using Python and the awesome Boto library to access Amazon S3, make sure you don’t miss \u003ca href=\"http://www.appneta.com/blog/s3-list-get-bucket-default/\"\u003eHow to Save 90% on Your S3 Bill\u003c/a\u003e.\u003c/p\u003e","title":"How to Save 90% on Your S3 Bill"},{"content":" The reality is that AngularJS is winning the frontend framework war. It’s not to say there aren’t great, high quality alternatives out there, but few have gained so much developer mindshare that slow and conservative companies see it as a wonderful investment. And it’s all the better that normal developers actually love developing with it!\nvia Why AngularJS Will Be Huge.\n","permalink":"https://nicolaiarocci.com/why-angularjs-will-be-huge/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThe reality is that AngularJS is winning the frontend framework war. It’s not to say there aren’t great, high quality alternatives out there, but few have gained so much developer mindshare that slow and conservative companies see it as a wonderful investment. And it’s all the better that normal developers actually love developing with it!\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://ionicframework.com/blog/angularjs-will-be-huge/\"\u003eWhy AngularJS Will Be Huge\u003c/a\u003e.\u003c/p\u003e","title":"Why AngularJS Will Be Huge"},{"content":"Yesterday I gave a talk at FOSDEM 2014 in Brussels. The conference itself was amazing, with over 5000 attendees literally swarming and taking over the ULB Campus. I was stoked at how smoothly everything was going on despite the incredible number of simultaneous sessions and the number of attendees continuously flowing between buildings and conference rooms. Everybody involved, volunteers and attendees, has been very welcoming, charming and helpful. In short, I had a blast.\nMy REST APIs for Humans™ talk was given in a fully packed Python DevRoom, which granted a lot of smart questions both in the final QA session and later during the day. Thanks everybody for the great feedback!\n","permalink":"https://nicolaiarocci.com/rest-apis-humans-fosdem/","summary":"\u003cp\u003eYesterday I gave a talk at FOSDEM 2014 in Brussels. The conference itself was amazing, with over 5000 attendees literally swarming and taking over the ULB Campus. I was stoked at how smoothly everything was going on despite the incredible number of simultaneous sessions and the number of attendees continuously flowing between buildings and conference rooms. Everybody involved, volunteers and attendees,  has been very welcoming, charming and helpful. In short, I had a blast.\u003c/p\u003e","title":"REST APIs for Humans at FOSDEM"},{"content":"I can’t say I left the .NET Framework altogether as our main app was developed with .NET and we still maintain it on daily basis. Whenever applicable however, all the recent stuff is being done outside the walled garden.\nThe following Jonathan Oliver totally resonates with my experience.\nThe .NET Framework was good. Really good. Until it wasn’t. Why did I leave .NET? In short, it constrained our ability to choose (which is a huge deal for me) and turned our focus inward toward the perceived safety of the nest instead of the helping us experiencing all of the possibilities out there in the big, wide world.\nvia Why I Left the .NET Framework.\n","permalink":"https://nicolaiarocci.com/left-net-framework/","summary":"\u003cp\u003eI can’t say I left the .NET Framework altogether as our main app was developed with .NET and we still maintain it on daily basis. Whenever applicable however, all the recent stuff is being done outside the walled garden.\u003c/p\u003e\n\u003cp\u003eThe following Jonathan Oliver totally resonates with my experience.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe .NET Framework was good. Really good. Until it wasn’t. Why did I leave .NET? In short, it constrained our ability to choose (which is a huge deal for me) and turned our focus inward toward the perceived safety of the nest instead of the helping us experiencing all of the possibilities out there in the big, wide world.\u003c/p\u003e","title":"Why I Left the .NET Framework"},{"content":"This is really worth you time if you’re looking to learn C language (you should).\nThis article attempts to give a sort of ‘orientation tour’ for people whose previous programming background is in high (ish) level languages such as Java or Python, and who now find that they need or want to learn C.\nvia The Descent to C.\n","permalink":"https://nicolaiarocci.com/the-descent-to-c/","summary":"\u003cp\u003eThis is really worth you time if you’re looking to learn C language (you should).\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis article attempts to give a sort of ‘orientation tour’ for people whose previous programming background is in high (ish) level languages such as Java or Python, and who now find that they need or want to learn C.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://www.chiark.greenend.org.uk/~sgtatham/cdescent/\"\u003eThe Descent to C\u003c/a\u003e.\u003c/p\u003e","title":"The Descent to C"},{"content":"This is a subject I’ve been pondering on for a while.\nI think we all have an urge to mark our stamp on this world, to graffiti ‘I was here–don’t forget me’. Yet, as a programmer, where is my legacy?\nvia A programmer’s legacy.\n","permalink":"https://nicolaiarocci.com/a-programmers-legacy/","summary":"\u003cp\u003eThis is a subject I’ve been pondering on for a while.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI think we all have an urge to mark our stamp on this world, to graffiti ‘I was here–don’t forget me’. Yet, as a programmer, where is my legacy?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://blog.alexmaccaw.com/a-programmers-legacy\"\u003eA programmer’s legacy\u003c/a\u003e.\u003c/p\u003e","title":"A programmer’s legacy"},{"content":"Pro Git Workflow is an interesting collection of Git shortcuts, aliases and workflows. Nothing really new but give it a shot if you want to improve your git-fu beyond basics.\n","permalink":"https://nicolaiarocci.com/pro-git-workflow/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003ePro Git Workflow\u003c!-- raw HTML omitted --\u003e is an interesting collection of Git shortcuts, aliases and workflows. Nothing really new but give it a shot if you want to improve your git-fu beyond basics.\u003c/p\u003e","title":"Pro Git Workflow"},{"content":"Best collection of Terminal tricks ever:\nGot any tips or tricks for Terminal in Mac OS X? – Ask Different.\n","permalink":"https://nicolaiarocci.com/got-tips-tricks-terminal-mac-os-x/","summary":"\u003cp\u003eBest collection of Terminal tricks ever:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://apple.stackexchange.com/questions/5435/got-any-tips-or-tricks-for-terminal-in-mac-os-x\"\u003eGot any tips or tricks for Terminal in Mac OS X? – Ask Different\u003c/a\u003e.\u003c/p\u003e","title":"Got any tips or tricks for Terminal in Mac OS X?"},{"content":" Hey, you!\nThis is a JavaScript guide intended to introduce new developers and help experienced ones to the JavaScript’s best practices.\nvia JS: The Right Way.\n","permalink":"https://nicolaiarocci.com/javascript-the-right-way/","summary":"\u003cblockquote\u003e\n\u003cp\u003eHey, you!\u003c/p\u003e\n\u003cp\u003eThis is a JavaScript guide intended to introduce new developers and help experienced ones to the JavaScript’s best practices.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://jstherightway.org/?utm_content=buffer7f09d\u0026amp;utm_medium=social\u0026amp;utm_source=twitter.com\u0026amp;utm_campaign=buffer\"\u003eJS: The Right Way\u003c/a\u003e.\u003c/p\u003e","title":"JavaScript: The Right Way"},{"content":" As a developer, I sometimes forget the power I yield. It’s easy to forget that, when something doesn’t work the way I’d like, I have the power to change it.\nvia Python and Flask Are Ridiculously Powerful.\n","permalink":"https://nicolaiarocci.com/python-and-flask-are-ridiculously-powerful/","summary":"\u003cblockquote\u003e\n\u003cp\u003eAs a developer, I sometimes forget the power I yield. It’s easy to forget that, when something doesn’t work the way I’d like, I have the power to change it.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://jeffknupp.com/blog/2014/01/18/python-and-flask-are-ridiculously-powerful/\"\u003ePython and Flask Are Ridiculously Powerful\u003c/a\u003e.\u003c/p\u003e","title":"Python and Flask Are Ridiculously Powerful"},{"content":"Shit happens. Way more often than what most people think.\nIt may seem surprising that a seemingly successful product could fail, but it happens all the time. Although we arguably found product/market fit, we couldn’t quite crack the business side of things.\nvia Chris Hates Writing • Today my startup failed.\n","permalink":"https://nicolaiarocci.com/today-my-startup-failed/","summary":"\u003cp\u003eShit happens. Way more often than what most people think.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt may seem surprising that a seemingly successful product could fail, but it happens all the time. Although we arguably found product/market fit, we couldn’t quite crack the business side of things.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://chrishateswriting.com/post/74083032842/today-my-startup-failed\"\u003eChris Hates Writing • Today my startup failed\u003c/a\u003e.\u003c/p\u003e","title":"Today my startup failed"},{"content":"Yesterday I attended the Digital Divide Workshop ran by Agenda Digitale Ravenna. With my friend Giulio Cesare we gave a quick introductory talk on the CoderDojo we are launching in our area. Want to help as a mentor? Get in touch!\n","permalink":"https://nicolaiarocci.com/coderdojo-launch/","summary":"\u003cp\u003eYesterday I attended the \u003ca href=\"http://agendadigitaleravenna.it\"\u003eDigital Divide Workshop\u003c/a\u003e ran by Agenda Digitale Ravenna. With my friend \u003ca href=\"http://www.linkedin.com/in/gcsolaroli\"\u003eGiulio Cesare\u003c/a\u003e we gave a quick \u003ca href=\"https://speakerdeck.com/nicola/coderdojo-romagna\"\u003eintroductory talk\u003c/a\u003e on the CoderDojo we are launching in our area. Want to help as a mentor? \u003ca href=\"http://coderdojoravenna.it/collabora/\"\u003eGet in touch\u003c/a\u003e!\u003c/p\u003e","title":"CoderDojo Launch"},{"content":" This document is an attempt to be a fairly comprehensive guide to recovering from what you did not mean to do when using git.\nvia On undoing, fixing, or removing commits in git.\n","permalink":"https://nicolaiarocci.com/on-undoing-fixing-or-removing-commits-in-git/","summary":"\u003cblockquote\u003e\n\u003cp\u003eThis document is an attempt to be a fairly comprehensive guide to recovering from what you did not mean to do when using git.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://sethrobertson.github.io/GitFixUm/fixup.html\"\u003eOn undoing, fixing, or removing commits in git\u003c/a\u003e.\u003c/p\u003e","title":"On undoing, fixing, or removing commits in git"},{"content":"This is a very good ebook, and is free for reading online.\nThis book is for new developers, experienced developers, and everyone in between who wants to master Unix and Linux commands. This book was designed to showcase some of the most useful commands that a developer can know to help them in their daily tasks.\nvia Softcover | Conquering the Command Line.\n","permalink":"https://nicolaiarocci.com/conquering-the-command-line/","summary":"\u003cp\u003eThis is a very good ebook, and is free for reading online.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis book is for new developers, experienced developers, and everyone in between who wants to master Unix and Linux commands. This book was designed to showcase some of the most useful commands that a developer can know to help them in their daily tasks.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://conqueringthecommandline.com/book/frontmatter#preface\"\u003eSoftcover | Conquering the Command Line\u003c/a\u003e.\u003c/p\u003e","title":"Conquering the Command Line"},{"content":"… and a Great Person in general.\nEmpathy is your most important skill. Practice it with everyone you interact with, and everyone who interacts with your work.\nHumility goes hand in hand with empathy. Be open to the possibility (likelihood, even) that you are wrong. Know that you will always be learning and improving. accept and own up to mistakes immediately.\nThe less you fear being wrong, the more confident you can be. You are wrong about many things. You know very little about most things. Everyone else is exactly the same way. Embrace it. Always learn, always question, always adapt and grow.\nUnderstand what you do well, and what you don’t.\n(…)\nvia The Pastry Box Project.\n","permalink":"https://nicolaiarocci.com/how-to-be-a-great-developer/","summary":"\u003cp\u003e… and a Great Person in general.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eEmpathy is your most important skill. Practice it with everyone you interact with, and everyone who interacts with your work.\u003c/p\u003e\n\u003cp\u003eHumility goes hand in hand with empathy. Be open to the possibility (likelihood, even) that you are wrong. Know that you will always be learning and improving. accept and own up to mistakes immediately.\u003c/p\u003e\n\u003cp\u003eThe less you fear being wrong, the more confident you can be. You are wrong about many things. You know very little about most things. Everyone else is exactly the same way. Embrace it. Always learn, always question, always adapt and grow.\u003c/p\u003e","title":"How To Be A Great Developer"},{"content":"This is seriously good collection of resources for web designers and the likes, don’t miss it.\nI’ll let you in on a little secret: beautiful websites aren’t made, they’re found. Smart designers know where to find that perfect photo, subtle pattern or that unique icon.\nHere’s where the best designers go to find photos, graphics, icons, and more.\nvia Where the best designers go to find photos and graphics | Blog.\n","permalink":"https://nicolaiarocci.com/where-the-best-designers-go-to-find-photos-and-graphics-blog/","summary":"\u003cp\u003eThis is  seriously good collection of resources for web designers and the likes, don’t miss it.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI’ll let you in on a little secret: beautiful websites aren’t made, they’re found. Smart designers know where to find that perfect photo, subtle pattern or that unique icon.\u003c/p\u003e\n\u003cp\u003eHere’s where the best designers go to find photos, graphics, icons, and more.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003ca href=\"http://www.sitebuilderreport.com/blog/where-the-best-designers-go-to-find-photos-and-graphics\"\u003eWhere the best designers go to find photos and graphics | Blog\u003c/a\u003e.\u003c/p\u003e","title":"Where the best designers go to find photos and graphics"},{"content":"A few days ago I tweeted:\nNow the project is out in the wild and I’m very excited about it. It’s all italian yes, but do know that CoderDojo is a global movement, and starting a kids coding club in your own town would probably be great idea.\nCome meet me next week. I will be giving a short talk about CoderDojo Ravenna and, most importantly, we’ll have a good pizza afterwards. Oh, and we’re looking for mentors to join us.\n","permalink":"https://nicolaiarocci.com/giving-back-to-my-community-with-coderdojo-ravenna/","summary":"\u003cp\u003eA few days ago I tweeted:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eNow the project is \u003ca href=\"http://coderdojoravenna.it/\"\u003eout in the wild\u003c/a\u003e and I’m very excited about it. It’s all italian yes, but do know that CoderDojo is a \u003ca href=\"http://coderdojo.com\"\u003eglobal movement\u003c/a\u003e, and starting a kids coding club in your own town would probably be great idea.\u003c/p\u003e\n\u003cp\u003eCome meet me \u003ca href=\"http://coderdojoravenna.it/coderdojo-al-workshop-di-agenda-digitale-sul-digital-divide/\"\u003enext week\u003c/a\u003e. I will be giving a short talk about CoderDojo Ravenna and, most importantly, we’ll have a good pizza afterwards. Oh, and we’re \u003ca href=\"http://coderdojoravenna.it/collabora/\"\u003elooking for mentors\u003c/a\u003e to join us.\u003c/p\u003e","title":"Giving back to my community"},{"content":"Would it be possible (and advisable) for a person to deal with everyday matters as if he/she was a stateless machine?\nImagine if you as a person dealt with millions of requests a day from a thousand or so clients: if you had to keep track all those clients and the multiple requests they were making, it would drive you crazy. The burden of remembering would crush you.\nThis is what our lives are like. We are constantly holding information, frustration, ideas, tension, requests, needs, of a thousand different requests each day. Every email, every call, every text message, every open browser tab, every interaction with another person, every task we do … it all builds up in us until we are overloaded.\nvia Stateless Mindset : zenhabits.\n","permalink":"https://nicolaiarocci.com/stateless-mindset/","summary":"\u003cp\u003eWould it be possible (and advisable) for a person to deal with everyday matters as if he/she was a stateless machine?\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eImagine if you as a person dealt with millions of requests a day from a thousand or so clients: if you had to keep track all those clients and the multiple requests they were making, it would drive you crazy. The burden of remembering would crush you.\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Stateless Mindset"},{"content":"Dennis M. Ritchie ‘The Development of the C Language’ is one of those things any programmer should read soon or later, if nothing else for historic reasons.\nC came into being in the years 1969-1973, in parallel with the early development of the Unix operating system; the most creative period occurred during 1972. Another spate of changes peaked between 1977 and 1979, when portability of the Unix system was being demonstrated. In the middle of this second period, the first widely available description of the language appeared: The C Programming Language, often called the `white book’ or `K\u0026amp;R’ [Kernighan 78].\nvia Chistory.\n","permalink":"https://nicolaiarocci.com/the-development-of-the-c-language/","summary":"\u003cp\u003eDennis M. Ritchie ‘The Development of the C Language’ is one of those things any programmer should read soon or later, if nothing else for historic reasons.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eC came into being in the years 1969-1973, in parallel with the early development of the Unix operating system; the most creative period occurred during 1972. Another spate of changes peaked between 1977 and 1979, when portability of the Unix system was being demonstrated. In the middle of this second period, the first widely available description of the language appeared: The C Programming Language, often called the `white book’ or `K\u0026amp;R’ [Kernighan 78].\u003c/p\u003e","title":"The Development of the C Language"},{"content":" What we may not have realized is that once the browsers don’t suck, being an HTML and CSS “guru” isn’t really a very marketable skillset. 80% of what made us useful was the way we knew all the quirks and intracries of the browsers. Guess what? Those are all gone. And if they’re not, they will be in the very near future. Then what?\nA lot of folks who came up from that time and headspace have diversified their skillsets since. Many are now programmers, or project managers, or creative directors, or business owners. But a lot of others are still making a go of it as an HTML and CSS guru, often in a comfortable job they’ve had for years. What happens when that gig comes to an end?\nvia Web Standards Killed the HTML Star – JeffCroft.com.\n","permalink":"https://nicolaiarocci.com/web-standards-killed-the-html-star/","summary":"\u003cblockquote\u003e\n\u003cp\u003eWhat we may not have realized is that once the browsers don’t suck, being an HTML and CSS “guru” isn’t really a very marketable skillset. 80% of what made us useful was the way we knew all the quirks and intracries of the browsers. Guess what? Those are all gone. And if they’re not, they will be in the very near future. Then what?\u003c/p\u003e\n\u003cp\u003eA lot of folks who came up from that time and headspace have diversified their skillsets since. Many are now programmers, or project managers, or creative directors, or business owners. But a lot of others are still making a go of it as an HTML and CSS guru, often in a comfortable job they’ve had for years. What happens when that gig comes to an end?\u003c/p\u003e","title":"Web Standards Killed the HTML Star"},{"content":"We shouldn’t really trust this kind of statistics, I know, but when my favorite language comes out as a clear winner, I can’t resist and take them for good.\nPython is the “language of the year” according to the PYPL index : it had the biggest increase in popularity share in 2013. PHP had the biggest decline. Meanwhile, Java continues to have the highest popularity share among the programming languages.\nvia Python is the Language of the Year – pyDatalog.\n","permalink":"https://nicolaiarocci.com/python-is-the-language-of-the-year/","summary":"\u003cp\u003eWe shouldn’t really trust this kind of statistics, I know, but when my favorite language comes out as a clear winner, I can’t resist and take them for good.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePython is the “language of the year” according to the PYPL index : it had the biggest increase in popularity share in 2013. PHP had the biggest decline. Meanwhile, Java continues to have the highest popularity share among the programming languages.\u003c/p\u003e","title":"Python is the Language of the Year"},{"content":" You’re so damn smart — I’ve told you how awesome I think you and the solutions you’ve built…they’re amazing. You have so many awesome things on your hard drive you built that it would blow the world away if only they knew. You created Facebook before there was Facebook and PayPal before there was PayPal. But recently I’ve heard you ask, “how can this junk software out there be so popular?”…why are all these idiots more successful than me?\nvia Why Are All These Idiots More Successful Than You?.\n","permalink":"https://nicolaiarocci.com/why-are-all-these-idiots-more-successful-than-you/","summary":"\u003cblockquote\u003e\n\u003cp\u003eYou’re so damn smart — I’ve told you how awesome I think you and the solutions you’ve built…they’re amazing. You have so many awesome things on your hard drive you built that it would blow the world away if only they knew. You created Facebook before there was Facebook and PayPal before there was PayPal. But recently I’ve heard you ask, “how can this junk software out there be so popular?”…why are all these idiots more successful than me?\u003c/p\u003e","title":"Why Are All These Idiots More Successful Than You?"},{"content":"Maybe instead of Coder Dojos for kids, we should run them for their teachers.\nWe must build a team of dedicated teachers to support school coding programs. We do not rely on our students to absorb math from textbooks, online videos or math clubs; similarly, we cannot depend on every student to learn to code on their own, by using online tutorials and afterschool clubs. If coding becomes as fundamental as reading and writing, we need to create a system where everyone has an opportunity to learn, not just the few who probably would have learned it on their own anyway.\nvia OPINION: We Need Coding in Schools, but Where are the Teachers? | EdSurge News.\n","permalink":"https://nicolaiarocci.com/we-need-coding-in-schools-but-where-are-the-teachers/","summary":"\u003cp\u003eMaybe instead of Coder Dojos for kids, we should run them for their teachers.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe must build a team of dedicated teachers to support school coding programs. We do not rely on our students to absorb math from textbooks, online videos or math clubs; similarly, we cannot depend on every student to learn to code on their own, by using online tutorials and afterschool clubs. If coding becomes as fundamental as reading and writing, we need to create a system where everyone has an opportunity to learn, not just the few who probably would have learned it on their own anyway.\u003c/p\u003e","title":"We Need Coding in Schools, but Where are the Teachers?"},{"content":"A very interesting read if you’re into Python. Eve has been Python 3 compatible for a while and honestl, I would be surprised to find that somebody is running it in production under Python 3.\nWhy aren’t people using Python 3?\nFirst, I think it’s because of a lack of urgency. Many years ago, before I knew how to program, the decision to have Python 3 releases live in parallel to Python 2 releases was made. In retrospect this was a mistake, it resulted in a complete lack of urgency for the community to move, and the lack of urgency has given way to lethargy.\nSecond, I think there’s been little uptake because Python 3 is fundamentally unexciting. It doesn’t have the super big ticket items people want, such as removal of the GIL or better performance (for which many are using PyPy). Instead it has many new libraries (whose need is largely filled by pip install), and small cleanups which many experienced Python developers just avoid by habit at this point. Certainly nothing that would make one stop their development for any length of time to upgrade, not when Python 2 seems like it’s going to be here for a while.\nvia Alex Gaynor — About Python 3.\n","permalink":"https://nicolaiarocci.com/alex-gaynor-about-python-3/","summary":"\u003cp\u003eA very interesting read if you’re into Python. Eve has been Python 3 compatible for a while and honestl, I would be surprised to find that somebody is running it in production under Python 3.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhy aren’t people using Python 3?\u003c/p\u003e\n\u003cp\u003eFirst, I think it’s because of a lack of urgency. Many years ago, before I knew how to program, the decision to have Python 3 releases live in parallel to Python 2 releases was made. In retrospect this was a mistake, it resulted in a complete lack of urgency for the community to move, and the lack of urgency has given way to lethargy.\u003c/p\u003e","title":"Alex Gaynor — About Python 3"},{"content":"Number #3 on Praeclarum’s list hits home for me, but all his points are both valid and strong.\nAs a programming language nerd I had mixed feelings when Jon Galloway tweeted about Microsoft’s new programming language.\n“Why are your feelings mixed?” I kept asking myself. I love new programming languages. I took an internship at Microsoft just so I could be closer to the people who made C#. I read language specs for fun. I write compilers for fun. I sell a programming language, interpreter, and IDE.\nSo why am I not thrilled? Finally, after as much soul searching as 4 hours of sleep allowed me, I identified a few reasons for this pit in my stomach:\nvia præclarum – Microsoft’s New Systems Language.\n","permalink":"https://nicolaiarocci.com/microsofts-new-systems-language/","summary":"\u003cp\u003eNumber #3 on Praeclarum’s list hits home for me, but all his points are both valid and strong.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAs a programming language nerd I had mixed feelings when Jon Galloway tweeted about Microsoft’s new programming language.\u003c/p\u003e\n\u003cp\u003e“Why are your feelings mixed?” I kept asking myself. I love new programming languages. I took an internship at Microsoft just so I could be closer to the people who made C#. I read language specs for fun. I write compilers for fun. I sell a programming language, interpreter, and IDE.\u003c/p\u003e","title":"Microsoft’s New Systems Language"},{"content":" I barely knew Colin. He sat two offices down from me, but we never worked on anything together, never laid eyes on each other after 5 p.m. Our relationship consisted, in its entirety, of work-related small talk in the break room, his lunch rotating behind us in the microwave. Ding, stir, have a good rest of your day.\nvia What Happens When One of Your Coworkers Dies | The Billfold.\n","permalink":"https://nicolaiarocci.com/happens-one-coworkers-dies/","summary":"\u003cblockquote\u003e\n\u003cp\u003eI barely knew Colin. He sat two offices down from me, but we never worked on anything together, never laid eyes on each other after 5 p.m. Our relationship consisted, in its entirety, of work-related small talk in the break room, his lunch rotating behind us in the microwave. Ding, stir, have a good rest of your day.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003c!-- raw HTML omitted --\u003eWhat Happens When One of Your Coworkers Dies | The Billfold\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"What Happens When One of Your Coworkers Dies"},{"content":" Many web developers know about SSL, but it is very common to see it only partially deployed, or not deployed where it should be. This basic guide on when and how to deploy SSL will help you avoid the most common mistakes.\nvia A basic guide to when and how to deploy HTTPS — Erik Romijn.\n","permalink":"https://nicolaiarocci.com/a-basic-guide-to-when-and-how-to-deploy-https/","summary":"\u003cblockquote\u003e\n\u003cp\u003eMany web developers know about SSL, but it is very common to see it only partially deployed, or not deployed where it should be. This basic guide on when and how to deploy SSL will help you avoid the most common mistakes.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003c!-- raw HTML omitted --\u003eA basic guide to when and how to deploy HTTPS — Erik Romijn\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"A basic guide to when and how to deploy HTTPS"},{"content":" On seeing WarGames for the first time in the 1980s, I wondered which magazine it was. Later, after seeing it on TV and on VHS/DVD, the same question kept nagging at me. I believed that I would one day get to the bottom of this matter. I correctly assumed that the magazine was a real world magazine with a fake advertisement added to it. Through some effort and persistence I finally achieved my goal on 2013-02-24 at 5:30pm.\nvia WarGames Magazine Identified By Michael Walden.\n","permalink":"https://nicolaiarocci.com/wargames-magazine-identified/","summary":"\u003cblockquote\u003e\n\u003cp\u003eOn seeing WarGames for the first time in the 1980s, I wondered which magazine it was. Later, after seeing it on TV and on VHS/DVD, the same question kept nagging at me. I believed that I would one day get to the bottom of this matter. I correctly assumed that the magazine was a real world magazine with a fake advertisement added to it. Through some effort and persistence I finally achieved my goal on 2013-02-24 at 5:30pm.\u003c/p\u003e","title":"WarGames Magazine Identified"},{"content":" Fred Brooks wrote the software development classic The Mythical Man-Month almost 40 years ago. In this interview, Brooks explains why managers still make the same mistakes.\nvia Why Good Programming Projects Go Bad.\n","permalink":"https://nicolaiarocci.com/why-good-programming-projects-go-bad/","summary":"\u003cblockquote\u003e\n\u003cp\u003eFred Brooks wrote the software development classic The Mythical Man-Month almost 40 years ago. In this interview, Brooks explains why managers still make the same mistakes.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003c!-- raw HTML omitted --\u003eWhy Good Programming Projects Go Bad\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Why Good Programming Projects Go Bad"},{"content":" If you write Python code, switching to IPython is the number one thing you can do to immediately improve your productivity. Bold words, I know. Let’s look at how IPython can make you a more productive programmer.\nvia You Should Change Your Python Shell | GrokCode.\n","permalink":"https://nicolaiarocci.com/you-should-change-your-python-shell/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIf you write Python code, switching to IPython is the number one thing you can do to immediately improve your productivity. Bold words, I know. Let’s look at how IPython can make you a more productive programmer.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003evia \u003c!-- raw HTML omitted --\u003eYou Should Change Your Python Shell | GrokCode\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"You Should Change Your Python Shell"},{"content":"The new release changes the way validation errors are reported. Please note that these changes will also affect future releases of Eve, the Python REST API Framework.\nWhat we had before was basically a list of human-readable errors. Each item in the list, while perfectly fine for human reading, wasn\u0026rsquo;t really ideal for algorithmic parsing. Why would you want to parse the errors with an algorithm? A common case would be when your client is using business objects to represent API resources (think a client-side ORM), and would have a hard time binding validation errors to the objects themselves.\nSo for example, previously we had:\n[ \u0026quot;min value for field age is 10\u0026quot;, \u0026quot;value of field name must be of string type\u0026quot; ] With Cerberus 0.5+ we now have:\n{ age: min value is 10, name: must be of string type }\nLet\u0026rsquo;s look at more complex structures, like lists. Imagine we have a schema defined like this:\nschema = { 'list_of_values': { 'type': 'list', 'items': [{'type': 'string'}, {'type': 'integer'}] } } And this is the document we want to validate against it:\ndocument = { 'a_list_of_values': ['a string', 'not an integer'] } Validation will of course fail and, given the new dictionary format, inspecting the errors property will return the following:\n\u0026gt;\u0026gt;\u0026gt; v = Validator(document, schema) False \u0026gt;\u0026gt;\u0026gt; v.errors {1: 'must be of integer type'} Let\u0026rsquo;s look at a document that contains a list of dictionaries instead:\ndocument = { rows: [ {'sku': 1, 'price': 100}, {'sku': 'hello', 'price': '1'} ] } Validation errors will be reported like this:\n{ rows: { 0: { 'sku': 'must be of string type', 'price': 'must be of integer type' }, 1: { 'price': 'must be of integer type' } } } By contrasts, on top of my memory, any previous Cerberus release would report:\n[ \u0026quot;rows[0]\u0026quot;: 'field \u0026quot;sku\u0026quot; in must be of string type', \u0026quot;rows[0]\u0026quot;: 'field \u0026quot;price\u0026quot; in must be of integer type', \u0026quot;rows[1]\u0026quot;: 'field \u0026quot;price\u0026quot; in must be of integer type' ] As you can easily see, the old implementation was forcing the client to properly parse the list in order to retrieve line number, offending field and the actual error. Overall Im fairly confident that this is an important step forward. Checkout the documentation, which has been updated to reflect the changes.\nGet Cerberus 0.5 while its hot.\n","permalink":"https://nicolaiarocci.com/cerberus-0-5-is-out-and-it-breaks-stuff/","summary":"\u003cp\u003eThe new release changes the way validation errors are reported. Please note that these changes will also affect future releases of \u003ca href=\"http://python-eve.org\"\u003eEve\u003c/a\u003e, the Python REST API Framework.\u003c/p\u003e\n\u003cp\u003eWhat we had before was basically a list of human-readable errors. Each item in the list, while perfectly fine for human reading, wasn\u0026rsquo;t really ideal for algorithmic parsing. Why would you want to parse the errors with an algorithm? A common case would be when your client is using business objects to represent API resources (think a client-side ORM), and would have a hard time binding validation errors to the objects themselves.\u003c/p\u003e","title":"Cerberus 0.5 is out (and it breaks stuff)"},{"content":"I\u0026rsquo;ve been using a Kindle for a long time now, and I love it. But I keep buying paper books. Lots of them. Actually I buy a lot more books than ebooks and it doesn\u0026rsquo;t even stop there. Admittedly, I am guilty of repeatedly buying paper editions of ebooks I\u0026rsquo;ve read on the Kindle.\nFor a very long time I\u0026rsquo;ve not been able to tell the precise reason why I keep going back to traditional books. It\u0026rsquo;s not about the reading experience or the sexiness of turning physical pages. Well of course that matters too, as I\u0026rsquo;ve always been kind of a book fetishist, but since the very beginning of my love-hate relationship with the Kindle I\u0026rsquo;ve always known there had to be something else, and I couldn\u0026rsquo;t pin it down.\nThen yesterday it finally struck me. I was visiting the awesome Silent Books exhibition with the kids, and there was this Suzy Lee quote pinned on the wall, and I couldn\u0026rsquo;t stop reading it over and over.\nIn turning the pages of a book,\na little world opens and closes,\nenclosed in a frame.\nStory ends, the book closes.\nThe world closes too.\nThen it\u0026rsquo;s quickly placed on a shelf.\nArt can be placed on a shelf.\nShelf-sized art.\nIsn\u0026rsquo;t that beautiful? (*)\nSo yes, it\u0026rsquo;s about the shelves. It\u0026rsquo;s about surrounding myself with those little worlds I\u0026rsquo;ve been exploring. I suddenly realized that several times every day, while I\u0026rsquo;m furiously coding or when I\u0026rsquo;m just walking around the house or heck, even while I\u0026rsquo;m reading a book, each day my eyes like to indulge on those shelves, the vivid memories of my reading experiences. That\u0026rsquo;s something the files stored on my precious little Kindle can\u0026rsquo;t offer me.\nThat also explains why I only tend to buy what I call \u0026rsquo;throw away\u0026rsquo; books on the Kindle. These aren\u0026rsquo;t necessarily bad books (or I wouldn\u0026rsquo;t buy them in the first place). They are mostly leisure readings, you know, thrillers and the like: something that\u0026rsquo;s entertaining to read but it isn\u0026rsquo;t likely to leave me with a long lasting memory, or emotion.\n(*) turns out the Border Trilogy, Suzy Lee\u0026rsquo;s book from which the quote__ is taken, has not been published in english, which is a shame. This is a (probably poor) translation of mine_.\n","permalink":"https://nicolaiarocci.com/on-why-i-still-prefer-traditional-books-to-ebooks/","summary":"\u003cp\u003eI\u0026rsquo;ve been using a Kindle for a long time now, and I love it. But I keep buying paper books. Lots of them. Actually I buy a \u003cem\u003elot\u003c/em\u003e more books than ebooks and it doesn\u0026rsquo;t even stop there. Admittedly, I am guilty of repeatedly buying paper editions of ebooks I\u0026rsquo;ve read on the Kindle.\u003c/p\u003e\n\u003cp\u003eFor a very long time I\u0026rsquo;ve not been able to tell the precise reason why I keep going back to traditional books. It\u0026rsquo;s not about the reading experience or the sexiness of turning physical pages. Well of course that matters too, as I\u0026rsquo;ve always been kind of a book fetishist, but since the very beginning of my love-hate relationship with the Kindle I\u0026rsquo;ve always known there had to be something else, and I couldn\u0026rsquo;t pin it down.\u003c/p\u003e","title":"On Why I Still Prefer Traditional Books to eBooks"},{"content":"I had the opportunity to give my RESTful WeB APIs and MongoDB Go For A Picnic talk at both MongoTorino and NoSQL Day. The folks at PUG Friuli where so nice to record all the NoSQL Day sessions, so here you have it: the full length video of yours truly speaking to a fully packed room crowded with 120 very attentive attendees.\nUnfortunately audio is horrible and while all MongoTorino talks were in english, NoSQL Day was an italian-only event. The slide deck is in english however, and is available on both SpeakerDeck and SlideShare.\n","permalink":"https://nicolaiarocci.com/mongodb-rest-api-go-picnic-video-slides/","summary":"\u003cp\u003eI had the opportunity to give my \u003ca href=\"https://speakerdeck.com/nicola/restful-web-api-and-mongodb-go-for-a-pic-nic\"\u003eRESTful WeB APIs and MongoDB Go For A Picnic\u003c/a\u003e talk at both \u003ca href=\"http://www.mongotorino.org/\"\u003eMongoTorino\u003c/a\u003e and \u003ca href=\"http://2013.nosqlday.it/\"\u003eNoSQL Day\u003c/a\u003e. The folks at PUG Friuli where so nice to record all the NoSQL Day sessions, so here you have it: the full length \u003ca href=\"http://vimeo.com/79662146\"\u003evideo of yours truly speaking\u003c/a\u003e to a fully packed room crowded with 120 very attentive attendees.\u003c/p\u003e\n\u003cp\u003eUnfortunately audio is horrible and while all MongoTorino talks were in english, NoSQL Day was an italian-only event. The slide deck is in english however, and is available on both \u003ca href=\"https://speakerdeck.com/nicola/restful-web-api-and-mongodb-go-for-a-pic-nic\"\u003eSpeakerDeck\u003c/a\u003e and \u003ca href=\"http://www.slideshare.net/nicolaiarocci/rest-web-api-with-mongodb\"\u003eSlideShare\u003c/a\u003e.\u003c/p\u003e","title":"MongoDB and REST API go for a picnic (video and slides)"},{"content":"A little more than a year ago we closed our offices to become a fully distributed company. This story, which is still unfolding, has been the subject of my We Are All Remote Workers talk at RomagnaCamp 2013.\n","permalink":"https://nicolaiarocci.com/we-are-all-remote-workers/","summary":"\u003cp\u003eA little more than a year ago we closed our offices to become a fully distributed company. This story, which is still unfolding, has been the subject of my \u003ca href=\"https://speakerdeck.com/nicola/we-are-all-remote-workers\"\u003eWe Are All Remote Workers\u003c/a\u003e talk at RomagnaCamp 2013.\u003c/p\u003e","title":"We Are All Remote Workers"},{"content":"So I’ve been interviewed by Laura Czajkowski on my experience and role as a MongoDB Master. The interview actually covers more angles than that and I guess that, if you really don’t have anything better to do, you might even want to check it out.\nHow did you get involved in open source?\nI’ve been an avid developer delivering desktop applications in the .NET/MSSQL closed source ecosystem for so many years that open source wasn’t even on my radar.\nThen a few years ago, like everybody else, we found that we needed to get involved with the mobile world. That’s when I thought that it was time to finally to get out of my comfort zone and start looking out of my walled garden. In fact, while historically there always have been little alternative to the Microsoft/.NET/SQL ecosystem for building business Windows applications, now we were about to address a completely different beast.\nFirst step in any mobile strategy is building a proper web infrastructure, like one or more web APIs, remote servers, etc. While .NET was well suited for the task, I knew that there were other valid, robust and mature alternatives out there and that I had to learn more about them before picking any choice.\nMy involvement with open source, the whole Python language, MongoDB and the NoSQL movement is the direct consequence of that learning process.\nMeeting the EMEA MongoDB Masters – Nicola Iarocci\n","permalink":"https://nicolaiarocci.com/my-interview-on-being-a-mongodb-master/","summary":"\u003cp\u003eSo I’ve been interviewed by Laura Czajkowski on my experience and role as a MongoDB Master. The interview actually covers more angles than that and I guess that, if you \u003cem\u003ereally\u003c/em\u003e don’t have anything better to do, you might even want to check it out.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eHow did you get involved in open source?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI’ve been an avid developer delivering desktop applications in the .NET/MSSQL closed source ecosystem for so many years that open source wasn’t even on my radar.\u003c/p\u003e","title":"My interview on being a MongoDB Master"},{"content":"Another Eve release is out and I’m particularly proud about it since it brings full Python 3.3 support (among other things). Check out the relevant blog post: Eve 0.0.9 is out!\n","permalink":"https://nicolaiarocci.com/eve-with-python-3-3-support/","summary":"\u003cp\u003eAnother Eve release is out and I’m particularly proud about it since it brings full Python 3.3 support (among other things). Check out the relevant blog post: \u003ca href=\"http://blog.python-eve.org/v009-with-python-33-support\"\u003eEve 0.0.9 is out!\u003c/a\u003e\u003c/p\u003e","title":"Eve with Python 3.3 Support"},{"content":"Bret Victor on Vimeo.\n","permalink":"https://nicolaiarocci.com/the-future-of-programming/","summary":"\u003cp\u003e\u003ca href=\"http://vimeo.com/worrydream\"\u003eBret Victor\u003c/a\u003e on \u003ca href=\"https://vimeo.com\"\u003eVimeo\u003c/a\u003e.\u003c/p\u003e","title":"The Future of Programming"},{"content":" Did you check for a virus on your system?\nYou must have the wrong version.\nIt’s a third party application issue.\nThat code was written by the last guy.\nProgramming Excuses. We’ve all been there.\n","permalink":"https://nicolaiarocci.com/excuses-for-lazy-coders/","summary":"\u003cblockquote\u003e\n\u003cp\u003eDid you check for a virus on your system?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou must have the wrong version.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt’s a third party application issue.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThat code was written by the last guy.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eProgramming Excuses\u003c!-- raw HTML omitted --\u003e. We’ve all been there.\u003c/p\u003e","title":"Excuses for Lazy Coders"},{"content":"The guys at Mailgun are taking a very interesting approach at the ever-lasting problem of proper Email validation:\nGiven an arbitrary address this service validates address based off syntax checks (RFC defined grammar), DNS validation, spell checks, and if available, Email ServiceProvider (ESP) specific local-part grammar.\nThey’re relying on formal grammar and not on regex like the rest of us, which is perhaps the more intriguing aspect of the project. Being Email Service Providers themselves they have good knowledge of most ESPs local-part grammars (the left side of the @ symbol) so when there is a match, they’re validating local-parts too.\nAt the cost of a slight delay DNS, MX and A record validation adds robustness to the process (didn’t really perceive any slowness during my tests). What really shines however, at least in my eyes, is the included “correct address suggestion service”.\nAt the moment they are providing a free API and a mail address validation page. Here’s the catch: consuming the API requires a free Mailgun account. According to their own statement however they are also going to open source the tool and yes, it’s going to be in Python.\n","permalink":"https://nicolaiarocci.com/free-email-validation-api/","summary":"\u003cp\u003eThe guys at Mailgun are taking a \u003c!-- raw HTML omitted --\u003every interesting approach\u003c!-- raw HTML omitted --\u003e at the ever-lasting problem of proper Email validation:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGiven an arbitrary address this service validates address based off syntax checks (RFC defined grammar), DNS validation, spell checks, and if available, Email ServiceProvider (ESP) specific local-part grammar.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThey’re relying on \u003c!-- raw HTML omitted --\u003eformal grammar\u003c!-- raw HTML omitted --\u003e and not on regex like the rest of us, which is perhaps the more intriguing aspect of the project. Being Email Service Providers themselves they have good knowledge of most ESPs local-part grammars (the left side of the @ symbol) so when there is a match, they’re validating local-parts too.\u003c/p\u003e","title":"Free Robust Email Validation API"},{"content":"Most significant features are probably the native support for MongoDB write concern settings, new event hooks allowing for transformation of documents before they are sent to clients, increased handling of both pagination and CORS, and the native validation of float data types.\nGet it on PyPI, go straight to the source code or more likely, visit the project homepage.\n","permalink":"https://nicolaiarocci.com/eve-v0-0-8-has-been-released/","summary":"\u003cp\u003eMost significant features are probably the native support for MongoDB write concern settings, new event hooks allowing for transformation of documents before they are sent to clients, increased handling of both pagination and CORS, and the native validation of float data types.\u003c/p\u003e\n\u003cp\u003eGet it on \u003c!-- raw HTML omitted --\u003ePyPI\u003c!-- raw HTML omitted --\u003e, go straight to the \u003c!-- raw HTML omitted --\u003esource code\u003c!-- raw HTML omitted --\u003e or more likely, visit the \u003c!-- raw HTML omitted --\u003eproject homepage\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Eve v0.0.8 has been released"},{"content":"In ORM is an anti-pattern Laurie Voss concentrates everything I’ve been saying on the ORM plague in all these years.\nIf your project really does not need any relational data features, then ORM will work perfectly for you, but then you have a different problem: you’re using the wrong datastore. The overhead of a relational datastore is enormous; this is a large part of why NoSQL data stores are so much faster. If your data is relational, however, that overhead is worth it: your database does not merely store your data, it represents your data and can answer questions about it on the basis of the relations captured, far more efficiently than you could in procedural code.\nI don’t really know how this article managed to elude my usually long-reaching radar for such a long time.\n","permalink":"https://nicolaiarocci.com/orm-is-an-anti-pattern/","summary":"\u003cp\u003eIn \u003c!-- raw HTML omitted --\u003eORM is an anti-pattern\u003c!-- raw HTML omitted --\u003e Laurie Voss concentrates everything I’ve been saying on the ORM plague in all these years.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf your project really does not need any relational data features, then ORM will work perfectly for you, but then you have a different problem: you’re using the wrong datastore. The overhead of a relational datastore is enormous; this is a large part of why NoSQL data stores are so much faster. If your data is relational, however, that overhead is worth it: your database does not merely \u003cem\u003estore\u003c/em\u003e your data, it \u003cstrong\u003erepresents\u003c/strong\u003e your data and can answer questions about it on the basis of the relations captured, far more efficiently than you could in procedural code.\u003c/p\u003e","title":"ORM is an anti-pattern"},{"content":"I’m just back from the MongoDB Masters Summit hosted by 10Gen in New York City. In just a couple days I was given the opportunity to meet and share knowledge (and fun!) with amazingly talented minds coming from all over the world. I’m back with literally dozen new ideas opportunities and concepts, on which I’ll need to elaborate a little bit. While I cannot comment on the many things the smart minds at 10Gen are working on, rest assured that the future of MongoDB is looking great and brighter than ever.\n","permalink":"https://nicolaiarocci.com/mongodb-masters-summit-2013/","summary":"\u003cp\u003eI’m just back from the \u003c!-- raw HTML omitted --\u003eMongoDB Masters\u003c!-- raw HTML omitted --\u003e Summit hosted by 10Gen in New York City. In just a couple days I was given the opportunity to meet and share knowledge (and fun!) with amazingly talented minds coming from all over the world. I’m back with literally dozen new ideas opportunities and concepts, on which I’ll need to elaborate a little bit. While I cannot comment on the many things the smart minds at 10Gen are working on, rest assured that the future of MongoDB is looking great and brighter than ever.\u003c/p\u003e","title":"MongoDB Masters Summit 2013"},{"content":"Domani sarò al primo meeting romagnolo del #MUG MongoDB User Group organizzato da 10Gen (azienda dietro a MongoDB), Byte-Code e Ideato.\nParlerò di MongoDB usato come backend per una REST WEB API. L’evento si svolgerà in serata a Cesena, è gratuito, e ci sono ancora posti disponibili. Se ci siete passate a salutarmi.\n","permalink":"https://nicolaiarocci.com/mongodb-user-group/","summary":"\u003cp\u003eDomani sarò al primo meeting romagnolo del #MUG MongoDB User Group organizzato da 10Gen (azienda dietro a MongoDB), Byte-Code e Ideato.\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eParlerò di MongoDB usato come backend per una REST WEB API. \u003c!-- raw HTML omitted --\u003eL’evento si svolgerà in serata a Cesena, è gratuito, e ci sono ancora \u003ca href=\"http://www.eventbrite.com/event/6297117849\"\u003eposti disponibili\u003c/a\u003e. Se ci siete passate a salutarmi.\u003c/p\u003e","title":"MongoDB User Group a Cesena"},{"content":"La Open Source Report Card è un’iniziativa divertente. E’ difficile resistere al richiamo dell’ego… soprattutto quand’è smisurato.\nNicola is a champion Pythonista (one of the top 11% most active Python users) who loves pushing code. Nicola is a nine-to-fiver who seems to work best in the mid-afternoon.\n","permalink":"https://nicolaiarocci.com/champion-pythonista/","summary":"\u003cp\u003eLa \u003c!-- raw HTML omitted --\u003eOpen Source Report Card\u003c!-- raw HTML omitted --\u003e è un’iniziativa divertente. E’ difficile resistere al richiamo dell’ego… soprattutto quand’è smisurato.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNicola is a champion Pythonista (one of the top 11% most active Python users) who loves pushing code. Nicola is a nine-to-fiver who seems to work best in the mid-afternoon.\u003c/p\u003e\u003c/blockquote\u003e","title":"Champion Pythonista"},{"content":"E’ passato qualche mese da quando ho annunciato Eve, il REST API framework open source. Nel frattempo il progetto è cresciuto bene: siamo appena giunti alla versione 0.0.6, abbiamo un sito ufficiale, un blog, e stiamo lavorando a nuove feature davvero interessanti.\n","permalink":"https://nicolaiarocci.com/sito-ufficiale-e-blog-per-il-progetto-eve/","summary":"\u003cp\u003eE’ passato qualche mese da quando ho \u003ca href=\"http://nicolaiarocci.com/vi-presento-eve-il-framework-per-lanciare-la-vostra-rest-api-web/\" title=\"Annuncio di Eve\"\u003eannunciato\u003c/a\u003e Eve, il REST API framework open source. Nel frattempo il progetto è cresciuto bene: siamo appena giunti alla \u003ca href=\"http://blog.python-eve.org/eve-006-released\" title=\"Eve 0.0.6\"\u003eversione 0.0.6\u003c/a\u003e, abbiamo un \u003ca href=\"http://python-eve.org\" title=\"Eve REST API homepage\"\u003esito ufficiale\u003c/a\u003e, un \u003ca href=\"http://blog.python-eve.org\" title=\"Eve News\"\u003eblog\u003c/a\u003e, e stiamo lavorando a nuove feature \u003ca href=\"http://blog.python-eve.org/sqlalchemy-and-eve\" title=\"SqlAlchemy and Eve\"\u003edavvero interessanti\u003c/a\u003e.\u003c/p\u003e","title":"Sito ufficiale e blog per il progetto Eve"},{"content":"Aderisco con entusiasmo all’iniziativa di Salvatore.\nHacking Italia e’ un sito di “social news”, molto simile ad Hacker News, il celebre collettore di news per hacker di YCombinator. A che serve un sito italiano, e in italiano se c’e’ gia’ molto di piu’ e di meglio nel panorama internazionale? A mettere assieme una massa critica di persone “giuste” in Italia.\nVi consiglio di aggiungere HI ai vostri bookmark. Per quanto mi riguarda conto di essere molto attivo.\n","permalink":"https://nicolaiarocci.com/hacking-italia/","summary":"\u003cp\u003eAderisco con entusiasmo all’iniziativa di Salvatore.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://hackingitalia.com\" title=\"Hacking Italia\"\u003eHacking Italia\u003c/a\u003e e’ un sito di “social news”, molto simile ad Hacker News, il celebre collettore di news per hacker di YCombinator. A che serve un sito italiano, e in italiano se c’e’ gia’ molto di piu’ e di meglio nel panorama internazionale? A mettere assieme una massa critica di persone “giuste” in Italia.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eVi consiglio di aggiungere HI ai vostri bookmark. Per quanto mi riguarda conto di essere molto attivo.\u003c/p\u003e","title":"Hacking Italia"},{"content":"Cosa sono i gli HTTP Cache Header e come funzionano? Che uso ne fanno i browser e le CDN? Come è preferibile impostarli per ottimizzare le prestazioni di un sito o di un servizio web? Se volete saperne di più A Beginner’s Guide to HTTP Cache Headers fa senz’altro per voi.\n","permalink":"https://nicolaiarocci.com/guida-introduttiva-agli-http-cache-header/","summary":"\u003cp\u003eCosa sono i gli HTTP Cache Header e come funzionano? Che uso ne fanno i browser e le CDN? Come è preferibile impostarli per ottimizzare le prestazioni di un sito o di un servizio web? Se volete saperne di più \u003c!-- raw HTML omitted --\u003eA Beginner’s Guide to HTTP Cache Headers\u003c!-- raw HTML omitted --\u003e fa senz’altro per voi.\u003c/p\u003e","title":"Guida introduttiva agli HTTP Cache Header"},{"content":"Malgrado la giovane età Source Code Pro di Adobe domina incontrastato, col più classico Consolas come sua regina. Inconsolata-g e Monaco seguono a distanza mentre il mio preferito, Menlo, è tristemente indietro: What Are the Best Programming Fonts?\n","permalink":"https://nicolaiarocci.com/quali-sono-i-font-migliori-per-scrivere-codice/","summary":"\u003cp\u003eMalgrado la giovane età Source Code Pro di Adobe domina incontrastato, col più classico Consolas come sua regina. Inconsolata-g e Monaco seguono a distanza mentre il mio preferito, Menlo, è tristemente indietro: \u003c!-- raw HTML omitted --\u003eWhat Are the Best Programming Fonts?\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Quali sono i font migliori per scrivere codice?"},{"content":"Multithreaded Python Tutorial with the “Threadworms” Demo è un’ottima guida introduttiva ai thread ed alla programmazione multithread in Python. Dalla teoria alla pratica, in pochi minuti si arriva a creare una variante multithread di Snake.\n","permalink":"https://nicolaiarocci.com/multi-threading-in-python/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eMultithreaded Python Tutorial with the “Threadworms” Demo\u003c!-- raw HTML omitted --\u003e è un’ottima guida introduttiva ai \u003c!-- raw HTML omitted --\u003ethread\u003c!-- raw HTML omitted --\u003e ed alla programmazione multithread in Python. Dalla teoria alla pratica, in pochi minuti si arriva a creare una variante multithread di \u003c!-- raw HTML omitted --\u003eSnake.\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Multi-threading in Python"},{"content":"Gli eventi sono molto usati nelle GUI e nelle implementazioni del modello MVC (Model, View, Controller). Un’altra applicazione tipica è nei protocolli di comunicazione, laddove layer di basso livello devono informare quelli più alti quando ci sono dati in ingresso o in uscita.\nIl linguaggio C# dispone da sempre di una soluzione elegante al problema della gestione degli eventi: il delegato EventHandler. Events è una mia implementazione Python del EventHandler C#. In pratica si tratta di una classe molto leggera che incapsula il cuore del meccanismo di sottoscrizione e gestione degli eventi, e tenta di farlo in maniera “naturale”, sembrando parte integrante del linguaggio Python.\nCome usare Events Tecnicamente un evento è qualcosa a cui è possibile “attaccare” una o più funzioni di callback. Prima di tutto creiamo una funzione di callback che verrà invocata allo scatenarsi dell’evento a cui siamo interessati:\nPoi ‘iscriviamo’ la nostra funzione all’evento:\nNotate come l’evento sia al tempo stesso dichiarato e sottoscritto, in un’unico passaggio. Più funzioni possono sottoscrivere lo stesso evento. Quando si scatena un evento tutte le funzioni ad esso collegate vengono invocate in sequenza. Per scatenare l’evento ci basta eseguire una chiamata all’evento stesso:\nUn esempio di modello Model-View-Controller In genere nell’implementazione di uno schema MVC l’istanza della classe Events farà parte di un Modello, come in questo esempio:\nOggetti View e Controller ne sono i tipici sottoscrittori:\nE’ inoltre possibile vincolare il nome degli eventi e fare l’introspezione delle sole due classi che costituiscono Events. La documentazione include gli esempi e le istruzioni per l’installazione; il codice sorgente è a disposizione su GitHub. Buon divertimento!\n","permalink":"https://nicolaiarocci.com/gestione-degli-eventi-in-python/","summary":"\u003cp\u003eGli eventi sono molto usati nelle GUI e nelle implementazioni del modello MVC (Model, View, Controller). Un’altra applicazione tipica è nei protocolli di comunicazione, laddove layer di basso livello devono informare quelli più alti quando ci sono dati in ingresso o in uscita.\u003c/p\u003e\n\u003cp\u003eIl linguaggio C# dispone da sempre di una soluzione elegante al problema della gestione degli eventi: il delegato EventHandler. \u003ca href=\"https://github.com/nicolaiarocci/events\" title=\"Events: Bringing the elegance of C# EventHandler to Python\"\u003eEvents\u003c/a\u003e è una mia implementazione Python del EventHandler C#. In pratica si tratta di una classe molto leggera che incapsula il cuore del meccanismo di sottoscrizione e gestione degli eventi, e tenta di farlo in maniera “naturale”, sembrando parte integrante del linguaggio Python.\u003c/p\u003e","title":"Gestione degli Eventi in Python"},{"content":"Durante una conferenza di qualche tempo fa lo speaker, rivolto a una sala gremita di programmatori e informatici, chiese quanti conoscevano Alan Kay. Con suo (e mio) grande stupore pochissimi alzarono le mani.\nThe Deep Insights of Alan Kay è un tributo da non perdere a questo vero gigante dell’informatica, tra l’altro impreziosito da una selezione di link ad alcuni dei suoi interventi più importanti, spesso tenuti in occasione del ritiro dei numerosi premi ricevuti in carriera (tra gli altri, l’Alan Turing per il fondamentale contributo alla programmazione orientata agli oggetti).\nIl modo migliore di predire il futuro è inventarlo\n– Alan Kay\n","permalink":"https://nicolaiarocci.com/le-profonde-intuizioni-di-alan-kay/","summary":"\u003cp\u003eDurante una conferenza di qualche tempo fa lo speaker, rivolto a una sala gremita di programmatori e informatici, chiese quanti conoscevano Alan Kay. Con suo (e mio) grande stupore pochissimi alzarono le mani.\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eThe Deep Insights of Alan Kay\u003c!-- raw HTML omitted --\u003e  è un tributo da non perdere a questo vero gigante dell’informatica, tra l’altro impreziosito da una selezione di link ad alcuni dei suoi interventi più importanti, spesso tenuti in occasione del ritiro dei numerosi premi ricevuti in carriera (tra gli altri, l’Alan Turing per il fondamentale contributo alla programmazione orientata agli oggetti).\u003c/p\u003e","title":"Le profonde intuizioni di Alan Kay"},{"content":"Lettura interessante se state cercando quello giusto fra le decine di front-end framework disponibili.\nI love the way how each and every discussion turns into the war of the frameworks. I have worked with BackboneJS and AngularJS quite extensively and have come across most of their short comings in production. So, you dont really have to take this analysis with a grain of salt. I would be happy to take back anything that I have said if it turns out to be wrong. Lets get to the meat of it, then, shall we?\nBackbone vs Angular: Demystifying the myths\n","permalink":"https://nicolaiarocci.com/backbone-js-vs-angular-js-dissacrare-il-mito/","summary":"\u003cp\u003eLettura interessante se state cercando quello giusto fra le decine di front-end framework disponibili.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI love the way how each and every discussion turns into the war of the frameworks. I have worked with BackboneJS and AngularJS quite extensively and have come across most of their short comings in production. So, you dont really have to take this analysis with a grain of salt. I would be happy to take back anything that I have said if it turns out to be wrong. Lets get to the meat of it, then, shall we?\u003c/p\u003e","title":"Backbone.JS vs Angular.JS: dissacrare il mito"},{"content":"9 of the Best Free C Books è un’ottima selezione di libri gratuiti sul linguaggio C. C’è n’è per tutti, dai testi per principianti a quelli per programmatori esperti provenienti da altri linguaggi. Lo sapete già, C dovrebbe far parte del bagaglio di ogni programmatore.\n","permalink":"https://nicolaiarocci.com/libri-gratuiti-sul-linguaggio-c/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003e9 of the Best Free C Books\u003c!-- raw HTML omitted --\u003e è un’ottima selezione di libri gratuiti sul linguaggio C. C’è n’è per tutti, dai testi per principianti a quelli per programmatori esperti provenienti da altri linguaggi. Lo sapete già, C dovrebbe far parte del bagaglio di ogni programmatore.\u003c/p\u003e","title":"Libri gratuiti sul linguaggio C"},{"content":"Lo scorso anno abbiamo lavorato duro per costruirci una RESTful Web API su misura, flessibile e completa. In corso d’opera abbiamo imparato molto sulle migliori pratiche REST, mettendo anche alla frusta le rinomate capacità Web del linguaggio Python.\nAd EuroPython 2012 ho poi raccontato la nostra esperienza e condiviso ciò che avevamo imparato. In quell’occasione mi sono reso conto di quanto l’argomento fosse d’attualità, tanto che da quel 4 luglio le slide che avevo preparato (le trovate su Speaker Deck o Slideshare) ed i video su YouTube (italiano; inglese) hanno totalizzato 30mila visite. Da allora ricevo continue richieste di chiarimenti, suggerimenti, approfondimenti, consigli. Soprattutto, mi si chiedono esempi di codice. In fin dei conti prima o poi qualunque sviluppatore web si trova, volente o nolente, a fare i conti con una REST API.\nCosì ho pensato che avrei potuto prendere il nostro codice proprietario (nome interno Adam), sistemarlo un po’ in modo che si adattasse ai casi d’uso più comuni, e rilasciarlo come progetto open source. Be’ c’è voluto un bel po’ di lavoro, ben più di quello inizialmente preventivato, ma ora ci siamo. Il progetto è finalmente disponibile, e naturalmente si chiama Eve.\nCostruire e lanciare una API con Eve è semplice. Servono tre cose; un database, un file di configurazione, uno script di lancio. MongoDB è già supportato; sviluppare estensioni per altri database SQL/NoSQL non dovrebbe essere troppo complicato. Le personalizzazioni della vostra API sono salvate in un modulo standard Python. Lo script di esecuzione è in genere davvero semplice:\nLe API basate su Eve supportano l’intero range di operazioni CRUD (Create, Read, Update, Delete). Ogni end-point è personalizzabile e supporta filtri, paginazione e ordinamenti. Per massima accessibilità i client possono chiedere che le risposte pervengano in JSON oppure XML. Sono supportati gli inserimenti multipli, le direttive di caching per i client, il versioning e… tante altre cosette.\nNon mi dilungo oltre poiché su GitHub trovate tutto quel che serve: documentazione (al momento piuttosto scarna), codice e progetti satellite. In particolare date un’occhiata a Eve-Demo, una API funzionante messa su in pochi minuti grazie a Eve. Potete consultarla direttamente, via cURL per esempio, o anche via browser (in questo caso vi beccherete del XML in risposta, mentre via cURL o altro potrete scegliere JSON). Il README di eve-demo include una serie completa di esempi relativi alle varie operazioni di lettura, inserimento, cancellazione, aggiornamento.\nC’è ancora tanto da fare affinché Eve diventi il framework completo, stabile e maturo che ho in mente ma credo che il progetto ora sia pronto per una anteprima pubblica. In ogni caso sono lieto di dare finalmente risposta alle richieste di questi mesi: ora avete il codice; usatelo come volete. Spero anche e soprattutto di raccogliere critiche, consigli e suggerimenti; magari a qualcuno verrà anche voglia di collaborare!\nPS: Buon 2013!\n","permalink":"https://nicolaiarocci.com/vi-presento-eve-il-framework-per-lanciare-la-vostra-rest-api-web/","summary":"\u003cp\u003eLo scorso anno abbiamo lavorato duro per costruirci una RESTful Web API su misura, flessibile e completa. In corso d’opera abbiamo imparato molto sulle migliori pratiche REST, mettendo anche alla frusta le rinomate capacità Web del linguaggio Python.\u003c/p\u003e\n\u003cp\u003eAd EuroPython 2012 ho poi \u003ca href=\"http://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/\"\u003eraccontato la nostra esperienza\u003c/a\u003e e condiviso ciò che avevamo imparato. In quell’occasione mi sono reso conto di quanto l’argomento fosse d’attualità, tanto che da quel 4 luglio le slide che avevo preparato (le trovate su \u003c!-- raw HTML omitted --\u003eSpeaker Deck\u003c!-- raw HTML omitted --\u003e o \u003c!-- raw HTML omitted --\u003eSlideshare\u003c!-- raw HTML omitted --\u003e) ed i video su YouTube (\u003c!-- raw HTML omitted --\u003eitaliano\u003c!-- raw HTML omitted --\u003e; \u003c!-- raw HTML omitted --\u003einglese\u003c!-- raw HTML omitted --\u003e) hanno totalizzato 30mila visite. Da allora ricevo continue richieste di chiarimenti, suggerimenti, approfondimenti, consigli. Soprattutto, mi si chiedono esempi di codice. In fin dei conti prima o poi qualunque sviluppatore web si trova, volente o nolente, a fare i conti con una REST API.\u003c/p\u003e","title":"Vi presento Eve il framework per le REST API Web"},{"content":" ","permalink":"https://nicolaiarocci.com/python-ti-mette-le-ali/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Python ti mette le ali"},{"content":"Finalmente ho trovato il tempo per aggiornare Il Piccolo Libro di MongoDB. Grazie ai contributi di Andrea Rabbaglietti e Michele Zonca sono stati corretti molti errori sparsi qui e là nel testo. Ho approfittato dell’occasione per ritoccare il formato grafico allineandolo alla versione più recente dell’edizione inglese. Se avete già scaricato il libro vi consiglio di rifarlo: la nuova edizione è decisamente più leggibile.\n","permalink":"https://nicolaiarocci.com/aggiornato-il-piccolo-libro-di-mongodb/","summary":"\u003cp\u003eFinalmente ho trovato il tempo per aggiornare \u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\" title=\"Il Piccolo Libro di MongoDB\"\u003eIl Piccolo Libro di MongoDB\u003c/a\u003e. Grazie ai contributi di Andrea Rabbaglietti e Michele Zonca sono stati corretti molti errori sparsi qui e là nel testo. Ho approfittato dell’occasione per ritoccare il formato grafico allineandolo alla versione più recente dell’edizione inglese. Se avete già scaricato il libro vi consiglio di rifarlo: la nuova edizione è decisamente più leggibile.\u003c/p\u003e","title":"Aggiornato il Piccolo Libro di MongoDB"},{"content":"Primo aggiornamento per Cerberus, lo strumento per la convalida dei dizionari Python che ho rilasciato qualche tempo fa. Ora è possibile estendere la lista dei tipi di dato da convalidare, aggiungendone di propri. Per esempio nella nostra REST API (che usa Cerberus per la validazione) uso questa tecnica per implementare e convalidare il tipo ObjectId, tipico di MongoDB. I dettagli li trovate nella documentazione.\n","permalink":"https://nicolaiarocci.com/cerberus-0-0-2-tipi-di-dato-personalizzati/","summary":"\u003cp\u003ePrimo aggiornamento per \u003c!-- raw HTML omitted --\u003eCerberus\u003c!-- raw HTML omitted --\u003e,\nlo strumento per la convalida dei dizionari Python che ho rilasciato qualche\ntempo fa. Ora è possibile estendere la lista dei tipi di dato da convalidare,\naggiungendone di propri. Per esempio nella nostra REST API (che usa Cerberus\nper la validazione) uso questa tecnica per implementare e convalidare il tipo\n\u003ccode\u003eObjectId\u003c/code\u003e, tipico di MongoDB. I dettagli\nli trovate nella \u003c!-- raw HTML omitted --\u003edocumentazione\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Cerberus 0.0.2: tipi di dato personalizzati"},{"content":"E niente, è un articolo così importante che mi sono procurato dall’autore il permesso di curarne la traduzione. Solo che non trovo il tempo per farla la traduzione, quindi vi passo direttamente l’originale. In MongoDB Gotchas \u0026amp; How To Avoid Them Russel Smith raccoglie una decina di preziosi consigli che non potete assolutamente perdervi se state pensando di usare MongoDB in produzione.\n","permalink":"https://nicolaiarocci.com/come-evitare-i-trabocchetti-di-mongodb/","summary":"\u003cp\u003eE niente, è un articolo così importante che mi sono procurato dall’autore il permesso di curarne la traduzione. Solo che non trovo il tempo per farla la traduzione, quindi vi passo direttamente l’originale. In \u003c!-- raw HTML omitted --\u003eMongoDB Gotchas \u0026amp; How To Avoid Them\u003c!-- raw HTML omitted --\u003e Russel Smith raccoglie una decina di preziosi consigli che non potete assolutamente perdervi se state pensando di usare MongoDB in produzione.\u003c/p\u003e","title":"Come evitare i trabocchetti di MongoDB"},{"content":"Seguo il progetto Python Tools per Visual Studio da molto tempo.\nPython Tools per Visual Studio è un plugin gratuito e open source che trasforma Visual Studio in una IDE per Python. Supporta CPython, IronPython, Intellisense, Debugging, Profiling, Editing, Browsing, REPL Multipli, IPython, Django e Cloud Computing con librerie client per Windows, Linux e OS X (Azure).\nLa versione 1.5, rilasciata oggi, aggiunge supporto per Django, Azure, REPL debugging, Visual Studio 2012 e altro.\n","permalink":"https://nicolaiarocci.com/python-tools-per-visual-studio-1-5/","summary":"\u003cp\u003eSeguo il progetto Python Tools per Visual Studio da \u003ca href=\"http://nicolaiarocci.com/?s=python+tools+visual+studio\u0026amp;submit=Search\" title=\"Python Tools per Visual Studio\"\u003emolto tempo\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePython Tools per Visual Studio è un plugin gratuito e open source che trasforma Visual Studio in una IDE per Python. Supporta CPython, IronPython, Intellisense, Debugging, Profiling, Editing, Browsing, REPL Multipli, IPython, Django e Cloud Computing con librerie client per Windows, Linux e OS X (Azure).\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eLa \u003c!-- raw HTML omitted --\u003eversione 1.5\u003c!-- raw HTML omitted --\u003e, rilasciata oggi, aggiunge supporto per Django, Azure, REPL debugging, Visual Studio 2012 e altro.\u003c/p\u003e","title":"Python Tools per Visual Studio 1.5"},{"content":"Grazie al lavoro di Pedro Kroger la documentazione di Django è disponibile in formato ePub:\n","permalink":"https://nicolaiarocci.com/la-documentazione-di-django-in-formato-epub/","summary":"\u003cp\u003eGrazie al lavoro di Pedro Kroger la documentazione di Django è disponibile in formato ePub:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"La documentazione di Django in formato ePub"},{"content":"Le slide che ho presentato a ‘A Morning with MongoDB‘ (24 ottobre, Milano) sono disponibili online. Gran parte degli interventi erano di tipo divulgativo ed inizialmente ero preoccupato che i miei contenuti fossero troppo tecnici. In realtà in sala c’erano davvero tanti programmatori, quindi tutto è andato bene.\nA margine dell’evento molte le domande su Eve, la REST API open source a cui sto lavorando e che conto di rilasciare entro fine anno: bene! Grazie a tutti i partecipanti ed a 10Gen per avermi invitato.\n","permalink":"https://nicolaiarocci.com/rest-api-con-mongodb/","summary":"\u003cp\u003eLe slide che ho presentato a ‘\u003c!-- raw HTML omitted --\u003eA Morning with MongoDB\u003c!-- raw HTML omitted --\u003e‘ (24 ottobre, Milano) sono disponibili online. Gran parte degli interventi erano di tipo divulgativo ed inizialmente ero preoccupato che i miei contenuti fossero troppo tecnici. In realtà in sala c’erano davvero tanti programmatori, quindi tutto è andato bene.\u003c/p\u003e\n\u003cp\u003eA margine dell’evento molte le domande su \u003c!-- raw HTML omitted --\u003eEve\u003c!-- raw HTML omitted --\u003e, la REST API open source a cui sto lavorando e che conto di rilasciare entro fine anno: bene! Grazie a tutti i partecipanti ed a 10Gen per avermi invitato.\u003c/p\u003e","title":"REST API con MongoDB"},{"content":"Da qualche giorno ho rilasciato Cerberus, uno strumento per la convalida dei dizionari Python. Gli passate un dizionario, lui lo confronta con uno schema di convalida e, se c’è qualcosa che non va (per esempio una chiave sconosciuta, oppure un valore di tipo sbagliato), ve lo segnala.\nSono due le caratteristiche che rendono Cerberus interessante: è facilmente estensibile (la documentazione include un esempio di estensione del sistema di convalida), e non si blocca sollevando un’eccezione al primo problema riscontrato: gli errori, quando presenti, sono tutti riportati in una lista a fine convalida.\nCerberus è un progetto open source tutt’ora in pieno sviluppo, al quale è possibile partecipare. E’ alla base del sistema di convalida impiegato dalla nostra REST API, ma può e dovrebbe vivere di vita propria – per esempio nei vostri progetti. A proposito, la stessa RESTful Web API, quella di cui ho parlato a EuroPython, sarà rilasciata come progetto open source. Stay tuned.\n","permalink":"https://nicolaiarocci.com/convalidare-un-dizionario-python-con-cerberus/","summary":"\u003cp\u003eDa qualche giorno ho rilasciato \u003c!-- raw HTML omitted --\u003eCerberus\u003c!-- raw HTML omitted --\u003e, uno strumento per la convalida dei dizionari Python. Gli passate un dizionario, lui lo confronta con uno schema di convalida e, se c’è qualcosa che non va (per esempio una chiave sconosciuta, oppure un valore di tipo sbagliato), ve lo segnala.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eSono due le caratteristiche che rendono Cerberus interessante: è facilmente estensibile (la \u003c!-- raw HTML omitted --\u003edocumentazione\u003c!-- raw HTML omitted --\u003e include un esempio di estensione del sistema di convalida), e non si blocca sollevando un’eccezione al primo problema riscontrato: gli errori, quando presenti, sono tutti riportati in una lista a fine convalida.\u003c/p\u003e","title":"Convalidare un dizionario Python con Cerberus"},{"content":"Il prossimo 24 ottobre sarò a Milano per A Morning with MongoDB, evento ufficiale 10gen nel corso del quale racconterò la mia esperienza nell’integrazione di MongoDB in una Web REST API. Partecipazione e registrazione sono gratuite: cosa aspettate?\n","permalink":"https://nicolaiarocci.com/una-mattinata-con-mongodb/","summary":"\u003cp\u003eIl prossimo 24 ottobre sarò a Milano per \u003c!-- raw HTML omitted --\u003eA Morning with MongoDB\u003c!-- raw HTML omitted --\u003e, evento ufficiale 10gen nel corso del quale racconterò la mia esperienza nell’integrazione di MongoDB in una Web REST API. Partecipazione e \u003c!-- raw HTML omitted --\u003eregistrazione\u003c!-- raw HTML omitted --\u003e sono gratuite: cosa aspettate?\u003c/p\u003e","title":"Una mattinata con MongoDB"},{"content":"A proposito di TypeScript vi segnalo Thoughts on TypeScript, il miglior articolo che ho letto finora sul nuovo nato in casa Microsoft.\nI’m happy that regular JavaScript can be written in TypeScript and still benefit from some of the type checking provided by the TypeScript compiler. That means writing TypeScript can actually help people learn JavaScript, which makes me happy.\n","permalink":"https://nicolaiarocci.com/ancora-su-typescript/","summary":"\u003cp\u003eA proposito di TypeScript vi segnalo \u003c!-- raw HTML omitted --\u003eThoughts on TypeScript\u003c!-- raw HTML omitted --\u003e, il miglior articolo che ho letto finora sul nuovo nato in casa Microsoft.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI’m happy that regular JavaScript can be written in TypeScript and still benefit from some of the type checking provided by the TypeScript compiler. That means writing TypeScript can actually help people learn JavaScript, which makes me happy.\u003c/p\u003e\u003c/blockquote\u003e","title":"Ancora su TypeScript"},{"content":"Ieri Microsoft ha annunciato TypeScript, nuovo linguaggio fortemente tipizzato il cui codice compilato è puro JavaScript. TypeScript aggiunge classi, controllo degli errori in compilazione, completamento del codice in fase di sviluppo, e tante altre cose interessanti.\nMiguel de Icaza, il cervello dietro Xamarin e la piattaforma Mono, ha sintentizzato le sue prime impressioni sul progetto. Interessanti anche i commenti di uno degli sviluppatori di Dart, progetto Google dal quale TypeScript ha senz’altro tratto ispirazione.\n","permalink":"https://nicolaiarocci.com/typescript-prime-impressioni/","summary":"\u003cp\u003eIeri Microsoft ha annunciato \u003c!-- raw HTML omitted --\u003eTypeScript\u003c!-- raw HTML omitted --\u003e,  nuovo linguaggio fortemente tipizzato il cui codice compilato è puro JavaScript. TypeScript aggiunge classi, controllo degli errori in compilazione, completamento del codice in fase di sviluppo, e tante altre cose interessanti.\u003c/p\u003e\n\u003cp\u003eMiguel de Icaza, il cervello dietro Xamarin e la piattaforma Mono, ha sintentizzato le sue \u003c!-- raw HTML omitted --\u003eprime impressioni sul progetto\u003c!-- raw HTML omitted --\u003e. Interessanti anche i \u003c!-- raw HTML omitted --\u003ecommenti di uno degli sviluppatori di Dart\u003c!-- raw HTML omitted --\u003e, progetto Google dal quale TypeScript ha senz’altro tratto ispirazione.\u003c/p\u003e","title":"TypeScript: prime impressioni"},{"content":" Sviluppatori: passate ore, giorni, mesi, forse anni interi a perfezionare il vostro capolavoro. In fin dei conti si tratta dell’espressione di un’intera vita professionale, anima e cuore. Perché dunque vi fate del male dotandolo di documentazione scarna, o addirittura inesistente?\nWrite The Freaking Manual\n","permalink":"https://nicolaiarocci.com/scrivete-il-dannato-manuale/","summary":"\u003cblockquote\u003e\n\u003cp\u003eSviluppatori: passate ore, giorni, mesi, forse anni interi a perfezionare il vostro capolavoro. In fin dei conti si tratta dell’espressione di un’intera vita professionale, anima e cuore. Perché dunque vi fate del male dotandolo di documentazione scarna, o addirittura inesistente?\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eWrite The Freaking Manual\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Scrivete il dannato manuale"},{"content":"MongoDB Schema Design at Scale è un’eccellente articolo cu come ottimizzare database MongoDB sottoposti a pesanti carichi di lavoro, soprattutto in scrittura. Il messaggio, forte e chiaro, è sempre lo stesso: prima di agire studia per bene il tuo database engine; comprendine i vantaggi e soprattutto i punti deboli.\n","permalink":"https://nicolaiarocci.com/ottimizzare-le-prestazioni-di-mongodb/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eMongoDB Schema Design at Scale\u003c!-- raw HTML omitted --\u003e è un’eccellente articolo cu come ottimizzare database MongoDB sottoposti a pesanti carichi di lavoro, soprattutto in scrittura. Il messaggio, forte e chiaro, è sempre lo stesso: prima di agire studia per bene il tuo database engine; comprendine i vantaggi e soprattutto i punti deboli.\u003c/p\u003e","title":"Ottimizzare le prestazioni di MongoDB"},{"content":"JSON-Datetime permette di decodificare i valori [cci lang=”python” theme=”default”]datetime[/cci] normalmente espressi come stringhe in un flusso JSON. E’ davvero molto semplice, e fa parte della suite strumenti open source che sto sviluppando nel contesto del più ampio progetto RESTful Web API.\nDel problema della decodifica delle stringhe JSON in valori datetime ho già scritto in passato. Allora proponevo una soluzione algoritmica; ora vi presento un prodotto finito che potete usare nei vostri progetti.\nIl problema Lo standard JSON (RFC 4627) non supporta valori di tipo data/ora. In un flusso JSON le date vengono rappresentate come semplici stringhe che i decoder Python interpretano come tali:\nimport simplejson as json \u0026gt;\u0026gt;\u0026gt;test = '{\u0026quot;name\u0026quot;: \u0026quot;John Doe\u0026quot;, \u0026quot;born\u0026quot;: \u0026quot;Thu, 1 Mar 2012 10:00:49 UTC\u0026quot;}' \u0026gt;\u0026gt;\u0026gt;json.loads(test) {'name': 'John Doe', 'born': 'Thu, 1 Mar 2012 10:00:49 Nell’esempio precedente il campo born è una stringa nel JSON, e tale rimane dopo la decodifica in un dizionario Python.\nLa soluzione JSON-Datetime è un semplice wrapper attorno al metodo loads di simplejson. Ecco che succede quando usiamo JSON-Datetime al posto di simplejson:\n\u0026gt;\u0026gt;\u0026gt; import jsondatetime as json \u0026gt;\u0026gt;\u0026gt; test = '{\u0026quot;name\u0026quot;: \u0026quot;John Doe\u0026quot;, \u0026quot;born\u0026quot;: \u0026quot;Thu, 1 Mar 2012 10:00:49 UTC\u0026quot;}' \u0026gt;\u0026gt;\u0026gt; json.loads(test) {'name': 'John Doe', 'born': datetime.datetime(2012, 3, 1, 10, 0 ,49)} Ora born assume il valore corretto. Affinché vengano riconosciute, le date contenute nel JSON devono corrispondere a un formato strptime() valido indicato con l’argomento datetime_format. Nell’esempio precedente, poiché l’argomento è assente, viene usato il valore di default '%a, %d %b %Y %H:%M:%S UTC', corrispondente allo standard RFC 1123 (ex 822). Nell’esempio che segue usiamo un formato personalizzato:\n\u0026gt;\u0026gt;\u0026gt; import jsondatetime as json \u0026gt;\u0026gt;\u0026gt; test = '{\u0026quot;name\u0026quot;: \u0026quot;John Doe\u0026quot;, \u0026quot;born\u0026quot;: \u0026quot;Thu, 1 Mar 2012\u0026quot;}' \u0026gt;\u0026gt;\u0026gt; json.loads(test, datetime_format=\u0026quot;%a, %d %b %Y\u0026quot;;) {'name': 'John Doe', 'born': datetime.datetime(2012, 3, 1)} JSON-Datetime è un semplice wrapper che ci lascia liberi di usare tutti gli argomenti standard previsti per loads, object_hook incluso. Ciò significa che questa soluzione (al contrario di quella proposta in precedenza) ci lascia liberi di applicare qualsivoglia parser al nostro flusso JSON.\nInstallazione e sorgenti Per l’installazione basta il classico pip install json-datetime. Il codice è disponibile su GitHub.\n","permalink":"https://nicolaiarocci.com/decodificare-le-date-in-un-flusso-json-python/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eJSON-Datetime\u003c!-- raw HTML omitted --\u003e permette di decodificare i valori [cci lang=”python” theme=”default”]datetime[/cci] normalmente espressi come stringhe in un flusso JSON. E’ davvero molto semplice, e fa parte della suite strumenti open source che sto sviluppando nel contesto del più ampio progetto \u003ca href=\"http://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/\" title=\"Sviluppare una RESTful Web API\"\u003eRESTful Web API\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eDel problema della decodifica delle stringhe JSON in valori datetime ho \u003ca href=\"http://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/\" title=\"Convertire una data JSON in un oggetto Python datetime\"\u003egià scritto in passato\u003c/a\u003e. Allora proponevo una soluzione algoritmica; ora vi presento un prodotto finito che potete usare nei vostri progetti.\u003c/p\u003e","title":"Decodificare le date in un flusso JSON (Python)"},{"content":"PyBooks è un’ottima selezione di risorse gratuite su Python e dintorni. I migliori libri gratuiti su Python sono inclusi, così come alcuni validi tutorial sulle librerie e i framework più diffusi. Il progetto è curato dalle stesse persone che stanno dietro JSBooks, la raccolta di libri JavaScript di cui ho scritto qualche giorno fa. Anche in questo caso è possibile contribuire attivamente segnalando nuove interessanti risorse.\n","permalink":"https://nicolaiarocci.com/pybooks-le-migliori-risorse-gratuite-su-python/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003ePyBooks\u003c!-- raw HTML omitted --\u003e è un’ottima selezione di risorse gratuite su Python e dintorni. I migliori libri gratuiti su Python sono inclusi, così come alcuni validi tutorial sulle librerie e i framework più diffusi. Il progetto è curato dalle stesse persone che stanno dietro JSBooks, la raccolta di libri JavaScript di cui ho scritto \u003ca href=\"http://nicolaiarocci.com/jsbooks-libri-open-source-su-javascript/\" title=\"JSBooks\"\u003equalche giorno fa\u003c/a\u003e. Anche in questo caso è possibile contribuire attivamente segnalando nuove interessanti risorse.\u003c/p\u003e","title":"Pybooks – Le migliori risorse gratuite su Python"},{"content":"JSBooks Free JavaScript Books è una valida selezione di risorse gratuite su JavaScript. Si tratta di libri e guide gratuite per programmatori di ogni livello, dal principiante al veterano. Il catalogo include titoli su jQuery, Backbone, design patterns, Node, CoffeeScript, qualcosa su HTML5 e addirittura un libro su MongoDB (si tratta una mia vecchia conoscenza). Alcuni suggerimenti sono davvero di ottima qualità. Il progetto è open source e chiunque può contribuire segnalando nuove interessanti risorse via GitHub.\n","permalink":"https://nicolaiarocci.com/jsbooks-libri-open-source-su-javascript/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eJSBooks Free JavaScript Books\u003c!-- raw HTML omitted --\u003e è una valida selezione di risorse gratuite su JavaScript. Si tratta di libri e guide gratuite per programmatori di ogni livello, dal principiante al veterano. Il catalogo include titoli su jQuery, Backbone, design patterns, Node, CoffeeScript, qualcosa su HTML5 e addirittura un libro su MongoDB (si tratta una mia \u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\" title=\"Il Piccolo Libro su MongoDB\"\u003evecchia conoscenza\u003c/a\u003e). Alcuni suggerimenti sono davvero di ottima qualità. Il progetto è open source e chiunque può contribuire segnalando nuove interessanti risorse via GitHub.\u003c/p\u003e","title":"JSBooks – Libri Open Source su JavaScript"},{"content":" Non fare lo stronzo Codice semplice è difficile da scrivere Codice squisitamente semplice è davvero difficile da scrivere Se è semplice leggerlo non vuol dire che sia stato semplice scriverlo In effetti più è semplice più, probabilmente, è stato difficile scriverlo Ci sono molti modi di ottenere lo stesso risultato E’ davvero improbabile che il primo che ti viene in mente sia anche il migliore Probabilmente il migliore non esiste – ne esistono molti, ognuno migliore a modo suo Hai sempre modo di migliorare – nel codice, nelle capacità, in te stesso Se pensi che non sei mai stato così bravo prima d’ora, probabilmente hai ragione Non esistono correzioni di una sola riga Impara a desiderare il successo più di quanto temi il fallimento Diventi vecchio solo quando non sei più capace di imparare nuovi trucchetti Fai sempre un backup prima di “dare una sistemata” al codice Leggi il fottuto manuale A volte un po’ stronzo è ok. Che non diventi un’abitudine. Liberamente tradotto da Thoughts on being a programmer.\n","permalink":"https://nicolaiarocci.com/sullessere-un-programmatore/","summary":"\u003cul\u003e\n\u003cli\u003eNon fare lo stronzo\u003c/li\u003e\n\u003cli\u003eCodice semplice è difficile da scrivere\u003c/li\u003e\n\u003cli\u003eCodice  squisitamente semplice è davvero difficile da scrivere\u003c/li\u003e\n\u003cli\u003eSe è semplice leggerlo non vuol dire che sia stato semplice scriverlo\u003c/li\u003e\n\u003cli\u003eIn effetti più è semplice più, probabilmente, è stato difficile scriverlo\u003c/li\u003e\n\u003cli\u003eCi sono molti modi di ottenere lo stesso risultato\u003c/li\u003e\n\u003cli\u003eE’ \u003cem\u003edavvero\u003c/em\u003e improbabile che il primo che ti viene in mente sia anche il migliore\u003c/li\u003e\n\u003cli\u003eProbabilmente \u003cem\u003eil\u003c/em\u003e \u003cem\u003emigliore\u003c/em\u003e non esiste – ne esistono molti, ognuno migliore a modo suo\u003c/li\u003e\n\u003cli\u003eHai sempre modo di migliorare – nel codice, nelle capacità, in te stesso\u003c/li\u003e\n\u003cli\u003eSe pensi che non sei mai stato così bravo prima d’ora, probabilmente hai ragione\u003c/li\u003e\n\u003cli\u003eNon esistono correzioni di una sola riga\u003c/li\u003e\n\u003cli\u003eImpara a desiderare il successo più di quanto temi il fallimento\u003c/li\u003e\n\u003cli\u003eDiventi vecchio solo quando non sei più capace di imparare nuovi trucchetti\u003c/li\u003e\n\u003cli\u003eFai sempre un backup prima di “dare una sistemata” al codice\u003c/li\u003e\n\u003cli\u003eLeggi il fottuto manuale\u003c/li\u003e\n\u003cli\u003eA volte un po’ stronzo è ok. Che non diventi un’abitudine.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLiberamente tradotto da \u003c!-- raw HTML omitted --\u003eThoughts on being a programmer\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Sull’essere un Programmatore"},{"content":"Di Codecademy avevo già scritto tempo fa in occasione dei loro primi corsi giocoso-interattivi su HTML, CSS e JavaScript. E’ di ieri l’annuncio del nuovo corso Python per principianti. Se volete rompere il ghiaccio con questo bellissimo linguaggio l’approccio di Codecademy (imparare divertendosi, anche grazie a collaudati meccanismi incentivanti come i punteggi e i trofei) potrebbe fare per voi.\n","permalink":"https://nicolaiarocci.com/imparare-python-con-codecademy/","summary":"\u003cp\u003eDi Codecademy avevo già scritto \u003ca href=\"http://nicolaiarocci.com/imparare-html-e-css-online-con-codecademy/\" title=\"Imparare HTM e CSS online con Codecademy\"\u003etempo fa\u003c/a\u003e in occasione dei loro primi corsi giocoso-interattivi su HTML, CSS  e JavaScript. E’ di ieri l’annuncio del \u003c!-- raw HTML omitted --\u003enuovo corso Python per principianti\u003c!-- raw HTML omitted --\u003e. Se volete rompere il ghiaccio con questo bellissimo linguaggio l’approccio di Codecademy (imparare divertendosi, anche grazie a collaudati meccanismi incentivanti come i punteggi e i trofei) potrebbe fare per voi.\u003c/p\u003e","title":"Imparare Python con Codecademy"},{"content":" E’ vero che non tutti i programmi Python richiedono un’analisi rigorosa delle prestazioni, ma è rassicurante sapere che l’ecosistema Python ci mette a disposizione una serie di strumenti a cui possiamo rivolgerci in caso di necessità.\nAnalizzare la performance di un programma significa prima di tutto rispondere a queste quattro semplici domande:\nQuanto gira veloce? Dove sono i “collli di bottiglia”? Quanta memoria sta utilizzando? Dove occorrono gli spechi di memoria? Scopriamo come rispondere a queste domande attraverso alcuni strumenti molto interessanti.\nA guide to analyzing Python performance è un’articolo non difficile che vale la pena leggere.\n","permalink":"https://nicolaiarocci.com/analisi-delle-performance-python/","summary":"\u003cblockquote\u003e\n\u003cp\u003eE’ vero che non tutti i programmi Python richiedono un’analisi rigorosa delle prestazioni, ma è rassicurante sapere che l’ecosistema Python ci mette a disposizione una serie di strumenti a cui possiamo rivolgerci in caso di necessità.\u003c/p\u003e\n\u003cp\u003eAnalizzare la performance di un programma significa prima di tutto rispondere a queste quattro semplici domande:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eQuanto gira veloce?\u003c/li\u003e\n\u003cli\u003eDove sono i “collli di bottiglia”?\u003c/li\u003e\n\u003cli\u003eQuanta memoria sta utilizzando?\u003c/li\u003e\n\u003cli\u003eDove occorrono gli spechi di memoria?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eScopriamo come rispondere a queste domande attraverso alcuni strumenti molto interessanti.\u003c/p\u003e","title":"Analisi delle performance in Python"},{"content":"Grazie al contributo di Bruno Ripa, la versione 0.1.2 di Flask-MimeRender pubblicata oggi introduce il supporto per codici di stato HTTP arbitrari. Ho colto l’occasione per uniformare il codice sorgente alle direttive PEP8 e per sistemare alcuni dettagli del package PyPI. Vi ricordo che potete contribuire voi stessi al progetto, direttamente su GitHub.\n","permalink":"https://nicolaiarocci.com/flask-mimerender-v0-1-2/","summary":"\u003cp\u003eGrazie al contributo di \u003ca href=\"http://twitter.com/brunoripa\"\u003eBruno Ripa\u003c/a\u003e, la versione 0.1.2 di \u003ca href=\"http://nicolaiarocci.com/come-implementare-un-web-service-rest-che-adatta-le-risposte-al-mime-media-type-delle-richieste-http/\" title=\"Flask-MimeRender\"\u003eFlask-MimeRender\u003c/a\u003e pubblicata oggi introduce il supporto per codici di stato HTTP arbitrari. Ho colto l’occasione per uniformare il codice sorgente alle direttive PEP8 e per sistemare alcuni dettagli del \u003ca href=\"http://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/\" title=\"Flask-MimeRender su PyPI\"\u003epackage PyPI\u003c/a\u003e. Vi ricordo che potete contribuire voi stessi al progetto, direttamente su \u003c!-- raw HTML omitted --\u003eGitHub\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Flask-MimeRender v0.1.2"},{"content":"La scorsa settimana a EuroPython 2012 ho tenuto un talk intitolato Sviluppare una RESTful Web API con Python, Flask e MongoDB. Mi ha fatto piacere riscontrare forte interesse sia per gli aspetti teorici dell’architettura REST che per la loro implementazione pratica con strumenti quali Flask e MongoDB. In entrambe le sessioni inglese e italiana mi sono state rivolte molte domande, sia in occasione delle Q\u0026amp;A plenarie che nei successivi colloqui informali. Parecchi anche i commenti ed i suggerimenti, davvero utili ed apprezzati (a quanto pare non sono l’unico che, forte di un background .NET, ha compiuto o sta per compiere il salto verso Python e il mondo open source).\nSoprattutto ho rilevato una forte curiosità su MongoDB, un database non-relazionale verso il quale sembra prevalere un atteggiamento di generale timidezza: “vorrei ma non oso”, insomma. Per quanto riguarda Flask direi che ormai, nel vasto firmamento dei micro web framework, è una stella che brilla di luce propria.\nPer quanto riguarda le registrazioni video potete andare su YouTube o sulla pagina ufficiale di EuroPython (english track e italian track). Ammetto di essere più soddisfatto della versione inglese nella quale – complice anche l’esperienza italiana del giorno prima – credo di essere stato più sintetico ed efficace. Qui mi limito a proporvi le slide:\nRingraziamenti Un immenso grazie ai ragazzi dello staff di EuroPython che veramente hanno fatto di tutto per rendere questa manifestazione un evento straordinario – e ci sono riusciti (una settimana di talk su cinque tracce parallele, sprint, hands-on, corsi, cibo di ottima qualità e credo oltre 800 partecipanti).\nVi racconto un episodio giusto per darvi l’idea di quanto questi ragazzi, tutti volontari, si diano da fare e ci mettano passione vera. Nella sessione italiana ho ‘sforato’ (capita anche ai migliori, mi dicono!) e così mi son trovato a sorvolare su un certo numero di slide. Ebbene il mio talk manager e il suo assistente mi hanno proposto di loro iniziativa di tenere una sessione pomeridiana straordinaria per consentirmi di portare a termine la mia relazione. Non capita tutti i giorni, credetemi. Per mia fortuna gran parte delle persone che avevano assistito alla sessione mattutina sono poi tornate per quella del pomeriggio, altrimenti sai che figura!\nSe siete pythonisti o vorreste diventarlo non perdetevi la prossima edizione di questo evento internazionale che, con tutta probabilità, si terrà di nuovo a Firenze l’anno prossimo.\n","permalink":"https://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eLa scorsa settimana a \u003c!-- raw HTML omitted --\u003eEuroPython 2012\u003c!-- raw HTML omitted --\u003e ho tenuto un talk intitolato \u003c!-- raw HTML omitted --\u003eSviluppare una RESTful Web API con Python, Flask e MongoDB\u003c!-- raw HTML omitted --\u003e. Mi ha fatto piacere riscontrare forte interesse sia per gli aspetti teorici dell’architettura REST che per la loro implementazione pratica con strumenti quali Flask e MongoDB. In entrambe le sessioni inglese e italiana mi sono state rivolte molte domande, sia in occasione delle Q\u0026amp;A plenarie che nei successivi colloqui informali. Parecchi anche i commenti ed i suggerimenti, davvero utili ed apprezzati (a quanto pare non sono l’unico che, forte di un background .NET, ha compiuto o sta per compiere il salto verso Python e il mondo open source).\u003c/p\u003e\n\u003cp\u003eSoprattutto ho rilevato una forte curiosità su MongoDB, un database non-relazionale verso il quale sembra prevalere un atteggiamento  di generale timidezza: “vorrei ma non oso”, insomma. Per quanto riguarda Flask direi che ormai, nel vasto firmamento dei micro web framework, è una stella che brilla di luce propria.\u003c/p\u003e","title":"Sviluppare una RESTful Web API con Python, Flask e MongoDB"},{"content":"Da ieri Sublime Text 2 è ufficialmente fuori dalla lunghissima beta. Molte novità anche nell’ultima build, incluso il supporto per il Retina Display di OSX (tanto per dire quanto questi ragazzi stiano sul pezzo). Vi propongo un po’ di link di riferimento:\nAnnuncio della versione 2.0 sul blog Sublime Come Kenneth Reitz ha configurato ST2 per Python Sublime Text 2 un anno dopo, il mio articolo più recente su ST2 PS: io nel frattempo sono tornato a vim, e per ora ci sto molto comodo. Sublime Text rimane l’editor che consiglio a chiunque non abbia già un background vi/vim e non voglia o non possa investire tempo nell’impararlo.\n","permalink":"https://nicolaiarocci.com/e-finalmente-esce-sublime-text-2/","summary":"\u003cp\u003eDa ieri Sublime Text 2 è ufficialmente fuori dalla lunghissima beta. Molte novità anche nell’ultima build, incluso il supporto per il Retina Display di OSX (tanto per dire quanto questi ragazzi stiano sul pezzo). Vi propongo un po’ di link di riferimento:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003c!-- raw HTML omitted --\u003eAnnuncio della versione 2.0\u003c!-- raw HTML omitted --\u003e sul blog Sublime\u003c/li\u003e\n\u003cli\u003eCome Kenneth Reitz ha configurato \u003c!-- raw HTML omitted --\u003eST2 per Python\u003c!-- raw HTML omitted --\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://nicolaiarocci.com/sublime-text-2-un-anno-dopo/\" title=\"Sublime Text 2 un anno dopo\"\u003eSublime Text 2 un anno dopo\u003c/a\u003e, il mio articolo più recente su ST2\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePS: io nel frattempo sono tornato a vim, e per ora ci sto molto comodo. Sublime Text rimane l’editor che consiglio a chiunque non abbia già un background vi/vim e non voglia o non possa investire tempo nell’impararlo.\u003c/p\u003e","title":"E finalmente esce Sublime Text 2"},{"content":"Se vi occupate di frontend non perdetevi lo spettacolare articolo in cui Majd Taby ci spiega come usare al meglio il WebKit Inspector.\nIl panorama mobile è monopolizzato da WebKit e di conseguenza gran parte degli strumenti e dell’infrastruttura per lo sviluppo di applicazioni frontend mobile (e non solo, ndr) risiedono nel WebKit Inspector. Per questo ne analizzerò con cura gli strumenti e spiegherò come e quando usarli.\nCi sono anche le slide.\n","permalink":"https://nicolaiarocci.com/come-usare-al-meglio-webkit-inspector/","summary":"\u003cp\u003eSe vi occupate di frontend non perdetevi lo spettacolare articolo in cui Majd Taby ci spiega \u003c!-- raw HTML omitted --\u003ecome usare al meglio il WebKit Inspector\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIl panorama mobile è monopolizzato da WebKit e di conseguenza gran parte degli strumenti e dell’infrastruttura per lo sviluppo di applicazioni frontend mobile (e non solo, ndr) risiedono nel WebKit Inspector. Per questo ne analizzerò con cura gli strumenti e spiegherò come e quando usarli.\u003c/p\u003e","title":"Come usare al meglio WebKit Inspector"},{"content":" Windows Azure ora supporta ufficialmente Python. La pagina ufficiale consente di scaricare l’SDK e contiene alcuni tutorial per la creazione di applicazioni Django, Python e IPython direttamente da Visual Studio.\n","permalink":"https://nicolaiarocci.com/windows-azure-ora-supporta-ufficialmente-python/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eWindows Azure ora supporta ufficialmente Python. La \u003c!-- raw HTML omitted --\u003epagina ufficiale\u003c!-- raw HTML omitted --\u003e consente di scaricare l’SDK e contiene alcuni tutorial per la creazione di applicazioni Django, Python e IPython direttamente da Visual Studio.\u003c/p\u003e","title":"Windows Azure ora supporta ufficialmente Python"},{"content":"Abbiamo una stringa JSON che contiene una data:\nfonte = '{\u0026quot;ragione_sociale\u0026quot;: \u0026quot;CIR 2000\u0026quot;, \u0026quot;aggiornato_il\u0026quot;: \u0026quot;Wed, 06 Jun 2012 14:19:53 UTC\u0026quot;}' Vediamo che succede se la convertiamo in un dizionario Python:\nimport simplejson as json json.loads(fonte) {'aggiornato_il': 'Wed, 06 Jun 2012 14:19:53 UTC ', 'ragione_sociale': 'CIR 2000'} Facile, vero? C’è però un piccolo problema: aggiornato_il è ancora una stringa mentre a noi, per poterlo elaborare comodamente, serve un campo datetime.datetime. Come mai il pur potente modulo simplejson non converte correttamente la nostra data?\nIl problema Il fatto è che il JSON originale non fa nulla per informarci del fatto che il campo aggiornato_il esprime in realtà una data. La radice del problema sta nello standard JSON il quale non contempla la dichiarazione esplicita dei tipi di dati. In effetti la stessa questione si pone nella conversione di un numero non intero: va considerato un float, oppure un decimal? In quest’ultimo caso simplejson ci viene in aiuto con il parametro parse_float:\nimport simplejson as json json.loads('1.1', parse_float=decimal.Decimal) Decimal('1.1') Purtroppo, per il motivo visto prima, non esiste un equivalente per le date.\nLa soluzione classica In questi casi la prassi comune è rendere esplicito, già all’interno della stringa JSON, il formato del campo. Qualcosa del genere:\n{\u0026quot;aggiornato_il\u0026quot;: \u0026quot;$date: Wed, 06 Jun 2012 14:19:53 UTC\u0026quot;} Così facendo possiamo in seguito manipolare il dizionario restituito dal metodo loads: intercettare la direttiva $date e sostituire finalmente la stringa con una data. Una soluzione più raffinata è quella di sfruttare l’opzione object_hook che consente di invocare una nostra funzione ad ogni chiamata del metodo loads.\nLa mia soluzione Nel mio caso il provider JSON è esterno, e non desidero obbligarlo a pre-processare le stringhe JSON inserendo clausole $date arbitrarie solo per soddisfare le esigenze della mia applicazione. Sfruttando l’opzione object_hook già accennata ho ottenuto una soluzione del tutto trasparente:\nfonte = '{\u0026quot;aggiornato_il\u0026quot;: \u0026quot;Thu, 1 Mar 2012 10:00:49 UTC\u0026quot;}' dct = json.loads(fonte, object_hook=datetime_parser) dct {u'aggiornato_il': datetime.datetime(2012, 3, 1, 10, 0, 49)} def datetime_parser(dct): for k, v in dct.items(): if isinstance(v, basestring) and re.search(\u0026quot; UTC\u0026quot;, v): try: dct[k] = datetime.datetime.strptime(v, DATE_FORMAT) except: pass return dct La funzione datetime_parser esamina gli elementi della stringa JSON. In caso di corrispondenza alla espressione regolare indicata in re.search tentiamo una conversione diretta al formato datetime. Data la specificità della espressione regolare la conversione dovrebbe avere successo. Il blocco try... except ci permette di ignorare un eventuale errore: in questo caso infatti presumiamo che si tratti di una stringa vera e propria e non, malgrado la somiglianza, di una data. L’unico vincolo imposto al provider JSON è l’adozione di un formato standard per rappresentare le date. Nel mio caso è il seguente:\nDATE_FORMAT = '%a, %d %b %Y %H:%M:%S UTC' Per approfondimenti vi consiglio:\nJSON econdoer and decoder Introduzione alle Regular Expression Per completezza c’è da aggiungere che l’adozione di un json schema consentirebbe la specifica dei tipi di dati JSON. Quest’ultima soluzione però, data la sua complessità, non è applicabile nel mio e in molti altri casi.\nPS: ne ho scritto anche su Stack Overflow.\n","permalink":"https://nicolaiarocci.com/convertire-una-data-json-in-un-oggetto-datetime-python/","summary":"\u003cp\u003eAbbiamo una stringa JSON che contiene una data:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efonte = '{\u0026quot;ragione_sociale\u0026quot;: \u0026quot;CIR 2000\u0026quot;, \u0026quot;aggiornato_il\u0026quot;: \u0026quot;Wed, 06 Jun 2012 14:19:53 UTC\u0026quot;}'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eVediamo che succede se la convertiamo in un dizionario Python:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eimport simplejson as json\n\njson.loads(fonte)\n{'aggiornato_il': 'Wed, 06 Jun 2012 14:19:53 UTC ', 'ragione_sociale': 'CIR 2000'}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFacile, vero? C’è però un piccolo problema: \u003ccode\u003eaggiornato_il\u003c/code\u003e è ancora una stringa mentre a noi, per poterlo elaborare comodamente, serve un campo \u003ccode\u003edatetime.datetime\u003c/code\u003e. Come mai il pur potente modulo \u003ccode\u003esimplejson\u003c/code\u003e non converte correttamente la nostra data?\u003c/p\u003e","title":"Convertire una data JSON in un oggetto datetime Python"},{"content":"Il filmato del mio recente intervento al Ravenna CNA BarCamp è online. L’articolo originale è stato aggiornato e ora include sia le slide che il video. In alternativa c’è sempre YouTube.\n","permalink":"https://nicolaiarocci.com/il-mio-intervento-al-cna-barcamp-video/","summary":"\u003cp\u003eIl filmato del mio recente intervento al Ravenna CNA BarCamp è online. L’\u003ca href=\"http://nicolaiarocci.com/offline-online-superare-la-crisi-anche-grazie-alla-rete/\" title=\"Offline / Online: superare la crisi anche grazie alla rete\"\u003earticolo originale\u003c/a\u003e è stato aggiornato e ora include sia le slide che il video. In alternativa c’è sempre \u003c!-- raw HTML omitted --\u003eYouTube\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Il filmato del mio intervento al Ravenna CNA BarCamp"},{"content":"Moonlight, l’implementazione open-source di Silverlight per sistemi Linux, è stata abbandonata da Xamarin.\nAbbiamo abbandonato Moonlight (…) Il web non ha addotato Silverlight; non ha avuto il successo che mi aspettavo. Miguel de Icaza\nUn’altro chiodo sulla bara di Silverlight. Dei dubbi sul futuro della tecnologia Microsoft avevo già scritto in occasione della sua mancata adozione in Windows 8 e al momento dell’annuncio di Silverlight 5.\n","permalink":"https://nicolaiarocci.com/xamarin-abbandona-il-progetto-silverlight-per-linux/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eMoonlight, l’implementazione open-source di Silverlight per sistemi Linux, è stata \u003c!-- raw HTML omitted --\u003eabbandonata da Xamarin\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAbbiamo abbandonato Moonlight (…) Il web non ha addotato Silverlight; non ha avuto il successo che mi aspettavo. \u003cstrong\u003eMiguel de Icaza\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eUn’altro chiodo sulla bara di Silverlight. Dei dubbi sul futuro della tecnologia Microsoft avevo già scritto in occasione della sua \u003ca href=\"http://nicolaiarocci.com/windows-8-e-i-dubbi-sul-destino-di-silverlight/\" title=\"Windows 8 e i dubbi sul destino di Silverlight\"\u003emancata adozione in Windows 8\u003c/a\u003e e al momento dell’annuncio di \u003ca href=\"http://nicolaiarocci.com/microsoft-silverlight-e-adobe-flash-verso-la-resa-comincia-lera-di-re-html5/\" title=\"Silverlight 5 vs HTML5\"\u003eSilverlight 5\u003c/a\u003e.\u003c/p\u003e","title":"Xamarin abbandona il progetto Silverlight per Linux"},{"content":"Se siete ai primi passi nello sviluppo di applicazioni web vi consiglio la lettura di SSH: What and How. Senza troppi fronzoli l’articolo spiega le basi di SSH mettendo bene in luce le possibilità offerte da questo importante strumento di lavoro.\nOgni giorno molti sviluppatori web usano SSH (“Secure Shell”) per gestire i loro server, fare backup, lavorare in remoto e una miriade di altre cosette. Oggi vi spiego cos’è e da dove viene SSH e, soprattutto, vi insegno come configurarlo sul vostro server remoto o sulla vostra rete locale. Cominciamo!\n","permalink":"https://nicolaiarocci.com/primi-passi-con-ssh/","summary":"\u003cp\u003eSe siete ai primi passi nello sviluppo di applicazioni web vi consiglio la lettura di \u003c!-- raw HTML omitted --\u003eSSH: What and How\u003c!-- raw HTML omitted --\u003e. Senza troppi fronzoli l’articolo spiega le basi di SSH mettendo bene in luce le possibilità offerte da questo importante strumento di lavoro.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOgni giorno molti sviluppatori web usano SSH (“Secure Shell”) per gestire i loro server, fare backup, lavorare in remoto e una miriade di altre cosette. Oggi vi spiego cos’è e da dove viene SSH e, soprattutto, vi insegno come configurarlo sul vostro server remoto o sulla vostra rete locale. Cominciamo!\u003c/p\u003e","title":"Primi passi con SSH"},{"content":"Usando Git capita ogni tanto, vuoi per stanchezza o per distrazione, di lanciare commit sbagliate. Stamattina m’è capitato di sistemare del codice, testarlo e fare la commit… solo per scoprire di aver lavorato sulla branch sbagliata! Non è la prima volta che mi succede e non sarà nemmeno l’ultima. Poiché ho scarsa memoria ogni volta mi tocca usare google e ripescare quei due o tre comandi utili in questi casi. Ho pensato di appuntarli qui, un po’ per metterli a disposizione di tutti, un po’ per poterli ritrovare facilmente.\nAnnullare una commit Se ancora non è stato stato eseguito il push verso un repo remoto:\nIn Git HEAD è la commit più recente mentre HEAD^ è la penultima (HEAD^^ è la terzultima). In alternativa è possibile indicare l’SHA-1 dell’hash della commit alla quale si vuole tornare, qualunque essa sia:\nIl numero di hash di ogni commit è rintracciabile con un semplice git log --oneline\nDifferenza tra --soft e --hard L’opzione --soft cancella la commit ma lascia i file invariati. Se volete riportare anche i file allo stato in cui si trovavano alla penultima commit:\nQuesto porterà “indietro nel tempo” il vostro repo, alla penultima commit. Sarà come se le ultime modifiche (e con esse l’ultima commit) non fossero mai esistite.\nE se la commit è già finita nel repository? Se la commit è già stata inviata a un repo remoto (push) è necessario seguire un’altra procedura:\nQuesto comando crea una nuova commit che annulla tutto ciò che è stato introdotto dalla commit indesiderata.\n","permalink":"https://nicolaiarocci.com/come-annullare-una-commit-in-git/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eUsando \u003c!-- raw HTML omitted --\u003eGit\u003c!-- raw HTML omitted --\u003e capita ogni tanto, vuoi per stanchezza o per distrazione, di lanciare commit sbagliate. Stamattina m’è capitato di sistemare del codice, testarlo e fare la commit… solo per scoprire di aver lavorato sulla branch sbagliata! Non è la prima volta che mi succede e non sarà nemmeno l’ultima. Poiché ho scarsa memoria ogni volta mi tocca usare google e ripescare quei due o tre comandi utili in questi casi. Ho pensato di appuntarli qui, un po’ per metterli a disposizione di tutti, un po’ per poterli ritrovare facilmente.\u003c/p\u003e","title":"Come annullare una Commit in Git"},{"content":"Parteciperò alla WhyMCA Mobile Developer Conference a Bologna il 24 e 25 maggio. Il programma mi sembra piuttosto interessante. Se pensate di venire fatemelo sapere che vediamo di incotrarci.\n","permalink":"https://nicolaiarocci.com/whymca-mobile-developer-conference-2012/","summary":"\u003cp\u003eParteciperò alla \u003c!-- raw HTML omitted --\u003eWhyMCA Mobile Developer Conference\u003c!-- raw HTML omitted --\u003e a Bologna il 24 e 25 maggio. Il programma mi sembra piuttosto interessante. Se pensate di venire \u003ca href=\"http://nicolaiarocci.com/contatti/\" title=\"Contatti\"\u003efatemelo sapere\u003c/a\u003e che vediamo di incotrarci.\u003c/p\u003e","title":"WhyMCA Mobile Developer Conference 2012"},{"content":"Il sito del progetto Git è stato finalmente aggiornato. Nuova grafica, nuovo logo, ottimizzazione dei contenuti e soprattutto integrazione di importanti risorse prima ospitate altrove: la Git Reference, il libro ProGit, Why Git is Better Than X e il nuovo progetto Git Video Series, che include quattro bei filmati già pronti.\n","permalink":"https://nicolaiarocci.com/git-si-e-rifatto-il-look-e-non-solo/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eIl sito del \u003c!-- raw HTML omitted --\u003eprogetto Git\u003c!-- raw HTML omitted --\u003e è stato finalmente aggiornato. Nuova grafica, nuovo logo, ottimizzazione dei contenuti e soprattutto integrazione di importanti risorse prima ospitate altrove: la \u003c!-- raw HTML omitted --\u003eGit Reference\u003c!-- raw HTML omitted --\u003e, il libro \u003c!-- raw HTML omitted --\u003eProGit\u003c!-- raw HTML omitted --\u003e, \u003c!-- raw HTML omitted --\u003eWhy Git is Better Than X\u003c!-- raw HTML omitted --\u003e e il nuovo progetto \u003c!-- raw HTML omitted --\u003eGit Video Series\u003c!-- raw HTML omitted --\u003e, che include quattro bei filmati già pronti.\u003c/p\u003e","title":"Git si è rifatto il look (e non solo)"},{"content":"Venite da PHP e siete incuriositi da Python? Vi consiglio la lettura di Python FAQ Webdev: i web framework Python dal punto di vista di un ex sviluppatore PHP.\n","permalink":"https://nicolaiarocci.com/conosco-solo-php-come-scrivo-una-applicazione-web-in-python/","summary":"\u003cp\u003eVenite da PHP e siete incuriositi da Python? Vi consiglio la lettura di \u003c!-- raw HTML omitted --\u003ePython FAQ Webdev\u003c!-- raw HTML omitted --\u003e: i web framework Python dal punto di vista di un ex sviluppatore PHP.\u003c/p\u003e","title":"Conosco solo PHP. Come scrivo una applicazione web in Python?"},{"content":"Ogni tanto ricevo proposte di lavoro che non sono in grado di soddisfare né direttamente (per mancanza di tempo o know-how) né indirettamente (passando nomi di colleghi e conoscenti). E’ questo il caso della richiesta di Michele, che vi propongo nel caso qualcuno di voi sia interessato. Sia chiaro che io non c’entro e non ci guadagno nulla; mi interessa solo favorire domanda e offerta e mi limito, col permesso dell’autore, a ripubblicare il suo annuncio. Se siete interessati contattate Michele direttamente:\nSono un IM professionista da oltre 4 anni. Questo è il mio lavoro e lo faccio piuttosto bene. Ultimamente ho deciso di lanciare un sito di annunci italiano ed ho acquistato uno script pronto ed abbastanza complesso basato su joomla. Mi servono svariate modifiche sia nel frontend che nella admin panel (perlopiù semplificazioni) più la traduzione di tutte le voci presenti dall’inglese all’italiano.\nNon sono un perditempo e non lavoro con gente mediocre o ragazzini ma solo con professionisti seri. Valuto la possibilità di far subentrare un socio/webmaster in questo progetto. Io mi occuperò della pubblicità/visibilità più inpage e offpage optimization e in generale del posizionamento mentre il socio avrà a che fare con degli aspetti prettamente tecnici e con tutte le migliorie da apportare di volta in volta al sito. Il candidato ideale deve avere buone conoscenze di joomla, php, html, javascript e possibilmente anche un po’ di ajax. Maggiori dettagli saranno forniti ai candidati che daranno prova di soddisfare le richieste sopra specificate.\nTipo di committente: privato Nominativo committente: Michele E-mail: mikivv[at]aol.com Luogo di lavoro: telelavoro Tipo di contratto: freelancer/progetto (eventualmente webmaster/socio a tempo indeterminato) Budget massimo (riferito solo alle modifiche/traduzione frontend dello script): €1.000 Valuto possibilità di assumere webmaster a tempo indeterminato o far subentrare socio nel progetto. ","permalink":"https://nicolaiarocci.com/opportunita-per-esperti-joomla-e-php/","summary":"\u003cp\u003e\u003cem\u003eOgni tanto ricevo proposte di lavoro che non sono in grado di soddisfare né direttamente (per mancanza di tempo o know-how) né indirettamente (passando nomi di colleghi e conoscenti). E’ questo il caso della richiesta di Michele, che vi propongo nel caso qualcuno di voi sia interessato. Sia chiaro che io non c’entro e non ci guadagno nulla; mi interessa solo favorire domanda e offerta e mi limito, col permesso dell’autore, a ripubblicare il suo annuncio. Se siete interessati contattate Michele direttamente:\u003c/em\u003e\u003c/p\u003e","title":"Opportunità per esperti Joomla e PHP"},{"content":"La scorsa settimana ho partecipato come relatore alla prima edizione del Ravenna CNA Barcamp sulla cultura d’impresa 2.0. Offline / Online è il racconto di una esperienza vissuta sul campo; un case study su come il mercato del software si è evoluto nel corso degli anni passando dalla classica filiera lunga sul territorio, tipica degli anni ’90 e della prima metà dei 2000, alla vendita online dei giorni nostri. La crisi economica degli ultimi anni si è innestata in un processo evolutivo già in atto e inarrestabile, perlomeno per quanto riguarda il nostro settore:\nNon sono molto soddisfatto della mia relazione: troppo da dire nel poco tempo a disposizione. Mi auguro di aver comunicato bene almeno un paio di cose:\nCiò che oggi funziona alla grande domani potrebbe non funzionare affatto. Siate pronti a rimettere in discussione voi stessi e il vostro modello di business in qualunque momento. Non fatevi ingannare dai fatturati milionari sbandierati ovunque ai quattro venti. Ciò che conta davvero è quel che vi rimane in tasca. Per una città come Ravenna questo BarCamp è una novità benvenuta e necessaria, come dimostrano gli stessi numeri ottenuti: 170 presenze in sala, 400 spettatori collegati alla diretta streaming, 26 relatori. Complimenti alla CNA per averci creduto accettando una sfida dai risultati non scontati. Grazie di cuore e complimenti vivissimi a Lidia Marongiu, che ha organizzato e diretto l’evento con tenacia e grande professionalità.\n","permalink":"https://nicolaiarocci.com/offline-online-superare-la-crisi-anche-grazie-alla-rete/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eLa scorsa settimana ho partecipato come relatore alla prima edizione del \u003c!-- raw HTML omitted --\u003eRavenna CNA Barcamp\u003c!-- raw HTML omitted --\u003e sulla cultura d’impresa 2.0. \u003c!-- raw HTML omitted --\u003eOffline / Online\u003c!-- raw HTML omitted --\u003e è il racconto di una esperienza vissuta sul campo; un case study su come il mercato del software si è evoluto nel corso degli anni passando dalla classica filiera lunga sul territorio, tipica degli anni ’90 e della prima metà dei 2000, alla vendita online dei giorni nostri. La crisi economica degli ultimi anni si è innestata in un processo evolutivo già in atto e inarrestabile, perlomeno per quanto riguarda il nostro settore:\u003c/p\u003e","title":"Offline / Online: superare la crisi anche grazie alla rete"},{"content":" Partenza col botto per EuroPython 2012. I keynote introduttivi saranno tenuti nientemeno che dal creatore stesso del linguaggio, Guido Van Rossum, e da Alex Martelli. Ieri è stato annunciato il programma ufficiale e a quanto pare mi spetta l’inaugurazione della italian track martedì 3 luglio. Il giorno successivo sarò impegnato, ancora di prima mattina, con la versione in lingua inglese del mio talk:\nSviluppare una RESTful Web API con Python, Flask e MongoDB\nNel corso dell’ultimo anno abbiamo lavorato all’implementazione Python di una RESTful Web API completa. Abbiamo imparato un bel po’ di cose sui best pattern REST e, naturalmente, abbiamo messo alla prova le ben note capacità web di Python, rilasciando nel frattempo un paio di progetti Open Source. Nel corso del mio intervento condividerò quel che abbiamo imparato. Prenderemo in considerazione il problematico design di una REST API ‘pura’. Vedremo che cosa offre Python in questo campo e scenderemo infine nel dettaglio, dando una occhiata al codice che abbiamo scritto. Alcune tecnologie/stack che tratteremo sono (in nessun ordine particolare): Flask, PyMongo, MongoDB, REST, JSON, XML, Heroku. Lo sapevi? Che ti piaccia o no, c’è una REST API nel tuo futuro.\nScorrendo la lista degli speaker scopro che anche Amin Roacher, autore di Flask, e Ross Lawley di 10Gen (MongoDB) saranno della partita. Insomma ammetto che un po’ d’ansia da prestazione comincia ad affiorare. Sarà una bella sfida, e non vedo l’ora di affrontarla. Conto molto sul vostro supporto e incoraggiamento: ne avrò bisogno 😉\n","permalink":"https://nicolaiarocci.com/guido-van-rossum-a-europython-2012/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003ePartenza col botto per \u003c!-- raw HTML omitted --\u003eEuroPython 2012\u003c!-- raw HTML omitted --\u003e. I keynote introduttivi saranno tenuti nientemeno che dal creatore stesso del linguaggio, Guido Van Rossum, e da Alex Martelli. Ieri è stato annunciato il \u003c!-- raw HTML omitted --\u003eprogramma ufficiale\u003c!-- raw HTML omitted --\u003e e a quanto pare mi spetta l’inaugurazione della italian track martedì 3 luglio. Il giorno successivo sarò impegnato, ancora di prima mattina, con la versione in lingua inglese del mio talk:\u003c/p\u003e","title":"Guido van Rossum a EuroPython 2012"},{"content":"Già sapete che Git è uno degli strumenti senza i quali non potrei più vivere, ne ho scritto anche recentemente in Branching di successo per Git e Usare Git con Dropbox. Oggi vi propongo Git Immersion, fantastico sito-laboratorio per “immergersi” in Git imparandolo passo dopo passo.\nGit Immersion è un tour guidato che ti accompagna in una passeggiata tra i fondamenti di Git, ispirato dalla premessa che conoscere una cosa significa usarla. Git è un sistema potente e sofisticato per il controllo di versione distribuito. Per lo sviluppatore conoscere e comprenderne le caratteristiche significa aprirsi a un nuovo e liberatorio approccio alla gestione del codice sorgente. Il modo migliore per padroneggiare Git è immergesi nelle sue utility ed operazioni, sperimentarlo in prima persona.\n","permalink":"https://nicolaiarocci.com/imparare-git-un-passo-alla-volta-con-git-immersion/","summary":"\u003cp\u003eGià sapete che Git è uno degli strumenti senza i quali non potrei più vivere, ne ho scritto anche recentemente in \u003ca href=\"http://nicolaiarocci.com/branching-di-successo-per-git/\" title=\"Branching di successo per Git\"\u003eBranching di successo per Git\u003c/a\u003e e \u003ca href=\"http://nicolaiarocci.com/usare-git-con-dropbox/\" title=\"Usare Git con Dropbox\"\u003eUsare Git con Dropbox\u003c/a\u003e. Oggi vi propongo \u003c!-- raw HTML omitted --\u003eGit Immersion\u003c!-- raw HTML omitted --\u003e, fantastico sito-laboratorio per “immergersi” in Git imparandolo passo dopo passo.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGit Immersion è un tour guidato che ti accompagna in una passeggiata tra i fondamenti di Git, ispirato dalla premessa che conoscere una cosa significa usarla. Git è un sistema potente e sofisticato per il controllo di versione distribuito. Per lo sviluppatore conoscere e comprenderne le caratteristiche significa aprirsi a un nuovo e liberatorio approccio alla gestione del codice sorgente. Il modo migliore per padroneggiare Git è immergesi nelle sue utility ed operazioni, sperimentarlo in prima persona.\u003c/p\u003e","title":"Imparare Git un passo alla volta con Git Immersion"},{"content":" EuroPython è la conferenza europea di riferimento per il linguaggio Python. Si terrà anche quest’anno a Firenze, dal 2 al 8 luglio. Sono in programma molti interventi davvero interessanti, cosa che rende ancor più soprendente il fatto che i miei talk siano stati votati così tanto.\nDate un’occhiata al sito ufficiale per saperne di più sulla conferenza (in questo momento è ancora possibile approfittare dell’offerta early bird per l’acquisto dei biglietti); maggiori informazioni sui miei interventi tra qualche tempo, quando sarà ufficializzato il calendario dei talk.\n","permalink":"https://nicolaiarocci.com/speaker-a-europython-2012/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eEuroPython è la conferenza europea di riferimento per il linguaggio Python. Si terrà anche quest’anno a Firenze, dal 2 al 8 luglio. Sono in programma molti interventi davvero interessanti, cosa che rende ancor più soprendente il fatto che i miei talk siano stati votati così tanto.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eDate un’occhiata al \u003c!-- raw HTML omitted --\u003esito ufficiale\u003c!-- raw HTML omitted --\u003e per saperne di più sulla conferenza (in questo momento è ancora possibile approfittare dell’offerta \u003cem\u003eearly bird\u003c/em\u003e per l’acquisto dei biglietti); maggiori informazioni sui miei interventi tra qualche tempo, quando sarà ufficializzato il calendario dei talk.\u003c/p\u003e","title":"Speaker a EuroPython 2012"},{"content":"Addy Osmani ne ha combinata un’altra delle sue:\nMVVM (Model View ViewModel) è un pattern architetturale basato su MVC e MVP, che tenta di separare chiaramente lo sviluppo della interfaccia utente (UI) da quelle che sono business logic e comportamento dell’applicazione. A questo fine, molte implementazioni del pattern ricorrono a un uso dichiarativo dei data bindings, per consentire la separazione del lavoro sulle Viste (View) dagli altri strati (layer).\nMVVM consente creazione di UI e sviluppo del codice in parallelo, all’interno della stessa base di codice. Gli esperti UI scrivono bindings per il ViewModel all’interno del loro markup (HTML), mentre il Model e il ViewModel sono gestiti dagli sviluppatori che lavorano alla logica dell’applicazione.\nComprendere il MVVM – Guida per Sviluppatori JavaScript\n","permalink":"https://nicolaiarocci.com/comprendere-il-mvvm-guida-per-sviluppatori-javascript/","summary":"\u003cp\u003eAddy Osmani ne ha combinata un’altra delle sue:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMVVM (Model View ViewModel) è un pattern architetturale basato su MVC e MVP, che tenta di separare chiaramente lo sviluppo della interfaccia utente (UI) da quelle che sono business logic e comportamento dell’applicazione. A questo fine, molte implementazioni del pattern ricorrono a un uso dichiarativo dei data bindings, per consentire la separazione del lavoro sulle Viste (View) dagli altri strati (layer).\u003c/p\u003e\n\u003cp\u003eMVVM consente creazione di UI  e sviluppo del codice in parallelo, all’interno della stessa base di codice. Gli esperti UI scrivono bindings per il ViewModel all’interno del loro markup (HTML), mentre il Model e il ViewModel sono gestiti dagli sviluppatori che lavorano alla logica dell’applicazione.\u003c/p\u003e","title":"Comprendere il MVVM – Guida per Sviluppatori JavaScript"},{"content":"Codecademy propone da ieri un corso gratuito e interattivo su HTML e CSS. Il corso, per principianti, si affianca a quello ormai collaudato (e recentemente ampliato) su JavaScript.\nIl meccanismo è quello della gamification, con tanto di punteggi e badge da conquistare man mano che si raggiungono obiettivi prefissati . Presto dovrebbe uscire anche un corso su Python.\nCompi i tuoi primi passi con HTML e CSS. Non è necessaria alcuna esperienza precedente — cominceremo dalle basi e in poco tempo ti ritroverai a lavorare alla tua homepage personale!\n","permalink":"https://nicolaiarocci.com/imparare-html-e-css-online-con-codecademy/","summary":"\u003cp\u003eCodecademy propone da ieri un corso gratuito e interattivo su \u003c!-- raw HTML omitted --\u003eHTML e CSS\u003c!-- raw HTML omitted --\u003e. Il corso, per principianti, si affianca a quello ormai collaudato (e recentemente ampliato) su JavaScript.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eIl meccanismo è quello della \u003cem\u003egamification\u003c/em\u003e, con tanto di punteggi e badge da conquistare man mano che si raggiungono obiettivi prefissati . Presto dovrebbe uscire anche un corso su Python.\u003c/p\u003e","title":"Imparare HTML e CSS Online con Codecademy"},{"content":" Rainbow è una libreria per l’evidenziazione del codice scritta in Javascript. E’ leggera (1.4kb), facile da usare, estensibile e completamente configurabile via CSS.\n","permalink":"https://nicolaiarocci.com/evidenziare-il-codice-sorgente-via-javascript-e-css-con-rainbow/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eRainbow\u003c!-- raw HTML omitted --\u003e è una libreria per l’evidenziazione del codice scritta in Javascript. E’ leggera (1.4kb), facile da usare, estensibile e completamente configurabile via CSS.\u003c/p\u003e\u003c/blockquote\u003e","title":"Evidenziare il codice sorgente via JavaScript e CSS con Rainbow"},{"content":"Jordan Mechner creò Prince of Persia 23 anni fa. Era il 1989 quando il gioco uscì per Apple II. Negli anni seguenti si sono succedute diverse edizioni moderne di grande successo, ma nessuna affascinante come l’originale (almeno non per noi, vecchi tromboni nostalgici).\nPochi sanno che il codice sorgente originale era andato perduto. Mechner l’aveva cercato ovunque senza successo, perdendo ogni speranza di rintraccialo. Finché, proprio ieri, suo padre non è sceso in cantina. Da un scatolone che conteneva confezioni sigillate del mitico Karateka (1984 – quante partite sul mio C64!) sono spuntate tre confezioni di floppy disk Apple ProDOS da 3.5″: contenevano il codice perduto.\nLa lieta novella si deve allo stesso Mechner, ora impegnato nel non banale tentativo di riuscire a leggere il contenuto dei vecchi floppy per poi trasferirlo sul suo MacBook Air. Su Flickr è stato pubblicato il set fotografico dei floppy disk originali.\nPer i nostalgici della mia età (e per i giovani curiosi) ecco il filmato di una sessione di gioco del Prince of Persia originale: la fuga dalle prigioni del Califfo.\nAggiornamento: il codice sorgente di Prince of Persia è stato recuperato ed è ora disponibile su GitHub.\n","permalink":"https://nicolaiarocci.com/ritrovato-il-codice-sorgente-di-prince-of-persia-perduto-23-anni-fa/","summary":"\u003cp\u003eJordan Mechner creò \u003c!-- raw HTML omitted --\u003ePrince of Persia\u003c!-- raw HTML omitted --\u003e 23 anni fa. Era il 1989 quando il gioco uscì per Apple II. Negli anni seguenti si sono succedute diverse edizioni moderne di grande successo, ma nessuna affascinante come l’originale (almeno non per noi, vecchi tromboni nostalgici).\u003c/p\u003e\n\u003cp\u003ePochi sanno che il codice sorgente originale era andato perduto. Mechner l’aveva cercato ovunque senza successo, perdendo ogni speranza di rintraccialo. Finché, proprio ieri, suo padre non è sceso in cantina. Da un scatolone che conteneva confezioni sigillate del mitico \u003c!-- raw HTML omitted --\u003eKarateka \u003c!-- raw HTML omitted --\u003e(1984 \u003cem\u003e– quante partite sul mio C64!\u003c/em\u003e) sono spuntate tre confezioni di floppy disk Apple ProDOS da 3.5″: contenevano il codice perduto.\u003c/p\u003e","title":"Ritrovato il codice sorgente di Prince of Persia perduto 23 anni fa"},{"content":"Oggi Microsoft annuncia una svolta che ha del clamoroso:\nSono felice di annunciare che oggi rilasciamo il codice sorgente di ASP.NET Web API e ASP.NET Web Pages (Razor) sotto una licenza open source (Apache 2.0), e che continueremo a migliorare la trasparenza di tutti i tre progetti ospitando il loro codice sorgente su CodePlex (usando il nuovo supporto per Git annunciato la settimana scorsa).\nMa quel che più conta, e che per un’azienda corporate ‘vecchia maniera’ come Microsoft denota davvero un’evoluzione (rivoluzione) culturale:\nPer la prima volta consentiremo agli sviluppatori esterni a Microsoft di proporre patches e contributi di codice, che il nostro team di sviluppo valuterà per la potenziale inclusione diretta nei prodotti.\n","permalink":"https://nicolaiarocci.com/asp-net-mvc-web-api-asp-net-web-pages-razor-sono-open-source/","summary":"\u003cp\u003eOggi Microsoft annuncia una svolta che ha del clamoroso:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSono felice di annunciare che oggi rilasciamo il codice sorgente di ASP.NET Web API e ASP.NET Web Pages (Razor) sotto una licenza open source (Apache 2.0), e che continueremo a migliorare la trasparenza di tutti i tre progetti ospitando il loro codice sorgente su CodePlex (usando il nuovo supporto per Git annunciato la settimana scorsa).\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eMa quel che più conta, e che per un’azienda corporate ‘vecchia maniera’ come Microsoft denota davvero un’evoluzione (rivoluzione) culturale:\u003c/p\u003e","title":"ASP.NET MVC, Web API, ASP.NET Web Pages (Razor) sono Open Source"},{"content":"I linguaggi di programmazione ‘moderni’ a confronto: PHP vs Ruby vs Python. Lo scorso gennaio Udemy ha rilasciato una bella infografica che confronta i tre linguaggi sotto molti aspetti. Ne esce una fotografia secondo me interessante dell’attuale panorama dei linguaggi interpretati:\n","permalink":"https://nicolaiarocci.com/infografica-php-vs-ruby-vs-python/","summary":"\u003cp\u003eI linguaggi di programmazione ‘moderni’ a confronto: PHP vs Ruby vs Python. Lo scorso gennaio \u003c!-- raw HTML omitted --\u003eUdemy\u003c!-- raw HTML omitted --\u003e ha rilasciato una bella infografica che confronta i tre linguaggi sotto molti aspetti. Ne esce una fotografia secondo me interessante dell’attuale panorama dei linguaggi interpretati:\u003c/p\u003e","title":"Infografica: PHP vs Ruby vs Python"},{"content":" Amazon offre sconti significativi per chi sceglie le istanze riservate al posto di quelle on-demand. Dal punto di vista finanziario, e se avete intenzione di usare EC2 per almeno un anno, passare dalle istanze on-demand a quelle riservate potrebbe aver senso. Sborserete una cifra più alta inizialmente, ma il costo mensile si ridurrà sensibilmente.\nPer quanto io ne sappia il tool sviluppato da Mike Khristo è il primo che consente di confrontare direttamente, senza tanti giri di parole, il costo delle due soluzioni:\n","permalink":"https://nicolaiarocci.com/amazon-ec2-quanto-si-risparmia-con-le-reserved-instances-rispetto-alle-classiche-on-demand/","summary":"\u003cblockquote\u003e\n\u003cp\u003eAmazon offre sconti significativi per chi sceglie le istanze riservate al posto di quelle on-demand. Dal punto di vista finanziario, e se avete intenzione di usare EC2 per almeno un anno, passare dalle istanze on-demand a quelle riservate potrebbe aver senso. Sborserete una cifra più alta inizialmente, ma il costo mensile si ridurrà sensibilmente.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003ePer quanto io ne sappia il tool sviluppato da Mike Khristo è il primo che consente di confrontare direttamente, senza tanti giri di parole, il costo delle due soluzioni:\u003c/p\u003e","title":"Amazon EC2: Quanto si risparmia con le Reserved Instances rispetto alle classiche On-Demand?"},{"content":" Usare Dropbox come repository Git remoto Recentemente, più che altro per curiosità, ho giocato con una terza opzione: Dropbox. Per me Dropbox è uno strumento indispensabile sia per il lavoro che per le mie cose personali. Su qualunque computer io sia, ovunque mi trovi, grazie a Dropbox ho accesso al mio materiale. Dunque, mi son detto, perché non usarlo anche per il codice, pur senza rinunciare al controllo versione offerto da Git?\nEbbene ho scoperto che non solo è possibile, è anche molto semplice. In realtà non c’è nulla di nuovo in quel che vi mostro, la ‘magia’ la fa tutta Dropbox.\nCreare un Git repository ‘remoto’ su Drobox Se siete su Linux o Mac aprite una finestra terminale; su Windows aprite semplicemente Git Bash. Se avete una installazione predefinita la cartella Dropbox si trova nella HOME di Linux e Mac, oppure nella Documenti di Windows.\nSpostatevi nella cartella Dropbox:\nUna volta entrati in ~/Dropbox create un ‘bare’ repository:\nIl nostro repository privato, l’equivalente di un repo remoto alla GitHub per capirci, è pronto. Lo useremo per tenere sincronizzati i nostri computer. Naturalmente appoggiarci a Dropbox ci garantisce anche la possibilità di ricorrere a un restore di emergenza nel caso il codice venga perduto localmente.\nCreare il Git repository locale Su ognuno dei computer creiamo il repository locale:\nLavoriamo un po’, quindi facciamo la nostra commit locale:\nOra colleghiamo il repo “remoto” (quello in Dropbox) al nostro repository locale:\nOra possiamo fare il push verso il remoto dei files locali. Dal branch [cci lang=”bash” theme=”default”]master[/cci] verso [cci lang=”bash” theme=”default”]origin[/cci]:\nFatto! Possiamo simulare facilmente il lavoro su un’altro computer. Basta clonare [cci lang=”bash” theme=”default”]progetto[/cci] dal ‘remoto’, cambiare qualche file e salvarlo:\nTorniamo ora al folder locale originale. Possiamo sincronizzarlo e aggiornarlo con le modifiche fatte sul “secondo computer”:\nIl versioning di Dropbox Dropbox è dotato di un proprio sistema di versioning, pertanto aggiungere Git potrebbe sembrare superfluo. Qualunque sviluppatore avvezzo a Git vi dirà che non è così. Il versioning di Dropbox è adatto a file di testo, fogli di calcolo, immagini e quant’altro ma non ha niente a che vedere con le capacità di manutenzione e gestione dei progetti offerte da Git.\nGit e Dropbox per gruppi di lavoro? E’ sufficiente condividere il folder Dropbox con altre persone per creare un ambiente di sviluppo privato ma condiviso col proprio gruppo di lavoro. In quest’ultimo caso la probabilità di conflitti aumenta notevolmente. Si tratta di una soluzione forse interessante per mini-team di 2 o 3 persone nei quali è relativamente facile evitare la generazione di conflitti (evitare le push contemporanee).\nConcludendo BitBucket o GitHub (a pagamento) rimangono la soluzione ideale, e offrono molte funzionalità comunque assenti in Git+Dropbox (interfaccia web, wiki, issues, eccetera). Per piccoli progetti personali Dropbox offre una alternativa a buon mercato, rapida e comoda.\nPS: se create un account Dropbox dal link dell’articolo, oppure da questo, ricevete 500BMB extra (e altrettanti ne otterrà il sottoscritto)!\n","permalink":"https://nicolaiarocci.com/usare-git-con-dropbox/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"usare-dropbox-come-repository-git-remoto\"\u003eUsare Dropbox come repository Git remoto\u003c/h2\u003e\n\u003cp\u003eRecentemente, più che altro per curiosità, ho giocato con una terza opzione: \u003c!-- raw HTML omitted --\u003eDropbox\u003c!-- raw HTML omitted --\u003e. Per me Dropbox è uno strumento indispensabile sia per il lavoro che per le mie cose personali. Su qualunque computer io sia, ovunque mi trovi, grazie a Dropbox ho accesso al mio materiale. Dunque, mi son detto, perché non usarlo anche per il codice,  pur senza rinunciare al controllo versione offerto da Git?\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://db.tt/V8L8FFo\"\u003e\u003c!-- raw HTML omitted --\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eEbbene ho scoperto che non solo è possibile, è anche molto semplice. In realtà non c’è nulla di nuovo in quel che vi mostro, la ‘magia’ la fa tutta Dropbox.\u003c/p\u003e","title":"Usare Git con Dropbox"},{"content":" Anni fa JavaScript era considerato più che altro una seccatura: produceva queste animazioni e trailer per il browser e poco altro. Ora tutto è cambiato. JavaScript è eletto a linguaggio funzionale di prima classe e in rete sono disponibili risorse innumerevoli . Condivido con voi alcune delle mie fonti migliori, che uso per tenermi aggiornato su librerie, progetti e JavaScript in generale. – Rob Bazinet\n","permalink":"https://nicolaiarocci.com/7-risorse-per-sviluppatori-javascript/","summary":"\u003cblockquote\u003e\n\u003cp\u003eAnni fa JavaScript era considerato più che altro una seccatura: produceva queste animazioni e trailer per il browser e poco altro. Ora tutto è cambiato. JavaScript è eletto a linguaggio funzionale di prima classe e in rete sono disponibili risorse innumerevoli . Condivido con voi alcune delle mie fonti migliori, che uso per tenermi aggiornato su librerie, progetti e JavaScript in generale. – Rob Bazinet\u003c/p\u003e\u003c/blockquote\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"7 Risorse Per Sviluppatori JavaScript"},{"content":" Una casa per gli sviluppatori Python che lavorano con Facebook. Gestiamo due repository su GitHub. facebook-sdk, un set di tools essenziali per lavorare con Facebook in Python. django-facebook, un plugin estendibile per costruire siti Django integrati con Facebook.\nvia @bacchilu\n","permalink":"https://nicolaiarocci.com/python-per-facebook/","summary":"\u003cblockquote\u003e\n\u003cp\u003eUna casa per gli sviluppatori Python che lavorano con Facebook. Gestiamo due repository su GitHub. \u003cstrong\u003efacebook-sdk\u003c/strong\u003e, un set di tools essenziali per lavorare con Facebook in Python. \u003cstrong\u003edjango-facebook\u003c/strong\u003e, un plugin estendibile per costruire siti Django integrati con Facebook.\u003c/p\u003e\u003c/blockquote\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003evia \u003c!-- raw HTML omitted --\u003e@bacchilu\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Python per Facebook"},{"content":"I prossimi 23 e 24 marzo sarò al Codemotion Roma, conferenza di due giorni dal programma ricco e piuttosto interessante. Se ci sarete mettetevi in contatto, è l’occasione giusta per incontrarci di persona!\n","permalink":"https://nicolaiarocci.com/codemotion-roma-2012/","summary":"\u003cp\u003eI prossimi 23 e 24 marzo sarò al Codemotion Roma, conferenza di due giorni dal \u003c!-- raw HTML omitted --\u003eprogramma\u003c!-- raw HTML omitted --\u003e ricco e piuttosto interessante. Se ci sarete \u003c!-- raw HTML omitted --\u003emettetevi in contatto\u003c!-- raw HTML omitted --\u003e, è l’occasione giusta per incontrarci di persona!\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://codemotion.it\"\u003e\u003c!-- raw HTML omitted --\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e \u003c/p\u003e","title":"Codemotion Roma 2012"},{"content":"Proprio un anno fa presentavo Sublime Text 2. Dopo dodici mesi ho pensato di fare il punto della situazione. Si sono susseguiti una serie di aggiornamenti importanti, il prodotto è più maturo e devo dire che in questo periodo non mi ha affatto deluso: è ancora il mio editor di codice preferito. Nel frattempo Sublime Text 2 è diventato mainstream. Me ne sono reso conto in questi giorni, quando articoli, recensioni, trucchi e suggerimenti su Sublime Text 2 affioravano ripetutamente nel mio feed.\nVi propongo alcune delle caratteristiche che ne fanno, almeno per quanto riguarda il mio modo di lavorare, l’editor ideale.\nMulti piattaforma Sublime Text gira egualmente bene su OSX, Windows e Linux. Lavorando su Mac a casa e con Windows in ufficio per me è sempre stato difficile trovare un editor di codice di alta qualità da poter usare in entrambi gli ambienti. TextMate? Solo per Mac. Notepad++? Solo per Windows. Si lo so che Eclipse e altre IDE sofisticate sono multi piattaforma ma il fatto è che io le IDE non le sopporto più. Le ho usate per vent’anni, e tuttora sono vincolato a Visual Studio (un prodotto comunque eccellente) per gran parte del mio tempo. Da quando sono potuto tornare alle origini, ovvero ai semplici text editor, mi ci rifugio appena possibile.\nBisognerebbe poi intendersi sul quel ‘semplici’ perché come vedremo Sublime Text e gli altri editor, moderni e non, sono semplici solo in apparenza.\nUna critica a Sublime Text 2 multi piattaforma mi sento di farla, e riguarda la non completa uniformità dei menu tra le diverse piattaforme. Per esempio le Preferenze sono nel menu principale in OSX, mentre se ricordo bene in Windows stanno in ‘Tools’.\nCommand Palette Come dicevo Sublime Text 2 è ricco di funzionalità, la gran parte attivate da menu con gran lavoro di mouse. Esistono le scorciatoie di tastiera per i comandi più frequenti, ma Sublime ci mette a disposizione qualcosa di più, la Command Palette.\nPremete Shift-Command-P per ottenere l’apertura della Command Palette:\nLa lista contiene i comandi disponibili in Sublime. Basta scrivere anche solo una parte del nome del comando per ottenerne la rapida selezione. Per attivarlo basta premere Invio. Si tratta di una soluzione davvero comoda, alla TextMate, che risparmia il mouse ed è ben implementata. Nell’immagine vedete come per installare un nuovo package mi basti premere una lettera (la ‘i’), anche se non è quella iniziale.\nPassaggio rapido da un file all’altro Ogni file aperto è contenuto in una scheda. Possiamo passare da un file all’altro cliccando sulle schede oppure usando la tastiera per scorrerle in sequenza. Ma possiamo anche ricorrere al comando Command-P per aprire una palette di selezione file, la quale implementa la stessa modalità di ricerca già vista nella Command Palette:\nCiò che rende questa palette davvero utile è il fatto che man mano che scriviamo Sublime attiva (mette in primo piano) il file che soddisfa la nostra query. Dopo un paio di volte non potrete più tornare al mouse.\nCursore multiplo Immaginate di selezionare più aree del codice e trattarle come se fossero tutte sotto un unico cursore. Ebbene è possibile, ed impagabile. Potete vedere questa modalità all’opera nel breve screencast messo a disposizione dai ragazzi di NetTuts, io mi limito a spiegarvi le alternative per attivarla:\nPremere Command e cliccare nei punti in cui volete attivare il cursore multiplo Selezionare blocchi di testo e premere Shift-Command-L Mettere il cursore sotto una parola e premere Command-D per selezionarne le occorrenze successive attivando il cursore per ognuna Selezionare una parola e premere Control-Command-G per selezionarne tutte le occorrenze attivando per ognuna il cursore Passaggio rapido a funzioni e metodi Oltre alle funzioni di ricerca classiche possiamo passare rapidamente da un metodo all’altro ricorrendo alla magica command palette vista prima. Basta Command-R per attivarla:\nIn Visual Studio ho sempre odiato il passaggio tra funzioni/metodi/classi implementato col solo match delle lettere iniziali, e addirittura suddiviso in due combo diverse (una per gli oggetti, l’altra per i metodi). Qui siamo a tutto un’altro livello.\nC’è Vim dentro Chi è abituato a Vim non disperi: è possibile attivare la modalità ‘Vintage’ che attiva il key binding del famoso editor Unix. Magicamente abbiamo a disposizione Command e Insert mode e molti dei comandi di editing più comuni in Vim. Per informazioni consultate la pagina sul Vintage Mode della documentazione.\nE c’è pure un po’ TextMate Temi e bundle di TextMate funzionano in Sublime Text, basta metterli nel folder Packages. Se siete legati a TextMate valutate la possibilità di passare a Sublime, potrebbe valerne la pena.\nPackage Control Sublime è ricco di estensioni (package) e consente di installare quelle TextMate. Il Package Control (da installare a parte) rende facile la loro gestione direttamente dalla Command Palette.\nConcludendo Naturalmente non è tutto qui. Ampia scelta di temi custom e standard (io uso Monokai Soda), Plugin come se piovesse (tra i quali uso abitualmente quelli per Git e StackOverflow), modalità ‘distraction free’ e full screen, personalizzazione dei key binding, syntax highlighting di tutti i linguaggi più diffusi… ci sarebbe ancora tanto da dire.\nAmmetto che molte di queste caratteristiche non sono una esclusiva di Sublime Text 2, tuttavia quel che apprezzo in questo prodotto è la velocità e l’immediatezza con le quali queste sono utilizzabili. Cerco di usare il mouse il meno possibile e con Sublime riesco a fare tutto senza metterci mano, il che aumenta la mia produttività. Come ogni buon editor Sublime non interferisce con la scrittura del codice ma, quando serve, è pronto a dare una mano con una ricchezza di strumenti invidiabile.\nSpero di avervi convinto a dare una occhiata. Sublime Text 2 è a pagamento, anche se la modalità demo non è a tempo e si limita a proporre l’acquisto ogni tanto.\nVi lascio con l’invito a dare un’occhiata al video di Andrey Tarantsov sul suo Workflow con Sublime Text. Ha riscosso molto successo quando l’ho segnalato su Twitter, e per un buon motivo.\n","permalink":"https://nicolaiarocci.com/sublime-text-2-un-anno-dopo/","summary":"\u003cp\u003eProprio un anno fa \u003c!-- raw HTML omitted --\u003epresentavo Sublime Text 2\u003c!-- raw HTML omitted --\u003e. Dopo dodici mesi ho pensato di fare il punto della situazione. Si sono susseguiti una serie di aggiornamenti importanti, il prodotto è più maturo e devo dire che in questo periodo non mi ha affatto deluso: è ancora il mio editor di codice preferito. Nel frattempo \u003c!-- raw HTML omitted --\u003eSublime Text 2\u003c!-- raw HTML omitted --\u003e è diventato \u003cem\u003emainstream.\u003c/em\u003e Me ne sono reso conto in questi giorni, quando articoli, recensioni, trucchi e suggerimenti su Sublime Text 2 affioravano ripetutamente nel mio feed.\u003c/p\u003e\n\u003cp\u003eVi propongo alcune delle caratteristiche che ne fanno, almeno per quanto riguarda il mio modo di lavorare, l’editor ideale.\u003c/p\u003e","title":"Sublime Text 2 un anno dopo"},{"content":"Se avete già scaricato il Piccolo Libro di MongoDB vi consiglio di aggiornarlo con la versione odierna. E’ stato aggiunto un capitolo (MapReduce) misteriosamente assente nella prima edizione. Grazie a Walter Tommasi per la preziosa segnalazione, e a Git per averne consentito il recupero in extremis.\n","permalink":"https://nicolaiarocci.com/primo-importante-aggiornamento-del-piccolo-libro-di-mongodb/","summary":"\u003cp\u003eSe avete già scaricato il \u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\" title=\"Il Piccolo Libro di MongoDB\"\u003ePiccolo Libro di MongoDB\u003c/a\u003e vi consiglio di aggiornarlo con la versione odierna. E’ stato aggiunto un capitolo (MapReduce) misteriosamente assente nella prima edizione. Grazie a Walter Tommasi per la preziosa segnalazione, e a \u003ca href=\"http://nicolaiarocci.com/branching-di-successo-per-git/\" title=\"Branching di successo per Git\"\u003eGit\u003c/a\u003e per averne consentito il recupero in extremis.\u003c/p\u003e","title":"Primo importante aggiornamento del Piccolo Libro di MongoDB"},{"content":"Ogni giorno su Twitter segnalo i link interessanti in cui incappo mentre mi documento per il mio lavoro. Riscuotono un certo successo, quindi ho pensato di condividerne alcuni anche qui sul sito. Parte così Link Consigliati, rubrica settimanale e sperimentale.\n“Why are so many developers so very emotional when it comes to their favourite programming language? Considering that no language can (yet) magically translate the perfect idea in your head into machine code, all of them exist on a scale of badness – they all limit you more than your own thoughts or the hardware does.”\n“Clean, simple web designs have become a popular trend. This article will cover the subject through a two-part discussion. First, we’ll talk about a few traits that clean designs tend to have in common. Secondly, I’ll share some tricks and techniques that can be helpful when trying to achieve a clean design.”\nDatabase of HTTP status codes with their IETF and Wikipedia descriptions\n“What happens when you click on a weblink? Here’s one answer: a request goes from your computer to a server identified by the URL of the desired link. The server then locates the webpage in its files and sends it back to your browser, which then displays it on your screen. Simple.”\n“We occasionally try commercial software. Mostly, we don’t end up buying it. A big reason why is the incredibly time-consuming, aggravating sales process that most commercial enterprise (that is, non-consumer) software vendors insist on.”\n“My experience of learning how to write iOS software, after having spent many years exclusively in the world of .NET development. It provides warnings, suggestions, and tips for others who are interested in learning iOS development.”\n“If you write any code in JavaScript then you’ve probably used closures, but do you actually understand what they are and how they work? Taking the time to understand closures and how they’re implemented can add a deeper dimension to your understanding of the JavaScript language.”\n“In desktop applications, the user interface dominated the screen. The buttons to click, the bars to drag, the windows. That isn’t the case with mobile devices. What’s powerful about mobile devices is that they exist to complement what we are already doing, rather than be our primary focus.”\n“At Stack Overflow (…) we feel that it’s part of our mission to help lead fellow .NET developers — and the most effective way to do that is by contributing some of the code that we use to build Stack Overflow and Stack Exchange back to the greater .NET developer community as reusable open source packages.”\n“We’ve made a selection of indispensable resources like layout frameworks, tutorials, books, templates and useful tools that can help you understand and implement grid based design in your projects.”\n","permalink":"https://nicolaiarocci.com/link-consigliati-dal-29-2-al-5-3-2012/","summary":"\u003cp\u003e\u003cem\u003eOgni giorno su \u003c!-- raw HTML omitted --\u003eTwitter\u003c!-- raw HTML omitted --\u003e segnalo i link interessanti in cui incappo mentre mi documento per il mio lavoro. Riscuotono un certo successo, quindi ho pensato di condividerne alcuni anche qui sul sito. Parte così Link Consigliati, rubrica settimanale e sperimentale.\u003c/em\u003e\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e“Why are so many developers so very emotional when it comes to their favourite programming language? Considering that no language can (yet) magically translate the perfect idea in your head into machine code, all of them exist on a scale of badness – they all limit you more than your own thoughts or the hardware does.”\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e“Clean, simple web designs have become a popular trend. This article will cover the subject through a two-part discussion. First, we’ll talk about a few traits that clean designs tend to have in common. Secondly, I’ll share some tricks and techniques that can be helpful when trying to achieve a clean design.”\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eDatabase of HTTP status codes with their IETF and Wikipedia descriptions\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e“What happens when you click on a weblink? Here’s one answer: a request goes from your computer to a server identified by the URL of the desired link. The server then locates the webpage in its files and sends it back to your browser, which then displays it on your screen. Simple.”\u003c/p\u003e","title":"Link Consigliati dal 29.2 al 5.3.2012"},{"content":"Un appunto veloce per segnalare che Flask MimeRender, il mio strumento RESTful per il rendering basato sul MIME Media-Type delle richieste HTTP (JSON, XML, HTML, ecc.), è ora presente su PyPI, il Python Package Index ufficiale.\nTutto ciò significa che l’installazione di Flask MimeRender su Windows, OSX e Linux è diventato più semplice:\nCodice sorgente e istruzioni sono a vostra disposizione su GitHub, mentre per spiegazione approfondita ed esempio d’uso vi rimando al mio articolo precedente: Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP.\n","permalink":"https://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/","summary":"\u003cp\u003eUn appunto veloce per segnalare che \u003c!-- raw HTML omitted --\u003eFlask MimeRender\u003c!-- raw HTML omitted --\u003e, il mio strumento RESTful per il rendering basato sul MIME Media-Type delle richieste HTTP (JSON, XML, HTML, ecc.), è ora presente su \u003c!-- raw HTML omitted --\u003ePyPI\u003c!-- raw HTML omitted --\u003e, il Python Package Index ufficiale.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eTutto ciò significa che l’installazione di Flask MimeRender su Windows, OSX e Linux è diventato più semplice:\u003c/p\u003e","title":"Flask MimeRender nel Python Package Index (PyPI)"},{"content":"Il Piccolo Libro di MongoDB, edizione italiana di The Little MongoDB Book, è finalmente disponibile online. C’è voluto un bel po’ di lavoro, e sono certo i primi lettori scoveranno una serie di errori raccapriccianti, ma vi invito comunque a leggerlo e farmi sapere cosa ne pensate.\n","permalink":"https://nicolaiarocci.com/e-uscito-il-piccolo-libro-di-mongodb/","summary":"\u003cp\u003e\u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\" title=\"Il Piccolo Libro di MongoDB, Edizione Italiana\"\u003eIl Piccolo Libro di MongoDB\u003c/a\u003e, edizione italiana di The Little MongoDB Book, è finalmente \u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\" title=\"Il Piccolo Libro di MongoDB\"\u003edisponibile online\u003c/a\u003e. C’è voluto un bel po’ di lavoro, e sono certo i primi lettori scoveranno una serie di errori raccapriccianti, ma vi invito comunque a leggerlo e farmi sapere cosa ne pensate.\u003c/p\u003e","title":"E’ uscito il Piccolo Libro di MongoDB"},{"content":"Da qualche tempo sto lavorando alla implementazione di una REST API. In linea generale e semplificando, una API è un servizio che espone alcune funzionalità, è accessibile via internet più o meno liberamente ed è, infine, utilizzabile non solo da persone fisiche ma anche e soprattutto da altre applicazioni. Un esempio di API è quella di Facebook, che consente a chiunque di creare applicazioni che interagiscono con gli utenti e le pagine Facebook. Già, se non ci fosse la API non esisterebbero i terribili giochini Facebook…\nUna delle specifiche REST più importanti vuole che un servizio RESTful sia in grado di fornire dati in più formati, in modo tale da soddisfare il maggior numero possibile di utenti/applicazioni. Immaginiamo un servizio che fornisce i risultati delle partite del campionato di calcio. Supponiamo che arrivino tre richieste successive per lo stesso risultato: la prima potrebbe chiedere una risposta in formato XML, la seconda in JSON e la terza in HTML. Il nostro servizio deve rispondere a tutte e tre le richieste, adattando il flusso di dati della risposta al formato di ognuna.\nNel mio caso la API che sto implementando supporta XML, JSON, HTML e testo puro. E’ scritta in Python (ma va!) e si appoggia all’eccellente Flask micro web framework. Per risolvere in maniera elegante il problema delle risposte multi-formato ho deciso di usare i decorator, una delle caratteristiche più interessanti di Python. Dopo un po’ di lavoro in proprio ho scoperto che qualcuno aveva già risolto il problema, per giunta con la stessa tecnica. MimeRender di Martin Blech è un’ottima soluzione, solo che è specifica per web.py (un altro web framework). La mia soluzione non disponeva di alcune opzioni interessanti che MimeRender include; ho deciso allora di scrivere un port di MimeRender per Flask, e di metterlo a disposizione del pubblico.\nIstruzioni per l’uso Prima di tutto è necessario fornire le funzioni da usare per il rendering, una per ogni formato che intendiamo supportare:\nQuindi decoriamo la nostra funzione, definendo per lei la mappa delle funzioni di rendering:\nTutto qui! In caso di richiesta GET la funzione index restituisce un dizionario, il quale verrà reso da MimeRender come XML, JSON o quant’altro, a seconda del Content-Type specificato nella richiesta HTTP:\nSu github trovate l’esempio completo nonché il codice sorgente del renderer, che potete scaricare liberamente.\n","permalink":"https://nicolaiarocci.com/come-implementare-un-web-service-rest-che-adatta-le-risposte-al-mime-media-type-delle-richieste-http/","summary":"\u003cp\u003eDa qualche tempo sto lavorando alla implementazione di una REST API. In linea generale e semplificando, una \u003c!-- raw HTML omitted --\u003eAPI\u003c!-- raw HTML omitted --\u003e è un servizio che espone alcune funzionalità, è accessibile via internet più o meno liberamente ed è, infine, utilizzabile non solo da persone fisiche ma anche e soprattutto da altre applicazioni. Un esempio di API è quella di Facebook, che consente a chiunque di creare applicazioni che interagiscono con gli utenti e le pagine Facebook. Già, se non ci fosse la API non esisterebbero i terribili giochini Facebook…\u003c/p\u003e\n\u003cp\u003eUna delle specifiche \u003c!-- raw HTML omitted --\u003eREST\u003c!-- raw HTML omitted --\u003e più importanti vuole che un servizio RESTful sia in grado di fornire dati in più formati, in modo tale da soddisfare il maggior numero possibile di utenti/applicazioni. Immaginiamo un servizio che fornisce i risultati delle partite del campionato di calcio. Supponiamo che arrivino tre richieste successive per lo stesso risultato: la prima potrebbe chiedere una risposta in formato XML, la seconda in JSON e la terza in HTML. Il  nostro servizio deve rispondere a tutte e tre le richieste, adattando il flusso di dati della risposta al formato di ognuna.\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003eNel mio caso la API che sto implementando supporta XML, JSON, HTML e testo puro. E’ scritta in Python (ma va!) e si appoggia all’eccellente \u003c!-- raw HTML omitted --\u003eFlask\u003c!-- raw HTML omitted --\u003e micro web framework. Per risolvere in maniera elegante il problema delle risposte multi-formato ho deciso di usare i \u003c!-- raw HTML omitted --\u003edecorator\u003c!-- raw HTML omitted --\u003e, una delle caratteristiche più interessanti di Python. Dopo un po’ di lavoro in proprio ho scoperto che qualcuno aveva già risolto il problema, per giunta con la stessa tecnica. \u003c!-- raw HTML omitted --\u003eMimeRender\u003c!-- raw HTML omitted --\u003e di Martin Blech è un’ottima soluzione, solo che è specifica per web.py (un altro web framework). La mia soluzione non disponeva di alcune opzioni interessanti che MimeRender include; ho deciso allora di scrivere un port di MimeRender per Flask, e di metterlo a disposizione del pubblico.\u003c/p\u003e","title":"Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP"},{"content":"Update: il Piccolo Libro di MongoDB, Edizione Italiana è ora disponibile online.\nHo cominciato a lavorare alla traduzione autorizzata dell’ottimo The Little MongoDB Book di Karl Seguin. Ho scovato il libro di Karl mentre raccoglievo la documentazione per un nuovo progetto super-segreto (!) a cui sto lavorando. Lo ritengo un’ottima introduzione al mondo NoSQL in generale e naturalmente al fantastico MongoDB.\nIl titolo italiano sarà Il Piccolo Libro di MongoDB. La traduzione prosegue costante ma a piccoli passi perché purtroppo o per fortuna di tempo libero ne ho poco. Al momento sono tradotti più o meno grossolanamente l’introduzione e il primo capitolo. Mi farebbe comodo un po’ di aiuto, in particolare per quanto riguarda la revisione del testo. Se qualcuno vuol dare una mano è il benvenuto: potete fare delle pull request direttamente su GitHub (metodo preferibile), oppure mandarmi le correzioni via mail. In cambio vi prometto una menzione d’onore e l’eterna gratitudine dei futuri cultori italiani di MongoDB!\nA lavori ultimati rilascerò il Piccolo Libro di MongoDB nei formati PDF, ePub, .mobi e probabilmente HTML. Se avete commenti o suggerimenti in proposito fatemelo sapere!\n","permalink":"https://nicolaiarocci.com/il-piccolo-libro-di-mongodb/","summary":"\u003cp\u003e\u003cem\u003eUpdate: il \u003ca href=\"http://nicolaiarocci.com/il-piccolo-libro-di-mongodb-edizione-italiana/\" title=\"Il Piccolo Libro di MongoDB, Edizione Italiana\"\u003ePiccolo Libro di MongoDB, Edizione Italiana\u003c/a\u003e è ora disponibile online.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eHo cominciato a lavorare alla traduzione autorizzata dell’ottimo \u003c!-- raw HTML omitted --\u003eThe Little MongoDB Book\u003c!-- raw HTML omitted --\u003e di Karl Seguin. Ho scovato il libro di Karl mentre raccoglievo la documentazione per un nuovo progetto super-segreto (!) a cui sto lavorando. Lo ritengo un’ottima introduzione al mondo \u003c!-- raw HTML omitted --\u003eNoSQL\u003c!-- raw HTML omitted --\u003e in generale e naturalmente al fantastico \u003c!-- raw HTML omitted --\u003eMongoDB\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003cp\u003eIl titolo italiano sarà Il Piccolo Libro di MongoDB. La traduzione prosegue costante ma a piccoli passi perché purtroppo o per fortuna di tempo libero ne ho poco. Al momento sono tradotti più o meno grossolanamente l’introduzione e il primo capitolo. Mi farebbe comodo un po’ di aiuto, in particolare per quanto riguarda la revisione del testo. Se qualcuno vuol dare una mano è il benvenuto: potete fare delle \u003cem\u003epull request\u003c/em\u003e direttamente su \u003c!-- raw HTML omitted --\u003eGitHub\u003c!-- raw HTML omitted --\u003e (metodo preferibile), oppure mandarmi le correzioni via mail. In cambio vi prometto una menzione d’onore e l’eterna gratitudine dei futuri cultori italiani di MongoDB!\u003c/p\u003e","title":"Il Piccolo Libro di MongoDB"},{"content":"Chi mi segue da tempo sa che l’educazione è un argomento che mi sta particolarmente a cuore ed è forse per questo motivo che spesso le persone mi chiedono consigli su come imparare a programmare. Gli articoli più letti di questo sito sono senz’altro le guide alla programmazione; Impara Python in 10 minuti e la serie sulle Regular Expression sono vere e proprie Hit, ma certo non sono adatte ai principianti. L’ultima mail è di pochi giorni fa: Mirko chiedeva qual’è il modo migliore per avvicinarsi all’affascinante mondo della programmazione.\nUna domanda facile da formulare, che presuppone un’altrettanto facile risposta. Ahimè non é così semplice, perlomeno non nel mio caso. Certo, ci sono dozzine di fonti di ottima qualità, ma penso che per poter fornire un consiglio valido dovrei conoscere meglio chi pone la domanda. Il tuo background è scientifico o umanistico? Sai l’inglese? La gran parte delle fonti che consiglierei sono inglesi. Qual’è la tua età? Sono tanti i fattori da considerare, soprattutto se ci si impunta a voler rispondere con cura.\nIn tempi non troppo lontani programmare significava conoscere il funzionamento dei computer; comprendere a fondo la loro teoria e la loro struttura. Ora è tutto cambiato. Ormai Assembly e Linguaggio Macchina sono domini riservati a pochissimi super-specialisti; la gran parte dei programmatori più giovani li ha solo sentiti nominare. I linguaggi ad alto livello ci permettono di concentrarci sulla soluzione dei problemi (gli algoritmi) delegando al compilatore la creazione delle istruzioni di basso livello.\nE’ una buona notizia. Per diventare programmatori non è indispensabile essere particolarmente dotati, né seguire chissà quali corsi accademici. Buona volontà, curiosità, passione e un pizzico di intraprendenza sono tutto quel che serve per buttarsi. Se son rose fioriranno, come si suol dire.\nPensare da Informatico Se mi avete seguito fin qui grazie per la pazienza. Vi ricompenso con lo stesso consiglio che ho dato a Mirko l’altro giorno: Pensare da Informatico. Ma come direte, dopo tutte queste chiacchiere ci spiattelli un’altra astrattezza da quattro soldi? Al contrario! Sto parlando di un libro vero e proprio. Pensare da Informatico (Versione Python) è l’unico testo che mi sento di consigliare davvero ai principianti. E’ gratuito ed è ottimamente tradotto da Alessandro Pocaterra. L’edizione originale è giunta da poco alla terza edizione (novembre 2011), mentre credo che l’italiana sia ferma alla seconda, che va benissimo comunque.\nNella Prefazione Jeff Elkner racconta che era alla ricerca di un testo adatto all’insegnamento della programmazione nelle scuole americane. Il grande Richard Stallman gli consigliò di dare una occhiata a How to Think Like a Computer Scientist:\nQuando lessi quel libro seppi immediatamente che volevo usarlo nelle mie lezioni. Era il testo di informatica più chiaro ed utile che avessi visto: il libro enfatizzava il processo di pensiero coinvolto nella programmazione piuttosto che le caratteristiche di un particolare linguaggio. Il solo fatto di leggerlo mi rese un insegnante migliore.\nMica male come premessa no? Python è il inguaggio scelto dagli autori (e in proposito vi consiglio di leggere introduzione e prefazione) ma davvero non è il linguaggio quel che conta. Leggete questo testo con attenzione e soprattutto senza fretta. Non passate al capitolo successivo se non siete sicuri di aver afferrato per bene ciò che avete appena letto. Si procede passo per passo affrontando tutti i principali temi della programmazione moderna. Vi assicuro che alla fine di questa esperienza saprete programmare a dovere, a prescindere dai linguaggi che in futuro vorrete studiare (e magari nel frattempo vi innamorerete pure di Python).\nFatemi sapere come è andata. Ci tengo molto.\nAggiornamento del 9.3.2012. Ho scovato per caso una versione PDF, ben fatta, di Pensare da Informatico.\n","permalink":"https://nicolaiarocci.com/imparare-a-programmare-e-pensare-da-informatico/","summary":"\u003cp\u003eChi mi segue da tempo sa  che l’educazione è un argomento che mi sta particolarmente a cuore ed è forse per questo motivo che spesso le persone mi chiedono consigli su come imparare a programmare. Gli articoli più letti di questo sito sono senz’altro le guide alla programmazione; \u003ca href=\"http://nicolaiarocci.com/impara-python-in-10-minuti/\" title=\"Python in 10 minuti\"\u003eImpara Python in 10 minuti\u003c/a\u003e e la \u003ca href=\"http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/\" title=\"Introduzione alle Regular Expression\"\u003eserie sulle Regular Expression\u003c/a\u003e sono vere e proprie Hit, ma certo non sono adatte ai principianti. L’ultima mail è di pochi giorni fa: Mirko chiedeva qual’è il modo migliore per avvicinarsi all’affascinante mondo della programmazione.\u003c/p\u003e","title":"Imparare a Programmare… Pensando da Informatico"},{"content":"JavaScript non è mai la prima scelta di un aspirante programmatore. Spesso si finisce per usarlo all’occorrenza, per giochetti AJAX o per manipolare il DOM. Google, copia \u0026amp; incolla, e JavaScript è servito. Prima o poi l’abbiamo fatto tutti. E’ un vero peccato perché JavaScript merita di ben altra attenzione.\nA spiegarlo al mondo è stato naturalmente Douglas Crockford in JavaScript: The Good Parts, un libretto di 172 intensissime pagine in cui si ha costantemente la sensazione che l’autore intenda demolire il linguaggio mentre, in realtà, non fa altro che esaltarne le doti. JavaScript è il linguaggio più usato al mondo, e non a caso: è l’unico supportato da qualunque browser del pianeta. La recente affermazione di Node lato server ne dimostra l’indiscussa attualità.\nCiò nonostante JavaScript rimane un linguaggio inadatto al programmatore neofita. O forse no.\nJohn Resig e la Khan Academy John Resig è il creatore di jQuery. Vera star internazionale, autore di libri di successo, ora lavora per Khan Academy, la famosa accademia online. Ecco ciò che Resig ha annunciato poco prima di Natale:\nAlla Khan Academy stiamo considerando nuovi, originali, metodi di insegnamento della Computer Science. L’aspetto più interessante è che proporremo agli studenti JavaScript come loro primo linguaggio.\nLa sua è una situazione particolarmente vantaggiosa: oltre a essere completamente digiuni di programmazione i suoi studenti hanno appena completato un corso di matematica e scienze.\nIn effetti insegnare l’ereditarietà prototipale (prototypal inheritance) caratteristica di JavaScript a programmatori già abituati alla tradizionale ereditarietà degli oggetti richiede un certo impegno. E’ senz’altro più semplice spiegarla a chi non sa nemmeno cosa sia l’ereditarietà in informatica. JavaScript è anche un buon linguaggio per la programmazione funzionale, anche questa più facile da capire in assenza di condizionamenti precedenti. In questo filmato Resig parla del suo progetto sottolineando quello che probabilmente è il più grande vantaggio di JavaScript, la sua ubiquità:\nResig non si nasconde certo le difficoltà, tanto che nel suo articolo si dilunga nella spiegazione di una serie di accorgimenti didattici e tecnici che dovrebbero semplificare il processo di apprendimento.\nParliamone Il progetto è senz’altro interessante e non c’è dubbio che JavaScript sia un ottimo investimento. Non sono sicuro però che partire da JavaScript sia l’approccio migliore per imparare a programmare. L’obiettivo iniziale dovrebbe essere, io credo, imparare le basi della programmazione a prescindere dal linguaggio. Non sarebbe meglio sceglierne uno senza troppe bad parts, dotato di sintassi più semplice, applicabile a contesti diversi e non solo al web?\nChi mi legge sa della mia predilezione, per altro criticata aspramente da più parti, per Python come linguaggio didattico. Per altri motivi andrebbe bene anche un super-classico come il linguaggio C oppure, perché no, un linguaggio funzionale puro come Haskell. JavaScript? Assolutamente si, ma come secondo linguaggio.\nMi domando infine, e qui ci metto un pizzico di malizia, se la scelta di Khan Academy non sia stata influenzata dalla passione per JavaScript del suo super-consulente, a prescindere da ogni valutazione didattica. Voi che ne pensate?\n","permalink":"https://nicolaiarocci.com/javascript-come-primo-linguaggio/","summary":"\u003cp\u003eJavaScript non è mai la prima scelta di un aspirante programmatore. Spesso si finisce per usarlo all’occorrenza, per giochetti AJAX o per manipolare il DOM. Google, copia \u0026amp; incolla, e JavaScript è servito. Prima o poi l’abbiamo fatto tutti. E’ un vero peccato perché JavaScript merita di ben altra attenzione.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eA spiegarlo al mondo è stato naturalmente Douglas Crockford in \u003ca href=\"http://www.amazon.it/gp/product/0596517742/ref=as_li_ss_tl?ie=UTF8\u0026amp;tag=nicoiaro-21\u0026amp;linkCode=as2\u0026amp;camp=3370\u0026amp;creative=24114\u0026amp;creativeASIN=0596517742\"\u003eJavaScript: The Good Parts\u003c/a\u003e\u003c!-- raw HTML omitted --\u003e, un libretto di 172 intensissime pagine in cui si ha costantemente la sensazione che l’autore intenda demolire il linguaggio mentre, in realtà, non fa altro che esaltarne le doti. JavaScript è il linguaggio più usato al mondo, e non a caso: è l’unico supportato da qualunque browser del pianeta. La recente affermazione di \u003c!-- raw HTML omitted --\u003eNode \u003c!-- raw HTML omitted --\u003elato server ne dimostra l’indiscussa attualità.\u003c/p\u003e\n\u003cp\u003eCiò nonostante JavaScript rimane un linguaggio inadatto al programmatore neofita. O forse no.\u003c/p\u003e","title":"JavaScript come Primo Linguaggio"},{"content":"In questo periodo sono impegnato come docente nel progetto “Internet non (solo) per gioco”. Si tratta di una serie di lezioni tenute al liceo. L’obiettivo è sensibilizzare i ragazzi circa il ruolo che la rete può svolgere nello sviluppo delle loro abilità personali e professionali. La settimana scorsa si è conclusa la prima parte, quella più teorica, e approfitto della pausa festiva per proporvi le slide e raccontarvi come è andata.\nIdentità Reale, Virtuale o Digitale? Nella prima lezione ho affrontato il tema del rapporto tra le attività svolte in rete (identità digitale) e quelle offline (identità reale). E’ un legame ben più stretto di quanto generalmente si pensi:\nNella corso dell’esercitazione pratica ho mostrato ai ragazzi come spesso sia facile aggirare i meccanismi che più o meno coscientemente erigono a protezione dei loro profili Facebook. Ho fatto anche notare come alcuni di loro siano già stati ‘profilati’ dalla rete, a prescindere dalla loro attività su Facebook.\nA proposito di Facebook Non mi ha sorpreso constatare come per praticamente ognuno di loro non ci sia rete al di fuori di Facebook. Semplicemente, per i giovani e giovanissimi di oggi Facebook è la rete.\nPersonal Branding per Studenti e non solo Preso atto che ciò che facciamo in rete può avere (avrà) conseguenze nella vita di tutti i giorni, ecco che allora possiamo prendere in mano l’iniziativa e sfruttare tutto questo a nostro vantaggio:\nUn primo bilancio Questa esperienza si sta rivelando anche più coinvolgente del previsto. Una cosa è parlare a un pubblico di adulti e colleghi, come mi capita di fare ogni tanto. Un’altra è relazionarsi con giovani studenti. Mi piace parlare a questi ragazzi, suscitare in loro curiosità oppure stupirli con qualche trucchetto.\nE’ sorprendente rilevare come siano veramente “innocenti” nei confronti della rete. Per la maggior parte non sembrano conoscerne le potenzialità, né tantomeno i rischi. La usano quotidianamente, ma non la conoscono. Tuttavia ne subiscono il fascino e mi pare di percepire in loro un forte interesse per gli argomenti che stiamo trattando.\nCosa ci aspetta Le prossime lezioni saranno più pratiche. Ci saranno meno slide. Cominceremo a sporcarci le mani costruendo siti e interagendo con gli strumenti web più disparati. Alla fine del percorso i ragazzi conosceranno meglio la rete e molti di quegli strumenti che oggi ignorano. Mi auguro che in seguito vorranno e sapranno usarli con consapevolezza, divertimento, profitto personale e, perché no, professionale.\n","permalink":"https://nicolaiarocci.com/internet-non-solo-per-gioco/","summary":"\u003cp\u003eIn questo periodo sono impegnato come docente nel progetto “Internet non (solo) per gioco”. Si tratta di una serie di lezioni tenute al liceo. L’obiettivo è sensibilizzare i ragazzi circa il ruolo che la rete può svolgere nello sviluppo delle loro abilità personali e professionali. La settimana scorsa si è conclusa la prima parte, quella più teorica, e approfitto della pausa festiva per proporvi le slide e raccontarvi come è andata.\u003c/p\u003e","title":"Identità Digitale e Personal Branding per studenti del liceo"},{"content":"Git è di gran lunga la tecnologia più significativa che il mio team ha introdotto negli ultimi tempi. Grazie a Git la nostra produttività è migliorata a tal punto che davvero non passa giorno senza che mi chieda come abbiamo potuto farne a meno così a lungo.\nGit è un sistema di controllo versione ideato da Linus Torvald (quello di Linux). E’ gratuito, multi-piattaforma, distribuito e soprattutto talmente veloce che sembra aggiungere un pizzico di magia al processo produttivo. Git è una macchina del tempo con cui spostarsi avanti e indietro tra le versioni del codice. E’ l’ideale sia per progetti individuali che per gruppi di lavoro numerosi e distribuiti. L’integrità del codice e la preservazione delle versioni sono garantite da un efficiente – e veloce! – sistema di branching e merging.\nSe non avete mai usato prima un sistema di controllo versione (e magari ricorrete ancora a copie manuali del codice tra una release e l’altra) gioite, perché Git vi cambierà la vita. Se venite da altri sistemi (Subversion, Team Foundation Server) sappiate che Git adotta un approccio fondamentalmente diverso: niente copie differenziali. In Git ogni repository è un mirror integrale della codebase; è quest’accorgimento ciò che rende Git così veloce.\nCome e dove imparare Git Git non è difficile, ma richiede un pò d’impegno iniziale. In rete sono disponibili numerose e ottime fonti. Vi consiglio Git Pro, libro gratuito nella versione online. Stampatelo e tenetelo sempre a portata di mano. Ottimi anche Git Reference e Everyday GIT (consigliati dal sito ufficiale), Git Magic per quando avrete già un pò di dimestichezza con Git, e infine la valida raccolta che trovate su Stack Overflow.\nLa potenza è nulla senza controllo Uno dei risultati più interessanti che abbiamo ottenuto grazie all’adozione di Git è la pubblicazione contemporanea di più versioni del nostro software gestionale. C’è quella ufficiale (stabile) e c’é quella sperimentale con una anteprima delle novità a cui stiamo ancora lavorando. E’ un pò la nostra _night build e _contiene le cose non ancora mature per affrontare il grande pubblico ma già interessanti per gli utenti più smaliziati. Nel frattempo lavoriamo anche a nuove funzionalità importanti. Queste ultime vedranno la luce solo in occasione dei rilasci più significativi (tipicamente non sono più di due o tre all’anno) e non sono incluse nelle night build. In tutto questo bailamme di versioni, hotfix e rilasci pubblici e interni non perdiamo una linea di codice e manteniamo i nostri repository allineati, muovendoci avanti e indietro quando necessario.\nPer ottenere un risultato così non basta il sistema di controllo versione; è necessaria anche una ottima strategia o, per meglio dire, un modello di branching ben progettato. Dopo diversi tentativi andati più o meno a vuoto la soluzione è arrivata grazie alla scoperta dello spettacolare articolo di Vincent Driessen:\nIl modello si basa su due branch principali (master e develop) e su tre di supporto (hotfix, feature e release). Lo considero talmente valido che mi sono proposto a Vincent come curatore della traduzione italiana, solo per scoprire che qualcuno prima di me ci aveva già pensato: meglio così. Da quando l’ho scoperto lo applichiamo con zelo e vi consiglio di fare altrettanto, soprattutto se lavorate su progetti complessi.\nNon solo codice Git è utile anche per i piccoli progetti personali. Anzi, se state cominciando vi consiglio di partire proprio da uno di questi. Non è necessario che sia un programma, potrebbe benissimo trattarsi di un file di testo qualunque. Git funziona con qualunque tipo di file e in effetti viene usato con successo per progetti di scrittura, documentazione, web design e quant’altro.\nUna volta presa dimestichezza con Git non potrete più rinunciarvi, qualunque sia la portata del progetto a cui state lavorando.\n","permalink":"https://nicolaiarocci.com/branching-di-successo-per-git/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eGit\u003c!-- raw HTML omitted --\u003e è di gran lunga la tecnologia più significativa che il mio team ha introdotto negli ultimi tempi. Grazie a Git la nostra produttività è migliorata a tal punto che davvero non passa giorno senza che mi chieda come abbiamo potuto farne a meno così a lungo.\u003c/p\u003e\n\u003cp\u003eGit è un \u003c!-- raw HTML omitted --\u003esistema di controllo versione\u003c!-- raw HTML omitted --\u003e ideato da Linus Torvald (quello di Linux). E’ gratuito, multi-piattaforma, distribuito e soprattutto talmente veloce che sembra aggiungere un pizzico di magia al processo produttivo. Git è una macchina del tempo con cui spostarsi avanti e indietro tra le versioni del codice. E’ l’ideale sia per progetti individuali che per gruppi di lavoro numerosi e distribuiti. L’integrità del codice e la preservazione delle versioni sono garantite da un efficiente – e veloce! – sistema di \u003cem\u003ebranching\u003c/em\u003e e \u003cem\u003emerging\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eSe non avete mai usato prima un sistema di controllo versione (e magari ricorrete ancora a copie manuali del codice tra una release e l’altra) gioite, perché Git vi cambierà la vita. Se venite da altri sistemi (Subversion, Team Foundation Server) sappiate che Git adotta un approccio fondamentalmente diverso: niente copie differenziali. In Git ogni repository è un mirror integrale della codebase; è quest’accorgimento ciò che rende Git così veloce.\u003c/p\u003e","title":"Branching di successo per Git"},{"content":"Mia moglie è docente nel liceo artistico della nostra città. L’anno scorso era coinvolta in un progetto che vedeva studenti e professori impegnati nella progettazione di un monumento da installare nella sede dell’Autorità Portuale.\nIl soggetto scelto dal team erano le onde del mare e ben presto si pose il problema di rappresentarle realisticamente. Un insegnate di Matematica suggerì di ricorrere alla teoria dei frattali. Idea brillante che offriva l’opportunità di un approfondimento didattico piuttosto insolito per un liceo artistico.\nLe competenze informatiche del nostro intraprendente professore risalivano credo ai tempi dell’università, e i ragazzi erano a digiuno di qualunque nozione tecnica. Nel corso della discussione mia moglie, più che altro per associazione d’idee, buttò lì una frase:\nmio marito è un gran sostenitore del linguaggio Python, dice sempre che è l’ideale per imparare e che dovrebbero insegnarlo nelle scuole\nLa cosa sembrava finita lì senonché dopo qualche giorno il professore irruppe in sala insegnanti, puntò dritto su mia moglie e l’apostrofò così:\nho scritto questo programmino in Python, non è che tuo marito può darci una occhiata perché sai funziona, ma non disegna proprio il frattale che serve a noi – ci va vicino\nImmaginate la mia sorpresa quando la sera, a casa, mia moglie mi raccontò tutta la faccenda. La mia prima reazione è stata quella di correre al computer per dare un’occhiata al codice:\nMi sono subito reso conto che si trattava di una implementazione parziale della Curva (o fiocco) di Koch, una delle prime curve frattali documentate e anche una delle più famose. Una volta corretto il problema l’output restituito dal programma è stato questo:\nNon male davvero. Per ammissione dello stesso autore sappiamo che il codice era in parte scopiazzato (in rete si trovano implementazioni della curva di Koch in tutti i linguaggi), ma non è questo il punto.\nIl fatto è che un professore di uno sperduto liceo artistico (artistico!) italiano ha:\nadottato Python per una lezione in classe dimostrato che nella scuola ci sono anche (molti) docenti intraprendenti, appassionati e competenti Qualche mese più tardi un’altra docente, che mi chiedeva consiglio su come approcciare la programmazione in classe, ha rifiutato categoricamente la mia proposta di Python perché “non l’aveva mai sentito nominare”. Scelse invece il linguaggio C perché “molto più affermato”.\nSenz’altro, anche se nutro seri dubbi sul fatto che la sua scelta sia la migliore da un punto di vista didattico. Dubito, per esempio, che dopo un giorno o due lei e i suoi studenti sarebbero stati in grado di scrivere un’implementazione C della curva di Koch.\n","permalink":"https://nicolaiarocci.com/python-nella-scuola-italiana-si-puo/","summary":"\u003cp\u003eMia moglie è docente nel liceo artistico della nostra città. L’anno scorso era coinvolta in un progetto che vedeva studenti e professori impegnati nella progettazione di un monumento da installare nella sede dell’Autorità Portuale.\u003c/p\u003e\n\u003cp\u003eIl soggetto scelto dal team erano le onde del mare e ben presto si pose il problema di rappresentarle realisticamente. Un insegnate di Matematica suggerì di ricorrere alla teoria dei \u003c!-- raw HTML omitted --\u003efrattali\u003c!-- raw HTML omitted --\u003e. Idea brillante che offriva l’opportunità di un approfondimento didattico piuttosto insolito per un liceo artistico.\u003c/p\u003e","title":"Python nella scuola italiana. Si può."},{"content":"Nathan Barry si è messo in testa di scrivere Apps per iPad e venderle sul App Store. Non sapendo nulla né di Objective-C né di sviluppo mobile mette in conto un bel po’ di gavetta e tante notti insonni. Un anno e mezzo dopo si ritrova con una solida esperienza, $19.000 in banca e un lavoro in proprio. Fa bene ogni tanto leggere queste storielle a lieto fine:\n","permalink":"https://nicolaiarocci.com/come-guadagnare-19000-sul-app-store-imparando-a-programmare/","summary":"\u003cp\u003eNathan Barry si è messo in testa di scrivere Apps per iPad e venderle sul App Store. Non sapendo nulla né di Objective-C né di sviluppo mobile mette in conto un bel po’ di gavetta e tante notti insonni. Un anno e mezzo dopo si ritrova con una solida esperienza, $19.000 in banca e un lavoro in proprio. Fa bene ogni tanto leggere queste storielle a lieto fine:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Come guadagnare $19.000 sul App Store imparando a programmare"},{"content":"Silverlight 5 è in dirittura d’arrivo. L’ultimo aggiornamento del plug-in Microsoft sarà ultimo in tutti i sensi dato che a quanto pare non ne seguiranno altri. A sostenerlo è ZD-Net per bocca di Mary-Jo Foley, di solito sempre ben informata su quel che succede nei corridoi del gigante di Seattle.\nDiversi partner e clienti mi hanno detto di aver saputo da fonti Microsoft che Silverlight 5 è l’ultima versione di Silverlight che Microsoft rilascerà. Riferiscono di non sapere se verranno rilasciati Service Pack, né per quanto tempo Microsoft supporterà Silverlight 5\nSi tratta solo di voci ma la fonte è autorevole. Proprio l’altro giorno Adobe ha annunciato lo stop allo sviluppo di Flash Player Mobile per concentrarsi su HTML5. Il vice presidente Adobe Danny Winokur ha dichiarato\nQuesta novità ci permetterà di aumentare l’impegno su HTML5 continuando a innovare Flash nei settori in cui può avere più impatto: advanced gaming e premium video.\nNon so voi ma io in queste righe io leggo qualcosa di più del semplice abbandono della versione mobile di Flash. Ci vedo la ricollocazione di Flash in settori di nicchia e la contestuale adozione di HTML5 come soluzione universale per il Web. Una onorevole resa delle armi, insomma.\nSolo la scorsa estate facevo presente che sul futuro di Silverlight si stavano addensando nubi minacciose e tra le fonti citavo proprio la Foley. Sulla diatriba tra Flash e HTML5 ho già espresso la mia opinione sollevando anche qualche piccola polemica.\nNon mi sorprende la inevitabile convergenza verso HTML5. Mi colpisce piuttosto la forte accelerazione subita dal processo, una accelerazione dovuta in gran parte proprio all’iniziativa di quegli stessi brand (e gliene va reso merito) che fino all’altro giorno resistevano all’avvento di HTML5. Ufficialmente Microsoft non ha ancora cambiato posizione, ma è solo questione di tempo.\nSe il biennio 2010-11 è stato quello della battaglia per il web, il 2012 sarà senz’altro il primo del lungo e pacifico dominio di Re HTML5.\nApprofondimenti Adobe Flash è una pessima idea Windows 8 è i dubbi sul destino di Silverlight ","permalink":"https://nicolaiarocci.com/microsoft-silverlight-e-adobe-flash-verso-la-resa-comincia-lera-di-re-html5/","summary":"\u003cp\u003eSilverlight 5 è in dirittura d’arrivo. L’ultimo aggiornamento del plug-in Microsoft sarà \u003cem\u003eultimo\u003c/em\u003e in tutti i sensi dato che \u003c!-- raw HTML omitted --\u003ea quanto pare\u003c!-- raw HTML omitted --\u003e non ne seguiranno altri. A sostenerlo è ZD-Net per bocca di Mary-Jo Foley, di solito sempre ben informata su quel che succede nei corridoi del gigante di Seattle.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDiversi partner e clienti mi hanno detto di aver saputo da fonti Microsoft che Silverlight 5 è l’ultima versione di Silverlight che Microsoft rilascerà. Riferiscono di non sapere se verranno rilasciati Service Pack, né per quanto tempo Microsoft supporterà Silverlight 5\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eSi tratta solo di voci ma la fonte è autorevole. Proprio l’altro giorno Adobe ha \u003c!-- raw HTML omitted --\u003eannunciato\u003c!-- raw HTML omitted --\u003e lo stop allo sviluppo di Flash Player Mobile per concentrarsi su HTML5. Il vice presidente Adobe Danny Winokur ha dichiarato\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eQuesta novità ci permetterà di aumentare l’impegno su HTML5 continuando a innovare Flash nei settori in cui  può avere più impatto: advanced gaming e premium video.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eNon so voi ma io in queste righe io leggo qualcosa di più del semplice abbandono della versione mobile di Flash. Ci vedo la ricollocazione di Flash in settori di nicchia e la contestuale adozione di HTML5 come soluzione universale per il Web. Una onorevole resa delle armi, insomma.\u003c/p\u003e","title":"Microsoft Silverlight e Adobe Flash verso la resa. Comincia l’era di Re HTML5"},{"content":"E’ uscita ieri la versione 1.1 Alpha dei Python Tools per Visual Studio, il plug-in open source per programmare in Python con Visual Studio 2010. Migliorie e molte nuove features per la IDE ma la novità più interessante sono senz’altro PyKinect e Pyvot, due librerie che consentono rispettivamente di lavorare col Kinect SDK e di interagire con Excel via Python.\nPer informazioni su Python Tools per Visual Studio date una occhiata a Programmare in Python con Visual Studio 2010 e Python Studio per Visual Studio 1.0.\n","permalink":"https://nicolaiarocci.com/python-tools-per-visual-studio-per-accedere-a-kinect-sdk-ed-excel-via-python/","summary":"\u003cp\u003eE’ uscita ieri la \u003c!-- raw HTML omitted --\u003eversione 1.1 Alpha\u003c!-- raw HTML omitted --\u003e dei Python Tools per Visual Studio, il plug-in open source per programmare in Python con Visual Studio 2010. Migliorie e molte nuove features per la IDE ma la novità più interessante sono senz’altro \u003c!-- raw HTML omitted --\u003ePyKinect\u003c!-- raw HTML omitted --\u003e e \u003c!-- raw HTML omitted --\u003ePyvot\u003c!-- raw HTML omitted --\u003e, due librerie che consentono rispettivamente di lavorare col Kinect SDK e di interagire con Excel via Python.\u003c/p\u003e","title":"Python Tools per Visual Studio per accedere a Kinect SDK ed Excel via Python"},{"content":"Ai primi di ottobre TechCrunch riportava una notizia interessante: negli Stati Uniti ci sarebbe carenza di sviluppatori .NET. La piattaforma di recruitment Dice dichiara che le offerte di lavoro .NET aumentano del 25% ogni anno, e che la gran parte delle ricerche sui loro database riguarda skill .NET. Ai primi di ottobre 2011 sarebbero state oltre 10.000 le richieste inevase di figure professionali .NET.\nNotizie di questo tipo vanno prese con beneficio di inventario anche se in questo caso una conferma indiretta viene da WANTED Analytics, che a Settembre ha pubblicato un report indipendente che sembra giungere alle stesse conclusioni. Anche i commenti all’articolo di TechCrunch sono confortanti: ci sono aziende che ammettono di essere a caccia di sviluppatori .NET e ci sono programmatori che confermano di ricevere continuamente offerte di lavoro (non mancano quelli che sono passati ad altri linguaggi e non se ne pentono).\nPerché la carenza di Programmatori .NET? Secondo TechCrunch gli sviluppatori .NET tendono a spostarsi su altre piattaforme perché temono di rimanere tagliati fuori dal mercato, visto che la tendenza del momento vuole i linguaggi open source far la parte del leone. Ci sarebbe inoltre una motivazione economica. Secondo Dice negli Stati Uniti i programmatori .NET guadagnano in media $83.000, mentre quelli Java arrivano a $91.000.\nE in Italia? Per quanto ne so non esistono dati sulla situazione italiana (se ne sapete qualcosa fatemelo sapere: li segnalerò volentieri). Un mio rapido test ha prodotto risultati incoraggianti: oltre 30 pagine di offerte di lavoro in ambito .NET. Non mi intendo di recruitment ma senz’altro è facile rilevare che, come negli Stati Uniti, anche da noi girano migliaia di applicazioni legacy .NET che assicureranno continuità di impiego anche nel lungo periodo. Probabilmente, ma si tratta di una mia sensazione, nel nostro paese la piattaforma Microsoft è meno diffusa in ambito Enterprise. Senz’altro la media dei salari IT europei (e italiani soprattutto) è più bassa di quella americana.\nAnche da noi la tendenza è comunque verso l’open source e d’altra parte la stessa Microsoft si muove da anni anche in questa direzione pur senza intaccare il suo modello di business principale. Tempo fa mi sono dilungato sul perché le web startup non amano il .NET Framework e tutto sommato credo che quelle conclusioni siano valide tutt’ora. Certo mi fa piacere apprendere che la piattaforma sulla quale ho investito oltre quindici anni di carriera sta vivendo, almeno dal punto di vista del recruitment, una seconda giovinezza.\n","permalink":"https://nicolaiarocci.com/ci-sono-piu-offerte-di-lavoro-che-programmatori-net/","summary":"\u003cp\u003eAi primi di ottobre \u003c!-- raw HTML omitted --\u003eTechCrunch\u003c!-- raw HTML omitted --\u003e riportava una notizia interessante: negli Stati Uniti ci sarebbe carenza di sviluppatori .NET. La piattaforma di recruitment Dice dichiara che le offerte di lavoro .NET aumentano del 25% ogni anno, e che la gran parte delle ricerche sui loro database riguarda skill .NET. Ai primi di ottobre 2011 sarebbero state oltre 10.000 le richieste inevase di figure professionali .NET.\u003c/p\u003e\n\u003cp\u003eNotizie di questo tipo vanno prese con beneficio di inventario anche se in questo caso una conferma indiretta viene da WANTED Analytics, che a Settembre ha pubblicato un \u003c!-- raw HTML omitted --\u003ereport\u003c!-- raw HTML omitted --\u003e indipendente che sembra giungere alle stesse conclusioni. Anche i \u003c!-- raw HTML omitted --\u003ecommenti\u003c!-- raw HTML omitted --\u003e all’articolo di TechCrunch sono confortanti: ci sono aziende che ammettono di essere a caccia di sviluppatori .NET e ci sono programmatori che confermano di ricevere continuamente offerte di lavoro (non mancano quelli che sono passati ad altri linguaggi e non se ne pentono).\u003c/p\u003e","title":"Ci sono più offerte di lavoro che Programmatori .NET"},{"content":"Da qualche giorno sono disponibili le slide e la registrazione video del mio intervento al KnowCamp 2011.\nLa diretta è stata seguita da oltre 1200 spettatori mentre in sala erano presenti circa 150 persone: un bel successo.\nPer quanto riguarda le slide, visto che si trattava di un intervento di tipo Ignite ho preferito impostarle come semplice supporto al parlato (un paio sono addirittura ‘mute’):\nRingraziamenti Grazie a Nicola Ballotta e tutti i ragazzi dello staff del KnowCamp, a Nicola Mattina e Gianluca Diegoli moderatori di Ignite Session e User Panel e un saluto affettuoso ai compagni di scorribande alimentari e non (voi sapete). Grazie al pubblico che mi ha dedicato cinque minuti del suo tempo.\nInfine un grazie grande come una casa ai tanti che personalmente o via twitter/facebook oppure citandomi nei loro articoli online mi hanno comunicato il loro apprezzamento. Ripropongo uno dei riscontri che più mi hanno colpito perché testimonia che i contenuti proposti stanno attecchendo. Cosa può desiderare di più un umile relatore?\n","permalink":"https://nicolaiarocci.com/il-mio-intervento-al-knowcamp-2011-fuga-dalla-comfort-zone/","summary":"\u003cp\u003eDa qualche giorno sono disponibili le slide e la registrazione video del mio intervento al \u003c!-- raw HTML omitted --\u003eKnowCamp 2011\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003cp\u003eLa diretta è stata seguita da oltre 1200 spettatori mentre in sala erano presenti circa 150 persone: un bel successo.\u003c/p\u003e","title":"Il mio intervento al KnowCamp 2011: Fuga dalla Comfort Zone"},{"content":" Non acquisterò la biografia ufficiale di Steve Jobs. Non mi interessa il suo privato e quel che ha (o non ha) fatto nel corso della sua carriera è di pubblico dominio. I contenuti del libro li troverò comunque citati, acclamati e commentati ad nauseam sul web. Gratis.\nE poi, non fosse morto l’altro ieri, l’avrei comprata? Vedi sopra.\n","permalink":"https://nicolaiarocci.com/perche-non-acquistero-la-biografia-ufficiale-di-steve-jobs/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eNon acquisterò la biografia ufficiale di Steve Jobs. Non mi interessa il suo privato e quel che ha (o non ha) fatto nel corso della sua carriera è di pubblico dominio. I contenuti del libro li troverò comunque citati, acclamati e commentati \u003cem\u003ead nauseam\u003c/em\u003e sul web. Gratis.\u003c/p\u003e\n\u003cp\u003eE poi, non fosse morto l’altro ieri, l’avrei comprata? Vedi sopra.\u003c/p\u003e","title":"Perché non acquisterò la biografia ufficiale di Steve Jobs"},{"content":"Python for the Web è una agile guida introduttiva per chi vuole accedere al Web via Python. Vengono presentate tre eccellenti librerie: Requests, simplejson e lxml. La prima consente di interagire facilmente coi siti Web da Python, la seconda serve a processare i flussi JSON e l’ultima è una fantastica risorsa per lo scraping (l’ho usata in un mio progetto, ve la consiglio senz’altro). L’ultimo argomento della guida è la creazione di siti web in Python attraverso il framework Django.\nPiù che una guida, Python for the Web è un appetizer che vi invoglierà ad approfondire gli argomenti trattati. Se state cominciando con Python, date una occhiata.\n","permalink":"https://nicolaiarocci.com/python-per-il-web/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003ePython for the Web\u003c!-- raw HTML omitted --\u003e è una agile guida introduttiva per chi vuole accedere al Web via Python. Vengono presentate tre eccellenti librerie: \u003c!-- raw HTML omitted --\u003eRequests\u003c!-- raw HTML omitted --\u003e, \u003c!-- raw HTML omitted --\u003esimplejson\u003c!-- raw HTML omitted --\u003e e \u003c!-- raw HTML omitted --\u003elxml\u003c!-- raw HTML omitted --\u003e. La prima consente di interagire facilmente coi siti Web da Python, la seconda serve a processare i flussi JSON e l’ultima è una fantastica risorsa per lo scraping (l’ho usata in un mio progetto, ve la consiglio senz’altro). L’ultimo argomento della guida è la creazione di siti web in Python attraverso il framework \u003c!-- raw HTML omitted --\u003eDjango\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Python per il Web"},{"content":"Molti programmatori hanno difficoltà nel gestire la comunicazione. Non intendo quella di rete, ma quella interpersonale. E’ forse per questo che gran parte di loro preferisce lavorare in proprio. Ciò gli consente di non dover comunicare o perlomeno di farlo il meno possibile.\nLuogo comune vuole che i programmatori siano persone chiuse, a volte timide, oppure scontrose e irascibili; più interessate al codice che non alle relazioni interpersonali. E’ pur vero che il nostro lavoro richiede concentrazione. Molti sostengono che programmare è una forma d’arte e la gran parte degli artisti (pittori, scultori, disegnatori) non lavora forse in silenzio?\nTuttavia anche i più abili nell’eludere ogni forma di contatto prima o poi si vedranno costretti a comunicare con una persona importante: il cliente. Di tutte le forme di comunicazione professionale, quella col cliente è senz’altro la più delicata. Ne va del nostro lavoro e purtroppo in questo caso ci troviamo spesso ad affrontare un problema importante, quello che Chris Eidhof definisce la “perdita di segnale”.\nOgni volta che comunichiamo c’è un rumore di fondo. Se le parti hanno competenze diverse, frammenti del messaggio andranno perduti. In linea generale, più le esperienze sono vicine (due programmatori che parlano tra di loro), minore è la perdita di segnale.\nQuando le aree di competenza sono divergenti (come capita tra programmatore e cliente) è necessario adottare, a volte forgiare, un linguaggio comprensibile per entrambi. Quasi sempre questo è più vicino al cliente che non al programmatore, per il quale l’impegno è notevole. Il rischio da evitare sono le incomprensioni e i conseguenti, inevitabili, ritardi nel lavoro.\nA differenza dei linguaggi di programmazione, che una volta acquisiti entrano definitivamente nel bagaglio del programmatore, i linguaggi da adottare coi clienti tendono a cambiare di volta in volta a causa delle variabili in gioco, prime tra tutte il grado di alfabetizzazione informatica e l’area di competenza (ambito professionale) della controparte.\nQualche esempio può essere utile. Godetevi le mie tre gaffes più recenti, non tutte avvenute sul lavoro. D’altronde questa faccenda della scelta del linguaggio giusto non è certo confinata al solo ambito professionale. La prima riguarda la mia non proprio brillante comunicazione su Facebook:\nIl secondo incidente è avvenuto proprio su questo sito:\nIn quest’ultimo caso si potrebbe obiettare che l’errore è del visitatore che è capitato nel posto sbagliato. Non è così perché l’avevo indotto io alla visita, pubblicando il link su Facebook. E veniamo al caso più interessante perché ha coinvolto un mio cliente la settimana scorsa:\nQui il nostro servizio di assistenza si era espresso chiaramente. Il fatto è che la parola ‘immagine’ ha un significato ben diverso a seconda che venga intesa da un tecnico informatico o da un commerciante di liquori. Pur avendo compreso perfettamente la richiesta, evidentemente non avrebbe avuto idea di come soddisfarla. Direi che in questo caso ha saputo arrangiarsi brillantemente. In effetti il supporto tecnico è uno dei campi nei quali il conflitto tra competenze e linguaggi diversi tende a generare i risultati più disastrosi.\nDescrivere il problema col giusto linguaggio è il primo passo, forse il più importante, per trovarne la soluzione. Apprendere il dizionario del cliente è determinante per attivare una comunicazione efficace. Temo che nella gran parte dei progetti software non ci si provi nemmeno, e forse per questa ragione tanti programmi risultano difficili da utilizzare.\n","permalink":"https://nicolaiarocci.com/il-linguaggio-piu-importante-per-il-programmatore/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eMolti programmatori hanno difficoltà nel gestire la comunicazione. Non intendo quella di rete, ma quella interpersonale. E’ forse per questo che gran parte di loro preferisce lavorare in proprio. Ciò gli consente di non dover comunicare o perlomeno di farlo il meno possibile.\u003c/p\u003e\n\u003cp\u003eLuogo comune vuole che i programmatori siano persone chiuse, a volte timide, oppure scontrose e irascibili; più interessate al codice che non alle relazioni interpersonali.  E’ pur vero che il nostro lavoro richiede concentrazione. Molti \u003c!-- raw HTML omitted --\u003esostengono\u003c!-- raw HTML omitted --\u003e che programmare è una forma d’arte e la gran parte degli artisti (pittori, scultori, disegnatori) non lavora forse in silenzio?\u003c/p\u003e","title":"Il Linguaggio più importante per il Programmatore"},{"content":"Decisamente questo non è un buon momento per le scienze dell’informazione. Dopo la recente scomparsa di Steve Jobs, ecco la notizia che lo scorso fine settimana anche Dennis Ritchie ci ha lasciato. Inventore e autore del Linguaggio C, Ritchie era anche uno dei padri fondatori del sistema operativo Unix. Poco conosciuto dal grande pubblico, non certo manager e tanto meno figura pubblica, Ritchie era uno scienziato di calibro assoluto la cui influenza nell’informatica tutta è semplicemente inestimabile.\nPremio Turing nel 1983 e National Medal of Technology nel 1999, Dennis Ritchie è conosciuto ai più come co-autore di uno dei libri più importanti (e venerati) nella storia della programmazione: The C Programming Language, o K\u0026amp;R come tutti l’abbiamo chiamato per trent’anni. La rilevanza del K\u0026amp;R è tale da renderlo ancora oggi uno dei libri di riferimento, consigliato a chiunque voglia diventare un programmatore o desideri scrivere di programmazione.\nPer me Dennis Ritchie è sempre stato, con pochissimi altri, un vero e proprio mito. Lo saluto con affetto e gratitudine prendendo a prestito le parole di James Grimmelmann:\nHis pointer has been cast to void *; his process has terminated with exit code zero\n","permalink":"https://nicolaiarocci.com/dennis-ritchie-se-ne-andato/","summary":"\u003cp\u003eDecisamente questo non è un buon momento per le scienze dell’informazione. Dopo la recente scomparsa di Steve Jobs, ecco la notizia che lo scorso fine settimana anche \u003c!-- raw HTML omitted --\u003eDennis Ritchie\u003c!-- raw HTML omitted --\u003e ci ha lasciato. Inventore e autore del Linguaggio C, Ritchie era anche uno dei padri fondatori del sistema operativo Unix. Poco conosciuto dal grande pubblico, non certo manager e tanto meno figura pubblica, Ritchie era uno scienziato di calibro assoluto la cui influenza nell’informatica tutta è semplicemente inestimabile.\u003c/p\u003e","title":"Dennis Ritchie se n’è andato"},{"content":" ","permalink":"https://nicolaiarocci.com/sullarte-di-arrangiarsi-dei-clienti/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Sull’arte di arrangiarsi dei clienti"},{"content":" ","permalink":"https://nicolaiarocci.com/a-farewell-to-steve-jobs/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003cblockquote\u003e\n\u003c!-- raw HTML omitted --\u003e\u003c/blockquote\u003e","title":"A Farewell to Steve Jobs"},{"content":"Sabato 8 ottobre sarò a Modena per il KnowCamp 2011. Per la prima volta mi cimenterò in un Ignite, ovvero una forma di intervento-lampo-acrobatico della durata di cinque minuti durante i quali verranno passate venti slide a intervalli regolari (una ogni quindici secondi).\nIl titolo provvisiorio del mio intervento è Fuga dalla Comfort Zone. Ammetto di essere piuttosto nervoso. Il rischio di impappinarmi nel corso di quest’esibizione-rap è notevole, e tuttavia sono curioso di vedere come andrà a finire.\nAl momento in cui scrivo il programma degli interventi è in definizione, ma sono già online i programmi del Business Panel e della Tavola Rotonda sulle Startup di domenica. L’evento sarà trasmesso in diretta streaming sui portali Wired Italia e Ninja Marketing. In ogni caso se ci sarete fatemelo sapere (nei commenti qui sotto oppure via twitter o facebook), così organizziamo per incontrarci. A sabato!\nAggiornamento del 24.10.2011: sono disponibili video e slides del mio intervento al KnowCamp 2011\n","permalink":"https://nicolaiarocci.com/la-mia-fuga-dalla-comfort-zone-al-knowcamp-2011/","summary":"\u003cp\u003eSabato 8 ottobre sarò a Modena per il \u003c!-- raw HTML omitted --\u003eKnowCamp 2011\u003c!-- raw HTML omitted --\u003e. Per la prima volta mi cimenterò in un \u003c!-- raw HTML omitted --\u003eIgnite\u003c!-- raw HTML omitted --\u003e, ovvero una forma di intervento-lampo-acrobatico della durata di cinque minuti durante i quali verranno passate venti slide a intervalli regolari (una ogni quindici secondi).\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eIl titolo provvisiorio del mio intervento è \u003cem\u003eFuga dalla Comfort Zone\u003c/em\u003e. Ammetto di essere piuttosto nervoso. Il rischio di impappinarmi nel corso di quest’esibizione-rap è notevole, e tuttavia sono curioso di vedere come andrà a finire.\u003c/p\u003e","title":"La mia fuga dalla Comfort Zone al KnowCamp 2011"},{"content":"Giovedì 29 Settembre sarò a Cesena per partecipare a From The Front 2011, conferenza-evento di una giornata dedicata a programmatori front end e web designer. Il programma dei talk pomeridiani è interessante, vi consiglio di dare una occhiata anche perché il costo di iscrizione è pari a zero irrisorio. Se venite battete un colpo: è una buona occasione per incontrarsi di persona (magari al party che seguirà l’evento).\n","permalink":"https://nicolaiarocci.com/web-designer-e-programmatori-front-end-si-incontrano-a-from-the-front-2011/","summary":"\u003cp\u003eGiovedì 29 Settembre sarò a Cesena per partecipare a \u003c!-- raw HTML omitted --\u003eFrom The Front 2011\u003c!-- raw HTML omitted --\u003e, conferenza-evento di una giornata dedicata a programmatori front end e web designer. Il programma dei talk pomeridiani è interessante, vi consiglio di dare una occhiata anche perché il costo di iscrizione è \u003c!-- raw HTML omitted --\u003epari a zero\u003c!-- raw HTML omitted --\u003e irrisorio. Se venite battete un colpo: è una buona occasione per incontrarsi di persona (magari al party che seguirà l’evento).\u003c/p\u003e","title":"Web Designer e Programmatori Front End si incontrano a From The Front 2011"},{"content":"Per gran parte della mia carriera sono stato un programmatore client/server specializzato nel .NET Framework e in tutto quel gira intorno all’ecosistema Microsoft. Un paio di anni fa ho deciso di uscire dalla mia comfort zone professionale, guardarmi attorno e, per citare qualcun’altro, andare a vedere quanto è profonda la tana del Bianconiglio.\nTempo libero a disposizione non ce n’era. A quarant’anni tra lavoro, famiglia e attività agonistica mi rimaneva solo la via del furto: rubare ore al sonno per dedicarmi allo studio di nuovi linguaggi e piattaforme. Prima è stato il turno di JavaScript, poi di Python, Django, Ruby e infine Node e MongoDB. Ora mi considero un programmatore poliglotta, capace di scrivere codice in una moltitudine di linguaggi.\nEppure in passato sono sempre stato convinto che fosse più produttivo concentrarsi su una sola piattaforma per conoscerla fino in fondo e sfruttarne al meglio le possibilità. Sulle ragioni che mi hanno indotto a prendere quella decisione potrei scrivere una decina di articoli, e magari lo farò prima o poi, ma quel che desidero condividere oggi sono le lezioni che questa esperienza mi ha insegnato.\nA dire il vero ci ho già provato una volta, buttando giù appunti e abbozzando un articolo poi miseramente abbandonato. Per fortuna qualche giorno fa sono incappato in Advantages of Being a Polyglot Programmer, stupefacente articolo di Davy Brion. Il suo è precisamente il pezzo che io non riuscivo a scrivere, parola per parola. Davy elenca quelli che secondo lui sono i cinque principali vantaggi del programmatore poliglotta. Io ne aggiungo uno e ve li propongo – fate conto che sia io a parlare attraverso lui, o viceversa.\nQuali sono i vantaggi del programmatore poliglotta? Espandere i propri orizzonti Nell’imparare un nuovo linguaggio c’è molto più che apprenderne la sintassi. Si scoprono nuove tecniche, nuove librerie e nuovi modi di affrontare e risolvere i problemi. Assorbiamo una conoscenza già diffusa nella comunità che si è raccolta attorno al linguaggio, e tuttavia nuova per noi. A seconda del nostro background può capitare di imparare tanto, oppure solo qualcosa qui e là. Se già conosciamo un linguaggio dinamico a oggetti, per esempio, impararne uno nuovo non aggiungerà granché al nostro bagaglio. Se al contrario conosciamo solo linguaggi statici, scoprirne uno dinamico sarà un’esperienza davvero arricchente. E’ proprio questa miscela di paradigmi e conoscenze nuove, grandi e piccole, che influenzerà in modo determinante il nostro modo di risolvere i problemi in futuro.\nimparare più facilmente La pratica rende perfetti. Dedicarsi con costanza all’apprendimento rende più semplice l’atto stesso di apprendere. Tanti hanno difficoltà ad accettare novità che sembrano in conflitto con quel che conoscono. Studiare un linguaggio che si basa su nuovi paradigmi (pensate alla programmazione funzionale) è difficoltoso perché ci costringe a ragionare al di fuori di strutture e regole che ci sono familiari. La seconda volta sarà già più facile, perché l’esperienza precedente ci avrà insegnato a non lasciarci condizionare da ciò che sappiamo. La terza volta sarà ancora più semplice, e così via. Tutti noi impariamo a imparare imparando.\nrinnovare la passione per la programmazione Quando ero programmatore C# / VB.NET mi capitava ogni tanto di non divertirmi più. In quei momenti scrivere codice era solo lavoro, non più gioia e tanto meno passione. Quei periodi potevano durare un paio di settimane, a volte un mese o due. Da quando mi sono dedicato a nuovi linguaggi non mi è più capitato di annoiarmi. Imparare di continuo cose nuove rende tutto più interessante, divertente e senz’altro impegnativo.\nRIDurre la dipendenza dagli strumenti quotidiani e introdurne di nuovi Fino a due anni fa non prendevo nemmeno in considerazione l’idea di scrivere codice senza usare qualche tipo di IDE. Ero dipendente da Visual Studio: IntelliSense, completamento automatico, navigazione, debugger integrato… tutte feature alle quali non credevo di poter rinunciare. Oggi preferisco scrivere codice in un semplice text editor per programmatori (nel mio caso Sublime Text 2), con una finestra terminale in cui lanciare i miei test. Fare a meno del debugger non solo è possibile, ma addirittura proficuo. Si procede a piccoli passi, facendo spesso test focalizzati che permettono di isolare e risolvere rapidamente i bug. Per motivi di lavoro ancora oggi uso e apprezzo Visual Studio ogni giorno, ma preferisco senz’altro lavorare in maniera spartana: text editor e terminale sono tutto quello che mi serve.\nLavorare così comporta una conseguenza importante. Si rende necessario (ri)diventare provetti nell’uso della finestra terminale, della linea di comando e, in alcune occasioni, addirittura di sistemi operativi diversi. Per imparare Ruby o Node spesso è meglio installare una distribuzione Linux (o lavorare su OS X se avete un Mac) piuttosto che tentare di far girare il tutto sotto Windows. In ogni caso conoscere la shell e i tool *NIX, specialmente di questi tempi, aggiungerà una freccia potente al nostro arco.\nridurre il legame col linguaggio prediletto Coloro che lavorano esclusivamente con una piattaforma tendono a sviluppare con essa un vero e proprio legame emotivo. Lo so per certo perché è capitato anche a me (e diverse volte) nel corso degli anni. Se siamo legati emotivamente a un linguaggio ci diventa difficile rimanere equilibrati nel corso di una discussione, o restare calmi se percepiamo che il nostro prediletto è sotto minaccia (pensiamo a quel che sta succedendo a Silverlight proprio in queste ore). Praticando più linguaggi e piattaforme scopriamo che le nostre conoscenze e capacità sono trasferibili; che siamo programmatori a prescindere dagli strumenti che utilizziamo. Qualunque sia il destino della nostra piattaforma prediletta, noi non abbiamo nulla da temere.\nmigliorare e ampliare il network professionale Studiare nuovi linguaggi e nuove piattaforme mi ha portato a conoscere molta più gente in due anni di quanta non ne abbia conosciuta nei venti precedenti. Quando si lavora a lungo nello stesso ambiente con gli stessi strumenti arriva il momento in cui non si ha (o non si sente) più bisogno di confrontarsi, informarsi e… imparare. Si acquisisce l’esperienza sufficiente a portare a casa il risultato, qualunque esso sia. Le stesse comunità di sviluppatori, per quanto ampie, tendono a chiudersi e diventare presto auto referenziali: stesse persone, stessi contributi, stesse domande e risposte. Aprirsi a comunità diverse illuminando la propria mente con idee che provengono dalle fonti più disparate è una esperienza esaltante. Soprattutto dopo anni di programmazione a testa bassa.\nUna riduzione di questo articolo è stata oggetto di un mio Ignite (relazione lampo in cinque minuti) presentato il 8.10.2011 al KnowCamp 2011. Le slides e il video sono disponibili online.\n","permalink":"https://nicolaiarocci.com/sui-vantaggi-del-programmatore-poliglotta/","summary":"\u003cp\u003ePer gran parte della mia carriera sono stato un programmatore client/server specializzato nel .NET Framework e in tutto quel gira intorno all’ecosistema Microsoft. Un paio di anni fa ho deciso di uscire dalla mia \u003cem\u003e\u003c!-- raw HTML omitted --\u003ecomfort zone\u003c!-- raw HTML omitted --\u003e\u003c/em\u003e professionale, guardarmi attorno e, per citare \u003ca href=\"http://www.youtube.com/watch?v=Ex2fpsz-hQI\" title=\"Quanto è profonda la tana del Bianconiglio?\"\u003equalcun’altro\u003c/a\u003e, andare a vedere \u003cem\u003equanto è profonda la tana del Bianconiglio\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eTempo libero a disposizione non ce n’era. A quarant’anni tra lavoro, famiglia e attività agonistica mi rimaneva solo la via del furto: rubare ore al sonno per dedicarmi allo studio di nuovi linguaggi e piattaforme. Prima è stato il turno di JavaScript, poi di Python, Django, Ruby e infine Node e MongoDB. Ora mi considero un programmatore poliglotta, capace di scrivere codice in una moltitudine di linguaggi.\u003c/p\u003e\n\u003cp\u003eEppure in passato sono sempre stato convinto che fosse più produttivo concentrarsi su una sola piattaforma per conoscerla fino in fondo e sfruttarne al meglio le possibilità. Sulle ragioni che mi hanno indotto a prendere quella decisione potrei scrivere una decina di articoli, e magari lo farò prima o poi, ma quel che desidero condividere oggi sono le lezioni che questa esperienza mi ha insegnato.\u003c/p\u003e\n\u003cp\u003eA dire il vero ci ho già provato una volta, buttando giù appunti e abbozzando un articolo poi miseramente abbandonato. Per fortuna qualche giorno fa sono incappato in \u003c!-- raw HTML omitted --\u003eAdvantages of Being a Polyglot Programmer\u003c!-- raw HTML omitted --\u003e, stupefacente articolo di Davy Brion. Il suo è \u003cem\u003eprecisamente\u003c/em\u003e il pezzo che io non riuscivo a scrivere, parola per parola. Davy elenca quelli che secondo lui sono i cinque principali vantaggi del programmatore poliglotta. Io ne aggiungo uno e ve li propongo – fate conto che sia io a parlare attraverso lui, o viceversa.\u003c/p\u003e","title":"Sui Vantaggi del Programmatore Poliglotta"},{"content":"Se state considerando l’opzione Cloud per il vostro SQL Server non lasciatevi sfuggire l’ultimo articolo di Jeremiah Peschka, Configuring SQL Server in Amazon EC2. A dispetto del titolo non si tratta di un tutorial, ma di una analisi accurata di vantaggi e svantaggi legati al deploy di un database SQL nel Cloud, a prescindere dalla piattaforma adottata.\nIl cloud è robusto e affidabile. Il cloud risolve ogni problema di scalabilità. Nel cloud, anche la cacca profuma di rose. In teoria queste affermazioni sono corrette, ma occorre darci dentro per trasformarle in realtà. Specialmente quando c’è un database nel mezzo.\n","permalink":"https://nicolaiarocci.com/sql-server-e-il-cloud-di-amazon-ec2-vantaggi-e-svantaggi/","summary":"\u003cp\u003eSe state considerando l’opzione Cloud per il vostro SQL Server non lasciatevi sfuggire l’ultimo articolo di Jeremiah Peschka, \u003c!-- raw HTML omitted --\u003eConfiguring SQL Server in Amazon EC2\u003c!-- raw HTML omitted --\u003e. A dispetto del titolo non si tratta di un tutorial, ma di una analisi accurata di vantaggi e svantaggi legati al \u003cem\u003edeploy\u003c/em\u003e di un database SQL nel Cloud, a prescindere dalla piattaforma adottata.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIl cloud è robusto e affidabile. Il cloud risolve ogni problema di scalabilità. Nel cloud, anche la cacca profuma di rose. In teoria queste affermazioni sono corrette, ma occorre darci dentro per trasformarle in realtà. Specialmente quando c’è un database nel mezzo.\u003c/p\u003e","title":"SQL Server e il Cloud di Amazon EC2: vantaggi e svantaggi"},{"content":"Gran bella esperienza quella del Romagna Camp. Un mix perfetto di networking, lavoro e (tanto) divertimento. Chi c’era sa, chi non c’era faccia un giro sul tag #romagnacamp di Twitter e saprà.\nScopro con disappunto che SlideShare fa un pessimo servizio a Keynote, non rendendo né transizioni né animazioni e sostituendo i font come gli pare. Ecco dunque la mia presentazione, o piuttosto quel che ne rimane dopo l’upload*:\nEssendo l’ultimo speaker ho dovuto correre un po’ per recuperare tempo e non far deragliare il programma. Probabilmente si tratta di una cosa positiva perché almeno così non ho avuto il tempo di annoiare il pubblico. E’ andata peggio al povero\nFullo, a cui è toccato in sorte di raccontare HTML5 in dieci minuti!\nNell’occasione ho approfittato della disponibilità di Luca Sartoni (che è anche un bravo fotografo) per rifarmi il look. Grazie infine ad Alessandra, ottima organizzatrice di eventi e sorprendente social tanguera extraordinaire.\n(*) se per un attimo vi è sembrato che il tizio in copertina indossasse le Converse al contrario bé, allora sappiate che è proprio così.\n","permalink":"https://nicolaiarocci.com/frammenti-di-cloud-computing-al-romagna-camp-2011/","summary":"\u003cp\u003eGran bella esperienza quella del \u003c!-- raw HTML omitted --\u003eRomagna Camp\u003c!-- raw HTML omitted --\u003e. Un mix perfetto di networking, lavoro e (tanto) divertimento. Chi c’era sa, chi non c’era faccia un giro sul tag \u003c!-- raw HTML omitted --\u003e#romagnacamp\u003c!-- raw HTML omitted --\u003e di Twitter e saprà.\u003c/p\u003e\n\u003cp\u003eScopro con disappunto che SlideShare fa un pessimo servizio a Keynote, non rendendo né transizioni né animazioni e sostituendo i font come gli pare. Ecco dunque la mia presentazione, o piuttosto quel che ne rimane dopo l’upload*:\u003c/p\u003e","title":"Frammenti di Cloud Computing al Romagna Camp 2011"},{"content":"Il progetto Chess@home è il vincitore del recente Node Knockout, ed una volta tanto si tratta di qualcosa di davvero innovativo e intrigante. Obiettivo: la creazione della più potente Intelligenza Artificiale per il gioco degli Scacchi al mondo, generata nientemeno che dai browser attivi sulla rete.\nL’elaborazione collaborativa distribuita è diventata famosa grazie a progetti come SETI@home e Folding@home. Semplificando molto potremmo dire che questo tipo di applicazione prevede che un piccolo programma venga installato e fatto girare su decine di migliaia di computer volontari. La capacita elaborativa del progetto è data dalla somma delle elaborazioni individuali.\nLa novità di Chess@Home consiste nell’idea di ricorrere a codice JavaScript che gira nel browser, dunque senza alcuna necessità di client dedicati. Appositi widget presenti nelle pagine dei siti aderenti innestano l’elaborazione sul computer del visitatore, potenzialmente decuplicando il numero di nodi che partecipano all’elaborazione (più visitatori accedono alla stessa pagina contemporaneamente).\nE’ facile intravedere complicazioni etiche ma occorre tenere conto del fatto che il progetto, messo in piedi in sole 48 ore, è nato soprattutto come esperimento per testare il limite delle tecnologie impiegate (Node.JS, MongoDB, JavaScript). Vi consiglio caldamente l’articolo di uno degli ideatori, Sylvain Zimmer, che descrive genesi e dettagli tecnici del progetto.\nGià oggi potete giocare la vostra prima partita a scacchi contro la rete. Il mio cuore di nerd (che in anni ahimè troppo lontani ha fatto girare impunemente il client SETI per mesi e mesi) tifa per voi.\nPS: domani al Romagna Camp 2011 terrò una relazione dal titolo “Quattro passi fra le nuvole (e non scordate il paracadute)”. Per saperne di più date una occhiata qui.\n","permalink":"https://nicolaiarocci.com/chesshome-intelligenza-artificiale-distribuita-applicata-agli-scacchi-via-browser/","summary":"\u003cp\u003eIl progetto \u003c!-- raw HTML omitted --\u003eChess@home\u003c!-- raw HTML omitted --\u003e è il vincitore del recente \u003c!-- raw HTML omitted --\u003eNode Knockout\u003c!-- raw HTML omitted --\u003e, ed una volta tanto si tratta di qualcosa di davvero innovativo e intrigante. Obiettivo: la creazione della più potente Intelligenza Artificiale per il gioco degli Scacchi al mondo, generata nientemeno che dai browser attivi sulla rete.\u003c/p\u003e\n\u003cp\u003eL’elaborazione collaborativa distribuita è diventata famosa grazie a progetti come \u003c!-- raw HTML omitted --\u003eSETI@home\u003c!-- raw HTML omitted --\u003e e \u003c!-- raw HTML omitted --\u003eFolding@home\u003c!-- raw HTML omitted --\u003e. Semplificando molto potremmo dire che questo tipo di applicazione prevede che un piccolo programma venga installato e fatto girare su decine di migliaia di computer volontari. La capacita elaborativa del progetto è data dalla somma delle elaborazioni individuali.\u003c/p\u003e\n\u003cp\u003eLa novità di Chess@Home consiste nell’idea di ricorrere a codice JavaScript che gira nel browser, dunque senza alcuna necessità di client dedicati. Appositi widget presenti nelle pagine dei siti aderenti innestano l’elaborazione sul computer del visitatore, potenzialmente decuplicando il numero di nodi che partecipano all’elaborazione (più visitatori accedono alla stessa pagina contemporaneamente).\u003c/p\u003e","title":"Chess@home è una Intelligenza Artificiale Distribuita per gli Scacchi"},{"content":"Carta e inchiostro costano eppure ci sono (ancora) molte ragioni per mandare in stampa una pagina web. David Bushell ha creato Print.css, un mini sito che incoraggia i web designer alla creazione di fogli di stile eco-compatibili che inviino alla stampante solo il necessario. In effetti la direttiva CSS @media permette di farlo con facilità.\n","permalink":"https://nicolaiarocci.com/print-css-e-il-foglio-di-stile-per-il-web-designer-attento-allambiente/","summary":"\u003cp\u003eCarta e inchiostro costano eppure ci sono (ancora) molte ragioni per mandare in stampa una pagina web. David Bushell ha creato \u003ca href=\"http://printstylesheet.com/\" title=\"Print.css\"\u003ePrint.css\u003c/a\u003e, un mini sito che incoraggia i web designer alla creazione di fogli di stile eco-compatibili che inviino alla stampante solo il necessario. In effetti la direttiva CSS \u003ccode\u003e@media\u003c/code\u003e permette di farlo con facilità.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Print.css è il foglio di stile per il web designer attento all’ambiente"},{"content":"Dopo una breve e brillante Beta, con l’uscita della versione 1.0 il progetto open source Python Tools for Visual Studio entra nel novero delle estensioni ufficiali per Visual Studio 2010. Ne da notizia W. Somasegar sul suo weblog, con un articolo introduttivo in cui ci ricorda le caratteristiche salienti di PTVS: syntax highlighting, refactoring, debugging in tempo reale, interprete Python interattivo integrato e supporto per CPython, IronPython, JPython e PyPy.\n","permalink":"https://nicolaiarocci.com/python-tools-per-visual-studio-1-0/","summary":"\u003cp\u003eDopo una breve e brillante Beta, con l’uscita della versione 1.0 il progetto open source \u003c!-- raw HTML omitted --\u003ePython Tools for Visual Studio\u003c!-- raw HTML omitted --\u003e entra nel novero delle estensioni ufficiali per Visual Studio 2010. Ne da notizia W. Somasegar sul suo weblog, con \u003c!-- raw HTML omitted --\u003eun articolo introduttivo\u003c!-- raw HTML omitted --\u003e in cui ci ricorda le caratteristiche salienti di PTVS: syntax highlighting, refactoring, debugging in tempo reale, interprete Python interattivo integrato e supporto per CPython, IronPython, JPython e PyPy.\u003c/p\u003e","title":"Python Tools per Visual Studio 1.0"},{"content":"Codecademy è una fantastica iniziativa che insegna a programmare online. Lanciata poco più di una settimana fa, ha già raccolto duecentomila utenti registrati. Brillante l’idea di integrare gli strumenti tipici del social network (badge, punteggi, seguire i progressi degli amici) con un interprete interattivo e un preciso feedback in tempo reale.\nCodecademy è il modo più semplice per imparare a programmare. E’ interattivo, divertente, e lo puoi fare con gli amici\n","permalink":"https://nicolaiarocci.com/imparare-a-programmare-online-con-codecademy/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eCodecademy\u003c!-- raw HTML omitted --\u003e è una fantastica iniziativa che insegna a programmare online. Lanciata poco più di una settimana fa, ha già raccolto duecentomila utenti registrati. Brillante l’idea di integrare gli strumenti tipici del social network (badge, punteggi, seguire i progressi degli amici) con un interprete interattivo e un preciso feedback in tempo reale.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCodecademy è il modo più semplice per imparare a programmare. E’ interattivo, divertente, e lo puoi fare con gli amici\u003c/p\u003e","title":"Imparare a programmare online con Codecademy"},{"content":"Finalmente anche in Italia qualcuno pubblica un articolo originale e convincente sulla recente comparsa del “famigerato” algoritmo Google Panda. Molti SEO in questi mesi si sono stracciati le vesti, lamentando un attacco diretto da parte di Google alla loro maestà.\nL’autore di Surviving (Google) Panda in Italia dipana per bene l’ingarbugliata sequenza di annunci e implementazioni culminate poi nel Panda Update. Non mancano alcuni consigli sensati (e tanto per cambiare originali) e una interessante conclusione che vi lascio leggere da soli. E bravo Stuart!\n","permalink":"https://nicolaiarocci.com/sopravvivere-a-google-panda-in-italia/","summary":"\u003cp\u003eFinalmente anche in Italia qualcuno pubblica un articolo originale e convincente sulla recente comparsa del “famigerato” algoritmo Google Panda. Molti SEO in questi mesi si sono stracciati le vesti, lamentando un attacco diretto da parte di Google alla loro maestà.\u003c/p\u003e\n\u003cp\u003eL’autore di \u003c!-- raw HTML omitted --\u003eSurviving (Google) Panda in Italia\u003c!-- raw HTML omitted --\u003e dipana per bene l’ingarbugliata sequenza di annunci e implementazioni culminate poi nel Panda Update. Non mancano alcuni consigli sensati (e tanto per cambiare originali) e una interessante conclusione che vi lascio leggere da soli. E bravo \u003c!-- raw HTML omitted --\u003eStuart\u003c!-- raw HTML omitted --\u003e!\u003c/p\u003e","title":"Sopravvivere a Google Panda in Italia"},{"content":"Don’t Fear the Internet è una ottima risorsa per Web Designer principianti. Attenzione ai dettagli, grande cura e ottimi contenuti sono il marchio distintivo di questo progetto di Jessica Hische e Russ Maschmeyer:\nSei un disegnatore, un fotografo, un artista o, più in generale, un creativo? Hai un sito che mai messo insieme con Dreamweaver grazie a quell’UNICA lezione scolastica di web design? Il sito non ce l’hai nemmeno, perché sono due anni che aspetti che tuo cugino lo faccia per te? Bè, noi siamo qui per aiutarti.\n","permalink":"https://nicolaiarocci.com/html-e-css-di-base-per-i-web-designer-del-futuro/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eDon’t Fear the Internet\u003c!-- raw HTML omitted --\u003e è una ottima risorsa per Web Designer principianti. Attenzione ai dettagli, grande cura e ottimi contenuti sono il marchio distintivo di questo progetto di \u003c!-- raw HTML omitted --\u003eJessica Hische\u003c!-- raw HTML omitted --\u003e e \u003c!-- raw HTML omitted --\u003eRuss Maschmeyer\u003c!-- raw HTML omitted --\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSei un disegnatore, un fotografo, un artista o, più in generale, un creativo? Hai un sito che mai messo insieme con Dreamweaver grazie a quell’UNICA lezione scolastica di web design? Il sito non ce l’hai nemmeno, perché sono due anni che aspetti che tuo cugino lo faccia per te? Bè, noi siamo qui per aiutarti.\u003c/p\u003e","title":"HTML e CSS di base per i Web Designer del futuro"},{"content":"“Quattro passi tra le nuvole (e non scordate il paracadute)” è il titolo del mio intervento al Romagna Camp 2011. Racconterò la mia esperienza nella fornitura di servizi cloud alle small business italiane. In questi giorni di ferie ho cominciato buttare giù qualche appunto e abbozzare le prime slide. La sfida è condensare tutto quel che c’è da dire in quindici minuti.\nIl programma quest’anno è davvero ricco. Per la giornata clou (sabato 10 settembre) sono in calendario una cena, 16 speech e 7 ignite. Gli iscritti sono già più di 200 tra imprenditori, web marketer, agenzie web, freelance e sviluppatori.\nLe iscrizioni sono ancora aperte, fateci un pensierino perché credo ne valga la pena. Se ci siete passate a salutarmi, mi raccomando. Sono quello con gli occhiali, la barba e il sorriso ebete.\nAggiornamento del 12.9.2011: qui trovate le slide del mio intervento.\n","permalink":"https://nicolaiarocci.com/quattro-passi-tra-le-nuvole-al-romagna-camp-2011/","summary":"\u003cp\u003e“Quattro passi tra le nuvole (e non scordate il paracadute)” è il titolo del mio intervento al \u003c!-- raw HTML omitted --\u003eRomagna Camp 2011\u003c!-- raw HTML omitted --\u003e. Racconterò la mia esperienza nella fornitura di servizi cloud alle small business italiane. In questi giorni di ferie ho cominciato buttare giù qualche appunto e abbozzare le prime slide. La sfida è condensare tutto quel che c’è da dire in quindici minuti.\u003c/p\u003e","title":"Quattro passi tra le nuvole al Romagna Camp 2011"},{"content":"Twitter rilascia Bootstrap, il CSS Framework creato inizialmente per uso interno e ora disponibile al pubblico.\nIt is a collection of CSS and HTML conventions. It uses some of the latest browser techniques to provide you with stylish typography, forms, buttons, tables, grids, navigation and everything else you need in a super tiny (only 6k with gzip) resource.\nA prima vista sembra molto ben fatto. Per tutte le informazioni e il download visitate la bella home page del progetto.\n","permalink":"https://nicolaiarocci.com/bootstrap-from-twitter-twitter-developers/","summary":"\u003cp\u003eTwitter rilascia Bootstrap, il CSS Framework creato inizialmente per uso interno e ora disponibile al pubblico.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt is a collection of CSS and HTML conventions. It uses some of the latest browser techniques to provide you with stylish typography, forms, buttons, tables, grids, navigation and everything else you need in a super tiny (only 6k with gzip) resource.\u003c/p\u003e\u003c/blockquote\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eA prima vista sembra molto ben fatto. Per tutte le informazioni e il download visitate la bella \u003c!-- raw HTML omitted --\u003ehome page\u003c!-- raw HTML omitted --\u003e del progetto.\u003c/p\u003e","title":"Bootstrap è il CSS Framework di Twitter"},{"content":"Xamarin, la compagnia che ha preso in mano il Progetto Mono dopo l’addio di Novell, ha appena rilasciato Mono 2.10.3. Ne da annuncio lo stesso Manuel de Icaza, storico deux-ex-machina del progetto e fondatore di Xamarin.\nSi tratta per lo più di una versione di manutenzione che risolve numerosi problemi, primo fra tutti l’instabilità di Mono sull’ultima versione di MacOS X Lion.\nL’importanza di questo aggiornamento va ben oltre le sue caratteristiche tecniche. Il titolo stesso dell’annuncio (And We Are Back) parla chiaro: si tratta di un segnale di continuità importante che Xamarin lancia alla comunità mondiale di sviluppatori Mono. Per informazioni sul progetto e sulle sue vicissitudini recenti vi invito a leggere l’articolo sul salvataggio di Mono che ho scritto qualche tempo fa.\n","permalink":"https://nicolaiarocci.com/mono-2-10-3-gira-su-os-x-lion-ed-e-vivo-e-vegeto/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eXamarin, la compagnia che \u003ca href=\"http://nicolaiarocci.com/il-progetto-mono-salvato-in-extremis-dal-suo-fondatore/\" title=\"Progetto Mono salvato dal suo fondatore\"\u003eha preso in mano il Progetto Mono\u003c/a\u003e dopo l’addio di Novell, ha appena rilasciato Mono 2.10.3. Ne da annuncio lo stesso Manuel de Icaza, storico deux-ex-machina del progetto e fondatore di Xamarin.\u003c/p\u003e\n\u003cp\u003eSi tratta per lo più di una versione di manutenzione che \u003c!-- raw HTML omitted --\u003erisolve numerosi problemi\u003c!-- raw HTML omitted --\u003e, primo fra tutti l’instabilità di Mono sull’ultima versione di MacOS X Lion.\u003c/p\u003e","title":"Mono 2.10.3 gira su OS X Lion (ed è vivo e vegeto)"},{"content":" Per qualche giorno non si pensa al codice e si sta alla larga, per quanto possibile, dal computer. Buone vacanze a chi ci va, e buon lavoro a chi non va.\nPer i più curiosi. La foto è stata scattata la settimana scorsa durante la salita della classica via Maria al Sass Pordoi (2950mt, Gruppo del Sella, Dolomiti orientali). Se proprio volete annoiarvi date una occhiata alle altre.\n","permalink":"https://nicolaiarocci.com/sono-altrimenti-impegnato/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003ePer qualche giorno non si pensa al codice e si sta alla larga, per quanto possibile, dal computer. Buone vacanze a chi ci va, e buon lavoro a chi non va.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003ePer i più curiosi. La foto è stata scattata la settimana scorsa durante la salita della classica via Maria al \u003c!-- raw HTML omitted --\u003eSass Pordoi\u003c!-- raw HTML omitted --\u003e (2950mt, Gruppo del Sella, Dolomiti orientali). Se proprio volete annoiarvi date una occhiata \u003c!-- raw HTML omitted --\u003ealle altre\u003c!-- raw HTML omitted --\u003e.\u003c/em\u003e\u003c/p\u003e","title":"Sono altrimenti impegnato"},{"content":"Ho scovato quasi per caso Javascript Tips, incredibile collezione di trucchi e suggerimenti per JavaScript. Si tratta di decine di snippets rivolti soprattutto a chi JavaScript lo usa come un linguaggio vero e proprio e non, come spesso capita, quale semplice strumento per la manipolazione del DOM.\nTra le tante chicche (alcune davvero gustose) vi segnalo a caso: concatenare due array senza crearne uno nuovo; mandare un testo in output su più righe; una funzione per eliminare un elemento da un array; una riga di codice che stampa lo stack delle chiamate correnti; un esempio di come trasformare gli argomenti di una funzione in array. Ce n’é per tutti i palati, dal principiante al più esperto, date una occhiata voi stessi.\nBuona parte dei trucchi funziona con\nla versione più recente del motore JavaScript (1.8) e non girano nella implementazione Microsoft del linguaggio (1.5), comunque per ogni snippet viene indicata la versione supportata. Non scordate di dare una occhiata ai commenti a fondo pagina per ulteriori suggerimenti e approfondimenti.\nBuona esplorazione!\n","permalink":"https://nicolaiarocci.com/javascript-trucchi-e-suggerimenti-avanzati/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eHo scovato quasi per caso \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eJavascript Tips\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, incredibile collezione di trucchi e suggerimenti per JavaScript. Si tratta di decine di snippets rivolti soprattutto a chi JavaScript lo usa come un linguaggio vero e proprio e non, come spesso capita, quale semplice strumento per la manipolazione del DOM.\u003c/p\u003e\n\u003cp\u003eTra le tante chicche (alcune davvero gustose) vi segnalo a caso: \u003c!-- raw HTML omitted --\u003econcatenare due array\u003c!-- raw HTML omitted --\u003e senza crearne uno nuovo; mandare un testo in \u003c!-- raw HTML omitted --\u003eoutput su più righe\u003c!-- raw HTML omitted --\u003e; una funzione per \u003c!-- raw HTML omitted --\u003eeliminare un elemento da un array\u003c!-- raw HTML omitted --\u003e; una riga di codice che \u003c!-- raw HTML omitted --\u003estampa lo stack\u003c!-- raw HTML omitted --\u003e delle chiamate correnti; un esempio di come \u003c!-- raw HTML omitted --\u003etrasformare gli argomenti di una funzione in array\u003c!-- raw HTML omitted --\u003e. Ce n’é per tutti i palati, dal principiante al più esperto, \u003c!-- raw HTML omitted --\u003edate una occhiata\u003c!-- raw HTML omitted --\u003e voi stessi.\u003c/p\u003e\n\u003cp\u003eBuona parte dei trucchi funziona con\u003c/p\u003e","title":"JavaScript trucchi e suggerimenti avanzati"},{"content":"Prosegue senza intoppi il cammino di Python Tools per Visual Studio, il progetto open source targato Microsoft che consente di programmare in Python con Visual Studio 2010. Dopo il lancio ufficiale dello scorso marzo e la successiva Beta 2 di maggio, ieri è stata presentata la Release Candidate 1.\nOltre 200 i bug risolti e notevoli sono le novità introdotte, come per esempio il supporto per il refactoring. Consultate le release notes conoscere tutte le novità. Se volete saperne di più su questo interessante progetto vi invito a leggere Programmare in Python con Visual Studio 2010, la recensione che ho scritto in occasione del lancio.\nAggiornamento del 2.8.2011: siamo arrivati alla RC2\n","permalink":"https://nicolaiarocci.com/python-tools-per-visual-studio-2010-arriva-la-rc1/","summary":"\u003cp\u003eProsegue senza intoppi il cammino di \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003ePython Tools per Visual Studio\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, il progetto open source targato Microsoft che consente di programmare in Python con Visual Studio 2010. Dopo il \u003ca href=\"http://nicolaiarocci.com/python-tools-per-visual-studio-2010/\" title=\"Programmare in Python con Visual Studio 2010\"\u003elancio ufficiale\u003c/a\u003e dello scorso marzo e la successiva \u003ca href=\"http://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/\" title=\"Python Tools per Visual Studio 2010 Beta 2\"\u003eBeta 2\u003c/a\u003e di maggio, ieri è stata presentata la \u003cstrong\u003eRelease Candidate 1\u003c/strong\u003e.\u003c/p\u003e","title":"Python Tools per Visual Studio 2010 arriva la RC1"},{"content":"Il progetto Google Web Fonts v2 offre a webmaster, designer e sviluppatori un accesso facile e gratuito a una ricca selezione di fonti tipografiche di qualità, ottimizzate per il web. Google sostiene che non ci dovrebbero essere barriere finanziare per la costruzione di siti web, e che il progetto Google Web Font contribuisce alla creazione di un web più bello, leggibile, accessibile e aperto. Secondo Google nei prossimi anni la gran parte di siti web adotteranno i web fonts.\nLa versione 2 di Google Web Fonts è appena stata rilasciata ed è ricca di novità. La nuova interfaccia consente di consultare rapidamente la directory di quasi 200 fonti tipografiche, inserendo quelle prescelte in una collezione personale. Gli esempi possono essere visualizzati come parole, frasi oppure interi paragrafi di testo. E’ anche possibile vedere tutti assieme i font della propria collezione, in una apposita pagina di prova.\nI web font non sono una tecnologia nuova, sono stati introdotti dalle specifiche CSS3 (2002) e sono già molto diffusi. Quelli di Google sono forniti dinamicamente dalla Google Web Fonts API, una applicazione ad alte prestazioni ospitata sui server di Mountain View. Il lavoro che dobbiamo fare noi è semplicemente quello di incollare una riga di codice nella nostra pagina HTML, dopodiché potremo usare il web font come un qualunque font standard. Questa soluzione garantisce indipendenza dalla piattaforma software del client e libertà di scelta, al costo di un minimo rischio di incompatibilità verso browser molto datati (qui trovate una lista aggiornata).\nGoogle tiene molto alla velocità della rete, e dei siti web in particolare, tanto da farne uno dei fattori di ranking per il suo motore di ricerca. Non stupisce quindi che venga fornito anche un indicatore di prestazioni che, in base al tipo e alle caratteristiche dei font selezionati, stima il tempo di caricamento del font nella nostra pagina web. In generale l’accesso alla API (e al sottostante CDN) è rapidissimo e non dovrebbe porre alcun tipo di problema.\nIl mio interesse in Google Web Font v2 è nato in seguito alla visione della anteprima presentata alla Google I/O 2011. Se volete potete seguirla per intero anche voi:\n","permalink":"https://nicolaiarocci.com/google-web-fonts-v2-i-font-gratuiti-e-ottimizzati-per-il-web/","summary":"\u003cp\u003eIl progetto \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eGoogle Web Fonts v2\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e offre a webmaster, designer e sviluppatori un accesso facile e gratuito a una ricca selezione di fonti tipografiche di qualità, ottimizzate per il web. Google sostiene che non ci dovrebbero essere barriere finanziare per la costruzione di siti web, e che il progetto Google Web Font contribuisce alla creazione di un web più bello, leggibile, accessibile e aperto. Secondo Google nei prossimi anni la gran parte di siti web adotteranno i web fonts.\u003c/p\u003e","title":"Google Web Fonts 2 i font gratuiti e ottimizzati per il Web"},{"content":"\nTutto comincia con una normale riunione tra programmatori, magari dedicata all’analisi di un nuovo intrigante progetto software. I toni inizialmente tranquilli all’improvviso si alzano e quello che doveva essere un incontro di routine si trasforma rapidamente in qualcos’altro. La discussione, ora vivace e concitata, diventa un vero e proprio alterco. Sedie penne e matite vengono spostate freneticamente, le voci si sovrappongono l’un l’altra e man mano che il tempo passa il meeting assomiglia sempre più a un furioso scontro tra galli combattenti. Se avete una certa carriera alle spalle ci siete già passati; se non l’avete state tranquilli, prima o poi ci passerete anche voi.\nL’Ego del Programmatore Quasi tutti i programmatori con cui ho avuto a che fare, incluso il sottoscritto, condividono almeno un tratto caratteriale: un ego ingombrante. Mike Bernat ci ricorda che diventare bravi programmatori è un processo lungo e impegnativo, che ci induce ad affinare le nostre capacità analitiche sviluppando mentalità e attitudine al perfezionismo. Alla fine del percorso ci troviamo in dote una forte fiducia nelle nostre capacità professionali, una fiducia che in alcune occasioni rischia di scatenare quello che io chiamo l’ego del programmatore, ovvero il nostro possente orgoglio.\nNel suo libro The Psychology of Computer Programming, Gerald M. Weinberg propone un’idea tanto semplice quanto difficile da mettere in pratica:\nL’idea è che i programmatori devono combattere la loro naturale tendenza a considerare i loro programmi come parte di se stessi, un atteggiamento che comporta il rifiuto preconcetto di ogni tipo di critica. Piuttosto, dovrebbero fare del loro meglio per considerare le loro creazioni come oggetti indipendenti da se stessi, distaccati dal proprio io, e ascoltare le critiche in modo spassionato, giudicandole nel merito. E’ una vera e propria disciplina spirituale della quale nessuno di noi [programmatori] è dotato, ma vale la pena provarci.\nPersonalmente ricordo diverse occasioni in cui mio malgrado mi sono lasciato trascinare in “combattimenti tra galli”. A volte ne sono uscito vincente, altre volte ho dovuto ripiegare (non senza aver perduto qualche piuma). Col tempo credo e spero di essere migliorato, i consigli di Weinberg ho cercato e cerco tutt’ora di seguirli, ma certo la strada è lunga e tortuosa. E’ pur vero che in alcune occasioni l’aver ceduto, ritirando le mie proposte in favore di quelle altrui, si è rivelato un grave errore. Le conseguenze di certe scelte fatte in base a chi fosse il gallo più forte del pollaio, le pago ancora oggi. Ho imparato a mie spese che non sempre l’orgoglio del programmatore è un tratto negativo, anzi!\nSe la vostra idea è quella giusta sostenetela a spada tratta fino in fondo, ma accertatevi che non sia esclusivamente il vostro orgoglio a condurre le trattative! In queste occasioni è molto importante concedere diritto di parola e giusta attenzione ai nostri interlocutori, soffermandoci a meditare sulle idee e le critiche ricevute prima di respingerle a priori. Se le riteniamo fondate facciamone tesoro apportando le dovute correzioni alla nostra stessa idea. Ciò che più conta, in realtà, è la qualità finale del progetto. Se alla fine si rivelerà un successo, il nostro orgoglio ne sarà ampiamente ripagato.\nPS: a proposito di Weinberg, il suo libro è del 1971 ma è ancora attualissimo e ve lo consiglio caldamente. E’ disponibile in formato eBook su Amazon e altrove a prezzi modici. Non lasciatevi ingannare dal fatto che nel testo si parli di linguaggi ormai superati. In quarant’anni la gente non è cambiata affatto.\n","permalink":"https://nicolaiarocci.com/dei-vizi-del-programmatore-3-lorgoglio/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003cp\u003eTutto comincia con una normale riunione tra programmatori, magari dedicata all’analisi di un nuovo intrigante progetto software. I toni inizialmente tranquilli all’improvviso si alzano e quello che doveva essere un incontro di routine si trasforma rapidamente in qualcos’altro. La discussione, ora vivace e concitata, diventa un vero e proprio alterco. Sedie penne e matite vengono spostate freneticamente, le voci si sovrappongono l’un l’altra e man mano che il tempo passa il meeting assomiglia sempre più a un furioso scontro tra galli combattenti. Se avete una certa carriera alle spalle ci siete già passati; se non l’avete state tranquilli, prima o poi ci passerete anche voi.\u003c/p\u003e","title":"Dei vizi del programmatore #3: Orgoglio"},{"content":"Man mano che partecipo ai vari eventi in giro per l’Italia mi capita sempre più spesso di ritrovarmi a essere, tra i partecipanti, uno dei più anziani. L’altro giorno al Cowo on the Beach distanziavo tutti di almeno una decade. Mi sono detto che i veterani non amano frequentare gli eventi pubblici, non tanto quanto li apprezzavano da giovani, e mi sono messo l’anima in pace.\nFino a stamattina, quando un bell’articolo di Peter Knego mi ha svelato la scomoda verità (che inconsciamente rifiutavo di considerare). I programmatori oltre i trent’anni, per non dire dei quaranta, sono merce rara.\nPartendo dai dati pubblici messi a disposizione da StackOverflow e relativi a un campione di ben 37.400 programmatori, Peter ha indagato sul rapporto tra età, reputazione e quantità di programmatori ancora attivi. Ne è uscita una serie di grafici davvero interessante.\nQuantità di Programmatori per fasce di Età La distribuzione per età (in blu nel grafico) è stata una bella sorpresa. E’ risaputo che col passare degli anni gran parte dei programmatori tende a cambiare carriera, di solito progredendo verso ruoli manageriali. E’ l’entità della riduzione che, almeno dal mio punto di vista, è stupefacente. Il picco si raggiunge a soli 27 anni, dopo di ché il numero dei programmatori si dimezza ogni 6 o 7 anni.\nEtà e Reputazione dei Programmatori Osservate come nel grafico precedente la reputazione dei programmatori su Stack Overflow (in rosso) tenda ad aumentare con l’età. Si tratta quasi di una progressione lineare. L’andamento è meglio comprensibile se diamo una occhiata a quest’altro grafico:\nI programmatori veterani pongono meno domande su Stack Overflow, ma rispondono molto più frequentemente dei loro colleghi più giovani. Un quarantenne risponde mediamente il doppio delle volte di un collega ventenne.\nI veterani sono davvero più abili dei giovani? A questo punto Peter si è posto una domanda intrigante: la qualità delle risposte migliora con l’età? I veterani forniscono le risposte migliori? Il meccanismo di premiazione delle domande e delle risposte utilizzato da StackOverflow ha permesso a Peter di elaborare l’andamento dei voti positivi ottenuti, suddivisi per età :\nIl grafico dimostra che la qualità media delle risposte non migliora significativamente in rapporto all’età dei programmatori. A quanto pare i veterani migliorano la loro reputazione soprattutto fornendo più risposte, piuttosto che migliorandone la qualità.\nRiassumendo:\nIl numero di programmatori cala significativamente con l’età. L’apice è attorno ai 27 anni, poi si verifica un crollo costante. I programmatori quarantenni rispondono al doppio e pongono metà delle domande dei colleghi ventenni. I veterani insegnano e i giovani imparano, come dovrebbe essere. La qualità delle risposte non migliora significativamente col passare degli anni. I veterani migliorano la loro reputazione soprattutto perché sono molto più attivi dei loro giovani colleghi. Ci sarebbe molto da dire a proposito di questi dati. Per esempio si potrebbe ipotizzare che i veterani abbiano semplicemente più tempo a loro disposizione per rispondere ai quesiti posti dai colleghi, ma quel che balza all’occhio qui è senz’altro il calo del numero di programmatori man mano che l’età avanza.\nPer quanto mi riguarda, a 41 anni suonati, mi trovo già al di là del guado. La cosa è ancor più imbarazzante visto e considerato che non credo né mi aspetto di cambiare mestiere nei prossimi anni. E voi, miei cari lettori, a che punto del percorso vi trovate ora? Io ora spengo tutto e me ne vado in piscina a fare il ragazzino. Tiè.\n","permalink":"https://nicolaiarocci.com/noi-programmatori-miglioriamo-con-leta-forse/","summary":"\u003cp\u003eMan mano che partecipo ai vari eventi in giro per l’Italia mi capita sempre più spesso di ritrovarmi a essere, tra i partecipanti, uno dei più anziani. L’altro giorno al \u003c!-- raw HTML omitted --\u003eCowo on the Beach\u003c!-- raw HTML omitted --\u003e distanziavo tutti di almeno una decade. Mi sono detto che i veterani non amano frequentare gli eventi pubblici, non tanto quanto li apprezzavano da giovani, e mi sono messo l’anima in pace.\u003c/p\u003e\n\u003cp\u003eFino a stamattina, quando un bell’articolo di \u003c!-- raw HTML omitted --\u003ePeter Knego\u003c!-- raw HTML omitted --\u003e mi ha svelato la scomoda verità (che inconsciamente rifiutavo di considerare). \u003cstrong\u003eI programmatori oltre i trent’anni, per non dire dei quaranta, sono merce rara\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003ePartendo dai dati pubblici messi a disposizione da \u003c!-- raw HTML omitted --\u003eStackOverflow\u003c!-- raw HTML omitted --\u003e e relativi a un campione di ben 37.400 programmatori, Peter ha indagato sul rapporto tra età, reputazione e quantità di programmatori ancora attivi. Ne è uscita una serie di grafici davvero interessante.\u003c/p\u003e","title":"Noi programmatori miglioriamo con l’età (forse)"},{"content":"Faccio subito mie le riflessioni di Gianluca Diegoli sul primo esperimento di co-working in spiaggia, a cui ho partecipato pure io:\nMentre tornavo in auto, riflettevo di quanta tristezza in questi anni ho visto transitare in molti uffici in cui aleggia quel senso di prigione, in cui le persone si sentono agli arresti domiciliari, mangiano solo con colleghi che odiano, con cui parlano di un lavoro o di un capo che altrettanto odiano, in cui la produttività e la creatività, apparentemente garantite dallo svolgersi in ambiente controllato e da orari stringenti, in realtà siano minime. Anzi, proprio quel sistema che in passato era stato creato per controllare il lavoratore, come se fosse un animale d’allevamento, ora è la causa dell’inefficienza e del disinteresse.\nNella intervista semi-seria che trovate qui sotto (mescolata a quelle degli amici) dichiaro che consiglierei senz’altro l’esperienza ai miei dipendenti. Confermo. I miei splendidi ragazzi lavorerebbero felicemente anche (forse soprattutto) sul cucuzzolo di una montagna, ma sulla efficacia del co-working ad ampio spettro qualche perplessità l’avrei.\nCo-Working per tutti? Le persone che odiano il lavoro e/o i loro colleghi, quelle a cui allude Gianluca nel corso del suo ragionamento, come reagirebbero immerse in un ambiente più ludico e ricreativo di quello abituale? Le tensioni si smorzerebbero e la produttività ne guadagnerebbe oppure, al contrario, approfitterebbero della situazione per rilassarsi fin troppo, cedendo alle inevitabili distrazioni? In fin dei conti l’esperimento Cowo on the Beach ha avuto successo anche e soprattutto, credo, perché i partecipanti sono tutte persone fortemente motivate, innamorate del proprio lavoro (e credetemi, a parte le battute ognuno di noi ha effettivamente lavorato nel corso della giornata!).\nOgni ambiente di lavoro è unico e distino, quindi non penso che esista una risposta assoluta, ma questa è una domanda che ogni datore di lavoro si porrebbe senz’altro. L’argomento mi sta particolarmente a cuore perché proprio in queste settimane stiamo valutando la possibilità di sperimentare in azienda metodi di lavoro alternativi a quelli tradizionali, come per esempio il telelavoro.\nSulla efficacia dei piccoli eventi Nel suo articolo Gianluca accenna al fatto che il tempo incerto ha scoraggiato alcuni di quelli che si erano iscritti all’evento. E’ un peccato in effetti, anche perché la giornata tutto sommato è stata bella (abbiamo fatto anche il bagno!). A tavola mi dicevo però che non tutto il male vien per nuocere. Il gruppo ristretto ha consentito a tutti partecipare attivamente alla stessa discussione. Una tavolata di molte persone avrebbe portato alla creazione dei mini-conciliaboli tipici degli eventi di più ampio respiro, con conseguente frammentazione della discussione. E’ più facile che si creino intimità e senso di unità quando il gruppo è ridotto.\nCon questo non voglio dire che sono contento delle assenze: si partecipa a un evento proprio per conoscere nuove persone interessanti. Senz’altro però la formula “cowobeach” è interessante anche perché è diversa nei numeri. Non si tratta di uno dei soliti eventi che puntano alla partecipazione di massa.\nNota a margine per i geek che mi leggono\nL’81% dei notebook impiegati al #cowobeach erano dei Mac Book. Io probabilmente rappresentavo il caso più singolare: in realtà scrivevo ed eseguivo codice sulla mia postazione Windows in ufficio, collegato dalla spiaggia via TeamViewer. Fa impressione constatare come in pochi anni l’adozione dei Mac da parte dei professionisti del settore sia aumentata.\n","permalink":"https://nicolaiarocci.com/qualche-riflessione-sullesperienza-del-co-working/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eFaccio subito mie le riflessioni di \u003c!-- raw HTML omitted --\u003eGianluca Diegoli\u003c!-- raw HTML omitted --\u003e sul primo esperimento di co-working in spiaggia, a cui ho partecipato pure io:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMentre tornavo in auto, riflettevo di quanta tristezza in questi anni ho visto transitare in molti uffici in cui aleggia quel senso di prigione, in cui le persone si sentono agli arresti domiciliari, mangiano solo con colleghi che odiano, con cui parlano di un lavoro o di un capo che altrettanto odiano, in cui la produttività e la creatività, apparentemente garantite dallo svolgersi in ambiente controllato e da orari stringenti, in realtà siano minime. Anzi, proprio quel sistema che in passato era stato creato per controllare il lavoratore, come se fosse un animale d’allevamento, ora è la causa dell’inefficienza e del disinteresse.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eNella intervista semi-seria che trovate qui sotto (mescolata a quelle degli amici) dichiaro che consiglierei senz’altro l’esperienza ai miei dipendenti. Confermo. I miei splendidi ragazzi lavorerebbero felicemente anche (forse soprattutto) sul cucuzzolo di una montagna, ma sulla efficacia del co-working ad ampio spettro qualche perplessità l’avrei.\u003c/p\u003e","title":"Qualche riflessione sull’esperienza del Co-Working"},{"content":"Se siete in Romagna e dintorni forse potete ancora farci un pensierino: domani venite a lavorare in spiaggia! Cowo on the beach è una bella iniziativa organizzata da Alessandra Farabegoli su suggerimento di Gianluca Diegoli. Di cosa si tratta? Semplice:\nGiornata di temporary coworking on the beach: ci troviamo la mattina al Boca Barranca, il wifi c’è ed è gratuito, la mattina si lavora, poi bagno in mare, pranzo, di nuovo lavoro e.. aperitivo! Un anticipo del RomagnaCamp che si terrà, sempre al Boca Barranca, dal 9 all’11 settembre\nAlessandra ha appena pubblicato un aggiornamento con tanto di previsioni del tempo (non male dai) e suo programma di lavoro. Il mio è semplice: scrivere (poco) codice all’aria aperta e fare conoscenza con tanta bella gente.\nSe decidete di venire, anche all’ultimo momento, iscrivetevi comunque! A domani!\n","permalink":"https://nicolaiarocci.com/domani-si-lavora-in-spiaggia-vieni-al-cowobeach/","summary":"\u003cp\u003eSe siete in Romagna e dintorni forse potete ancora farci un pensierino: domani venite a lavorare in spiaggia! \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eCowo on the beach\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e è una bella iniziativa organizzata da \u003c!-- raw HTML omitted --\u003eAlessandra Farabegoli\u003c!-- raw HTML omitted --\u003e su suggerimento di \u003c!-- raw HTML omitted --\u003eGianluca Diegoli\u003c!-- raw HTML omitted --\u003e. Di cosa si tratta? Semplice:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGiornata di temporary coworking on the beach: ci troviamo la mattina al Boca Barranca, il wifi c’è ed è gratuito, la mattina si lavora, poi bagno in mare, pranzo, di nuovo lavoro e.. aperitivo! Un anticipo del RomagnaCamp che si terrà, sempre al Boca Barranca, dal 9 all’11 settembre\u003c/p\u003e","title":"Domani si lavora in spiaggia! Vieni al #cowobeach"},{"content":"Con un filmato di 10 minuti Microsoft ha presentato in anteprima il nuovo Windows 8. A molti non è sfuggita l’enfasi su HTML5 e JavaScript, annunciate come le tecnologie con le quali costruire le nuove accattivanti applicazioni per Windows 8. Il fatto che non si faccia cenno a Silverlight, WPF o .NET sta causando un bel po’ di preoccupazione.\nYou all saw a very small technology demo of Windows 8, and a brief press release. We’re all being quiet right now because we can’t comment on this. It’s not because we don’t care, aren’t listening, have given up, or are agreeing or disagreeing with you on something. All I can say for now is to please wait until September. If we say more before then, that will be great, but there are no promises (and I’m not aware of any plans) to say more right now. I’m very sorry that there’s nothing else to share at the moment. I know that answer is terrible, but it’s all that we can say right now. Seriously.\nQuindi bocche cucite, almeno fino a Settembre. In seguito Brown interviene ancora, tirato per la giacchetta dai molti che hanno interpretato le sue parole nelle maniere più disparate:\nThis whole thing has blown way out of proportion. Base your information on our primary sources (like our press release), not on third party speculation. That’s not to minimize how everyone feels, but keep in mind that Windows 8 itself is still a ways off from retail, and even much further away from internal IT adoption. The 8 weeks until //build/ is a pretty small amount of time to wait in comparison.\nTake some vacation time this summer, and look forward to the //build/ conference. Stop speculating based on just a small demo of some very cool new technology. Tell your management to do the same: if they’re basing your project work for the next X years on the results of a quick demo for an unreleased operating system, then they are doing you and your company a real disservice.\nWindows 8 è ben lontano dall’essere pronto, e quel che si è visto nel filmato è solo la prima di una serie di anteprime. Inutile fare speculazioni basate su una demo di pochi minuti. Questa estate godetevi le vacanza, ne riparleremo al vostro ritorno. Dite ai vostri manager di fare lo stesso. Se stanno pianificando il lavoro dei prossimi anni basandosi solo su una breve anteprima di un sistema operativo non ancora pronto, allora stanno facendo un grave errore.\nNon è mica la prima volta Niente da obiettare da parte mia. Mi limito a rilevare che non è la prima volta che il futuro delle piattaforme Microsoft viene messo in discussione anche dallo stesso personale Microsoft. Leggendaria la gaffe di Bob Muglia, Vice President for Server and Tools Businesses (mica cotica) riportata fedelmente da Mary Jo Foley:\n“Silverlight is our development platform for Windows Phone,” he said. Silverlight also has some “sweet spots” in media and line-of-business applications, he said.\nBut when it comes to touting Silverlight as Microsoft’s vehicle for delivering a cross-platform runtime, “our strategy has shifted,” Muglia told me.\nSilverlight will continue to be a cross-platform solution, working on a variety of operating system/browser platforms, going forward, he said. “But HTML is the only true cross platform solution for everything, including (Apple’s) iOS platform,” Muglia said.\nAll’epoca fu necessario un comunicato congiunto di Steve Ballmer (CEO Microsoft) e del penitente Bob Muglia per acquietare la tempesta scatenata da queste parole. Sarà un caso che recentemente Muglia abbia annunciato il trasloco ad altri lidi?\nIl fatto è che le tante aziende che hanno investito molto e – ahimé – esclusivamente sulle piattaforme Microsoft ora guardano con terrore a uno scenario, per quanto improbabile, che non veda Silverlight, WPF e .NET in cima all’agenda della casa madre.\nIl futuro del Web è Silverlight? Personalmente non ho dubbi sul fatto che il futuro delle piattaforme tecnologiche Microsoft sarà garantito. La domanda cruciale che ogni programmatore dovrebbe porsi è un’altra. Il futuro del web è Silverlight? In soldoni, su cosa vale la pena investire tempo, risorse e denaro? Temo la risposta non sia quella che i programmatori Silverlight vorrebbero sentire.\n","permalink":"https://nicolaiarocci.com/windows-8-e-i-dubbi-sul-destino-di-silverlight/","summary":"\u003cp\u003eCon un \u003c!-- raw HTML omitted --\u003efilmato di 10 minuti\u003c!-- raw HTML omitted --\u003e Microsoft ha presentato in anteprima il nuovo Windows 8. A molti non è sfuggita l’enfasi su HTML5 e JavaScript, annunciate come le tecnologie con le quali costruire le nuove accattivanti applicazioni per Windows 8. Il fatto che non si faccia cenno a Silverlight, WPF o .NET sta causando un bel po’ di preoccupazione.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Windows 8 e i dubbi sul destino di Silverlight"},{"content":"E’ di pochi giorni fa la notizia che alcuni servizi API gratuiti forniti da Google verranno chiusi. Tra questi spicca Translate API, la più apprezzata libreria gratuita per la traduzione automatica sul web. Basta una occhiata ai commenti per rendersi conto dello sconcerto generato dall’annuncio, per altro del tutto inatteso. Molti si dicono disposti a pagare pur di non rinunciare alla API, ma non è questa l’idea di Google che in alternativa propone Google Translate Element, widget gratuito che certo non è una soluzione accettabile per applicazioni che attualmente integrano la API in maniera trasparente. Immagino che proprio qui stia il nocciolo della questione: una API non è visibile né apprezzabile dall’esterno, mentre un widget promuove il brand Google.\nMigliaia di aziende, enti pubblici e organizzazioni non governative internazionali che oggi usano la API dovranno trovare soluzioni alternative, probabilmente a pagamento. Almeno gli è stato concesso un po’ di tempo: Google garantisce un periodo di tre anni prima della sospensione del servizio.\nQuesta notizia induce ancora una volta alcune riflessioni circa l’affidabilità del Cloud Computing, modello di sviluppo verso il quale, volenti o nolenti, tutti noi siamo diretti.\nStand-Alone Vs Cloud Computing\nLe vecchie applicazioni stand alone funzionano sempre e comunque. Prima o poi il programmatore originale sparisce dalla circolazione; del codice sorgente (se disponibile) nessuno capisce più nulla, ma l’applicazione continua a girare. E se una delle librerie usate dall’applicazione (le vecchie .dll, per capirci) viene improvvisamente abbandonata dal produttore? Non ci sono problemi, l’installazione gira come prima.\nNel dorato mondo PaaS le applicazioni smettono di funzionare non appena una singola API remota diventa inaccessibile. Non mi sembra una differenza da poco.\nDisservizi e sorprese Si potrebbe obiettare che appoggiarsi a una API gratuita per sviluppare un prodotto strategico non è una mossa intelligente e che comunque casi di disservizi come questo sono assai rari. In Aprile alcuni server Amazon AWS (la piattaforma cloud più usata al mondo) sono andati in corto circuito lasciando improvvisamente a piedi centinaia di fornitori di servizi e diversi milioni di loro utenti. Il disservizio, durato oltre ventiquattro ore, è avvenuto nonostante AWS sia un servizio a pagamento di altissimo livello che garantisce un livello di Service Level Agreement (SLA) superiore al 99%.\nUn caso diverso ma dalle stesse conseguenze si è verificato proprio in casa Google poche settimane fa, quando Google App Engine è diventato a pagamento (almeno per alcuni livelli di utilizzo prima gratuiti), mettendo di fatto fuori mercato molti piccoli servizi gratuiti che avevano scelto la piattaforma cloud del gigante di Mountain View.\nLe contromisure necessarie Non per questo penso che il cloud computing vada evitato, ne sono anzi un sostenitore convinto, ma è importante per noi tutti comprendere a fondo i limiti e i rischi che questo nuovo paradigma porta con sé.\nUn paio di anni fa ho scritto un programma di backup remoto che si appoggia a Simple Storage Service (S3), uno dei servizi della piattaforma Amazon AWS. Il programma ha continuato a lavorare impunemente mentre il disastro si abbatteva sui server Amazon della East Coast perché, fin dall’inizio, era progettato per far fronte a evenienze come questa. Usa server multipli ridondanti dislocati su più aree geografiche, in modo che il crash di una singola server farm non lo mandi in tilt. E’ bene aspettarsi il peggio dai servizi cloud per essere pronti a gestire la crisi se (quando) verrà.\nPer quanto riguarda il modello di business, è necessario adottarne uno che garantisca margini sufficienti a compensare improvvisi aumenti delle tariffe, anche solo per il periodo necessario alla eventuale dislocazione. La tendenza generale del mercato è comunque rassicurante: in questi anni costi dei servizi cloud sono calati costantemente.\nLe responsabilità stanno da entrambe le parti E se domani mi si annunciasse che S3 è improvvisamente deprecato? Fortunatamente per me e per le migliaia di altri il servizio non è gratuito e assicura ad Amazon utili stellari, ma non è questo il punto. Il punto è che in ogni momento potrebbe succedere.\nI fornitori di servizi cloud hanno una grande responsabilità: garantire la continuità del loro servizio anche e soprattutto nel lungo periodo. Speriamo che ne siano coscienti. Noi programmatori e analisti dobbiamo tenere conto dei rischi che corriamo quando scegliamo di lavorare su piattaforme cloud, progettando i nostri prodotti di conseguenza.\nAggiornamento. Venerdì 3 giugno Google ha ritoccato l’annuncio ufficiale. La chiusura è annullata e la Translate API verrà messa a pagamento.\n","permalink":"https://nicolaiarocci.com/il-cloud-computing-e-davvero-affidabile/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eE’ di pochi giorni fa la \u003c!-- raw HTML omitted --\u003enotizia\u003c!-- raw HTML omitted --\u003e che alcuni servizi API gratuiti forniti da Google verranno chiusi. Tra questi spicca \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eTranslate API\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, la più apprezzata libreria gratuita per la traduzione automatica sul web. Basta una occhiata ai \u003c!-- raw HTML omitted --\u003ecommenti \u003c!-- raw HTML omitted --\u003eper rendersi conto dello sconcerto generato dall’annuncio, per altro del tutto inatteso. Molti si dicono disposti a pagare pur di non rinunciare alla API, ma non è  questa l’idea di Google che in alternativa propone \u003c!-- raw HTML omitted --\u003eGoogle Translate Element\u003c!-- raw HTML omitted --\u003e, widget gratuito che certo non è una soluzione accettabile per applicazioni che attualmente integrano la API in maniera trasparente. Immagino che proprio qui stia il nocciolo della questione: una API non è visibile né apprezzabile dall’esterno, mentre un widget promuove il brand Google.\u003c/p\u003e\n\u003cp\u003eMigliaia di aziende, enti pubblici e organizzazioni non governative internazionali che oggi usano la API dovranno trovare soluzioni alternative, probabilmente a pagamento. Almeno gli è stato concesso un po’ di tempo: Google garantisce un periodo di tre anni prima della sospensione del servizio.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eQuesta notizia induce ancora una volta alcune riflessioni circa l’affidabilità del \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eCloud Computing\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, modello di sviluppo verso il quale, volenti o nolenti, tutti noi siamo diretti.\u003c/p\u003e","title":"Il Cloud Computing è davvero affidabile?"},{"content":"“Per risolvere il problema mi bastano un paio di minuti” La tentazione della scorciatoia. E’ difficile resisterle, prima o poi ci caschiamo tutti. In alcuni casi isolati vale la pena scegliere la strada più veloce, ma non è certo questa la via maestra. E’ pericolosa e in genere causa più problemi di quelli che risolve. Una scorciatoia può farti risparmiare qualche ora ma i danni causati possono costarti mesi di lavoro.\nLa fretta, cattiva consigliera, è addirittura diabolica quando applicata alla pratica che tutti noi programmatori odiamo di più: la soluzione di bug. Nella mia carriera ricordo distintamente le circostanze in cui, risolvendo frettolosamente bug, ho generato mostri.\nNon fidatevi di voi stessi quando svolgete attività delicate o “risolvete” bug nel vostro codice o in quello degli altri. Assicuratevi che qualcuno verifichi quel che state facendo o, se non è possibile, fate in modo di testare e ritestare (possibilmente con l’aiuto di altri) quel che state combinando. Gli unit test sono i vostri migliori alleati. Se proprio dovete prendere una scorciatoia fate in modo che il vostro capo la avvalli (copritevi le spalle).\nNota a margine Se avvertite un leggero formicolio alle punte delle dita mentre digitate codice fermatevi e meditate su quel che state facendo. Il vostro sesto senso di programmatore vi sta dicendo che c’è qualcosa che non va. E’ una capacità che si acquisisce col tempo e soprattutto con l’esperienza. Se non vi è ancora capitato fidatevi, prima o poi la svilupperete anche voi: è un potente alleato di ogni programmatore. Non scherzo! 😉\n","permalink":"https://nicolaiarocci.com/dei-vizi-dei-programmatori-2-la-fretta/","summary":"\u003ch2 id=\"8220per-risolvere-il-problema-mi-bastano-un-paio-di-minuti8221\"\u003e“Per risolvere il problema mi bastano un paio di minuti”\u003c/h2\u003e\n\u003cp\u003eLa tentazione della scorciatoia. E’ difficile resisterle, prima o poi ci caschiamo tutti. In alcuni casi isolati vale la pena scegliere la strada più veloce, ma non è certo questa la via maestra. E’ pericolosa e in genere causa più problemi di quelli che risolve. Una scorciatoia può farti risparmiare qualche ora ma i danni causati possono costarti mesi di lavoro.\u003c/p\u003e","title":"Dei vizi del programmatore #2: La Fretta"},{"content":"Il mio codice è perfetto. Quello degli altri è spazzatura La superbia è un atteggiamento molto frequente tra noi programmatori. Io stesso sono – ahimé – un superbo seriale. Non importa quanto ci impegniamo. Ci saranno sempre colleghi che giudicheranno male il nostro codice, che penseranno di poter far meglio.\nNon criminalizzare il codice degli altri. Prima o poi sarà il tuo a finire sotto esame. La critica oggettiva va bene, i consigli e le osservazioni professionali pure, ma non esprimere giudizi. Sii umile. C’è sempre da imparare dal lavoro dei colleghi.\nL’uom superbo si pone sopra gli altri, e crede che gli si debba ogni cosa; gli altri, per lo contrario, lo mettono nell’ultimo grado, né gli concedono nulla.\nConfucio\n","permalink":"https://nicolaiarocci.com/dei-vizi-del-programmatore-1-la-superbia/","summary":"\u003ch2 id=\"il-mio-codice-è-perfetto-quello-degli-altri-è-spazzatura\"\u003eIl mio codice è perfetto. Quello degli altri è spazzatura\u003c/h2\u003e\n\u003cp\u003eLa superbia è un atteggiamento molto frequente tra noi programmatori. Io stesso sono – ahimé – un superbo seriale. Non importa quanto ci impegniamo. Ci saranno sempre colleghi che giudicheranno male il nostro codice, che penseranno di poter far meglio.\u003c/p\u003e","title":"Dei vizi del programmatore #1: La Superbia"},{"content":"Sul blog aziendale di Expensify il CEO David Barrett ha raccontato perché la sua azienda non assume programmatori Microsoft .NET Framework. In poche ore il suo articolo ha fatto il giro del mondo scatenando un gran putiferio. Gli sviluppatori .NET si sono lanciati in una difesa accorata della piattaforma Microsoft mentre molti commentatori e blogger hanno sposato le tesi di Barrett. Gli oltre 500 commenti danno un’idea ben precisa del fervore suscitato dall’articolo. Non intendo dilungarmi sui contenuti, mi interessa piuttosto approfondire una questione sollevata indirettamente dal pezzo di Barrett.\nPerché così poche Startup scelgono .NET Framework? Guardando all’intero ecosistema delle Startup internet, è facile riscontrare che ben poche adottano il .NET Framework. Ci sono eccezioni importanti e significative, come per esempio Stack Overflow, ma le tecnologie dominanti sono altre: Ruby on Rails, PHP e Python su tutte. Ian Muir, Senior Developer di Piehead, in un suo interessante articolo tenta di individuare le ragioni che fanno di .NET Framework una scelta poco apprezzata dal vivace e dinamico mondo delle Startup.\nIl costo della piattaforma Microsoft Se per le grandi aziende le voci di spesa davvero rilevanti sono stipendi, hardware, infrastrutture, banda e dati, per le nostre Startup il problema è innanzi tutto partire. Ruby on Rails, PHP, Python e i loro fratelli sono soluzioni FOSS (gratuite e open source) che permettono di lavorare a costo zero mentre l’ambiente .NET è al contrario un closed-source a pagamento.\nMuir ricorda che già da qualche anno Microsoft ha lanciato il programma BizSpark che tra le altre cose elimina gran parte dei costi di adozione del .NET Framework. La differenza di spesa insomma non sarebbe così significativa. Peccato che BizSpark sia pressochè sconosciuto.\nCi sono soluzioni alternative. Showcase Lane per esempio è sviluppato interamente in ASP.NET MVC, ma gira sotto Mono. Se vi interessa questo approccio qui potete leggere tutti i dettagli in proposito.\nDifficoltà nella applicazione della Metodologia Agile Inutile negarlo, questi sono gli anni della metodologia agile. I giovani imprenditori rilasciano i loro prodotti il più velocemente possibile, spesso in versioni beta appena funzionanti, che implementano a malapena le funzionalità di base. Ruby, Python, PHP e soci dispongono di strumenti mirati per lo sviluppo e il deploy rapido delle applicazioni, qualcosa che in parte manca al mondo .NET. Nel suo articolo Muir sostiene che in realtà non c’è una gran differenza nei tempi di sviluppo.\nConcordo con Muir anche se dimentica un dettaglio importante. Molti startupper sono programmatori alle prime armi, spesso ricchi di idee da lanciare rapidamente, ma poveri di capacità tecniche. E’ in questo scenario che linguaggi e tecnologie come Python e Ruby brillano di luce propria rispetto a un ambiente monolitico e piuttosto sofisticato come il .NET Framework. La curva di apprendimento vincente è quella dei linguaggi open source.\n.NET è roba da Enterprise (e comunque Microsoft va boicottata) Muir sostiene che le startup non usano .NET per motivi culturali più che tecnologici. Voce di popolo vorrebbe che Microsoft sia apprezzata dalle enterprise mentre PHP e Ruby sarebbero l’ideale per le piccole (e sfigate) startup. Questa percezione diffusa influenzerebbe i giovani imprenditori inducendoli ad adottare una piattaforma senza chiedersi quale sia lo strumento migliore per soddisfare le loro necessità.\nLe cose stanno anche peggio di così. Specialmente nel mondo giovanile Microsoft è considerata il colosso pachidermico e monopolistico da boicottare in ogni modo. L’immagine non è il punto di forza di Microsoft.\nStartup e Enterprise, mondi diversi Gran parte delle startup incoraggiano i loro programmatori a imparare un ampio spettro di tecnologie piuttosto che specializzarsi su argomenti (linguaggi) singoli. Per le startup è la scelta giusta poiché dispongono di pochi programmatori e devono rimanere agili e pronte al cambiamento. Le grandi aziende al contrario hanno una cultura ingegneristica e sono organizzate in grandi team, nei quali ogni soggetto tende a essere molto specializzato. Sono differenze importanti che rendono difficile per un programmatore il passaggio da una realtà all’altra.\nAmpliare la propria prospettiva Secondo Muir quelli elencati sopra sono i fattori che più di altri condizionano la scelta della piattaforma da adottare. All’inizio della loro carriera i programmatori scelgono un percorso che in seguito diventa difficile cambiare. Il datore di lavoro dovrebbe impegnarsi in prima persona affinché i programmatori mantengano un attegiamento agnostico rispetto alle piattaforme tecnologiche, e siano sempre pronti ad abbracciare nuovi paradigmi e tecnologie.\nSu questo punto Muir ha ragione da vendere. In tanti anni di lavoro ho provato sulla mia pelle quanto reale sia il rischio confinarsi nel proprio piccolo mondo. Impegnati nella soluzione dei problemi quotidiani scordiamo che è utile fermarsi ogni tanto e guardarsi intorno. Aggiornarsi su cosa avviene al di fuori del proprio ramo di expertise, consente di sviluppare una migliore visione d’insieme osservando le cose da una prospettiva più ampia.\nLe persone contano più della piattaforma Perché dunque le Startup non amano .NET Framework? Come abbiamo visto la risposta è tanto tecnica quanto culturale. Qualunque sia la tecnologia adottata, ciò che conta sono le persone che prendete a bordo. Se volete i migliori programmatori su piazza non selezionate specialisti PHP o .NET Framework. Cercate piuttosto persone con esperienze e conoscenze diverse, curiose, che abbiano voglia di imparare e siano pronte a rimettersi in gioco quando serve. Le persone giuste sono quelle capaci di prendere decisioni importanti senza lasciarsi condizionare (solo) dalle competenze già acquisite.\nPost Scriptum. E se persone con queste caratteristiche non riuscite a trovarle o peggio, non potete permettervele? Non scendete a compromessi. Piuttosto, fate da soli.\n","permalink":"https://nicolaiarocci.com/perche-le-web-startup-non-amano-net-framework/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eSul blog aziendale di Expensify il CEO \u003cstrong\u003eDavid Barrett\u003c/strong\u003e ha \u003c!-- raw HTML omitted --\u003eraccontato\u003c!-- raw HTML omitted --\u003e perché la sua azienda non assume programmatori Microsoft .NET Framework. In poche ore il suo articolo ha fatto il giro del mondo scatenando un gran putiferio. Gli sviluppatori .NET si sono lanciati in una difesa accorata della piattaforma Microsoft mentre molti commentatori e blogger hanno sposato le tesi di Barrett. Gli oltre 500 commenti danno un’idea ben precisa del fervore suscitato dall’articolo. Non intendo dilungarmi sui contenuti, mi interessa piuttosto approfondire una questione sollevata indirettamente dal pezzo di Barrett.\u003c/p\u003e","title":"Perché le Web Startup non amano .NET Framework?"},{"content":"Sono settimane di passione per il progetto Mono, celeberrima versione open source e multi piattaforma del Microsoft .NET Framework. All’inizio del mese Attachmate (proprietaria di Novell, sponsor storico del progetto) ha improvvisamente licenziato l’intero team di ingegneri al lavoro su Mono.\nL’annuncio ha gettato nel panico la comunità internazionale di sviluppatori Mono. Dal 2004, anno di nascita del progetto, migliaia di grandi e piccole software house hanno adottato la piattaforma per lo sviluppo rapido di soluzioni cross-platform. Purtroppo salvo rare eccezioni è frequente che progetti open source nati o assorbiti in grandi organizzazioni commerciali finiscano per essere abbandonati.\nXamarin al salvataggio di Mono Fortunatamente non sembra essere questo il destino di Mono. Miguel de Icaza, il creatore di Mono, ha annunciato ieri la fondazione di Xamarin, startup indipendente interamente dedicata a Mono. Sembra di capire che gran parte del team originale stia confluendo nella nuova realtà, che per ovvie ragioni di copyright dovrà per prima cosa lanciare prodotti nuovi destinati a sostituire quelli a marchio Novell. Xamarin è al lavoro sull’allestimento di nuovi componenti .NET per iOS e Android e continuerà a garantire, supportare e sviluppare le piattaforme open source Mono e Moonlight.\nLa comunità di sviluppatori, incluso chi scrive, aveva accolto con un certo disappunto il lancio delle edizioni per iOS (MonoTouch) e Android (Mono for Android) della piattaforma. Si trattava infatti di versioni commerciali, anche piuttosto costose. Resta da vedere se e come Xamarin deciderà di riposizionare l’offerta di questi due importanti componenti. Ora che non c’è più una multinazionale dietro a Mono non mi sorprenderebbe affatto un ritocco verso il basso dei prezzi di listino.\n","permalink":"https://nicolaiarocci.com/il-progetto-mono-salvato-in-extremis-dal-suo-fondatore/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eSono settimane di passione per il \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eprogetto Mono\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, celeberrima versione open source e multi piattaforma del Microsoft .NET Framework. All’inizio del mese Attachmate (proprietaria di Novell, sponsor storico del progetto) ha \u003c!-- raw HTML omitted --\u003eimprovvisamente licenziato\u003c!-- raw HTML omitted --\u003e l’intero team di ingegneri al lavoro su Mono.\u003c/p\u003e\n\u003cp\u003eL’annuncio ha gettato nel panico la comunità internazionale di sviluppatori Mono. Dal 2004, anno di nascita del progetto, migliaia di grandi e piccole software house hanno adottato la piattaforma per lo sviluppo rapido di soluzioni cross-platform. Purtroppo salvo rare eccezioni è frequente che progetti open source nati o assorbiti in grandi organizzazioni commerciali finiscano per essere abbandonati.\u003c/p\u003e","title":"Il Progetto Mono salvato in extremis dal suo fondatore"},{"content":"Google Page Speed, lo strumento che misura la velocità delle pagine web e offre consigli su come migliorarne le prestazioni, dispone da ieri di una sua API ufficiale. Annunciata nell’ambito di Google I/O, la API di Page Speed consente di integrare l’analisi delle prestazioni nelle applicazioni proprie. C’è già un plugin per WordPress che la sfrutta, W3 Total Cache.\nL’uso effettivo di questa API sarà probabilmente circoscritto a una nicchia piuttosto ristretta, penso soprattutto alle agenzie di consulenza e SEO. Il messaggio utile da portare a casa (se ancora ce ne fosse bisogno) è che per Google le prestazioni dei siti e della rete in generale sono sempre più un fattore determinante, il rapidissimo sviluppo di Page Speed (prima le estensioni per browser, poi il servizio online e infine la API) ne è la prova più evidente.\nIn passato ho espresso alcune perplessità sulla reale applicabilità dei consigli forniti da questi strumenti, tuttavia rimango convinto della loro utilità generale. Proprio in questi giorni sto lavorando alla ottimizzazione del sito del nostro software gestionale e uso Page Speed per valutare i miglioramenti (o peggioramenti!) che riesco a ottenere. Finora ho raggiunto una valutazione di 80/100, partivo da 70 . Stimo di aver guadagnato 4-5 punti grazie ai consigli di Page Speed.\nPer maggiori informazioni date una occhiata alla Guida per Sviluppatori e all’annuncio ufficiale sul Google Webmaster Blog.\n","permalink":"https://nicolaiarocci.com/una-api-ufficiale-per-google-page-speed/","summary":"\u003cp\u003e\u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eGoogle Page Speed\u003c/strong\u003e, lo strumento che misura la velocità delle pagine web e offre consigli su come migliorarne le prestazioni, dispone da ieri di una sua \u003c!-- raw HTML omitted --\u003eAPI ufficiale\u003c!-- raw HTML omitted --\u003e. Annunciata nell’ambito di \u003c!-- raw HTML omitted --\u003eGoogle I/O\u003c!-- raw HTML omitted --\u003e, la API di Page Speed consente di integrare l’analisi delle prestazioni nelle applicazioni proprie. C’è già un plugin per WordPress che la sfrutta, \u003c!-- raw HTML omitted --\u003eW3 Total Cache\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003cp\u003eL’uso effettivo di questa API sarà probabilmente circoscritto a una nicchia piuttosto ristretta, penso soprattutto alle agenzie di consulenza e SEO. Il messaggio utile da portare a casa (se ancora ce ne fosse bisogno) è che \u003cstrong\u003eper Google le prestazioni dei siti e della rete in generale sono sempre più un fattore determinante\u003c/strong\u003e, il rapidissimo sviluppo di Page Speed (prima le \u003c!-- raw HTML omitted --\u003eestensioni per browser\u003c!-- raw HTML omitted --\u003e, poi il \u003c!-- raw HTML omitted --\u003eservizio online\u003c!-- raw HTML omitted --\u003e e infine la API) ne è la prova più evidente.\u003c/p\u003e","title":"Una API ufficiale per Google Page Speed"},{"content":"I consulenti della sicurezza e chi lavora nel mondo IT raccomandano continuamente di usare password complicate e difficili da ricordare. E’ un cattivo consiglio, dato che è perfettamente possibile creare password semplici, facili da ricordare e davvero sicure. In realtà le password semplici sono spesso molto più sicure di quelle complesse.\nAddentriamoci dunque nel mondo delle password e scopriamo come crearne di pratiche e sicure.\nCome scoprire una password Scoprire una password è davvero semplice. Esistono cinque metodi affidabili per raggiungere l’obiettivo:\nDomandarla. E’ incredibile, ma il modo più usato per ottenere la password di qualcuno è domandargliela (spesso in cambio di qualcosa). Le persone dicono spesso la loro password a colleghi, amici e famigliari. In questo caso l’aver adottato password complicate non aiuta di certo. Indovinarla. E’ il secondo metodo più usato per accedere a un account. E’ cosa nota che la maggior parte delle persone scelgono password facili da ricordare, e le più semplici sono proprio quelle che in qualche modo hanno a che fare con la persona obiettivo dell’attacco. Password come il vostro cognome, il nome di vostra moglie, il nome del gatto, la data di nascita sono molto frequenti. In questo caso l’unica, ovvia, soluzione è quella di scegliere password che non hanno relazione diretta con la persona. Attacco a Forza Bruta. Molto semplice da realizzare. Un hacker tenta l’accesso usando password diverse volta per volta. Se la nostra password è “sun”, lui tenterà di entrare con “aaa, aab, aad … sul, sum, sun (TROVATA)“. L’unica cosa che blocca un attacco a forza bruta sono password di maggiore complessità e lunghezza (è proprio a causa di questo tipo di attacco che gli esperti IT le consigliano). Attacco a Parole Comuni. Forma semplificata dell’attacco a forza bruta, nel quale l’hacker tenta di accedere ricorrendo a un elenco di parole molto usate. Invece di tentare combinazioni di lettere, l’hacker tenta di accedere con parole intere diverse di volta in volta, come per esempio “sum, summer, summit, sump, sun (TROVATA)“. Attacco a Dizionario. Stesso principio dell’attacco a parole comuni, solo che questa volta l’hacker usa l’intero dizionario (ci sono circa 500.000 parole nella lingua inglese). Quando la password è sicura? Non puoi proteggerti contro attacchi del tipo “Domandarla” e “Indovinarla”, ma puoi proteggerti bene dalle altre forme di attacco. Un hacker di solito crea uno script automatico o un programma che svolge il lavoro al posto suo. Non ha alcuna intenzione di star seduto al computer tentando manualmente 500.000 parole per scoprire se una di quelle è la tua password.\nNe consegue che l’unità di misura della sicurezza diventa “quante password può tentare un programma per ogni unità di tempo (per esempio un secondo)?“. Il numero esatto non è determinabile, ma la maggior parte delle applicazioni non è in grado di gestire più di 100 accessi al secondo.\nCiò significa che per scoprire la password “sun” sono necessari:\nForza bruta: 3 minuti Attacco a Parole Comuni: 3 minuti Attacco a Dizionario: 1 ora 20 minuti Nota: ci sono 17.576 combinazioni di carattere possibili per “sun”. 3 lettere dell’alfabeto minuscolo = 26^3\n__Quindi “sun” è una password davvero poco sicura, ma quanto tempo deve resistere una password affinché la si possa ritenere davvero sicura?\nuna password che può essere scoperta in 1 minuto è fin troppo fragile 10 minuti – ancora troppo fragile 1 ora – non ancora abbastanza 1 giorno – cominciamo a ragionare. La probabilità che qualcuno lasci girare un programma per un giorno intero solo per accedere a un singolo account è modesta. Tuttavia non è impossibile. 1 mese – solo un hacker molto motivato ci proverebbe 1 anno – passiamo dal rischio reale al rischio teorico. La NASA o la CIA non potrebbero accettare un livello di sicurezza così basso. Il resto di noi, beh – non abbiamo il loro tipo di nemici e la nostra azienda non è certo così allettante. 10 anni – siamo ormai entrati nel campo della teoria pura Una vita: 100 anni – probabilmente questo è un limite accettabile per la maggior parte di noi. Chi si preoccuperebbe per una password che potrebbe resistere fin dopo la sua morte? E’ confortante pensare a una password che è “sicura per tutta la vita” Analizziamo con attenzione il livello “100 anni”. Suona bene e ci fa sentire sicuri. C’è però la possibilità che un hacker sia particolarmente fortunato e trovi la password giusta dopo soli 15 anni di tentativi, invece di 100. Improbabile, ma può succedere.\nAlziamo dunque la posta ancora una volta, puntando al massimo. Vogliamo una password che richieda 1.000 anni per essere scoperta– chiamiamolo livello “sicuro per sempre“. Dovrebbe essere abbastanza, no?\nCreare password sicure e davvero utilizzabili Ora che abbiamo coperto le basi diamo una occhiata a qualche esempio sul campo, cercando di capire quanto utilizzabile possiamo rendere una password pur mantenendola “sicura per sempre”.\nNota: gli esempi sottostanti sono tutti basati su una ipotesi di 100 tentativi di accesso al secondo. Viene riportato l’attacco più efficace per scardinare ogni password – forza bruta, parole comuni o attacco a dizionario.\nCominciamo dalla classica password di 6 caratteri\n[table id=1 /]\nIn questo caso la complessità vince chiaramente. Usare una password con caratteri maiuscoli e minuscoli, numeri e simboli è molto sicuro. Usare una semplice parola come password è inutile.\nCiò significa forse che i colleghi dell’IT e i consulenti sulla sicurezza hanno ragione? No. Una password di 6 caratteri non funzionerà comunque. Nessuno è in grado di ricordare una password come “J4fS\u0026lt;2”, il che vuol dire che prima o poi verrà inevitabilmente trascritta su un post-it o altrove.\nSe vogliamo password veramente utilizzabili dobbiamo approcciare il problema in modo diverso. Prima di tutto abbiamo bisogno di usare parole che possiamo ricordare, qualcosa di semplice che possiamo scrivere con facilità.\nCome queste:\n[table id=2 /]\nUsare più di una parola per password aumenta significativamente il livello di sicurezza (da 3 minuti a 2 mesi). Tuttavia, usando 3 parole invece di 2 ci ritroviamo con una password estremamente sicura.\nSono necessari:\n1.163.859 anni per scardinarla con un attacco a forza bruta 2.537 anni con un attacco a parole comuni 39.637.240 anni con un attacco a dizionario E’ 10 volte più sicuro usare “this is fun” come password piuttosto che “J4fS\u0026lt;2”.\nSe poi volete stare assurdamente al sicuro, scegliete parole poco usate per comporre la vostra password – qualcosa come:\n[table id=4 /]\nUna password sicura e al tempo stesso davvero utilizzabile non è una password complicata. E’ piuttosto una frase semplice composta da tre o più parole.\nNon è solo questione di password Una cosa è scegliere password sicure e utilizzabili. Un’altra è prevenire gli attacchi degli hacker. Si tratta di un obiettivo semplice da raggiungere. Per impedire che gli script automatici lavorino efficacemente è necessario:\nAggiungere una pausa tra i tentativi di accesso. 5 secondi tra un tentativo e l’altro sono sufficienti. E’ un lasso di tempo abbastanza breve perché non si noti (ci vogliono più di 5 secondi per rendersi conto di aver sbagliato la password e digitarne una nuova). Obbliga l’hacker a un solo tentativo ogni 5 secondi (invece che 100 tentativi al secondo). Aggiungere una pausa di penalizzazione se qualcuno inserisce una password sbagliata più di – diciamo – 10 volte. Una penalità di 1 ora è sufficiente. Di nuovo, una azione di questo tipo disturba seriamente qualunque script o programma hacker. Un hacker può scoprire la password “alpine fun” in solo due mesi se è in grado di attaccare il nostro server 100 volte al secondo. Tuttavia con la pausa di 5 secondi tra un tentativo e l’altro la stessa password può resistere all’attacco per 1.889 anni.\n[table id=3 /]\nTieni a mente questi concetti la prossima volta che sei al lavoro su applicazioni web o stai discutendo di sicurezza delle password con i tuoi colleghi dell’IT. Le password possono essere allo stesso tempo sicure e facili da ricordare.\nAttribuzione ","permalink":"https://nicolaiarocci.com/sulla-usabilita-delle-password/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eI consulenti della sicurezza e chi lavora nel mondo IT raccomandano continuamente di usare password complicate e difficili da ricordare. E’ un cattivo consiglio, dato che è perfettamente possibile creare password semplici, facili da ricordare e davvero sicure. In realtà le password semplici sono spesso molto più sicure di quelle complesse.\u003c/p\u003e\n\u003cp\u003eAddentriamoci dunque nel mondo delle password e scopriamo come crearne di pratiche e sicure.\u003c/p\u003e","title":"Sulla Usabilità delle Password"},{"content":"Microsoft ha rilasciato la seconda beta di Python Tools per Visual Studio, il suo progetto open source che offre agli sviluppatori la possibilità di scrivere codice Python, CPython e IronPython nell’ambiente IDE di Visual Studio 2010.\nIl progetto è stato presentato al PyCon 2011 dal Microsoft Technical Computing Group ed è davvero ben fatto. Per tutti gli approfondimenti vi rimando al mio articolo Programmare in Python con Visual Studio 2010.\nQuesta nuova release porta in dote una serie di bug fix che rendono più stabile il progetto e nessuna nuova feature. A questo punto la Release Candidate 1, programmata inizialmente per il mese di maggio, subirà probabilmente un leggero slittamento. Immagino che dovremo aspettare almeno il prossimo mese.\n","permalink":"https://nicolaiarocci.com/python-tools-per-visual-studio-ecco-la-beta-2/","summary":"\u003cp\u003eMicrosoft ha rilasciato la seconda beta di \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003ePython Tools per Visual Studio\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, il suo progetto open source che offre agli sviluppatori la possibilità di scrivere codice Python, CPython e IronPython nell’ambiente IDE di Visual Studio 2010.\u003c/p\u003e\n\u003cp\u003eIl progetto è stato presentato al \u003c!-- raw HTML omitted --\u003ePyCon 2011\u003c!-- raw HTML omitted --\u003e dal \u003c!-- raw HTML omitted --\u003eMicrosoft Technical Computing Group\u003c!-- raw HTML omitted --\u003e ed è davvero ben fatto. Per tutti gli approfondimenti vi rimando al mio articolo \u003c!-- raw HTML omitted --\u003eProgrammare in Python con Visual Studio 2010\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Python Tools per Visual Studio ecco la Beta 2"},{"content":"Dopo l’articolo introduttivo sui siti fluidi e i CSS Framework è giunta l’ora di dare una occhiata a un framework vero e proprio. Come dicevo prediligo strumenti agili, leggeri, specializzati e possibilmente fatti in casa. Se scelgo un framework quest’ultimo deve essere essenziale, leggero, flessibile. Inuit.css, ultimo nato nella numerosa e agguerrita famiglia dei Framework CSS, sembra nato apposta per fare di me un uomo felice.\nFlessibilità e qualità prima di tutto Inuit.css è pronto all’uso, se siete di corsa e non avete esigenze particolari potete usarlo così com’è. Quando serve è facile adattarlo al nostro progetto, soprattutto grazie all’alta qualità del codice sorgente, commentato molto bene. E’ proprio la cura che l’autore ha dedicato alla documentazione l’elemento chiave che ci consente di intervenire rapidamente, eliminando le parti superflue o ritoccando il codice ove necessario.\nQui sopra vedete uno snippet tratto dal foglio di stile originale. Notate come l’autore si sia preoccupato di fornire indicazioni su come organizzare la gerarchia dei font. Ben fatto!\nLa potenza è nulla senza controllo Difficilmente Inuit.css prende l’iniziativa, preferisce lasciarla al designer. Prendiamo gli elementi base di HTML5 e CSS3. Inuit.css li supporta ma li isola in classi dedicate che useremo all’occorrenza.\nLa scelta del basso profilo è apprezzabile. Lascia il controllo nelle nostre mani, ma corre il rischio che – soprattutto al primo impatto – il framework sembri meno ricco rispetto ad altre soluzioni. In effetti non è sulla ricchezza che punta Inuit ma su flessibilità, estensibilità e… mobilità.\nTablet, smartphone e non solo Il supporto per l’attributo @media consente a Inuit di ridefinire dinamicamente gran parte delle impostazioni in base al dispositivo (tablet, smartphone, stampante) che consuma la pagina. Il Grid System adottato deriva dal capostipite 960 Grid System (vedi in proposito l’articolo precedente), supporta matrici (grid) a 12 e 16 colonne e implementa un ingegnoso marchingegno che evita l’inserimento della classica class=end nell’ultima colonna.\nA differenza della Tiny Fluid Grid vista la volta scrosa, Inuit è un Framework vero e proprio e supporta ben più della sola Grid. Sono presenti impostazioni predefinite e ben fatte per tutti gli elementi più comuni di una pagina HTML: header, paragrafi, liste numerate e non, tabelle, form, citazioni, link, immagini. Non manca una implementazione del Eric Meyer CSS Reset e il supporto per la modalità debug che rende visibile la grid sullo sfondo. Una occhiata alla pagina demo e soprattutto al suo sorgente è sufficiente per rendersi conto di quanti sono gli stili che Inuit.css ci mette a disposizione.\nGiovani di belle speranze Inuit è il nuovo arrivato, ha solo una ventina di giorni ed è in revisione continua. E’ giovane come il suo autore, il ventenne Harry Roberts (l’età non tragga in inganno, Harry è la mente che si cela dietro CSS Wizardry). Come tutti i giovani di belle speranze Inuit guarda al futuro e se ne frega allegramente del passato: supporta Internet Explorer a partire dalla versione 7 (update del 24.5: la release 1.5 introduce un supporto base per le grid in IE6).\nDovrà sgomitare un bel pò per conquistarsi uno spazio in una nicchia già affollata da una concorrenza agguerrita. Ha tutte le carte in regola per sfondare, prova ne è il fatto che a pochi giorni dal lancio qualche sito qui e là ha già cominciato ad adottarlo.\nSe scegliete di usare Inuit nei vostri progetti fatemelo sapere. Chissà, potrebbero finire dritti dritti nella Web Gallery del sito ufficiale.\n","permalink":"https://nicolaiarocci.com/siti-fluidi-coi-css-framework-inuit-css/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eDopo l’articolo introduttivo sui \u003ca href=\"http://nicolaiarocci.com/costruire-siti-fluidi-coi-css-framework-tiny-fluid-grid/\"\u003esiti fluidi e i CSS Framework\u003c/a\u003e è giunta l’ora di dare una occhiata a un framework vero e proprio. Come dicevo prediligo strumenti agili, leggeri, specializzati e possibilmente fatti in casa. Se scelgo un framework quest’ultimo deve essere essenziale, leggero, flessibile. \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eInuit.css\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, ultimo nato nella numerosa e agguerrita famiglia dei Framework CSS, sembra nato apposta per fare di me un uomo felice.\u003c/p\u003e","title":"Siti fluidi coi CSS Framework: Inuit.css"},{"content":"A quanto pare da stamattina Google Shopping Italia, edizione nazionale del più vasto progetto Google Merchant Center, è operativo. Per provarlo andate su Google.it, eseguite una normale ricerca e cliccate sulla nuova opzione Shopping (oppure fate una ricerca diretta dalla home page di Google Shopping)\nDato per imminente a febbraio, del nuovo canale e-commerce di Google non si erano più avute notizie, tanto che qualcuno cominciava a domandarsi che fine avesse fatto.\nPer informazioni approfondite vi rimando all’articolo che scrissi a suo tempo, qui mi limito a segnalarvi il link per creare un account, registrare i prodotti e impostare il proprio negozio su Google Shopping.\n","permalink":"https://nicolaiarocci.com/google-shopping-italia-e-finalmente-online/","summary":"\u003cp\u003eA quanto pare da stamattina \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eGoogle Shopping Italia\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, edizione nazionale del più vasto progetto \u003cstrong\u003eGoogle Merchant Center\u003c/strong\u003e,  è operativo. Per provarlo andate su Google.it, eseguite una normale ricerca e cliccate sulla nuova opzione Shopping (oppure fate una ricerca diretta dalla home page di \u003c!-- raw HTML omitted --\u003eGoogle Shopping\u003c!-- raw HTML omitted --\u003e)\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eDato per imminente \u003c!-- raw HTML omitted --\u003ea febbraio\u003c!-- raw HTML omitted --\u003e, del nuovo canale e-commerce di Google non si erano più avute notizie, tanto che qualcuno cominciava a domandarsi \u003c!-- raw HTML omitted --\u003eche fine avesse fatto\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Google Shopping Italia è finalmente online"},{"content":"Fino a non molti anni fa la gamma di risoluzioni video disponibili alla gran parte degli utenti era piuttosto limitata, tanto che nel disegnare siti web non ci si preoccupava granché di questo aspetto. La diffusione di massa di monitor wide, netbooks, tablet e smartphone ha cambiato rapidamente le carte in tavola. Per raggiungere con efficienza il loro pubblico i siti odierni devono essere capaci di adattare il loro aspetto alla risoluzione del dispositivo usato dal visitatore. Devono, in una parola, essere fluidi.\nIl Grid Design e l’era dei CSS Framework L’avvento dei CSS Framework si deve (principalmente) alla necessità di soddisfare l’esigenza di fluidità. Il capostipite, se non in ordine cronologico senz’altro per l’influenza che ha avuto, è il 960 Grid System. Altri prodotti famosi, per citarne solo un paio, sono Blueprint e Emastic. Questi framework hanno in comune l’obiettivo di velocizzare creazione, gestione e manutenzione dei fogli di stile ma se andiamo al nocciolo della questione ci accorgiamo che tutti si basano sul concetto chiave di Grid Design:\nUna griglia tipografica è una struttura bidimensionale composta da una serie di guide verticali e orizzontali intersecanti (matrice) usata per organizzare il contenuto della pagina. La griglia offre una traccia sulla quale il designer può organizzare testo e immagini in maniera ordinata e razionale (Wikipedia)\nNiente di nuovo, i tipografi hanno usato questa tecnica per secoli. Il Grid Design in declinazione web è fluido: le colonne (e gli spazi tra le colonne) che compongono la matrice sono capaci di adattarsi alla risoluzione dell schermo.\nGran parte dei CSS Framework non si limitano a implementare versioni più o meno sofisticate del Grid System ma offrono una serie di servizi aggiuntivi nel tentativo di risparmiare al designer i compiti più ripetitivi e tediosi. Non sempre ci riescono. Ogni sito ha esigenze specifiche e ogni designer abitudini consolidate. E’ difficile che una soluzione standard sia l’ideale per ogni esigenza. Spesso preferisco la via di mezzo: strumenti agili che consentono di portare a casa rapidamente il risultato senza aggiungere (molto) più del necessario.\nIn questa mini-serie di tre articoli prenderò in esame tre diverse soluzioni che implementano il Grid Design e che ci permettono di implementare, con diversi gradi di complessità (e numero di funzionalità), pagine web fluide.\nTiny Fluid Grid Se non altro amerete questa soluzione a causa del suo design: il sito è oggettivamente splendido. E facile da usare. In effetti Tiny Fluid Grid non è un CSS Framework vero e proprio ma una semplice soluzione interattiva che vi consente, agendo su tre semplici regolazioni (numero di colonne, spazio tra le colonne e larghezza dell’area client), di configurare online la vostra CSS grid. Il pulsante Preview offre una anteprima (anch’essa interattiva) della grid. L’unica altra opzione disponibile è il Download. Otterrete un archivio compresso che contiene due files: il foglio di stile grid.css e un index.html che contiene un esempio d’uso della grid appena creata:\nUna occhiata al foglio di stile ci consente di capire la struttura della grid\nUna classe per ogni larghezza di colonna. Poiché larghezza e margini delle colonne sono espressi in percentuale la nostra grid si adatta alla risoluzione dello schermo, con i limiti imposti dagli attributi min-width e max-width. L’implementazione lato HTML è banale (tralascio le parti non rilevanti):\nLa nostra grid è contenuta in un div di classe “container”. Le colonne sono a loro volta dei div. Per ottenere più colonne nella stessa riga dobbiamo assicurarci che la somma dei numeri contenuti nel nome di ogni classe (grid_x) sia uguale al numero di colonne di cui è composta la grid. Nel nostro caso la seconda riga è composta da tre div grid_4 (4×3=12); la terza riga da due colonne: grid_3 e grid_9 (3+9=12). Semplice no? Naturalmente possiamo ritoccare il foglio di stile come vogliamo, adattandolo alle nostre esigenze.\nNel prossimo articolo della serie affronteremo un CSS Framework vero e proprio, anche questo snello e semplice da usare. Se ancora non l’avete fatto abbonatevi al feed RSS per non perdere la prossima puntata, oppure iscrivetevi alla mailing list (riquadro in alto a destra). Mi raccomando!\n","permalink":"https://nicolaiarocci.com/costruire-siti-fluidi-coi-css-framework-tiny-fluid-grid/","summary":"\u003cp\u003eFino a non molti anni fa la gamma di risoluzioni video disponibili alla gran parte degli utenti era piuttosto limitata, tanto che nel disegnare siti web non ci si preoccupava granché di questo aspetto. La diffusione di massa di monitor wide, netbooks, tablet e smartphone ha cambiato rapidamente le carte in tavola. Per raggiungere con efficienza il loro pubblico i siti odierni devono essere capaci di adattare il loro aspetto alla risoluzione del dispositivo usato dal visitatore. Devono, in una parola, essere \u003cem\u003efluidi\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"il-grid-design-e-l8217era-dei-css-framework\"\u003eIl Grid Design e l’era dei CSS Framework\u003c/h2\u003e\n\u003cp\u003eL’avvento dei CSS Framework si deve (principalmente) alla necessità di soddisfare l’esigenza di fluidità. Il capostipite, se non in ordine cronologico senz’altro per l’influenza che ha avuto, è il \u003c!-- raw HTML omitted --\u003e960 Grid System\u003c!-- raw HTML omitted --\u003e. Altri prodotti famosi, per citarne solo un paio, sono \u003c!-- raw HTML omitted --\u003eBlueprint\u003c!-- raw HTML omitted --\u003e e \u003c!-- raw HTML omitted --\u003eEmastic\u003c!-- raw HTML omitted --\u003e. Questi framework hanno in comune l’obiettivo di velocizzare creazione, gestione e manutenzione dei fogli di stile ma se andiamo al nocciolo della questione ci accorgiamo che tutti si basano sul concetto chiave di \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eGrid Design\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e:\u003c/p\u003e","title":"Costruire siti fluidi coi CSS Framework: Tiny Fluid Grid"},{"content":"Normalmente quando un visitatore clicca su un link che punta a un file, quest’ultimo viene mostrato nel browser e non viene avviato alcun download. Questo succede perché il browser determina il tipo di contenuto in base alla estensione del file. Quando clicchiamo su un file con estensione jpg il browser sa che si tratta di una immagine e la mostra direttamente. Lo stesso avviene per i file pdf e così via.\nPuò capitare che questo comportamento non sia quello desiderato. Oggi al lavoro ho implementato una funzionalità interessante: il download della versione PDF di una pagina web. Il pdf viene costruito dinamicamente nel momento stesso in cui il visitatore clicca un link. Questo accorgimento libera il webmaster dalla tediosa (e facilmente dimenticabile) necessità di rigenerare il pdf ad ogni minimo ritocco della pagina.\nVolevo che cliccando sul link si avviasse automaticamente il download, così da ‘costringere’ l’utente a interagire col PDF in un secondo tempo rispetto all’esperienza di navigazione. Se scarichi un PDF è per stamparlo o consultarlo con calma o magari passarlo a un collega, no?\nCostringere l’utente a usare il menu contestuale del browser (Salva link con nome..) non è certo la scelta ideale dal punto di vista dell’esperienza utente, tanto più che in questo caso il link non è statico e invoca codice JavaScript. Per ottenere il risultato desiderato dobbiamo inviare direttamente il file all’utente. [cci_asp theme=”standard”]Response.TransmitFile()[/cci_asp] è il metodo che invia il file dall’applicazione ASP.NET al client, ma prima dobbiamo preoccuparci di aggiungere un paio di header al nostro messaggio di output:\nE’ importante fornire il ContentType corretto altrimenti il browser non sarà sempre in grado di gestire i contenuti del file. Internet Explorer per esempio offre l’opzione di aprire direttamente il file (verrà scaricato nella cache). Nel nostro caso se l’utente sceglie l’apertura diretta IE lancerà Acrobat Reader perché ContentType è application/pdf.\nAltro accorgimento è la chiamata al metodo Path.GetFileName() in riga 7. Non sarebbe necessario se non fosse che taluni broswer arcaici e superati (ogni riferimento a IE è naturalmente voluto) non sono in grado di gestire intelligentemente il filename e, quando propongono il nome del file da salvare, riproducono l’intero path del file sul server. Questo comportamento tra l’altro è pericoloso perché espone l’intera struttura del sito, dalla radice al folder che contiene la pagina, al visitatore.\nSe la routine deve essere usata in un modulo e non direttamente in una pagina aspx ricordate di sostituire Response con HttpContect.Current.Response. Buon lavoro!\n","permalink":"https://nicolaiarocci.com/avviare-un-download-con-richiesta-di-nome-file-da-una-pagina-asp-net/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eNormalmente quando un visitatore clicca su un link che punta a un file, quest’ultimo viene mostrato nel browser e non viene avviato alcun download. Questo succede perché il browser determina il tipo di contenuto in base alla estensione del file. Quando clicchiamo su un file con estensione jpg il browser sa che si tratta di una immagine e la mostra direttamente. Lo stesso avviene per i file pdf e così via.\u003c/p\u003e\n\u003cp\u003ePuò capitare che questo comportamento non sia quello desiderato. Oggi \u003c!-- raw HTML omitted --\u003eal lavoro\u003c!-- raw HTML omitted --\u003e ho implementato una funzionalità interessante: il download della versione PDF di una pagina web. Il pdf viene costruito dinamicamente nel momento stesso in cui il visitatore clicca un link. Questo accorgimento libera il webmaster dalla tediosa (e facilmente dimenticabile) necessità di rigenerare il pdf ad ogni minimo ritocco della pagina.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eVolevo che cliccando sul link si avviasse automaticamente il download, così da ‘costringere’ l’utente a interagire col PDF in un secondo tempo rispetto all’esperienza di navigazione. Se scarichi un PDF è per stamparlo o consultarlo con calma o magari passarlo a un collega, no?\u003c/p\u003e","title":"Avviare un Download con richiesta di nome file da una pagina ASP.NET"},{"content":"A PyCon 2011, la conferenza mondiale sul linguaggio Python che si è conclusa da poco ad Atlanta, gli ingegneri di DISQUS hanno presentato una interessante relazione sulla loro infrastruttura hardware e software. DISQUS è un servizio di gestione dei commenti adottato da centinaia di migliaia di siti nel mondo. Tra i clienti figurano nomi importanti come CNN, MTV, IGN, Engadget, Mashable e tanti altri. Nel mese di marzo 2011 il network DISQUS ha gestito 500 milioni di visitatori unici. Questi volumi sono gestiti da una azienda che vanta 16 addetti, dei quali solo 8 (otto!) ingegneri software.\nCome è possibile tutto ciò? Gran parte del merito va attribuito al metodo produttivo adottato da DISQUS: metodologia agile, hardware in affitto e facilmente scalabile, grande fiducia nella capacità dei propri talenti: ognuno degli otto ingegneri è anche product manager. Secondo DISQUS tutto questo è stato possibile anche e soprattutto grazie a una scelta che si è rivelata determinante: l’adozione del linguaggio Python e del web framework Django.\nIl video della conferenza Fortunatamente gran parte dei contenuti di PyCon 2011 sono disponibili al pubblico sotto forma di registrazioni audio-video e di slideshow. In questo filmato possiamo seguire Jason Yan e David Cramer (due dei super-otto, quanto sono giovani!) nel corso della loro conferenza.\nLe slides Se non avete tempo (o voglia) per seguire l’intera lezione potete sempre dare una occhiata a queste slides che spiegano in maniera concisa il processo di sviluppo e deployment e, soprattutto, pregi e difetti del lavoro con Python. Curioso come molti di loro abbiano cominciato da Django prima ancora di imparare Python! E’ un po’ la dimostrazione che prima viene il talento, poi il know-how.\nUna questione di metodo Da molti Python è considerato un linguaggio inadatto a gestire siti con grande traffico o applicazioni molto impegnative sotto il profilo delle prestazioni. L’esperienza DISQUS dimostra platealmente il contrario. In un prossimo articolo mi riprometto di approfondire la questione Python/Prestazioni. Se qualcuno vuol dire la sua in proposito è il benvenuto (sia sotto forma di commento che di guest post eventualmente).\n","permalink":"https://nicolaiarocci.com/servire-500-milioni-di-utenti-al-mese-con-python-e-django/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eA \u003c!-- raw HTML omitted --\u003ePyCon 2011\u003c!-- raw HTML omitted --\u003e, la conferenza mondiale sul linguaggio Python che si è conclusa da poco ad Atlanta, gli ingegneri di \u003c!-- raw HTML omitted --\u003eDISQUS\u003c!-- raw HTML omitted --\u003e hanno presentato una interessante relazione sulla loro infrastruttura hardware e software. DISQUS è un servizio di gestione dei commenti adottato da centinaia di migliaia di siti nel mondo. Tra i clienti figurano nomi importanti come CNN, MTV, IGN, Engadget, Mashable e tanti altri. Nel mese di marzo 2011 il network DISQUS ha gestito \u003cstrong\u003e500 milioni di visitatori unici\u003c/strong\u003e. Questi volumi sono gestiti da una azienda che vanta \u003cstrong\u003e16 addetti, dei quali solo 8 (otto!) ingegneri software\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eCome è possibile tutto ciò? Gran parte del merito va attribuito al metodo produttivo adottato da DISQUS: \u003c!-- raw HTML omitted --\u003emetodologia agile\u003c!-- raw HTML omitted --\u003e, hardware in affitto e facilmente scalabile, grande fiducia nella capacità dei propri talenti: ognuno degli otto ingegneri è anche product manager. Secondo DISQUS tutto questo è stato possibile anche e soprattutto grazie a una scelta che si è rivelata determinante: l’adozione del linguaggio \u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003ePython\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e e del web framework \u003c!-- raw HTML omitted --\u003eDjango\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"Servire 500 milioni di utenti con Python e Django"},{"content":"Italian Startup Scene è un “gruppo di ritrovo degli startupper italiani. Imprenditori, investitori, bloggers, sviluppatori e chiunque abbia un interesse per startups e venture capital”. Si tratta di una risorsa da non perdere se vi interessate alla scena startup italiana, che esiste ed è viva e vegeta malgrado molti (senza aver mai guardato al di là del proprio steccato) sostengano il contrario o non facciano altro che guardare alla remota Silicon Valley.\nFondata da alcuni degli startupper più affermati e frequentata da quasi 2.000 utenti, molti dei quali attivamente coinvolti in progetti di startup, ISS è il posto ideale per chiedere consigli, proporre e discutere idee, cercare collaborazioni e chissà, trovare finanziamenti per i vostri progetti.\nItalian Startup Scene è organizzata come Gruppo Facebook – in effetti si tratta dell’unica risorsa Facebook che frequento assiduamente. La lettura del gruppo è libera ma dovete iscrivervi per partecipare alle discussioni che sono molte, interessanti e pertinenti – astenersi perditempo! In queste settimane stanno nascendo i sotto gruppi regionali che servono ad agevolare conoscenze e scambi di informazioni tra gli utenti che vivono vicini.\nLavorare per una Startup italiana Ma il progetto ISS di cui voglio parlarvi, anche perché è nato un po’ in sordina e credo meriti maggiore attenzione, è Jobs for Geeks. Si tratta di una bella bacheca interattiva dove le startup italiane propongono impieghi di ogni genere: programmatori, designer, esperti commerciali, managers e testers. A sottolineare lo spirito originale di ISS è presente anche il panel per la ricerca di soci fondatori. Nel momento in cui scrivo il panel Programmatori conta 9 posizioni disponibili.\nTrattandosi quasi sempre di startup che operano nel campo delle tecnologie e della rete è facile trovare disponibilità per ogni tipo di collaborazione: part-time, freelance, remote. Non si tratta di offerte di lavoro canoniche neanche dal punto di vista della retribuzione. In tipico stile startup c’è chi cerca, per esempio, un .NET Developer che partecipi a un progetto senz’altro interessante ma attenzione, “Niente retribuzione, per ora, tanto affetto e tanta simpatia :)”\nNiente male davvero.\n","permalink":"https://nicolaiarocci.com/vuoi-lavorare-in-una-startup-italiana/","summary":"\u003cp\u003e\u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eItalian Startup Scene\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e è un \u003cem\u003e“gruppo di ritrovo degli startupper italiani. Imprenditori, investitori, bloggers, sviluppatori e chiunque abbia un interesse per startups e venture capital”\u003c/em\u003e. Si tratta di una risorsa da non perdere se vi interessate alla scena startup italiana, che esiste ed è viva e vegeta malgrado molti (senza aver mai guardato al di là del proprio steccato) sostengano il contrario o non facciano altro che guardare alla remota Silicon Valley.\u003c/p\u003e\n\u003cp\u003eFondata da alcuni degli startupper più affermati e frequentata da quasi 2.000 utenti, molti dei quali attivamente coinvolti in progetti di startup, ISS è il posto ideale per chiedere \u003cstrong\u003econsigli\u003c/strong\u003e, proporre e \u003cstrong\u003ediscutere idee\u003c/strong\u003e, \u003cstrong\u003ecercare collaborazioni\u003c/strong\u003e e chissà, \u003cstrong\u003etrovare finanziamenti\u003c/strong\u003e per i vostri progetti.\u003c/p\u003e","title":"Vuoi lavorare in una Startup italiana?"},{"content":"Reddit è un servizio di condivisione, votazione e discussione delle risorse in rete. In tempi recenti è diventato uno dei punti di riferimento della comunità internazionale degli alpha-geek, sbaragliando una concorrenza agguerrita e ben radicata.\nReddit ha conquistato un pubblico particolarmente ostico ed esigente grazie alla sua caratteristica più peculiare: essere un sistema aperto. Potremmo definire Reddit una semplice infrastruttura lasciata in gestione agli utenti, i quali ricambiano dedicandosi con dedizione alla cura dei contenuti. Su Reddit chiunque in pochi secondi può creare un’area nuova dedicata a un argomento non ancora trattato. Se il tema è valido i contributi arrivano: segnalazioni di nuove risorse (articoli, tutorial, opinioni), votazioni e discussioni spesso vivaci. Reddit è un po’ Wikipedia, un po’ Facebook e un po’ Twitter.\nLa scommessa è quella di una selezione naturale dei contenuti, compiuta dai loro diretti destinatari e non (solo) dagli autori, come succede nel caso degli aggregatori di notizie.\nReddit in Italia In Italia Reddit è ancora poco conosciuto, ma qualcosa sta cambiando.\nIl reddit\n/r/italy propone solo contenuti italiani e al momento in cui scrivo sta per toccare i 1.000 lettori. Stanno nascendo altri reddit italiani, alcuni davvero curiosi e uno molto interessante.\nIl reddit dei programmatori italiani Il mio personale contributo alla diffusione di Reddit nel nostro paese è /r/programmazione. Platealmente ispirato alla controparte inglese, Programmazione è nato inizialmente come tentativo di rispondere a una mia esigenza personale: raccogliere in modo organizzato le migliori risorse italiane su programmazione, web design, posizionamento siti web (SEO) e dintorni. Articoli, tutorial, riflessioni, approfondimenti e notizie, purché pertinenti, sono tutti benvenuti. Partecipare è facile e poco impegnativo. Votate i contenuti più (o meno) interessanti e, se volete, segnalate i vostri link preferiti.\nSe riusciremo ad attirare un pubblico abbastanza numeroso potremmo contribuire, nel tempo, alla creazione di una risorsa interessante per la comunità italiana.\n","permalink":"https://nicolaiarocci.com/il-reddit-dei-programmatori-italiani/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eReddit\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e è un servizio di condivisione, votazione e discussione delle risorse in rete. In tempi recenti è diventato uno dei punti di riferimento della comunità internazionale degli \u003c!-- raw HTML omitted --\u003ealpha-geek\u003c!-- raw HTML omitted --\u003e, sbaragliando una concorrenza agguerrita e ben radicata.\u003c/p\u003e\n\u003cp\u003eReddit ha conquistato un pubblico particolarmente ostico ed esigente grazie alla sua caratteristica più peculiare: essere un \u003cstrong\u003esistema aperto\u003c/strong\u003e. Potremmo definire Reddit una semplice infrastruttura lasciata in gestione agli utenti, i quali ricambiano dedicandosi con dedizione alla cura dei contenuti. Su Reddit chiunque in pochi secondi può creare un’area nuova dedicata a un argomento non ancora trattato. Se il tema è valido i contributi arrivano: segnalazioni di nuove risorse (articoli, tutorial, opinioni), votazioni e discussioni spesso vivaci. Reddit è un po’ Wikipedia, un po’ Facebook e un po’ Twitter.\u003c/p\u003e\n\u003cp\u003eLa scommessa è quella di una selezione naturale dei contenuti, compiuta dai loro diretti destinatari e non (solo) dagli autori, come succede nel caso degli aggregatori di notizie.\u003c/p\u003e\n\u003ch2 id=\"reddit-in-italia\"\u003eReddit in Italia\u003c/h2\u003e\n\u003cp\u003eIn Italia Reddit è ancora poco conosciuto, ma qualcosa sta cambiando.\u003c/p\u003e","title":"Il reddit dei programmatori italiani"},{"content":"Volete scoprire rapidamente quali sono i font usati su una pagina web? Ho scovato quasi per caso WhatFont, un bookmarklet davvero facile da usare. Basta trascinarlo sulla barra degli indirizzi del browser e l’installazione è fatta. Navigate sulle pagine che vi interessano e attivate WhatFont con un click. Da quel momento spostando il puntatore sui vari elementi della pagina ne vedrete il font in sovraimpressione. Comodo e veloce.\nSe per trovare ispirazione amate curiosare nel lavoro degli altri questo è proprio l’oggettino che fa per voi. Se siete programmatori continuerete a usare Firebug ****o Webkit Inspector ma questo strumento è talmente comodo che potreste decidere di aggiungerlo comunque ai vostri strumenti preferiti.\n","permalink":"https://nicolaiarocci.com/come-scoprire-i-font-di-una-pagina-web/","summary":"\u003cp\u003eVolete scoprire rapidamente quali sono i font usati su una pagina web? Ho scovato quasi per caso \u003cstrong\u003e\u003ca href=\"http://chengyinliu.com/whatfont.html\"\u003eWhatFont\u003c/a\u003e\u003c/strong\u003e, un \u003c!-- raw HTML omitted --\u003ebookmarklet \u003c!-- raw HTML omitted --\u003edavvero facile da usare. Basta trascinarlo sulla barra degli indirizzi del browser e l’installazione è fatta. Navigate sulle pagine che vi interessano e attivate WhatFont con un click. Da quel momento spostando il puntatore sui vari elementi della pagina ne vedrete il font in sovraimpressione. Comodo e veloce.\u003c/p\u003e","title":"Come scoprire i font di una pagina web?"},{"content":"Watermark.js è una libreria JavaScript che aggiunge un watermark (letteralmente filigrana, ovvero un logo o un marchio) alle immagini presenti sulle pagine web. Contrassegnare le immagini in modo permanente è utile a proteggerle dalla copia oppure, al contrario, ad approfittare della loro riproduzione per diffondere un marchio (brand awareness). Usare watermark.js è semplice, vediamo quanto.\nCome usare watermark.js La libreria innesta il marchio nelle immagini marcate con la classe CSS “watermark”. Se il nome della classe non piace è possibile cambiarlo. Se il nostro watermark è in formato JPG la libreria aggiunge per noi un livello di trasparenza, altrimenti possiamo fornirle i più idonei formati PNG e GIF.\nPrima di tutto inseriamo il riferimento allo script. E’ consigliabile inserirlo in fondo alla pagina, subito prima della chiusura del tag\nbody\nAl caricamento della pagina chiamamo il metodo wmark.init\nLa variabile load agisce come un flag e serve a evitare che il codice venga eseguito ad ogni postback. Infine aggiorniamo i tag HTML delle immagini a cui vogliamo aggiungere il nostro watermark\nE questo è tutto.\nSul sito ufficiale sono disponibili un paio di demo funzionanti. La seconda mostra un uso senz’altro originale della libreria: l’inserimento di Codici QR nelle immagini. Trattandosi di un progetto open source è possibile scaricare anche il codice sorgente di watermark.js.\nNon tutto è oro quel che luccica Essendo implementata lato client, la protezione delle immagini non è certo garantita al cento per cento. Dobbiamo decidere cosa è più importante, l’inviolabilità delle nostre immagini o la comodità di non doverle ritoccare prima di inviarle al server. Altro fattore da non trascurare è il calo di prestazioni. Il codice JavaScript deve caricare il watermark e inserirlo nell’immagine originale. Il tempo di caricamento potrebbe risentirne, soprattutto nel caso di pagine ricche di immagini.\nWatermark.js è un progetto interessante e ingegnoso che va usato tenendo ben presente i suoi pregi e tutte le possibili controindicazioni.\n","permalink":"https://nicolaiarocci.com/il-marchio-nelle-immagini-via-javascript/","summary":"\u003cp\u003e\u003cstrong\u003e\u003ca href=\"http://www.patrick-wied.at/static/watermarkjs/\"\u003eWatermark.js\u003c/a\u003e\u003c/strong\u003e è una libreria JavaScript che aggiunge un \u003c!-- raw HTML omitted --\u003ewatermark\u003c!-- raw HTML omitted --\u003e (letteralmente \u003cem\u003efiligrana\u003c/em\u003e, ovvero un logo o un marchio) alle immagini presenti sulle pagine web. Contrassegnare le immagini in modo permanente è utile a proteggerle dalla copia oppure, al contrario, ad approfittare della loro riproduzione per diffondere un marchio (\u003ca href=\"http://en.wikipedia.org/wiki/Brand_awareness\"\u003ebrand awareness\u003c/a\u003e). Usare watermark.js è semplice, vediamo quanto.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"come-usare-watermarkjs\"\u003eCome usare watermark.js\u003c/h2\u003e\n\u003cp\u003eLa libreria innesta il marchio nelle immagini marcate con la classe CSS “watermark”. Se il nome della classe non piace è possibile cambiarlo. Se il nostro watermark è in formato JPG la libreria aggiunge per noi un livello di trasparenza, altrimenti possiamo fornirle i più idonei formati PNG e GIF.\u003c/p\u003e","title":"Inserire un marchio nelle immagini via JavaScript"},{"content":"A una settimana esatta dall’uscita della estensione per Chrome di Page Speed Google stupisce tutti aprendo al pubblico Speed Online, versione web del suo servizio di analisi delle performance dei siti. La versione live di Google Speed non si limita a misurare la velocità delle pagine ma offre consigli per migliorarne le prestazioni, come già fatto dalle estensioni Firefox e Chrome.\nIn questi giorni ho avuto modo di testare Page Speed per Chrome su un certo numero di siti, sia sviluppati da me che da altri. Mi sono reso conto che non sempre i consigli, pur validi, sono facilmente applicabili. Molte inefficienze non sono sotto il nostro controllo perché i contenuti sono forniti da terze parti – annunci pubblicitari, pulsanti, widgets e così via. La stessa Google ha ottimizzato le prestazioni di AdSense solo recentemente, prima non era certo un fulmine di guerra.\nAltri suggerimenti sono alla nostra portata ma quando ci mettiamo al lavoro ci rendiamo conto che rischiamo di impiegare un mucchio di tempo per ottenere miglioramenti appena percettibili. Un esempio? Il consiglio di combinare le diverse immagini di una pagina in un singolo sprite CSS. E’ abbastanza veloce raccogliere in un file tutte le immagini ma quando ci mettiamo a cambiare il codice HTML, CSS e JavaScript per caricare le porzioni dello sprite nei posti giusti ecco che il tempo necessario a portare a termine (e testare) il lavoro si dilata inesorabilmente.\nFinché si lavora su pagine semplici i consigli di servizi come Page Speed (una menzione d’onore la merita YSlow) sono rapidi da implementare. Quando si tratta di ottimizzare siti complessi le cose si fanno più complicate. Il problema è che non c’è modo di predire con precisione quanto miglioreranno le prestazioni. Riprendendo l’esempio delle immagini, Page Speed fornisce una stima dei Kb che risparmierei creando un unico sprite CSS ma non può dirmi quanto tempo risparmierà l’utente che visitera il sito. Otterrò un miglioramento effettivamente percepibile?\nCum grano salis L’esperienza ci aiuterà a scegliere quali ottimizzazioni implementare e quali tralasciare. Se fin dall’inizio avremo fatto bene il nostro lavoro non rimarrà molto da migliorare. Se al contrario ci ritroveremo con decine di consigli di ottimizzazione beh, vorrà dire che la prossima volta dovremo lavorare meglio. In ogni caso usiamo questi strumenti con saggezza non lasciandoci prendere ciecamente dal “demone ottimizzatore”.\n","permalink":"https://nicolaiarocci.com/google-speed-ora-e-anche-online/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eA una settimana esatta dall’uscita della \u003ca href=\"http://nicolaiarocci.com/google-page-speed-ora-gira-anche-su-chrome/\"\u003eestensione per Chrome di Page Speed\u003c/a\u003e Google stupisce tutti aprendo al pubblico \u003cstrong\u003e\u003c!-- raw HTML omitted --\u003eSpeed Online\u003c!-- raw HTML omitted --\u003e\u003c/strong\u003e, versione web del suo servizio di analisi delle performance dei siti. La versione \u003cem\u003elive\u003c/em\u003e di Google Speed non si limita a misurare la velocità delle pagine ma offre consigli per migliorarne le prestazioni, come già fatto dalle estensioni Firefox e Chrome.\u003c/p\u003e\n\u003cp\u003eIn questi giorni ho avuto modo di testare Page Speed per Chrome su un certo numero di siti, sia sviluppati da me che da altri. Mi sono reso conto che non sempre i consigli, pur validi, sono facilmente applicabili. Molte inefficienze non sono sotto il nostro controllo perché i contenuti sono forniti da terze parti – annunci pubblicitari, pulsanti, widgets e così via. La stessa Google ha \u003ca href=\"http://adsense.blogspot.com/2011/03/making-web-faster-for-all-adsense-for.html\"\u003eottimizzato le prestazioni di AdSense\u003c/a\u003e solo recentemente, prima non era certo un fulmine di guerra.\u003c/p\u003e","title":"Google Speed ora è anche Online"},{"content":"Flux è una applicazione gratuita per Windows, OSX e Linux che regola il colore dello schermo in base all’ora del giorno. Detta così può sembrare una sciocchezza, ma vi assicuro che se lavorate spesso nel cuore della notte questa è un’applicazione alla quale non dovreste rinunciare.\nAvete mai notato che di notte, in una stanza poco illuminata, le persone che lavorano al computer sembrano circondate da un inquietante alone blu? Gli schermi per computer garantiscono una buona visione diurna vincendo la luce solare con colori brillanti e freddi (a dominante blu). Di notte, col buio o poca luce, tutto ciò affatica la vista. Mai capitato di alzarvi presto per scrivere codice o finire un articolo e dopo pochi minuti di lavoro ritrovarvi con gli occhi arrossati e irritati?\nFlux usa la vostra posizione geografica e l’orologio del computer per determinare le condizioni di luce in cui vi trovate, adattando di conseguenza i colori dello schermo. La prima esperienza con Flux può essere disarmante. Cala la notte e rimanete (molto) perplessi dall’aggiustamento che avviene. Concedete a cervello e occhi il tempo necessario ad abituarsi, dopo qualche minuto non ci farete più caso. Dopo un’ora provate a disattivare Flux usando l’opzione Disable for an hour e… godetevi la cottura rapida della vostra retina. Un esperimento doloroso che non vorrete più ripetere.\nQualche consiglio Flux determina la posizione geografica automaticamente, oppure potete impostarla a mano se (come capita al sottoscritto) il vostro provider vi colloca a 200km di distanza dalla posizione reale. Vi consiglio di impostare una transizione oraria (slow), che renderà più graduale il passaggio dalle condizioni diurne a quelle notturne. In base ai vostri gusti e alle condizioni di luce in cui operate potete scegliere tra quattro colorazioni notturne: Tungsten, Halogen, Fluorescent, Daylight. Io mi trovo bene con Fluorescent ma vi consiglio di provarle tutte. Abilitate l’opzione per lanciare Flux all’avvio del sistema operativo, così diventerà parte integrante delle vostre abitudini. I vostri occhi vi ringrazieranno.\nPer molti ma non per tutti Se vi dedicate alla grafica Flux probabilmente non fa per voi, la resa dei colori non è il suo punto di forza. Flux è perfetta per chi scrive e naviga di notte. Sul sito ufficiale sostengono che l’ottimizzazione notturna dei colori concilia il ritmo sonno-veglia. Non so se sia vero ma so per certo che da quando ho installato Flux, una settimana fa, non riesco più a lavorare di notte se questa utility non è attivata. Se la provate fatemi sapere cosa ne pensate!\n","permalink":"https://nicolaiarocci.com/flux-il-monitor-diventa-crepuscolare/","summary":"\u003cp\u003e\u003cstrong\u003e\u003c!-- raw HTML omitted --\u003e\u003ca href=\"http://stereopsis.com/flux/\"\u003eFlux\u003c/a\u003e\u003c/strong\u003e è una applicazione gratuita per \u003cstrong\u003eWindows\u003c/strong\u003e, \u003cstrong\u003eOSX\u003c/strong\u003e e \u003cstrong\u003eLinux\u003c/strong\u003e che regola il colore dello schermo in base all’ora del giorno. Detta così può sembrare una sciocchezza, ma vi assicuro che se lavorate spesso nel cuore della notte questa è un’applicazione alla quale non dovreste rinunciare.\u003c/p\u003e\n\u003cp\u003eAvete mai notato che di notte, in una stanza poco illuminata, le persone che lavorano al computer sembrano circondate da un inquietante alone blu? Gli schermi per computer garantiscono una buona visione diurna vincendo la luce solare con colori brillanti e freddi (a dominante blu). Di notte, col buio o poca luce, tutto ciò affatica la vista. Mai capitato di alzarvi presto per scrivere codice o finire un articolo e dopo pochi minuti di lavoro ritrovarvi con gli occhi arrossati e irritati?\u003c/p\u003e","title":"Flux: il monitor diventa crepuscolare"},{"content":"Una settimana fa abbiamo lanciato il nuovo sito del Gestionale Amica, il nostro prodotto di punta. E’ scritto in ASP.NET ed è dotato di un sistema di e-commerce sviluppato su misura. Carrello della spesa, checkout, pagamenti con carta di credito, tracciamento ordini, profilo utenti… un lavoro del quale sono piuttosto orgoglioso. Man mano che il giorno del debutto si avvicinava cresceva l’eccitazione; ero impaziente di vederlo funzionare questo gioiellino. Finalmente il 21 marzo è arrivato e con la primavera è sbocciato il nuovo sito. Come è andata? Bene! A parte un piccolo dettaglio. Il mio gioiellino vendeva in Dollari ($) anziché in Euro (€)\nCome è potuto succedere? In fatto di localizzazione una pagina ASP.NET non è diversa da una normale applicazione WinForms. In assenza di indicazioni diverse il .NET Framework rappresenta le valute in base alle impostazioni internazionali del computer che lo ospita. Durante sviluppo e collaudo non abbiamo avuto problemi perché lavoravamo su server aziendali locali. Tuttavia il server di produzione è americano, ed è così che pubblicando il sito ci siamo regalati un bel cambiamento di valuta, il tutto senza toccare una linea di codice.\nRestituisce €1.567,50 in Italia e $1,567.50 negli Stati Uniti. Probabilmente a questo punto vi starete dicendo due cose:\nMa perché hai pubblicato un sito in italiano, per un pubblico italiano, negli Stati Uniti? Te lo dovevi aspettare, cosa volevi che succedesse? Qualunque sviluppatore con un minimo di esperienza sa queste cose. A proposito del primo punto ci sarebbe da scrivere un articolo intero (e magari lo farò). Basti sapere per ora che, malgrado le apparenze, ci sono (anche) buone ragioni per pubblicare siti italiani all’estero. Sul secondo punto naturalmente avreste ragione. Il fatto è che, nel grande schema delle cose, sono proprio i piccoli dettagli quelli che possono sfuggire. Per fortuna porre rimedio è stato semplice e indolore. Vediamo.\nE’ tutta questione di Culture In ogni pagina ASP.NET è possibile impostare il valore delle proprietà Culture e UICulture. Culture determina l’output delle funzioni influenzate dalla cultura: date, numeri, valute, orari. UICulture istruisce la pagina su quali risorse culturali caricare.\nImpostare Culture e UICulture per tutto il sito Intervenendo direttamente nel file Web.Config possiamo dire a ASP.NET quale è la cultura da usare in tutto il sito. In questo modo non dovremo preoccuparci di intervenire su ogni in pagina.\nAttenzione alle maiuscole. uiCulture va bene; uiculture non va bene. Non sprecate mezz’ora per una sciocchezza del genere, l’ho già fatto io per voi.\nImpostare Culture e UICulture per una pagina Per modificare Culture e UICulture di una singola pagina è necessario impostare i corrispondenti attributi della direttiva @ Page\nQuesta tecnica può naturalmente venire usata in abbinamento alla precedente anche se devo dire che non mi viene in mente un motivo, uno scenario valido in cui ciò potrebbe essere utile.\nAdattare l’output alla lingua del browser Per adattare la cultura al linguaggio del browser che visita la pagina basta impostare UICulture e Culture su auto (non l’ho testato personalmente). E’ anche possibile cambiare la cultura dinamicamente via codice. Se volete sapere come fare consultate la documentazione ufficiale.\nDimenticavo… C’è un’altra cosuccia che non ha funzionato perfettamente al momento del debutto. Immaginate la sorpresa del cliente che, ordinando un prodotto da €499 + IVA, si è visto proporre l’addebito su carta di credito per €1 (uno) IVA inclusa. Ma questa è un’altra storia…\n","permalink":"https://nicolaiarocci.com/il-formato-valuta-in-asp-net-quando-il-sito-e-allestero/","summary":"\u003cp\u003eUna settimana fa abbiamo lanciato il nuovo sito del \u003ca href=\"http://gestionaleamica.com\" title=\"Gestionale Amica\"\u003eGestionale Amica\u003c/a\u003e, il nostro prodotto di punta. E’ scritto in \u003cstrong\u003eASP.NET\u003c/strong\u003e ed è dotato di un sistema di e-commerce sviluppato su misura. Carrello della spesa, checkout, pagamenti con carta di credito, tracciamento ordini, profilo utenti… un lavoro del quale sono piuttosto orgoglioso. Man mano che il giorno del debutto si avvicinava cresceva l’eccitazione; ero impaziente di vederlo funzionare questo gioiellino. Finalmente il 21 marzo è arrivato e con la primavera è sbocciato il nuovo sito. Come è andata? Bene! A parte un piccolo dettaglio. Il mio gioiellino vendeva in Dollari ($) anziché in Euro (€)\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Il Formato Valuta in ASP.NET quando il sito è all’estero"},{"content":"Page Speed è un servizio Google per la ottimizzazione delle prestazioni delle pagine web. E’ molto apprezzato dagli sviluppatori di tutto il mondo che finora l’hanno usato su web server Apache oppure sotto forma di estensione per Firefox. Finalmente Google ha annunciato l’estensione sperimentale Page Speed per Chrome, disponibile anche in italiano.\nInstallazione Trattandosi di una estensione sperimentale l’installazione è più laboriosa del solito. Nella barra degli indirizzi digitate about:flags e premete invio. Abilitate l’opzione API sperimentali di estensione quindi scorrete fino in fondo alla pagina e cliccate sul pulsante Riavvia adesso. Dopo il riavvio sarà finalmente possibile scaricare l’estensione e completare l’installazione. Per attivare Page Speed andate sulla pagina web che volete collaudare e aprite gli Strumenti per sviluppatori. Per maggiori informazioni consultate la pagina ufficiale dell’estensione.\nPerché la velocità del tuo sito è importante I siti veloci migliorano l’esperienza dell’utente e questo piace molto ai motori di ricerca, che già oggi misurano le prestazioni di ogni sito indicizzato. I risultati di queste misurazioni sono uno degli indicatori usati per determinare l’importanza dei siti web e quindi la loro posizione nei risultati delle SERP. Il fatto che Google stessa sia impegnata a fornire strumenti avanzati di ottimizzazione e misurazione la dice lunga su quanto questo indicatore sarà sempre più determinante nel prossimo futuro.\nSe non siete convinti considerate questo: solo qualche giorno fa anche Yahoo a rilasciato la versione per Chrome di YSlow, la sua sua estensione per la ottimizzazione delle pagine web. Se due indizi non fanno una prova, poco ci manca.\n","permalink":"https://nicolaiarocci.com/google-page-speed-ora-gira-anche-su-chrome/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003ca href=\"http://code.google.com/speed/page-speed/\"\u003ePage Speed\u003c/a\u003e è un servizio Google per la ottimizzazione delle prestazioni delle pagine web. E’ molto apprezzato dagli sviluppatori di tutto il mondo che finora l’hanno usato su web server Apache oppure sotto forma di estensione per Firefox. Finalmente Google ha \u003ca href=\"http://googlewebmastercentral.blogspot.com/2011/03/page-speed-for-chrome-and-in-40.html\"\u003eannunciato\u003c/a\u003e l’estensione sperimentale \u003c!-- raw HTML omitted --\u003ePage Speed per Chrome\u003c!-- raw HTML omitted --\u003e, disponibile anche in italiano.\u003c/p\u003e","title":"Google Page Speed ora gira anche su Chrome"},{"content":"Eclipse Foundation ha avviato il beta testing di OrionHub, una implementazione hosted del suo Progetto Orion. Orion è una piattaforma di sviluppo aperta dedicata allo sviluppo per il web, dentro il web. La IDE Orion gira nel browser e fornisce un completo ambiente di produzione per progetti JavaScript, HTML e CSS. Il risultato è ottenuto grazie a un plugin lato client sviluppato in HTML5.\nPer un approfondimento dai una occhiata a Il futuro del codice sorgente è online?, la panoramica sul Progetto Orion e sulle IDE Online che ho pubblicato qualche tempo fa.\n","permalink":"https://nicolaiarocci.com/eclipse-foundation-lancia-la-beta-pubblica-di-orionhub/","summary":"\u003cp\u003e\u003ca href=\"http://www.eclipse.org/\"\u003eEclipse Foundation\u003c/a\u003e ha avviato il beta testing di \u003ca href=\"http://www.eclipse.org/orion/\"\u003e\u003cstrong\u003eOrionHub\u003c/strong\u003e\u003c/a\u003e, una implementazione hosted del suo Progetto Orion. Orion è una piattaforma di sviluppo aperta dedicata allo sviluppo per il web, dentro il web. La IDE Orion gira nel browser e fornisce un completo ambiente di produzione per progetti JavaScript, HTML e CSS. Il risultato è ottenuto grazie a un plugin lato client sviluppato in HTML5.\u003c/p\u003e\n\u003cp\u003ePer un approfondimento dai una occhiata a \u003c!-- raw HTML omitted --\u003eIl futuro del codice sorgente è online?\u003c!-- raw HTML omitted --\u003e, la panoramica sul Progetto Orion e sulle IDE Online che ho pubblicato qualche tempo fa.\u003c/p\u003e","title":"Eclipse Foundation lancia la beta pubblica di OrionHub"},{"content":"SublimeText 2 è il mio nuovo text editor preferito. Veloce, ricco di funzioni avanzate eppure semplice grazie a una interfaccia gradevole e minimalista. Mi ci sono imbattuto per caso quando ormai avevo rinunciato a trovare un valido sostituto a TextMate. Cercavo da tempo una soluzione multi piattaforma che mi consentisse di lavorare nello stesso ambiente sia a casa (OSX) che in ufficio (Windows). SublimeText 2 gira su Windows, OSX e Linux e sta raccogliendo attorno a sé una comunità molto attiva di supporters e sviluppatori entusiasti.\nMi ha colpito l’interfaccia, davvero al servizio dei contenuti. La Minimap è una trovata originale che offre una vista “da diecimila metri di quota” sul codice. Immaginate di levarvi in volo e osservare il vostro codice dall’alto: apparirà come una ‘lenzuolata’ sulla quale potete cliccare per spostarvi rapidamente da una zona all’altra del vostro documento. Notevole anche il doppio (o triplo) pannello che consente di lavorare in linea su più files.\n\u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Doppio pannello per lavorare su più files contemporaneamente \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1639\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignnone\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-SyntaxHighlighting.png\u0026quot; rel=\u0026quot;lightbox[1637]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-full wp-image-1639 \u0026quot; title=\u0026quot;SublimeText 2- Syntax Highlighting\u0026quot; src=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-SyntaxHighlighting.png?w=210\u0026quot; alt=\u0026quot;SublimeText 2- Syntax Highlighting\u0026quot; srcset=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-SyntaxHighlighting.png?w=900 900w, http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-SyntaxHighlighting.png?resize=150%2C93 150w, http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-SyntaxHighlighting.png?resize=300%2C187 300w, http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-SyntaxHighlighting.png?resize=480%2C300 480w\u0026quot; sizes=\u0026quot;(max-width: 525px) 100vw, 525px\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Syntax Highlighting di PHP, HTML e JavaScript nella stessa finestra \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1642\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignnone\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-RegEx.png\u0026quot; rel=\u0026quot;lightbox[1637]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-full wp-image-1642 \u0026quot; title=\u0026quot;SublimeText 2 - RegEx\u0026quot; src=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-RegEx.png?w=210\u0026quot; alt=\u0026quot;SublimeText 2 - RegEx\u0026quot; srcset=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-RegEx.png?w=900 900w, http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-RegEx.png?resize=150%2C93 150w, http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-RegEx.png?resize=300%2C187 300w, http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-RegEx.png?resize=480%2C300 480w\u0026quot; sizes=\u0026quot;(max-width: 525px) 100vw, 525px\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Ricerca e sostituzione con le Regular Expression \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1643\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignnone\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;images/SublimeText2-MultipleSelections.png\u0026quot; rel=\u0026quot;lightbox[1637]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-full wp-image-1643 \u0026quot; title=\u0026quot;SublimeText 2 - Selezione Multipla\u0026quot; src=\u0026quot;http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-MultipleSelections.png?fit=210%2C131\u0026quot; alt=\u0026quot;SublimeText 2 - Selezione Multipla\u0026quot; srcset=\u0026quot;http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-MultipleSelections.png?w=900 900w, http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-MultipleSelections.png?resize=150%2C93 150w, http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-MultipleSelections.png?resize=300%2C187 300w, http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/SublimeText2-MultipleSelections.png?resize=480%2C300 480w\u0026quot; sizes=\u0026quot;(max-width: 210px) 100vw, 210px\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Selezione multipla e Minimap facilitano notevolmente il lavoro \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;p\u0026gt; Tra le altre caratteristiche degne di nota segnalo la ricerca e sostituzione via \u0026lt;strong\u0026gt;regular expression\u0026lt;/strong\u0026gt;, la selezione multipla, il \u0026lt;strong\u0026gt;completamento automatico\u0026lt;/strong\u0026gt;, gli \u0026lt;strong\u0026gt;snippet già pronti\u0026lt;/strong\u0026gt;, l\u0026amp;#8217;\u0026lt;strong\u0026gt;automazione\u0026lt;/strong\u0026gt; dei processi frequenti, l\u0026amp;#8217;evidenziazione degli elementi del linguaggio (\u0026lt;strong\u0026gt;syntax highlighting\u0026lt;/strong\u0026gt;) per ASP, Python, JavaScript, HTML, Java, C#, C++, JSON e molti altri linguaggi. Ci sono decine di \u0026lt;strong\u0026gt;plugin\u0026lt;/strong\u0026gt; e il prodotto è seguito con \u0026lt;strong\u0026gt;aggiornamenti frequenti\u0026lt;/strong\u0026gt; (che al mio adorato TextMate mancano ormai da troppo da tempo). \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Unica controindicazione che ho riscontrato finora è la non completa aderenza alle combinazioni di tastiera standard a cui OSX mi ha abituato. Per esempio la combinazione di tasti Command-, (virgola) non richiama le Preferenze come invece succede con qualunque programma Mac-nativo. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Se siete alla ricerca di un text editor evoluto non fatevi scappare questa piccola gemma. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;em\u0026gt;PS: ho scritto un seguito a questo articolo: \u0026lt;a title=\u0026quot;Sublime Text 2 un anno dopo\u0026quot; href=\u0026quot;http://nicolaiarocci.com/sublime-text-2-un-anno-dopo/\u0026quot;\u0026gt;Sublime Text 2 un anno dopo\u0026lt;/a\u0026gt;.\u0026lt;/em\u0026gt; \u0026lt;/p\u0026gt; ","permalink":"https://nicolaiarocci.com/sublimetext-2-un-sofisticato-text-editor-per-codice-html-e-prosa/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eSublimeText 2\u003c!-- raw HTML omitted --\u003e è il mio nuovo text editor preferito. Veloce, ricco di \u003ca href=\"http://www.sublimetext.com/features\"\u003efunzioni avanzate\u003c/a\u003e eppure semplice grazie a una interfaccia gradevole e minimalista. Mi ci sono imbattuto per caso quando ormai avevo rinunciato a trovare un valido sostituto a TextMate. Cercavo da tempo una soluzione \u003cstrong\u003emulti piattaforma\u003c/strong\u003e che mi consentisse di lavorare nello stesso ambiente sia a casa (OSX) che in ufficio (Windows). SublimeText 2 gira su \u003cstrong\u003eWindows\u003c/strong\u003e, \u003cstrong\u003eOSX\u003c/strong\u003e e \u003cstrong\u003eLinux\u003c/strong\u003e e sta raccogliendo attorno a sé una \u003ca href=\"http://www.sublimetext.com/forum/\"\u003ecomunità molto attiva\u003c/a\u003e di supporters e sviluppatori entusiasti.\u003c/p\u003e","title":"SublimeText 2 – Un sofisticato text editor per codice, HTML e prosa"},{"content":"Python Tools per Visual Studio è un plugin gratuito e open source che consente di programmare in Python usando la IDE Microsoft. Nel corso della lunga gestazione di Visual Studio 2010 si era rumoreggiato di un possibile supporto nativo per il linguaggio Python. Qualcosa di vero doveva esserci visto che il progetto è appena stato presentato al PyCon 2011, la più importante conferenza Python al mondo, nientemeno che dal Microsoft Technical Computing Group.\nProgetti e Soluzioni Python Tools è perfettamente integrato nel sistema a progetti tipico di Visual Studio. I file di progetto Python hanno estensione .pyproj e supportano parecchi tipi di applicazione (Console, WPF, MPI, WinForms, ecc.)\nEditor Python Tools supporta gran parte delle caratteristiche che hanno reso famoso l’editor di Visual Studio: evidenziazione degli elementi del linguaggio (syntax color highlighting), riconoscimento di classi e funzioni, navigazione dei metodi nella barra di navigazione, suggerimenti al passaggio del mouse, ricerca di definizioni e occorrenze, IntelliSense.\nDebugger Il potente debugger di Visual Studio è utilizzabile con Python. Valutazione di espressioni (anche nella finestra interattiva), ispezione delle variabili, impostazione dell’istruzione successiva, uscita ed entrata da cicli di codice e/o funzioni (step in, step out).\nObject Browser Python Tools supporta l’uso del Object Browser di Visual Studio 2010. Per ogni modulo è disponibile l’elenco delle classi e, per ogni classe, delle funzioni definite. Il pannello sinistro mostra i moduli e le classi mentre quello destro elenca gli attributi della classe selezionata.\nVisto chi l’ha realizzato non stupisce che Python Tools per Visual Studio offra anche funzionalità avanzate quali il Profiling (solo su Visual Studio 2010 Ultimate), cluster computing e cloud computing. Clustering e scaling sono già implementati mentre per il supporto di Windows Azure bisognerà aspettare il prossimo aggiornamento. Già disponibili i port per .NET delle librerie NumPy e SciPy.\nPython Tools per Visual Studio non è una distruzione completa di Python. E comunque necessario installare CPython o IronPython. Questa è una buona notizia perché potrai lavorare sia nel modo tradizionale (magari con colleghi abituati ad altre IDE) sia con Visual Studio.\nUna grande opportunità Se vieni dal mondo .NET e sei incuriosito dal linguaggio Python (dovresti esserlo!) questa è la tua occasione. Puoi lavorare con Python senza rinunciare al tuo ambiente preferito e puoi concentrarti sulle caratteristiche del linguaggio risparmiandoti l’apprendimento di una nuova IDE. A dire il vero anche IronPython dispone di un suo plugin per VisualStudio ma ora hai l’opportunità di lavorare con CPython, il Python originale.\nPer muovere i primi passi comincia con Impara Python in 10 minuti, guida rapida per il programmatore proveniente da altri linguaggi.\n","permalink":"https://nicolaiarocci.com/python-tools-per-visual-studio-2010/","summary":"\u003cp\u003e\u003cstrong\u003e\u003ca href=\"http://pytools.codeplex.com/\"\u003ePython Tools per Visual Studio\u003c/a\u003e\u003c/strong\u003e è un plugin gratuito e open source che consente di programmare in Python usando la IDE Microsoft. Nel corso della lunga gestazione di Visual Studio 2010 si era rumoreggiato di un possibile supporto nativo per il linguaggio Python. Qualcosa di vero doveva esserci visto che il progetto è appena stato presentato al \u003ca href=\"http://us.pycon.org/2011/home/\"\u003e\u003cstrong\u003ePyCon 2011\u003c/strong\u003e\u003c/a\u003e, la più importante conferenza Python al mondo, nientemeno che dal \u003ca href=\"http://www.microsoft.com/hpc\"\u003eMicrosoft Technical Computing Group\u003c/a\u003e.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Programmare in Python con Visual Studio 2010"},{"content":" Facebook sta uccidendo la tua Autenticità Steve Cheney propone una riflessione su come Facebook condizioni ormai _l\u0026amp;#8217;autenticità_ dei suoi utenti. Il timore che conoscenti e amici (alcuni non li incontriamo da anni, altri sono parenti stretti) vedano quel che facciamo online ci induce a comportarci in maniera diversa da quel che sarebbe il nostro istintivo sentire. Tutorial: Microsoft Excel per il SEO Eccellente tutorial su come usare Excel per analizzare al meglio la quantità di dati che raccogliamo durante le nostre indagini SEO. 10 consigli per velocizzare il caricamento delle pagine Web La pazienza è la virtù dei forti, ma per molti è una pratica difficile da applicare. Ciò è vero soprattutto per chi visita siti web. Six Revision ci propone una decina di consigli per velocizzare le nostre pagine web. Adobe rilascia un convertitore da Flash a HTML5\nE con questa Adobe ammette, sia pur implicitamente, la morte di Flash. Se mi segui da un pò la mia opinione la conosci già. L’altro giorno al BE-Wizard 2011 il grande Avinash Kaushik ha dichiarato (ero in platea): “ogni volta che usi Flash su una pagina Web, un dolce cucciolo muore”.\nTutorial: Aumentare le prestazioni delle applicazioni HTML5\nHTML5 ci offre splendidi strumenti per migliorare l\u0026amp;#8217;aspetto delle applicazioni web. Animazioni ed effetti richiedono attenzione alle prestazioni. Ecco un ottimo e approfondito tutorial su come evitare il rischio di passare dalla padella alla brace. Apple rilascia Xcode 4 Xcode 4 è la nuova versione del framework Apple per la creazione di applicazioni Mac, iPhone, and iPad. Include la Xcode IDE, Instruments, il simulatore di iOS e le ultime versioni degli SDK per Mac OS X e iOS**.** Ecco perché tutti parlano di Node Al ventesimo piano di un grattacielo di San Francisco un gruppo di sviluppatori sta lavorando a una nuova tecnologia che sta cambiando (forse) il modo in cui le applicazioni web in real-time saranno costruite e distribuite. Tutti ne parlano. Ecco perché. 11 Tools Online per Programmatori I tools online sono ideali per sbrigare rapidamente piccoli lavoretti. Questo articolo ne presenta una selezione originale. SEO: Massimizzare il CTR nelle ricerche organiche Non perdetevi questo articolo se lavorate in ambito SEO/SERP. _Enough said_. Hai un Blog o un sito web? Aiuta il Giappone con un semplice Banner Puoi dare una mano inserendo uno snippet di codice che mostra un banner che invita a partecipare alla raccolta fondi per il Giappone avviata dalla Croce Rossa. ","permalink":"https://nicolaiarocci.com/programmazione-seo-startup-il-meglio-della-settimana-4/","summary":"\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e\u003c!-- raw HTML omitted --\u003e\u003ca href=\"http://stevecheney.posterous.com/how-facebook-is-killing-your-authenticity\"\u003eFacebook sta uccidendo la tua Autenticità\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eSteve Cheney propone una riflessione su come Facebook condizioni ormai _l\u0026amp;#8217;autenticità_ dei suoi utenti. Il timore che conoscenti e amici (alcuni non li incontriamo da anni, altri sono parenti stretti) vedano quel che facciamo online ci induce a comportarci in maniera diversa da quel che sarebbe il nostro istintivo sentire.\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e\u003ca href=\"http://www.distilled.co.uk/excel-for-seo/\"\u003e\u003cstrong\u003eTutorial: Microsoft Excel per il SEO\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eEccellente tutorial su come usare Excel per analizzare al meglio la quantità di dati che raccogliamo durante le nostre indagini SEO.\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e\u003ca href=\"http://sixrevisions.com/web-development/decrease-webpage-load-times/\"\u003e\u003cstrong\u003e10 consigli per velocizzare il caricamento delle pagine Web\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode\u003eLa pazienza è la virtù dei forti, ma per molti è una pratica difficile da applicare. Ciò è vero soprattutto per chi visita siti web. Six Revision ci propone una decina di consigli per velocizzare le nostre pagine web.\n\u003c/code\u003e\u003c/pre\u003e","title":"Programmazione, SEO, Startup – Il Meglio della Settimana #4"},{"content":"E così vorresti imparare il linguaggio di programmazione Python. Probabilmente sei alla ricerca di un tutorial completo e allo stesso tempo conciso. Questa guida è un tentativo di insegnarti Python in 10 minuti. In effetti più che con una guida vera e propria hai a che fare con degli appunti che userai per partire col piede giusto. Naturalmente se davvero vuoi imparare bene dovrai anche esercitarti molto. Do per scontato che tu sappia già programmare, questo mi permetterà di concentrarmi sulle caratteristiche intrinseche del linguaggio. Troverai le parole chiave evidenziate così potrai individuarle facilmente. Fai attenzione perché per brevità alcune cose verranno introdotte e commentate direttamente nel codice di esempio.\nAttribuzione Questo articolo è una traduzione autorizzata di Learn Python in 10 minutes. Ringrazio l\u0026rsquo;amico Stavros Korokithakis per il permesso di accordatomi.\nCaratteristiche Python è un linguaggio fortemente e dinamicamente tipizzato (i tipi dati esistono e sono necessari ma non è necessario dichiararli esplicitamente), case sensitive (var e VAR sono due variabili diverse) e object oriented (tutto in Python è un oggetto).\nCome ottenere aiuto L\u0026rsquo;interprete di Python fornisce già un valido sistema di aiuto. Per sapere come usare un oggetto basta digitare help(). Sono utili anche dir, che elenca gli attributi (metodi) disponibili per l\u0026rsquo;oggetto, e .__doc__ che mostra la documentazione completa quando disponibile:\n\u0026gt;\u0026gt;\u0026gt; help(5) Help on int object: (etc etc) \u0026gt;\u0026gt;\u0026gt; dir(5) ['__abs__', '__add__', ...] \u0026gt;\u0026gt;\u0026gt; abs.__doc__ 'abs(number) -\u0026gt; number\\n\\nReturn the absolute value of the argument.' Sintassi In Python *non ci sono terminatori di riga obbligatori e i blocchi sono specificati con l\u0026rsquo; indentazione. Indenta per cominciare un blocco e rimuovi l\u0026rsquo;indentazione per concluderlo, tutto qui. Le istruzioni che richiedono un blocco indentato terminano con i due punti (:). I commenti cominciano col cancelletto (#) e sono a linea singola. Stringhe su più righe sono usate per i commenti multi linea. Le assegnazioni si compiono col simbolo di uguale (=). Per i test di uguaglianza si usa il doppo uguale (==). Puoi aumentare e diminuire un valore usando gli operatori += e -= seguiti dall\u0026rsquo;addendo. Ciò funziona con molti tipi di dati, stringhe incluse. Puoi assegnare e usare più variabili sulla stessa riga. Alcuni esempi:\n\u0026gt;\u0026gt;\u0026gt; myvar = 3 \u0026gt;\u0026gt;\u0026gt; myvar += 2 \u0026gt;\u0026gt;\u0026gt; myvar 5 \u0026gt;\u0026gt;\u0026gt; myvar -= 1 \u0026gt;\u0026gt;\u0026gt; myvar 4 \u0026quot;\u0026quot;\u0026quot;Questo è un commento su più righe. Le righe seguenti vengono concatenate.\u0026quot;\u0026quot;\u0026quot; \u0026gt;\u0026gt;\u0026gt; mystring = \u0026quot;Hello\u0026quot; \u0026gt;\u0026gt;\u0026gt; mystring += \u0026quot; world.\u0026quot; \u0026gt;\u0026gt;\u0026gt; print mystring Hello world. # Il codice seguente scambia due variabili in una sola riga. # Non ci sono errori di conversione di tipo perché # i nuovi valori non vengono assegnati. Vengono creati # nuovi oggetti ai quali le variabili fanno ora riferimento. \u0026gt;\u0026gt;\u0026gt; myvar, mystring = mystring, myvar Tipi di dati Le strutture più significative in Python sono liste, tuple e dizionari. I Set sono integrati in Python a partire dalla versione 2.5 (per le versioni precedenti sono disponibili nella libreria sets). Le Liste sono simili ad array mono dimensionali ma è possibile creare liste che contengono altre liste. I dizionari sono array che contengono coppie di chiavi e valori (hash table) e le tuple sono oggetti immutabili mono dimensionali. In Python gli array possono essere di qualunque tipo, quindi puoi mischiare interi, stringhe, ecc nelle tue liste/dizionari e tuple. L\u0026rsquo;indice del primo oggetto in qualunque tipo di array è sempre zero. Gli indici negativi sono ammessi e contano a partire dalla fine dell\u0026rsquo;array, -1 indica l\u0026rsquo;ultimo elemento dell\u0026rsquo;array. Le variabili possono fare riferimento a funzioni.\n\u0026gt;\u0026gt;\u0026gt; esempio = [1, [\u0026quot;un'altra\u0026quot;, \u0026quot;lista\u0026quot;], (\u0026quot;una\u0026quot;, \u0026quot;tupla\u0026quot;)] \u0026gt;\u0026gt;\u0026gt; mialista = [\u0026quot;Elemento 1\u0026quot;, 2, 3.14] \u0026gt;\u0026gt;\u0026gt; mialista[0] = \u0026quot;Ancora elemento 1\u0026quot; \u0026gt;\u0026gt;\u0026gt; mialista[-1] = 3.15 \u0026gt;\u0026gt;\u0026gt; miodizionario = {\u0026quot;Key 1\u0026quot;: \u0026quot;Valore 1\u0026quot;, 2: 3, \u0026quot;pi\u0026quot;: 3.14} \u0026gt;\u0026gt;\u0026gt; miodizionario[\u0026quot;pi\u0026quot;] = 3.15 \u0026gt;\u0026gt;\u0026gt; miatupla = (1, 2, 3) \u0026gt;\u0026gt;\u0026gt; miafunzione = len \u0026gt;\u0026gt;\u0026gt; print miafunzione(mialista) 3 Puoi ottenere un range di array usando i due punti (:). Non indicare l\u0026rsquo;indice iniziale del range sottintende il primo elemento; non indicare l\u0026rsquo;indice finale sottintende l\u0026rsquo;ultimo elemento. Indici negativi contano a partire dall\u0026rsquo;ultimo elemento (-1 è l\u0026rsquo;ultimo elemento dell\u0026rsquo;array). Quindi:\n\u0026gt;\u0026gt;\u0026gt; mialista = [\u0026quot;Elemento 1\u0026quot;, 2, 3.14] \u0026gt;\u0026gt;\u0026gt; print mialista[:] ['Elemento 1', 2, 3.1400000000000001] \u0026gt;\u0026gt;\u0026gt; print mialista[0:2] ['Elemento 1', 2] \u0026gt;\u0026gt;\u0026gt; print mialista[-3:-1] ['Elemento 1', 2] \u0026gt;\u0026gt;\u0026gt; print mialista[1:] [2, 3.14] Stringhe Le stringhe in Python sono indicate *indifferentemente con la virgoletta singola (') o doppia (\u0026quot;) ed è consentito usare una notazione all\u0026rsquo;interno di una stringa delimitata dall\u0026rsquo;altra (\u0026quot;Egli disse 'ciao'.\u0026quot; è valida). Stringhe su più righe sono racchiuse in triple (o singole) virgolette (\u0026quot;\u0026quot;\u0026quot;). Python *supporta Unicode, basta ricorrere alla sintassi u\u0026quot;Questa è una stringa unicode\u0026quot;. Per inserire valori in una stringa usa l\u0026rsquo;operatore % (modulo) e una tupla. Ogni % viene sostituito da un elemento della tupla, da sinistra a destra, ed è consentito usare un dizionario per le sostituzioni.\n\u0026gt;\u0026gt;\u0026gt; \u0026quot;Nome: %s\\nNumero: %s\\nStringa: %s\u0026quot; % (miaclasse.nome, 3, 3 * \u0026quot;-\u0026quot;) Nome: Poromenos Numero: 3 Stringa: --- strString = \u0026quot;\u0026quot;\u0026quot;Questa è una stringa multi riga.\u0026quot;\u0026quot;\u0026quot; # ATTENZIONE: Nota la s finale in \u0026quot;%(key)s\u0026quot;. \u0026gt;\u0026gt;\u0026gt; print \u0026quot;Questo %(verbo)s un %(nome)s.\u0026quot; % {\u0026quot;nome\u0026quot;: \u0026quot;test\u0026quot;, \u0026quot;verbo\u0026quot;: \u0026quot;è\u0026quot;} Questo è un test. Controllo di flusso Le istruzioni per il controllo di flusso sono if, for, e while. Non esiste il select; al suo posto si usa if. Il for si usa anche per enumerare i membri di una lista. Per ottenere un elenco di numeri si usa range(numero).\nrangelist = range(10) \u0026gt;\u0026gt;\u0026gt; print rangelist [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] for number in rangelist: # Verifica se numer è uno dei # numeri nella tupla. if number in (3, 4, 7, 9): # \u0026quot;Break\u0026quot; termina un for senza # eseguire la clausola \u0026quot;else\u0026quot;. break else: # \u0026quot;Continue\u0026quot; prosegue con l'iterazione successiva # del loop. Piuttosto inutile in questo caso, # visto che siamo all'ultima istruzione del loop. continue else: # Questo \u0026quot;else\u0026quot; è opzionale ed è # eseguito solo se il loop non è stato interrotto # con \u0026quot;break\u0026quot;. pass # Non fa nulla if rangelist[1] == 2: print \u0026quot;Il secondo elemento (le liste sono 0-based) è 2\u0026quot; elif rangelist[1] == 3: print \u0026quot;Il secondo elemento (le liste sono 0-based) è 3\u0026quot; else: print \u0026quot;Non saprei\u0026quot; while rangelist[1] == 1: pass Funzioni Le funzioni sono dichiarate con la la parola chiave def. Eventuali *argomenti opzionali vanno dichiarati dopo quelli obbligatori e devono avere un valore assegnato. Quando si chiamano funzioni passando *argomenti per nome è necessario passare anche il valore. Le funzioni possono restituire una tuple (lo spacchettamento delle tuple rende possibile la restituzione di *valori multipli). Le *lambda sono funzioni in linea. I parametri sono passati per riferimento, ma i tipi immutabili (tuple, interi, stringhe, ecc.) non possono essere modificati nella funzione. Questo succede perché viene passata solo la posizione in memoria dell\u0026rsquo;elemento, e assegnare un altro oggetto alla variabile comporta la perdita del riferimento all\u0026rsquo;oggetto precedente. Per esempio:\n# Equivalente a def f(x): return x + 1 funzionevar = lambda x: x + 1 \u0026gt;\u0026gt;\u0026gt; print funzionevar(1) 2 # un_int e una_stringa sono opzionali, hanno valori di default # da usare se non vengono passati (2 e \u0026quot;Una stringa\u0026quot;, rispettivamente). def passing_example(una_lista, un_int=2, una_stringa=\u0026quot;Una stringa\u0026quot;): una_lista.append(\u0026quot;Nuovo elemento\u0026quot;) un_int = 4 return una_lista, un_int, una_string \u0026gt;\u0026gt;\u0026gt; mia_lista = [1, 2, 3] \u0026gt;\u0026gt;\u0026gt; mio_int = 10 \u0026gt;\u0026gt;\u0026gt; print passing_example(mia_lista, mio_int) ([1, 2, 3, 'Nuovo elemento'], 4, \u0026quot;Una stringa\u0026quot;) \u0026gt;\u0026gt;\u0026gt; mia_lista [1, 2, 3, 'Nuovo elemento'] \u0026gt;\u0026gt;\u0026gt; mio_int 10 Classi Python supporta la ereditarietà multipla delle classi. Le variabili e i metodi privati vengono dichiarati per convezione (non è una regola del linguaggio) precedendoli con due underscore (_). Possiamo assegnare attributi (proprietà) arbitrari alle istanze di una classe. Un esempio:\nclass MiaClasse: comune = 10 def __init__(self): self.miavariabile = 3 def miafunzione(self, arg1, arg2): return self.miavariabile # Creiamo una istanza della classe \u0026gt;\u0026gt;\u0026gt; istanza = MiaClasse() \u0026gt;\u0026gt;\u0026gt; istanza.miafunzione(1, 2) 3 # Questa variabile è condivisa da tutte le istanze \u0026gt;\u0026gt;\u0026gt; istanza2 = MiaClasse() \u0026gt;\u0026gt;\u0026gt; istanza.comune 10 \u0026gt;\u0026gt;\u0026gt; istanza2.comune 10 # Nota come qui usiamo il nome della classe # invece dell'istanza. \u0026gt;\u0026gt;\u0026gt; MiaClasse.common = 30 \u0026gt;\u0026gt;\u0026gt; instanza.common 30 \u0026gt;\u0026gt;\u0026gt; instanza2.common 30 # Questo non aggiornerà la variabile nella classe, # invece assegnerà un nuovo oggetto alla variabile # della prima istanza. \u0026gt;\u0026gt;\u0026gt; istanza.common = 10 \u0026gt;\u0026gt;\u0026gt; istanza.common 10 \u0026gt;\u0026gt;\u0026gt; istanza2.common 30 \u0026gt;\u0026gt;\u0026gt; MiaClasse.common = 50 # Il valore non è cambiato perché \u0026quot;common\u0026quot; # ora è una variabile dell'istanza. \u0026gt;\u0026gt;\u0026gt; istanza.common 10 \u0026gt;\u0026gt;\u0026gt; istanza2.common 50 # Questa classe eredita da MiaClasse. L'ereditarietà # multipla viene dichiarata così: # class AltraClasse(MiaClasse1, MiaClasse2, MiaClasseN) class AltraClasse(MiaClasse): # L'argomento \u0026quot;self\u0026quot; è passato automaticamente # e fa riferimento all'istanza della classe, quindi puoi impostare # variabili di istanza come sopra, ma dall'interno della classe. def __init__(self, arg1): self.miavariabile = 3 print arg1 \u0026gt;\u0026gt;\u0026gt; istanza = AltraClasse(\u0026quot;hello\u0026quot;) hello \u0026gt;\u0026gt;\u0026gt; istanza.miafunzione(1, 2) 3 # Questa classe non ha un membro (proprietà) .test member, ma # possiamo aggiungerne uno all'istanza quando vogliamo. Nota # che .test sarà un membro della sola istanza. \u0026gt;\u0026gt;\u0026gt; istanza.test = 10 \u0026gt;\u0026gt;\u0026gt; istanza.test 10 Eccezioni Le eccezioni in Python sono gestite con dei blocchi try-except [nome_eccezione]:\ndef una_funzione(): try: # Divisione per zero causa una eccezione 10 / 0 except ZeroDivisionError: print \u0026quot;Oops, errore.\u0026quot; else: # Non c'è stata eccezione, possiamo proseguire. pass finally: # Questo codice viene eseguito quando il blocco # try..except è già eseguito e tutte le eccezioni # sono state gestite, anche se si verifica una nuova # eccezione direttamente nel blocco. print \u0026quot;Abbiamo finito.\u0026quot; \u0026gt;\u0026gt;\u0026gt; una_funzione() Oops, errore. Abbiamo finito. Importare librerie Le librerie esterne si importano con import [nomelibreria]. Puoi anche usare la forma [nomelibreria] import [nomefunzione] per importare singole funzioni. Ecco un esempio:\nimport random from time import clock randomint = random.randint(1, 100) \u0026gt;\u0026gt;\u0026gt; print randomint 64 Input e Output Python vanta una vasta gamma di librerie per gestire input/output di files. In questo esempio vediamo come serializzare (convertire strutture dati in stringhe) usando la libreria pickle:\nimport pickle mialista = [\u0026quot;Questo\u0026quot;, \u0026quot;è\u0026quot;, 4, 13327] # Apre il file C:\\binary.dat in scrittura. La lettera r # prima del nome file serve a evitare l'escaping # del backslash. miofile = file(r\u0026quot;C:\\binary.dat\u0026quot;, \u0026quot;w\u0026quot;) pickle.dump(mialista, miofile) miofile.close() miofile = file(r\u0026quot;C:\\text.txt\u0026quot;, \u0026quot;w\u0026quot;) miofile.write(\u0026quot;Questa è una stringa di prova\u0026quot;) miofile.close() miofile = file(r\u0026quot;C:\\text.txt\u0026quot;) \u0026gt;\u0026gt;\u0026gt; print miofile.read() 'Questa è una stringa di prova' miofile.close() # Apre il file in lettura. miofile = file(r\u0026quot;C:\\binary.dat\u0026quot;) listadafile = pickle.load(miofile) miofile.close() \u0026gt;\u0026gt;\u0026gt; print listadafile ['Questo', 'è', 4, 13327] Varie ed eventuali I *test possono essere concatenati. 1 \u0026gt; a \u0026lt; 3 verifica che a sia minore di 3 e maggiore di 1. Puoi usare del per cancellare variabili o elementi di array. Le comprensioni di lista sono uno strumento potente per creare e manipolare le liste. Consistono in una espressione seguita da una clausola for seguita da zero o più clausole if. Quindi:\n\u0026gt;\u0026gt;\u0026gt; lst1 = [1, 2, 3] \u0026gt;\u0026gt;\u0026gt; lst2 = [3, 4, 5] \u0026gt;\u0026gt;\u0026gt; print [x * y for x in lst1 for y in lst2] [3, 4, 5, 6, 8, 10, 9, 12, 15] \u0026gt;\u0026gt;\u0026gt; print [x for x in lst1 if 4 \u0026gt; x \u0026gt; 1] [2, 3] # Verifica se almeno un elemento ha una determinata # caratteristica. # \u0026quot;any\u0026quot; restituisce true se qualunque elemento nella # lista è vero. \u0026gt;\u0026gt;\u0026gt; any([i % 3 for i in [3, 3, 4, 4, 3]]) True # Funziona perché 4 % 3 = 1, e 1 in Python è true, # quindi any() restituisce True. # Verifica quanto elemento hanno una determinata # caratteristica. \u0026gt;\u0026gt;\u0026gt; sum(1 for i in [3, 3, 4, 4, 3] if i == 4) 2 \u0026gt;\u0026gt;\u0026gt; del lst1[0] \u0026gt;\u0026gt;\u0026gt; print lst1 [2, 3] \u0026gt;\u0026gt;\u0026gt; del lst1 Le variabili globali vengono dichiarate all\u0026rsquo;esterno delle funzioni senza dichiarazioni particolari, ma se desideri modificarle in una funzione devi dichiararle con la parola global all\u0026rsquo;inizio della funzione, altrimenti Python assegnerà quell\u0026rsquo;oggetto a una nuova variabile locale (presta attenzione, si tratta di un piccolo dettaglio che può metterti facilmente nei guai). Per esempio: numero = 5\ndef miafunz(): # Questo stamperà 5. print numero def altrafunz(): # Questo solleva una eccezione perché la variabile # non è stata ancora assegnata. Python crea un # nuovo oggetto locale invece di accedere al globale print numero numero = 3 def ancorafunz(): global numero # Questo cambierà il valore alla variabile globale numero = 3 Epilogo Questa non intende essere una guida completa (e nemmeno parziale) a Python. Python ha una vasta gamma di librerie e molte, moltissime funzionalità che dovrai scoprire con altri mezzi, come Dive Into Python (tradotto in italiano) o l\u0026rsquo;eccellente Learning Python di Mark Lutz, libro che consiglio a chiunque voglia davvero imparare e capire Python.\nMi auguro di averti aiutato nella transizione verso Python. Lasciami un commento se pensi che ci sia qualcosa da migliorare o se c\u0026rsquo;é qualcos\u0026rsquo;altro che vorresti approfondire.\nSono @nicolaiarocci su Twitter.\n","permalink":"https://nicolaiarocci.com/impara-python-in-10-minuti/","summary":"\u003cp\u003eE così vorresti imparare il linguaggio di programmazione Python. Probabilmente\nsei alla ricerca di un tutorial completo e allo stesso tempo conciso. Questa\nguida è un tentativo di insegnarti Python in 10 minuti. In effetti più che con\nuna guida vera e propria hai a che fare con degli appunti che userai per\npartire col piede giusto. Naturalmente se davvero vuoi imparare bene dovrai\nanche esercitarti molto. Do per scontato che tu sappia già programmare, questo\nmi permetterà di concentrarmi sulle caratteristiche intrinseche del linguaggio.\nTroverai le parole chiave \u003cem\u003eevidenziate\u003c/em\u003e così potrai individuarle facilmente.\n\u003cem\u003eFai attenzione\u003c/em\u003e perché per brevità alcune cose verranno introdotte\ne commentate direttamente nel codice di esempio.\u003c/p\u003e","title":"Impara Python in 10 minuti"},{"content":"In rari casi può capitare la necessità di cancellare tutto, ma proprio tutto, da un database SQL Server. Tabelle, Stored Procedure, Funzioni, Viste, Relazioni e Chiavi Primarie. A questo punto tanto varrebbe cancellare il database e ricrearlo, direte voi. Vero, ma non sempre si dispone delle autorizzazioni per farlo. Nel mio caso si tratta di un database ospitato su un server remoto e condiviso. Posso creare e cancellare quel che voglio all’interno del database, ma non posso rinominare o cancellare il db stesso.\nEcco una comoda routine che fa al caso nostro. Dopo averla eseguita vi troverete il database completamente vuoto, come se fosse stato appena creato.\nAnche questa routine (come quella vista ieri che cancella le sole Stored Procedure) accede alla tabella di sistema sys.objects per reperire lo schema del database. Cambia però la tecnica di accesso alle informazioni. Invece di usare un cursore qui selezioniamo il primo record utile per poi inoltrarci in un ciclo di cancellazioni ripetute. Il ciclo termina quando non ci sono più record che soddisfano i parametri di ricerca. Per evitare problemi coi vincoli relazionali è importante cancellare prima le relazioni e solo dopo le tabelle.\nNota Bene Probabilmente c’è una ottima ragione per cui non disponete dei diritti di cancellazione del database. Prima di lanciare questo codice chiedetevi almeno dieci volte se 1) state sul database giusto, 2) siete coscienti delle conseguenze di quel che state per fare e 3) disponete di un backup dei dati. In ogni caso se perdete dati preziosi non venite a lamentarvi dal sottoscritto! 😉\n","permalink":"https://nicolaiarocci.com/cancellare-tutte-le-tabelle-da-un-database-sql-server/","summary":"\u003cp\u003eIn rari casi può capitare la necessità di cancellare tutto, ma proprio tutto, da un database SQL Server. \u003cstrong\u003eTabelle\u003c/strong\u003e, \u003cstrong\u003eStored Procedure\u003c/strong\u003e, \u003cstrong\u003eFunzioni\u003c/strong\u003e, \u003cstrong\u003eViste\u003c/strong\u003e, \u003cstrong\u003eRelazioni\u003c/strong\u003e e \u003cstrong\u003eChiavi Primarie\u003c/strong\u003e. A questo punto tanto varrebbe cancellare il database e ricrearlo, direte voi. Vero, ma non sempre si dispone delle autorizzazioni per farlo. Nel mio caso si tratta di un database ospitato su un server remoto e condiviso. Posso creare e cancellare quel che voglio all’interno del database, ma non posso rinominare o cancellare il db stesso.\u003c/p\u003e","title":"Cancellare tutte le Tabelle da un Database SQL Server"},{"content":"In questi giorni sto lavorando sui database SQL Server che fanno da back-end ai nostri web services e ne approfitto per fare un po’ manutenzione straordinaria. __Stamattina mi è capitato di dover cancellare tutte le Stored Procedure di un database e ho scovato questa routine che mi ha fatto risparmiare un mucchio di tempo\nLa tecnica è quella di sfruttare la tabella di sistema sys.objects che elenca tutti gli oggetti contenuti nel database. Le Stored Procedure hanno tutte type = ‘P’ per cui è facile individuarle. A questo punto ci sono due possibilità: memorizzarne i nomi in una tabella temporanea per poi lanciare un loop che le cancelli una per una, oppure usare un cursore ed eseguire le cancellazioni con la funzione EXEC. La nostra routine usa il secondo approccio, senz’altro più performante.\n","permalink":"https://nicolaiarocci.com/come-rimuovere-tutte-le-stored-procedure-da-un-database-sql/","summary":"\u003cp\u003eIn questi giorni sto lavorando sui database \u003cstrong\u003eSQL Server\u003c/strong\u003e che fanno da back-end ai nostri web services e ne approfitto per fare un po’ manutenzione straordinaria. __Stamattina mi è capitato di dover cancellare tutte le \u003cstrong\u003eStored Procedure\u003c/strong\u003e di un database e ho \u003ca href=\"http://www.devasp.net/net/articles/display/309.html\"\u003escovato\u003c/a\u003e questa routine che mi ha fatto risparmiare un mucchio di tempo\u003c/p\u003e","title":"Come rimuovere tutte le Stored Procedure da un database SQL Server?"},{"content":"Settimana ricca di avvenimenti anche questa. SEO, Startup e applicazioni per Smartphone in primo piano ma non mancano altre chicche per buongustai. Al decimo posto una curiosità non ha nulla da spartire con gli argomenti trattati di solito, ma quelle foto dovevo segnalarvele. Ringrazio chi mi ha contattato via mail, Facebook e Twitter. A quanto pare la rubrica piace e farò il possibile per portarla avanti migliorando la qualità delle selezioni, come sempre assolutamente arbitrarie.\nSEO non è più una strategia valida per le Startup\nOpinione fuori dal coro quella di Chris Dixon, CEO di Hunch e investitore seriale (Skype, Foursquare, Stack Overflow e altri). Chris sostiene che le Startup dovrebbero smetterla di puntare su SEO. Alla base del successo di molte Startup dell’ultimo decennio, l’industria SEO è cresciuta talmente che il mercato ne é saturo. Al punto che Google ormai fatica a distinguere i contenuti di qualità da quelli SEO-optimized. Nei commenti una discussione vivace alle quale partecipano investitori famosi e SEO guru internazionali.\nAnalisi sullo sviluppo di applicazioni per Smartphone\nSecondo molti lo sviluppo di applicazioni mobile è il futuro. Ma quale è la piattaforma sulla quale puntare investendo tempo e denaro? Mario Concina ci offre una bella panoramica su linguaggi, costi e pro e contro di ognuna delle piattaforme tecnologiche più importanti (iPhone, Android, Windows Mobile, Symbian, BlackBerry) **[Settimana ricca di avvenimenti anche questa. SEO, Startup e applicazioni per Smartphone in primo piano ma non mancano altre chicche per buongustai. Al decimo posto una curiosità non ha nulla da spartire con gli argomenti trattati di solito, ma quelle foto dovevo segnalarvele. Ringrazio chi mi ha contattato via mail, Facebook e Twitter. A quanto pare la rubrica piace e farò il possibile per portarla avanti migliorando la qualità delle selezioni, come sempre assolutamente arbitrarie. SEO non è più una strategia valida per le Startup Opinione fuori dal coro quella di Chris Dixon, CEO di Hunch e investitore seriale (Skype, Foursquare, Stack Overflow e altri). Chris sostiene che le Startup dovrebbero smetterla di puntare su SEO. Alla base del successo di molte Startup dell\u0026amp;#8217;ultimo decennio, l\u0026amp;#8217;industria SEO è cresciuta talmente che il mercato ne é saturo. Al punto che Google ormai fatica a distinguere i contenuti di qualità da quelli _SEO-optimized_. Nei commenti una discussione vivace alle quale partecipano investitori famosi e SEO guru internazionali. Analisi sullo sviluppo di applicazioni per Smartphone Secondo molti lo sviluppo di applicazioni mobile è il futuro. Ma quale è la piattaforma sulla quale puntare investendo tempo e denaro? Mario Concina ci offre una bella panoramica su linguaggi, costi e pro e contro di ognuna delle piattaforme tecnologiche più importanti (iPhone, Android, Windows Mobile, Symbian, BlackBerry) ]3 Molte Startup lanciano in questi giorni prodotti e soluzioni che promettono di semplificare la creazione di applicazioni mobile. In questo articolo PC World ne presenta cinque. Alcune promettono la luna: creazione rapida di applicazioni mobile per tutti, programmatori e non. Programmatori che non sono Designer, Designer che non sono Programmatori Il programmatore incapace di accoppiare due colori. Il designer inetto col codice. O ci riconosciamo in una di queste figure (io nella prima), o ne abbiamo incontrate nella nostra carriera. Questo breve articolo ne traccia il profilo. Facebook e i nuovi commenti sincronizzati Facebook è in gran spolvero di questi tempi. Solo quindici giorni fa aggiornava subdolamente il Like Button e questa settimana mette mano al plugin dei Commenti. La novità è destinata a influire pesantemente sulla penetrazione di Facebook nel \u0026amp;#8216;resto della rete\u0026amp;#8217;. Con la solita dovizia di particolari BigThink ci spiega gli aspetti pratici di questo aggiornamento. \u0026lt;a style=\u0026quot;font-weight: bold;\u0026quot; href=\u0026quot;http://www.bigthink.it/facebook-e-i-nuovi-commenti-sincronizzati/\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; Startup.Wikli.it Startup, web, acquisizioni e venture capital. Wikli seleziona e commenta le news tematiche più interessanti della settimana, le confeziona e te le fa trovare puntuali nella casella di posta ogni venerdì alle 8.00. Idea brillante e molto ben congegnata. Vi invito ad iscrivervi a questa innovativa mailing list. Non ve ne pentirete. YepLike! Startup in 72 ore In preda a delirio febbricitante Fabio Lalli si inventa una idea da lanciare in 72 ore. Leggete il suo racconto. PS: nel frattempo le 72 ore sono trascorse, l\u0026amp;#8217;applicazione è su iPhone e a quanto pare riscuote buon successo. Venti consigli pratici per il programmatore Di post di questo tipo se ne trovano tanti in rete ma questo mi ha colpito perché contiene alcune chicche interessanti che denotano esperienza diretta da parte dell\u0026amp;#8217;autore. Da non perdere se siete principianti. Se siete esperti vi riconoscerete senz\u0026amp;#8217;altro in alcune di queste situazioni. Quale è il libro fondamentale che ogni programmatore dovrebbe leggere nella vita? Su Stack Overflow se ne è discusso a lungo. Il risultato è una selezione di alcuni tra i libri più importanti di sempre. Il fatto che il Kernighan \u0026amp; Ritchie non sia il primo in classifica la dice lunga sulla mia vetustità. Sono un collezionista di prime edizioni, ammetto che vedere riuniti così tanti testi fondamentali mi ha fatto prudere le mani. Shackleton, L’Antartide a Colori – 1915 Nel 1915 Shackleton e i suoi uomini furono costretti ad abbandonare la \u0026amp;#8216;Endurance\u0026amp;#8217;, inesorabilmente intrappolata dai ghiacci. Frank Hurley, il fotografo dela spedizione, riuscì miracolosamente a salvare le lastre fotografiche di quella spedizione. In questa magnifica galleria vediamo le foto (a colori) di quella spedizione ","permalink":"https://nicolaiarocci.com/programmazione-seo-startup-il-meglio-della-settimana-3/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eSettimana ricca di avvenimenti anche questa. SEO, Startup e applicazioni per Smartphone in primo piano ma non mancano altre chicche per buongustai. Al decimo posto una curiosità non ha nulla da spartire con gli argomenti trattati di solito, ma quelle foto dovevo segnalarvele. Ringrazio chi mi ha contattato via mail, Facebook e Twitter. A quanto pare la rubrica piace e farò il possibile per portarla avanti migliorando la qualità delle selezioni, come sempre assolutamente arbitrarie.\u003c/p\u003e","title":"Programmazione, SEO, Startup – Il Meglio della Settimana #3"},{"content":"Col suo sito IE6countdown.com Microsoft riconosce finalmente che l’ormai decenne (2001) Internet Explorer 6 ha fatto il suo tempo. E’ ora di guardare avanti.\nIl sito invita i web master di tutto il mondo a unirsi alla crociata per la distruzione della vetusta reliquia aggiungendo un banner alle loro home page. Il banner compare solo quando la pagina è aperta da IE6, spiegando al visitatore che il suo browser è obsoleto e di scarsa qualità (questo in effetti dimentica di dirlo) e suggerendo di aggiornarlo.\nE’ probabile che decine di migliaia di siti adotteranno il banner. E’ interesse comune che IE6 abbandoni le scene al più presto. Tutti vorremmo che le nostre pagine venissero visitate da browser moderni che supportano HTML5 e CSS3. Giusto?\nPiccolo dettaglio insignificante C’è però un dettaglio, prontamente segnalato da Steve Webster, che non quadra. Cliccando sul banner veniamo indirizzati al sito di Internet Explorer dove siamo invitati a scaricare l’ultimo aggiornamento. Quando va bene chi oggi usa ancora IE6 sta su piattaforma Windows XP. E’ cosa nota che Internet Explorer 9 non gira su sistemi precedenti a Vista SP2. L’unica opzione di aggiornamento valida rimane…\n…Internet Explorer 8. Un browser vecchio di due anni che si trova sull’orlo dell’obsolescenza e non supporta affatto HTML5. Certo sempre meglio di IE6 ma c’è in giro di molto meglio, non trovate? Fate la cosa giusta e mettete mano al codice che trovate su IE6countdown.com. Fate puntare il vostro banner a Chrome, Firefox, Opera o Safari. Già che ci siete aggiungete il tag alt (se lo sono scordato) e sostituite l’immagine con una che non ricordi gli anni 90 del secolo scorso.\n","permalink":"https://nicolaiarocci.com/microsoft-mi-tocca-boicottare-pure-ie6countdown-com/","summary":"\u003cp\u003eCol suo sito \u003ca href=\"http://www.ie6countdown.com/\"\u003eIE6countdown.com\u003c/a\u003e Microsoft riconosce finalmente che l’ormai decenne (2001) Internet Explorer 6 ha fatto il suo tempo. E’ ora di guardare avanti.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eIl sito invita i web master di tutto il mondo a unirsi alla crociata per la distruzione della vetusta reliquia aggiungendo un banner alle loro home page. Il banner compare solo quando la pagina è aperta da IE6, spiegando al visitatore che il suo browser è obsoleto e di scarsa qualità (questo in effetti dimentica di dirlo) e suggerendo di aggiornarlo.\u003c/p\u003e","title":"Microsoft, mi tocca boicottare pure IE6countdown.com"},{"content":"Benvenuto alla terza e ultima parte della nostra Introduzione alle Regular Expression. Concluso il capitolo sarai in grado di affrontare la maggior parte dei problemi di ricerca nel testo. Se ancora non l\u0026rsquo;hai fatto ti consiglio di leggere la Prima Parte e la Seconda Parte. Ricorda che puoi usare la pagina di prova per testare le query della guida.\nAvidità Il problema della avidità degli operatori regex diventa evidente quando si comincia a lavorare su ricerche avanzate. Un caso tipico è il parsing di file XML o HTML.\n\u0026lt;p\u0026gt;questo è un \u0026lt;b\u0026gt;paragrafo\u0026lt;/b\u0026gt;\u0026lt;/p\u0026gt; Supponiamo di voler trovare tutti i tag usati.\n\u0026lt;.*\u0026gt; # cerca tutti i tag Il risultato della query non è quello che ci si potrebbe aspettare. L\u0026rsquo;operatore * è avido, ovvero cerca di catturare più caratteri possibili. Una volta trovato il primo \u0026lt; prosegue avidamente selezionando tutto fino all\u0026rsquo;ultimo \u0026gt;. In questo caso vogliamo che si fermi al primo \u0026gt;, non all\u0026rsquo;ultimo. E\u0026rsquo; questa una distinzione importante, da comprendere a fondo. Possiamo disattivare il comportamento avido aggiungendo il carattere?\n\u0026lt;.*?\u0026gt; # ora otteniamo quel che vogliamo (niente avidità) Se desideriamo usare l\u0026rsquo;operatore + (1 o più) al posto del * (zero o più), la nostra query diventa \u0026lt;.+?\u0026gt;.\nConfini Nella seconda parte del nostro tutorial abbiamo convalidato un numero telefonico nel formato 555-12345678\n555-\\d{8} # 555- seguito da 8 cifre Anche se tecnicamente corretta questa query non è perfetta. Se la testiamo con queste stringhe:\ntestoDavanti 555-12345678 555-12345678 il mio telefono scopriamo che vengono accettate perché la regola 555-\\d{8} è ancora valida. In realtà noi desideriamo accettare il solo il numero telefonico, niente altro. La soluzione richiede l\u0026rsquo;uso degli operatori di confine:\n^555-\\d{8}$ I confini sono caratteri speciali perché non occupano spazio. Sono dei segnaposto che servono a delimitare il testo da cercare. Dopo l\u0026rsquo;inizio (^) deve esserci il nostro numero di telefono; prima della fine ($) deve esserci il nostro numero di telefono.\n\u0026lt;th\u0026gt; significato \u0026lt;/th\u0026gt; \u0026lt;td style=\u0026quot;vertical-align: top;\u0026quot;\u0026gt; Inizio del testo. Sfortunatamente gli inventori di regex hanno scelto lo stesso carattere usato per la negazione. E\u0026amp;#8217; importante riconoscerne il significato in base al contesto. Quando non è compreso tra [ e ] il carattere ^ è un confine e indica l\u0026amp;#8217;inizio del testo. \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; fine del testo \u0026lt;/td\u0026gt; Quindi\na # trova qualunque a ^a # trova solo il testo che comincia per a a$ # trova solo il testo che finisce per a C\u0026rsquo;è un altro confine, quello di parola (\\b). Vediamo un esempio. Vogliamo cercare le parole \u0026ldquo;for\u0026rdquo; e \u0026ldquo;she\u0026rdquo; nella nostra pagina di test.\n(for|she) # trova for e she Non va male. Trova tutte le occorrenze di \u0026ldquo;she\u0026rdquo; e \u0026ldquo;for\u0026rdquo;, tuttavia viene selezionata anche la parola \u0026ldquo;before\u0026rdquo;. Non è il comportamento desiderato. Potremmo tentare cercando solo le occorrenze precedute e succedute da uno spazio.\n[ ](for|she)[ ] # cerca for o she Va meglio. Non seleziona più before. Abbiamo però un nuovo problema. Nel testo c\u0026rsquo;è la frase \u0026ldquo;for she had plenty of time\u0026rdquo;. La nostra regex non ha individuato la parola \u0026ldquo;she\u0026rdquo; contenuta nella frase. Per quale motivo?\nfor she had plenty of time Con il \u0026ldquo;for\u0026rdquo; iniziale abbiamo già rintracciato lo spazio che precede \u0026ldquo;she\u0026rdquo;, che quindi viene escluso. Sono queste le situazioni un cui un confine di parola può risolvere il problema.\n\\b(for|she)\\b # trova she oppure for Il confine \\b definisce dove la parola comincia e finisce, proprio come succede con i confini visti prima. Abbiamo detto prima che i \u0026ldquo;confini non occupano spazio\u0026rdquo;. Nell\u0026rsquo;esempio qui sopra cerchiamo esattamente \u0026ldquo;for\u0026rdquo; o \u0026ldquo;she\u0026rdquo;. Non cerchiamo la stringa \\b e questa non occupa alcuno spazio durante la ricerca, a differenza di quel che è successo quando abbiamo tentato di usare la [cornice]. E\u0026rsquo; un dettaglio importate perché con tutti gli altri operatori regex ciò che è nella query \u0026ldquo;occupa spazio\u0026rdquo; e non può essere trovato di nuovo.\nIl Finale: Ricerca e Sostituzione Ce l\u0026rsquo;hai fatta! Sei arrivato in fondo. Congratulazioni. Il meglio arriva ora. Ricerca e sostituzione è senz\u0026rsquo;altro il mio argomento preferito. Qui la pagina di test non ci può aiutare, occorre qualche tipo di editor oppure una IDE (Eclipse/Notepad++/Wordpad).\nSupponiamo di avere un file composto da 100 righe come queste\n31-01-10_backup32 24-01-10_backup1 24-02-10_backup_mona 11-03-09_backup_lisa Vogliamo correggere le date portandole dal formato europeo a quello americano (da gg-mm-aa a mm-gg-aaaa).\n\\d{2}-\\d{2}-\\d{2}_backup.* // trova le nostre righe Per ogni riga desideriamo sostituire aree specifiche quindi ricorriamo all\u0026rsquo;operatore di raggruppamento già visto nella seconda parte di questa guida.\n(\\d{2})-(\\d{2})-(\\d{2})_backup(.*) // ci siamo A questo punto tutto quel che dobbiamo fare è sostituire le righe trovate con\n{Gruppo2}–{Gruppo1}-20{Gruppo3}_backup{Gruppo4}\nIl che si traduce nella seguente espressione di sostituzione\n\\2-\\1-20\\3_backup\\4 Facile no? Niente più lavori ripetitivi. La mia regola è: se un testo richiede la modifica di più di cinque righe è giunta l\u0026rsquo;ora di ricorrere alle regex. Potrebbe sembrare una esagerazione. Eppure un programmatore dovrebbe rifiutarsi per principio di ripetere manualmente un lavoro che può essere automatizzato.\nBuona fortuna.\nQuesto articolo è una traduzione autorizzata di Regex Primer: Part 3. Ringrazio l\u0026rsquo;autore per il permesso accordatomi.\n","permalink":"https://nicolaiarocci.com/introduzione-alle-regular-expression-terza-parte/","summary":"\u003cp\u003eBenvenuto alla terza e ultima parte della nostra \u003cem\u003eIntroduzione alle Regular\nExpression\u003c/em\u003e. Concluso il capitolo sarai  in grado di affrontare la maggior\nparte dei problemi di ricerca nel testo. Se ancora non l\u0026rsquo;hai fatto ti\nconsiglio di leggere la \u003ca href=\"http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/\"\u003ePrima Parte\u003c/a\u003e e la \u003ca href=\"http://nicolaiarocci.com/introduzione-alle-regular-expression-seconda-parte/\"\u003eSeconda Parte\u003c/a\u003e. Ricorda che\npuoi usare la \u003c!-- raw HTML omitted --\u003epagina di\nprova\u003c!-- raw HTML omitted --\u003e per testare le query della guida.\u003c/p\u003e\n\u003ch2 id=\"avidità\"\u003eAvidità\u003c/h2\u003e\n\u003cp\u003eIl problema della avidità degli operatori regex diventa evidente quando si\ncomincia a lavorare su ricerche avanzate. Un caso tipico è il parsing di file\nXML o HTML.\u003c/p\u003e","title":"Introduzione alle Regular Expression – Terza Parte"},{"content":"Lanciata da pochi giorni, Lanciata da pochi giorni, è una piccola (4Kb) e brillante libreria JavaScript che ci mette a disposizione un rendering engine JSON controllabile con puro codice HTML. La separazione tra HTML e JavaScript rende più facile il lavoro con contenuti AJAX, aumenta la leggibilità del codice e ne facilita la manutenzione. Tempo è compatibile con tutti i browser (IE6 incluso), si integra alla perfezione con jQuery ed è davvero facile da usare.\nJSON JSON è un formato di scambio dati sempre più diffuso. Un flusso di dati JSON è relativamente compatto (soprattutto rispetto al suo rivale XML) ed è facile da interpretare sia per un umano che per un computer. Ormai tutte le Web API più usate (Facebook, Twitter, ecc.) supportano ampiamente JSON. Ecco un esempio di array JSON:\nJavaScript Dopo aver scaricato la libreria includiamola nella nostra pagina:\nTempo.prepare(element) Tempo.Prepare() cerca uno o più data-template in un contenitore HTML, li mette in cache e li rimuove dalla pagina (verranno sostituiti dai dati in fase di rendering). Restituisce infine una istanza specializzata del renderer che, grazie alle indicazioni contenute nei data-template, sa già come mostrare i dati. Se stiamo usando jQuery possiamo passare direttamente l’oggetto jQuery.\nrenderer.render(data) Il metodo render si applica alla instanza del renderer restituita da Tempo.prepare(). Accetta come argomento i dati JSON e li mostra finalmente nella nostra pagina HTML.\nHTML Tempo riconosce come template qualunque tag con attributo data-template che sia contenuto nell’elemento HTML da noi indicato. Indichiamo i campi dell’array JSON col nome racchiuso tra doppie parentesi {{}} il codice viene reso con:\nPer le funzionalità avanzate (condizioni se-allora, data-template nidificati, supporto jQuery e gestione callbacks ed eventi) vi rimando alla pagina ufficiale della libreria, dalla quale peraltro ho tratto gran parte di questo esempio. Vi trovate anche un esempio funzionante di rendering di un flusso proveniente da Twitter e recuperato via jQuery.\n","permalink":"https://nicolaiarocci.com/tempo-mostrare-dati-json-con-solo-codice-html/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eLanciata da pochi giorni, \u003ca href=\"http://tempojs.com/\"\u003e\u003c!-- raw HTML omitted --\u003eLanciata da pochi giorni,\u003c/a\u003e è una piccola (4Kb) e brillante libreria JavaScript che ci mette a disposizione un \u003cem\u003erendering engine\u003c/em\u003e JSON controllabile con puro codice HTML. La separazione tra HTML e JavaScript rende più facile il lavoro con contenuti AJAX, aumenta la leggibilità del codice e ne facilita la manutenzione. Tempo è compatibile con tutti i browser (IE6 incluso), si integra alla perfezione con jQuery ed è davvero facile da usare.\u003c/p\u003e\n\u003ch2 id=\"json\"\u003eJSON\u003c/h2\u003e\n\u003cp\u003eJSON è un formato di scambio dati sempre più diffuso. Un flusso di dati JSON è relativamente compatto (soprattutto rispetto al suo rivale XML) ed è facile da interpretare sia per un umano che per un computer. Ormai tutte le Web API più usate (Facebook, Twitter, ecc.) supportano ampiamente JSON. Ecco un esempio di array JSON:\u003c/p\u003e","title":"TEMPO: mostrare dati JSON con solo codice HTML"},{"content":"Se crei applicazioni per il web non avrebbe senso svilupparle online? Con questa domanda e con uno slogan ben congegnato (Il tuo codice sempre disponibile, ovunque tu sia) Cloud9 IDE si presenta finalmente al pubblico. L’idea iniziale era una piattaforma online condivisa e open source per sviluppare codice JavaScript direttamente nel browser. Talento e ambizione hanno consentito di puntare più in alto e Cloud9 è diventata una piattaforma completa per la produzione di software in the cloud (PaaS). Ma vediamo meglio di cosa si tratta.\nGià un mese fa presentando il Progetto Orion accennavo a Cloud9, allora in beta avanzata. Erano disponibili pochi dettagli e soprattutto mancavano i prezzi. Partiamo dalle caratteristiche salienti.\nPunti di forza Cloud9 si vanta di possedere il miglior editor online per linguaggi dinamici. In effetti l’editor è un progetto originale Mozilla (Skywriter), poi integrato in Ace. Il codice viene convalidato in tempo reale ed è possibile fare debug e lanciare applicazioni direttamente dal browser. Molte le funzioni per la collaborazione: chat integrato, modifiche condivise in tempo reale, team management e, dulcis in fundo, integrazione completa con GitHub (una UI per GitHub è in lavorazione, al momento è disponibile la classica linea di comando). Vedere per credere:\n\u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Editor per linguaggi dinamici integrato nel browser \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1274\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;images/cloud9_2.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1274 \u0026quot; title=\u0026quot;Convalida del codice JavaScript in tempo reale\u0026quot; src=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_2-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Convalida del codice JavaScript in tempo reale \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1275\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_21.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1275 \u0026quot; title=\u0026quot;Chat intengrato in Cloud9\u0026quot; src=\u0026quot;images/cloud9_21-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Chat intengrato in Cloud9 \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1276\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_4.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1276 \u0026quot; title=\u0026quot;Gruppi di lavoro\u0026quot; src=\u0026quot;http://i0.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_4-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Gruppi di lavoro \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1277\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;images/cloud9_5.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1277 \u0026quot; title=\u0026quot;Run e Debug online\u0026quot; src=\u0026quot;http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_5-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Run e Debug online \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1278\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;images/cloud9_6.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1278 \u0026quot; title=\u0026quot;Integrazione con GitHub\u0026quot; src=\u0026quot;http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_6-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Integrazione con GitHub \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1279\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_7.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1279 \u0026quot; title=\u0026quot;Team Management\u0026quot; src=\u0026quot;images/cloud9_7-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Team Management \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;p\u0026gt; \u0026lt;div id=\u0026quot;attachment_1280\u0026quot; style=\u0026quot;width: 220px\u0026quot; class=\u0026quot;wp-caption alignright\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;images/cloud9_8.png\u0026quot; rel=\u0026quot;lightbox[1208]\u0026quot;\u0026gt;\u0026lt;img class=\u0026quot;size-thumbnail wp-image-1280 \u0026quot; title=\u0026quot;Accedi al codice ovunque tu sia\u0026quot; src=\u0026quot;http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud9_8-150x100.png?w=150\u0026quot; alt=\u0026quot;\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Accedi al codice ovunque tu sia \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;h2\u0026gt; Linguaggi e Frameworks \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; JavaScript naturalmente è supportato al 100%. Ruby anche, seppure parzialmente. Cloud9 mira a integrare tutti i linguaggi e i framework più diffusi. Per quanto riguarda i linguaggi della galassia Microsoft per ora nulla da fare (ma c\u0026amp;#8217;è sempre \u0026lt;strong\u0026gt;\u0026lt;a href=\u0026quot;http://www.coderun.com/\u0026quot;\u0026gt;CodeRun\u0026lt;/a\u0026gt;\u0026lt;/strong\u0026gt;), anche se ho colto un (molto) blando accenno a un futuro supporto per Mono. Cloud9 supporterà il \u0026lt;em\u0026gt;one-click-deploy\u0026lt;/em\u0026gt; su altre piattaforme cloud e il mounting di drive locali per consentire l\u0026amp;#8217;accesso ai files remoti da parte di applicazioni esterne. Insomma il menù è ricco e invitante, bisognerà vedere a che ritmo si succederanno le implementazioni. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; Piani tariffari \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Qui la faccenda si fa ancor più interessante e per certi versi sorprendente. I progetti open source possono accedere a Cloud9 gratuitamente. Quelli commerciali possono scegliere tra due piani tariffari, uno giornaliero (€0.33/giorno) e uno mensile (€39/mese). Il piano giornaliero mi incuriosisce parecchio. Se ho ben capito si pagano solo i giorni di uso effettivo, se così fosse si tratterebbe di una soluzione davvero valida oltre che originale. Ad ogni buon conto è previsto un periodo di prova di 30 giorni. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; Coraggio! \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Sono intrigato un bel pò, l\u0026amp;#8217;avrete capito. Le titubanze sono legittime, per carità. Sicurezza e riservatezza sono aspetti importanti; queste piattaforme cloud potranno garantirle? Molti di noi hanno superato da tempo queste paure appoggiandosi (per progetti aperti e privati) a GitHub, Mercurial e altri servizi repository. E\u0026amp;#8217; forse giunto il momento di cominciare a sporcarsi le mani. Prima o poi dovremo farci i conti comunque, non credete? \u0026lt;/p\u0026gt; ","permalink":"https://nicolaiarocci.com/arriva-cloud9-ide-la-piattaforma-per-il-software-online/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eSe crei applicazioni per il web non avrebbe senso svilupparle online? Con questa domanda e con uno slogan ben congegnato (\u003cem\u003eIl tuo codice sempre disponibile, ovunque tu sia\u003c/em\u003e) \u003cstrong\u003e\u003ca href=\"http://cloud9ide.com/\"\u003eCloud9 IDE\u003c/a\u003e\u003c/strong\u003e si presenta finalmente al pubblico. L’idea iniziale era una piattaforma online condivisa e open source per sviluppare codice JavaScript direttamente nel browser. Talento e ambizione hanno consentito di puntare più in alto e Cloud9 è diventata una piattaforma completa per la produzione di software \u003cem\u003ein the cloud\u003c/em\u003e (\u003ca href=\"http://en.wikipedia.org/wiki/Platform_as_a_service\"\u003ePaaS\u003c/a\u003e). Ma vediamo meglio di cosa si tratta.\u003c/p\u003e","title":"Ecco Cloud9 IDE la Piattaforma per Programmare nel Cloud"},{"content":"Eccoci alla selezione delle notizie e i link che ho trovato più interessanti questa settimana. E’ stata una settimana ricca di avvenimenti e non è stato facile decidere cosa lasciare fuori. Andiamo a cominciare:\nLike Button: Facebook cambia le regole Questa settimana Facebook ha sorpreso tutti cambiando radicalmente il funzionamento del pulsante Mi Piace. Su BigThink Daniele Ghidoli è tra i primi ad accorgersene e a segnalare la novità. Leggi l’articolo su BigThink.\nGoogle migliora l’algoritmo di indicizzazione del web Negli ultimi mesi le critiche sulla qualità ****delle ricerche Google si sono moltiplicate. Le famigerate content farm hanno conquistato le prime posizioni per molte ricerche sulle keyword più importanti. Il gigante di Mountain View annuncia a sorpresa la contromossa, ossia l’aggiornamento del suo algoritmo più importante. L’obiettivo è penalizzare i siti di scarsa qualità e migliorare il ranking di quelli con contenuti validi. Leggi l’annuncio sul blog ufficiale di Google.\nE’ in arrivo una nuova Bolla delle Dot-Com? Le incredibili valutazioni economiche di servizi come Twitter e Facebook inducono molti a sostenere che ci troviamo nel bel mezzo della seconda bolla delle Dot-Com, declinata questa volta ai social network. TagliaBlog pubblica la traduzione di un bell’articolo del Wall Street Journal che, prendendo spunto dalla situazione di Twitter, tenta di fare il punto della situazione. Leggi l’articolo su TagliaBlog\nCome un Tweet sbagliato può portare al successo commerciale (e a una raccolta di sangue) Quando Gloria Huang si accorge di aver twittato per sbaglio la sua richiesta di birra fresca dall’account del datore di lavoro (la Croce Rossa) non immagina certo di scatenare una donazione di sangue di massa e il successo commerciale della sua birra preferita. Leggi questa storia sul sito della CNN\nLo stato attuale del Web Design: Trends 2010 Il Web Design sta vivendo un’epoca d’oro. Abbiamo a disposizione strumenti potenti (CSS3, HTML5, il font-embedding), migliaia di risorse gratuite e decine di vivaci comunità online. Ma quali sono le nuove tendenze? Quali le tecniche, i concetti e le idee che si stanno affermando? Questa settimana Smashing Magazine tenta di anticipare il Web Design del prossimo futuro. Leggi l’articolo di Smashing Magazine.\nDiffondiamo la Cultura Digitale in Italia Interessante il progetto Cultura Digitale curato e ideato da Fabio Lalli e dagli Indigeni Digitali. “Si vuole creare un libro gratuito da distribuire on line e off line che parli della Cultura Digitale, di cosa significa per ognuno di noi”. Chiunque può contribuire pubblicando il proprio pensiero sul wall di Cultura Digitale. L’idea è ingegnosa e ben implementata. Funziona anche perché solletica l’ego di ognuno di noi e sfrutta abilmente i meccanismi virali propri del web 2.0. I contributi affluiscono copiosi. Visita il sito di Cultura Digitale\nMono 2.10 La versione 2.10 di Mono, la piattaforma open source e multi piattaforma alternativa al Microsoft NET Framework, è stata rilasciata questa settimana. Tra le novità aggiornamenti ai compilatori C# e VB, supporto a MVC3, F# e Native Client Google oltre alla soluzione di molti problemi conosciuti. Leggi le Release Notes ufficiali.\nPython 3.2 Questa è anche la settimana che ha visto l’uscita dell’ultima release del linguaggio Python, la 3.2. La documentazione ufficiale è stata aggiornata con un documento che illustra accuratamente le novità introdotte con questo aggiornamento. Leggi le novità su Python 3.2.\nGoogle Cloud Connect Google Cloud Connect è un plugin per Microsoft Office che consente di sincronizzare i documenti Office appoggiandosi alla piattaforma Google Docs. Rilasciato da Google, questo plugin rende semplice la collaborazione tra utenti che non vogliono o non possono rinunciare alla suite Microsoft. I documenti possono essere aggiornati sia offline che online. Leggi tutto su Google Cloud Connect.\nI 5 migliori tool gratuiti per SQL Server Sei pigro e la tua azienda è al verde. Che fare? Brent Ozar, guru SQL Server e uno dei progettisti di Stack Overflow, propone cinque tools gratuiti per la gestione e manutenzione di SQL Server. Leggi l’articolo sul sito di Brent Ozar.\nIntroduzione alle Regular Expression Concludo con una svergognata auto promozione. Introduzione alle Regular Expression è una serie in tre parti, attualmente in pubblicazione, che ha l’ambizione di consentire a chiunque di avvicinarsi alle Regular Expression. Le RegEx sono un strumento potente e spesso incompreso, utile non solo ai programmatori ma a chiunque abbia a che fare con le ricerche su testo. Leggi la prima parte della Introduzione alle Regular Expression.\nVi è piaciuta questa selezione? Fatemi sapere che ne pensate con un bel commento qui sotto, lo apprezzerei molto. Alla prossima settimana!\n","permalink":"https://nicolaiarocci.com/programmazione-seo-startups-il-meglio-della-settimana-2/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eEccoci alla selezione delle notizie e i link che ho trovato più interessanti questa settimana. E’ stata una settimana ricca di avvenimenti e non è stato facile decidere cosa lasciare fuori. Andiamo a cominciare:\u003c/p\u003e","title":"Programmazione, SEO, Startups – Il Meglio della Settimana #2"},{"content":"Questa è la seconda parte della serie Introduzione alle Regular Expression. Se non hai ancora letto la prima parte ti consiglio di farlo. Puoi usare la pagina demo per provare le query della guida.\nNegazione [^] Abbiamo già conosciuto la [cornice]. Una caratteristica importante di cui non abbiamo ancora parlato è la negazione. Supponiamo di voler cercare qualunque carattere eccetto la lettera a.\n[^a] # trova b,c,d,e,f,\\n .... qualunque carattere eccetto 'a' La negazione si applica a tutti i caratteri della cornice in cui compare l\u0026rsquo;operatore ˆ. Non è possibile limitarla a solo alcuni.\n[^0123456789] # trova qualunque carattere non numerico Gli Alias Ora siamo pronti per affrontare qualche esempio realistico di regular expression. Uno degli usi più frequenti delle regex è la convalida di Stringhe. Proviamo a verificare la correttezza di un ipotetico numero telefonico da esprimere nel formato 555-12345678. Di norma divideremmo l\u0026rsquo;input in due parti e proveremmo a convertirle in numeri. Ora tuttavia conosciamo le regex e possiamo sbrigarcela meglio.\n555-[0-9]{7} Fatto. Stiamo convalidando 555 seguito da un trattino seguito da 7 caratteri numerici. Possiamo essere addirittura più sintetici, vediamo come.\nI range [0-9] e [a-z] sono talmente frequenti da saltar fuori continuamente, tanto che sono state create scorciatoie (alias) dedicate ai range più usati. Nel nostro caso ci torna utile \\d, che sta per digit (carattere numerico) ed è semanticamente identico a [0-9].\n555-\\d{7} # identico a 555-[0-9]{7} Gli alias non sono certo indispensabili, puoi ottenere gli stessi risultati usando la cornice in modo esteso. Tuttavia sono molto comodi.\n\u0026lt;th\u0026gt; significato \u0026lt;/th\u0026gt; \u0026lt;th\u0026gt; coorrisponde a \u0026lt;/th\u0026gt; \u0026lt;td\u0026gt; digit (numero) \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; [0-9] \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; word (parola) \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; [a-zA-Z0-9_] Include il carattere underscore \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; spazio, tab o newline \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; [ \\t\\r\\n] \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; qualsiasi non numerico \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; ^\\d \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; quasiasi non alfanumerico \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; ^\\w \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; quasiasi ma non lo spazio \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; ^\\s \u0026lt;/td\u0026gt; Suggerimento: nota come ad ogni alias ne corrisponde uno dal significato opposto, tutto in maiuscolo. Impara i primi tre per conoscerli tutti e sei.\nIl Punto Il punto è un alias un pò speciale. Ne parlo soprattutto perchè può capitare di notarlo nel codice scritto da altri. Il punto cerca tutto eccetto il new line (\\n). Il problema è che il carattere new line non è lo stesso su tutte le piattaforme.\n. # trova tutti i caratteri .* # equivalente a [^\\n], trova tutti i paragrafi Il punto spesso crea confusione. Consiglio di ricorrere a combinazioni di alias e cornici per ottenere gli stessi risultati senza rischiare errori.\nEscaping Capita a volte di dover cercare proprio il punto, oppure i caratteri [ o ]. Poiché fanno parte della sintassi regex in questi casi è necessario riccorrere all\u0026rsquo;escaping, ovvero precederli col carattere \\ che rappresenta l\u0026rsquo;escape. Per esempio\n\\. # cerca il punto invece che tutto quanto \\* # trova tutti gli asterischi \\\\ # trova tutti gli escape Raggruppamenti e OR Torniamo alla convalida. Questa volta vogliamo verificare la validità di un indirizzo email. Prima di tutto stabiliamo le regole (semplificate) a cui una stringa deve attenersi per venire convalidata come indirizzo email: 1) il nome utente può contenere lettere, numeri, underscore e trattini ma deve cominciare con una lettera; 2) il dominio può contenere solo lettere seguite da un punto seguito da altre lettere. Quindi domain.fakecom è valido per noi\n[a-z][\\w-]*@[a-z]+\\.[a-z]+ Presta attenzione all\u0026rsquo;escaping del punto! Un\u0026rsquo;altro dettaglio importante è il quantificatore + che abbiamo visto nel primo articolo di questa serie. Nel dominio infatti vogliamo almeno una lettera, non zero o più.\nSupponiamo ora di voler aggiornare le regole in modo da convalidare solo i domini più importanti. Il nostro indirizzo email deve finire con com oppure net. Non possiamo risolvere questo problema con quel che abbiamo imparato finora. La nostra query regex dovrà ricorrere a due nuovi concetti, l\u0026rsquo;operatore OR e i gruppi.\n[a-z][\\w-]*@[a-z]+\\.(com|net) Vediamo l\u0026rsquo;OR all\u0026rsquo;opera\ncom|net # trova com oppure net a|b|c # lo stesso di [abc]. L\u0026rsquo;aggiunta delle parentesi () si rende necessaria per chiarire che non vogliamo trovare tutte le occorrenze della parte di regex alla loro sinistra. Se volessimo \u0026ldquo;Brad Pitt\u0026rdquo; oppure \u0026ldquo;Angelina Pitt\u0026rdquo;\nBrad|Angelina Pitt # trova sia 'Brad' che 'Angelina Pitt' (Brad|Angelina) Pitt # ora ci siamo! Per un programmatore il concetto del raggruppamento (grouping) con le parentesi dovrebbe essere facilmente comprensibile. Di fatto possiamo combinarlo con altri operatori che già conosciamo\n(dog)+ # trova dog,dogdog,dogdogdog ... java(bean)? # trova java o javabean Conclusione Questo conclude la seconda parte della guida. La prossima e ultima parte verrà pubblicata tra qualche giorno. Nel frattempo raccomando di giocare con la pagina demo per fare un pò di pratica.\nE\u0026rsquo; ora disponibile anche la terza parte di questo tutorial.\nQuesto articolo è una traduzione autorizzata di Regex Primer: Part 2. Ringrazio l\u0026rsquo;autore per il permesso accordatomi.\n","permalink":"https://nicolaiarocci.com/introduzione-alle-regular-expression-seconda-parte/","summary":"\u003cp\u003eQuesta è la seconda parte della serie \u003cem\u003eIntroduzione alle Regular Expression\u003c/em\u003e.\nSe non hai ancora letto la \u003ca href=\"http://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/\"\u003eprima parte\u003c/a\u003e ti consiglio di farlo. Puoi usare\nla \u003c!-- raw HTML omitted --\u003epagina demo\u003c!-- raw HTML omitted --\u003e per provare\nle query della guida.\u003c/p\u003e\n\u003ch2 id=\"negazione-\"\u003eNegazione [^]\u003c/h2\u003e\n\u003cp\u003eAbbiamo già conosciuto la \u003ccode\u003e[cornice]\u003c/code\u003e. Una caratteristica importante di cui non\nabbiamo ancora parlato è la negazione. Supponiamo di voler cercare qualunque\ncarattere \u003cem\u003eeccetto la lettera a\u003c/em\u003e.\u003c/p\u003e","title":"Introduzione alle Regular Expression – Seconda Parte"},{"content":"Quando si tratta fare ricerche in blocchi di testo le regular expression (regex) sono la soluzione ideale. Come programmatore studiare le regex è stata una delle cose migliori che ho fatto per migliorare la mia produttività.\nValide in ogni linguaggio e indipendenti dalla piattaforma, le regex sono un investimento sempre valido. Java, JavaScript, Ruby, .Net, Python… le regex non cambiano. Rendono ricerca e sostituzione del testo enormemente più potenti Soddisfano pienamente il principio 80/20. Basta conoscerne il 20% per risolvere l'80% dei problemi. Ho preparato una pagina di prova per testare le regex del tutorial. In alternativa è sempre possibile usare una IDE, praticamente tutte supportano le regular expressions.\nPartiamo dalla [cornice] La regex più semplice? Eccola:\nbank La quale cerca \u0026ldquo;bank\u0026rdquo;. Cambiamola leggermente, immaginiamo di voler cercare sia \u0026ldquo;bank\u0026rdquo; che \u0026ldquo;tank\u0026rdquo; nello stesso blocco di testo.\n[bt]ank // cerca sia bank che tank La [cornice] rappresenta comunque 1 carattere. Stiamo ancora cercando una parola di 4 caratteri, ma il primo può essere \u0026ldquo;b\u0026rdquo; oppure \u0026ldquo;t\u0026rdquo;. I caratteri inclusi nelle parentesi [] sono legati da una relazione di tipo OR. La loro posizione è irrilevante, [tb]ank è semanticamente identico. Ecco altri esempi d’uso della [cornice]:\n[abc]1 // trova a1, b1 o c1 [cba]1 // trova a1, b1 o c1 file[0123456789] // trova file0,file1,file2 ... o file9 file[0-9] // trova file0,file1,file2 ... o file9 [a-z] // trova a, b, c oppure ... z Avrai notato che abbiamo introdotto un nuovo operatore. Usando il carattere - definiamo un range. Il range ci permette di evitare costrutti assurdamente lunghi come questo: [abcdefghijklmnopqrstuvwyz]. E’ una scorciatoia.\nProseguiamo coi Quantificatori Riprendiamo dall’esempio iniziale. Immaginiamo di voler trovare tank, bank, tanks, e banks. Potremmo provare in questo modo:\n[bt]anks? Abbiamo aggiunto il quantificatore ? che agisce sul carattere che si trova direttamente alla sua sinistra. Significa una occorrenza oppure nessuna, quindi nel nostro caso stiamo dicendo \u0026ldquo;cerca [bt]ank con una \u0026rsquo;s\u0026rsquo; finale o meno\u0026rdquo;. Un quantificatore può essere affiancato a qualunque carattere e addirittura a una [cornice]. Dai una occhiata a questi esempi:\n[bt]anks // trova banks o tanks [bt]anks? // trova bank, tank, banks oppure tanks [bt]?ank // trova bank, tank oppure ank ab?c? // trova a, ab, abc oppure ac Riassumendo, quando usiamo un carattere senza quantificatore indichiamo che ne cerchiamo una singola occorrenza. Quando aggiungiamo un quantificatore cambia il numero di occorrenze che vogliamo trovare. Nella tabella seguente trovi l’elenco dei quantificatori disponibili:\n\u0026lt;th\u0026gt; significato \u0026lt;/th\u0026gt; \u0026lt;th\u0026gt; regex \u0026lt;/th\u0026gt; \u0026lt;th\u0026gt; esempio \u0026lt;/th\u0026gt; \u0026lt;td\u0026gt; zero o 1 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abc? \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; ab, abc \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; zero o più \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abc* \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; ab,abc,abcc,abccc,abcccc,… etc \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; uno o più \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abc+ \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abc,abcc,abccc,abcccc,…etc \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; esattamente n volte \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abc{2} \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abcc \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; da n a m volte \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abc{2,3} \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; abcc,abccc \u0026lt;/td\u0026gt; Concludendo Abbiamo appreso la sintassi base che ci consente di fare un pò di pratica. E’ una buona idea fare quale esperimento in una IDE oppure sulla pagina demo.\nLa seconda parte di questa guida è ora pubblicata.\nQuesto articolo è una traduzione autorizzata di Regex Primer: Part 1. Ringrazio l’autore per il permesso accordatomi.\n","permalink":"https://nicolaiarocci.com/introduzione-alle-regular-expression-prima-parte/","summary":"\u003cp\u003eQuando si tratta fare ricerche in blocchi di testo le \u003ca href=\"http://it.wikipedia.org/wiki/Espressione_regolare\"\u003e\u003cstrong\u003eregular\nexpression\u003c/strong\u003e\u003c/a\u003e (regex) sono la soluzione ideale. Come programmatore studiare\nle regex è stata una delle cose migliori che ho fatto per migliorare la mia\nproduttività.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eValide in ogni linguaggio e indipendenti dalla piattaforma, le regex sono\nun investimento sempre valido. Java, JavaScript, Ruby, .Net, Python…\nle regex non cambiano.\u003c/li\u003e\n\u003cli\u003eRendono ricerca e sostituzione del testo \u003cem\u003eenormemente\u003c/em\u003e più potenti\u003c/li\u003e\n\u003cli\u003eSoddisfano pienamente il principio \u003ca href=\"http://en.wikipedia.org/wiki/Pareto_principle#In_software\"\u003e80/20\u003c/a\u003e. Basta conoscerne il 20% per\nrisolvere l'80% dei problemi.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eHo preparato una \u003c!-- raw HTML omitted --\u003epagina di\nprova\u003c!-- raw HTML omitted --\u003e per testare le regex del tutorial. In alternativa è sempre possibile\nusare una IDE, praticamente tutte supportano le regular expressions.\u003c/p\u003e","title":"Introduzione alle Regular Expression – Prima Parte"},{"content":"Vi propongo una scelta delle risorse più interessanti e curiose che ho scovato questa settimana in rete. Ce né per tutti i gusti: programmazione, SEO, Startups e curiosità. Andiamo a cominciare:\nDa Python 2 a Python 3\nPython 3 è il futuro, ma Python 2 è attualmente la versione più usata al mondo. Ora finalmente la documentazione ufficiale è arricchita da una bella guida alle migliori strategie per supportare entrambe le versioni di Python.\nPer quale motivo 400 persone si sono offerte volontarie per una viaggio di sola andata verso Marte?\nIl numero Ottobre-Novembre 2010 del _Journal of Cosmology_ contiene uno speciale di 55 pagine intitolato \u0026amp;#8220;Missione Umana su Marte: Colonizzare il Pianeta Rosso\u0026amp;#8221;. Secondo gli scienziati una missione di sola andata destinata a colonizzare Marte sarebbe possibile entro 20 anni. Cosa ha spinto ben quattrocento lettori a offrirsi come volontari per la missione? Il sorprendente effetto di un singolo Tweet sul Page Rank di Google Google ha ammesso recentemente che i link provenienti dai social network sono segnali usati nella valutazione dell\u0026amp;#8217;importanza dei siti web. I ragazzi di SEOmoz (tra i migliori esperti SEO in circolazione) sono rimasti esterrefatti dagli effetti che un singolo tweet ha causato sul page rank della loro _Beginners Guide to SEO_. Lettera aperta a un organizzatore di eventi Per mestiere Luca Sartoni partecipa (come speaker, spettatore o organizzatore) a molte conferenze , seminari e workshops. In questa lettera elenca quelli che secondo lui sono i cinque errori commessi più spesso dagli organizzatori di eventi. E suggerisce come evitarli. Come si fa WordPress? A quanto pare WordPress, pur avendo una sede a San Francisco, è una realtà capillarmente distribuita. Gran parte dei dipendenti lavora da casa ed è disseminata per il mondo, coprendone quasi tutti i fusi orari. In questo articolo sul blog ufficiale dell\u0026amp;#8217;azienda Scott Berkun racconta come si svolge una giornata di lavoro in una azienda di questo tipo. Come ospitare un intero sito (statico) su Amazon S3 Da qualche tempo Werner Vogels, CTO di Amazon, ospita il suo sito direttamente su S3, la potente piattaforma di _cloud storage_ di Amazon. Una soluzione di questo tipo offre diversi vantaggi, primo fra tutti la scalabilità. In questo articolo Vogels ci spiega come raggiungere lo stesso risultato. Sono una Designer e ho lanciato la mia prima applicazione in 6 settimane Tracy è una designer che non sa quasi nulla di programmazione. Ha una idea su un sito innovativo e tenta senza successo di ottenere un finanziamento che le consenta di assumere un programmatore esperto. Cosa fare? Tracy si rimbocca le maniche e in sei settimane riesce a lanciare una variante (semplificata) della sua idea originale. In Python/Django, ovviamente. La Guida Definitiva al Design delle Pagine Facebook Facebook ha aggiornato le Pagine Fan introducendo parecchie novità significative. In questo articolo Six Revisions ci spiega quali sono e come sfruttarle al meglio. I filmati completi del Corso di Programmazione (Python) del MIT Ventiquattro filmati completi, di ottima qualità, per imparare a programmare direttamente dai professori del famoso MIT di Boston. Il materiale è di qualità eccellente. Il curriculum vitae di Leonardo Da Vinci Prima di Mona Lisa, dell\u0026amp;#8217;Ultima Cena e dell\u0026amp;#8217;invenzione dell\u0026amp;#8217;elicottero anche a Leonardo Da Vinci è toccato scrivere il suo bel curriculum. Nel 1482, a trent\u0026amp;#8217;anni, Leonardo lo inviò a Ludovico il Moro, Duca di Milano. In questo splendido articolo possiamo vedere l\u0026amp;#8217;originale e leggerne la trascrizione. Perché? Per imparare un paio di trucchetti che potrebbero tornarci utili. Processare il Linguaggio Naturale in Python L\u0026amp;#8217;intero contenuto del libro _Natural Processing Language With Python_ in formato PDF, liberamente accessibile. Queste sono solo alcune delle segnalazioni che giorno per giorno pubblico su Twitter. Se volete più notizie, spunti e link interessanti seguitemi anche su Twitter!\n","permalink":"https://nicolaiarocci.com/programmazione-seo-startups-il-meglio-della-settimana-1/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eVi propongo una scelta delle risorse più interessanti e curiose che ho scovato questa settimana in rete. Ce né per tutti i gusti: programmazione, SEO, Startups e curiosità. Andiamo a cominciare:\u003c/p\u003e","title":"Programmazione, SEO, Startups – Il Meglio della Settimana #1"},{"content":" ","permalink":"https://nicolaiarocci.com/il-processo-creativo-nellera-moderna/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Il Processo Creativo nell’Era Moderna"},{"content":"Una interessante startup italiana muove i primi passi proprio in questi giorni. TuoGuru si presenta come il primo Marketplace Italiano del Know How.\nCome funziona La registrazione è gratuita e comprende la fornitura di 12 crediti spendibili subito per pubblicare domande sul sito. Chi fornirà la risposta migliore si aggiudicherà il premio in denaro (2€, 5€, 10€, ecc.) messo in palio dall’autore della domanda. Le categorie disponibili in questo momento sono Grafica, Programmazione, SEO \u0026amp; Marketing, CMS, Social Media, Fisco e Contabilità, Software, Hardware, Dominio + Hosting. Altre verranno aggiunte nel tempo.\nIl modello di business Avete letto bene. Su TuoGuru girano soldi! Esauriti i 12 crediti iniziali per porre domande dovrete acquistarne altri (oppure invitare amici sul sito). Al costo dei crediti dovrete poi aggiungere il premio da corrispondere nel caso qualcuno vi fornisca la risposta che cercate. Riassumendo:\nIl sito incassa vendendo crediti. Chi risponde ha la possibilità di guadagnare fornendo la risposta migliore. Chi fa domande compra la possibilità di ottenere risposte veloci, precise e attendibili. Di questi tempi potrebbe sembrare un controsenso pagare per ottenere risposte. Ci sono miriadi di forum e siti Q\u0026amp;A gratuiti. La scommessa di un servizio come questo è infatti la nicchia, ovvero scommettere su coloro che pur di proseguire il lavoro e ottenere rapidamente una risposta qualificata non hanno problemi a investire una cifra tutto sommato modesta.\nLa chiave del successo In questi schemi il personaggio chiave è l’esperto, colui/colei che decide di investire il proprio tempo fornendo risposte di qualità sperando di guadagnarci qualcosa. Più risposte qualificate, rapide e attendibili arriveranno più è probabile che gli utenti decideranno di usare il servizio a pagamento. Rispondere alle domande è gratuito, consente di migliorare la propria fama (esiste un meccanismo di classifiche interne), può essere divertente e può dare una mano a far quadrare i conti a fine mese. Perché non provarci?\nI primi passi In due giorni dall’apertura al pubblico ci sono già più di 500 utenti registrati. Le domande cominciano circolare e, soprattutto, le riposte fioccano. Bei segnali positivi. Questi ragazzi ci stanno provando seriamente e stanno lavorando bene. Si meritano un grosso in bocca al lupo!\n","permalink":"https://nicolaiarocci.com/tuoguru-il-mercato-italiano-del-know-how/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eUna interessante startup italiana muove i primi passi proprio in questi giorni. \u003cstrong\u003e\u003ca href=\"http://tuoguru.com/\"\u003eTuoGuru\u003c/a\u003e\u003c/strong\u003e si presenta come il \u003cstrong\u003eprimo Marketplace Italiano del Know How\u003c/strong\u003e.\u003c/p\u003e","title":"TuoGuru – Il mercato italiano del Know How"},{"content":"Sul sito ufficiale di BE-Wizard 2011 è disponibile il programma completo della due giorni SEO/Web Marketing che si terrà a San Marino i prossimi 11 e 12 marzo. Come scrivevo già qualche tempo fa quest’anno BE-Wizard porta in italia i guru internazionali di SEO e Web Marketing: Rand Fishkin (SEOmoz), Avinash Kaushik (Google), Marcus Tandler \u0026amp; Nils Döerje (Tandler \u0026amp; Döerje Partners), Tom Critchlow (Distilled) e altri.\nIl Programma Il programma è ricco di argomenti interessanti. Per solleticare il tuo appetito (ci sono ancora posti disponibili) ti propongo una selezione degli interventi che personalmente attendo con grande curiosità:\nGoogle Ranking: novità e scoperte inedite su come Google classifica i risultati organici, alla luce delle ultime ricerche svolte da SEOmoz.org (Rand Fishkin) Comunicare On-line con i Video. Video marketing: i fattori che determinano il successo di un video online e la diffusione virale. Video Analytics: misurare l’impatto dei propri video e calcolare il ritorno dell’investimento (Paolo Zanzottera) Ranking e comportamento dell’utente: come perfezionare il ranking attraverso l’analisi di Click-Through e Bounce Rate (Marcus Tandler) Come video, news e immagini hanno influito sulle tradizionali tecniche di posizionamento. Come applicare delle strategie ad hoc per la Universal Search (Neils Dörje) Link building: Dieci strategie avanzate per una link popularity efficace (Marcus Tandler) Ottimizzazione del Tasso di Conversione: come trasformare un sito locale in un “Conversion Funnel”, tracciare i dati e migliorare il tasso di conversione (Rand Fishkin) Per vedere l’elenco completo degli interventi consulta il programma ufficiale sul sito ufficiale.\nIncontriamoci! Ribadisco l’invito già fatto in passato. Se anche tu sarai presente fammelo sapere, magari organizziamo due chiacchiere davanti a un caffè o un aperitivo!\n","permalink":"https://nicolaiarocci.com/disponibile-il-programma-di-be-wizard-2011/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eSul sito ufficiale di \u003cstrong\u003eBE-Wizard 2011\u003c/strong\u003e è disponibile il \u003ca href=\"http://admin.abc.sm/upload/2156/programma_be-wizard.pdf\"\u003eprogramma completo\u003c/a\u003e della due giorni SEO/Web Marketing che si terrà a San Marino i prossimi 11 e 12 marzo. Come scrivevo già \u003ca href=\"http://nicolaiarocci.com/be-wizard-2011-porta-in-italia-i-guru-di-seo-e-web-marketing/\"\u003equalche tempo fa\u003c/a\u003e quest’anno BE-Wizard porta in italia i \u003cstrong\u003eguru internazionali di SEO e Web Marketing\u003c/strong\u003e: Rand Fishkin (SEOmoz), Avinash Kaushik (Google), Marcus Tandler \u0026amp; Nils Döerje (Tandler \u0026amp; Döerje Partners), Tom Critchlow (Distilled) e altri.\u003c/p\u003e","title":"Disponibile il programma completo di BE-Wizard 2011"},{"content":"Google ha appena annunciato una estensione per Chrome che permette agli utenti del browser di escludere dai risultati delle ricerche i siti di scarsa qualità o poco interessanti.\nEstensioni di questo tipo esistono da tempo ma questa si distingue per un motivo importante. Nel suo annuncio Matt Cutts, responsabile Google per i motori di ricerca, afferma che i siti bloccati da Personal Blocklist (questo il nome dell’estensione) verranno registrati in un database. In futuro Google potrebbe escludere questi siti dai risultati organici delle ricerche:\nOne of the signals we’re exploring is explicit feedback from users. To that end, today we’re launching an early, experimental Chrome extension so people can block sites from their web search results. If installed, the extension also sends blocked site information to Google, and we will study the resulting feedback and explore using it as a potential ranking signal for our search results.\nUn sito bloccato da migliaia di utenti potrebbe indurre Google a classificarlo come content farm ed escluderlo dai risultati delle ricerche. E’ probabile (e auspicabile!) che, almeno in una prima fase, questi siti saranno sottoposti a uno scrutinio accurato prima di venire depennati.\nWeb 2.0 all’ennesima potenza Finora Google ha sempre dichiarato di puntare fermamente a una soluzione algoritmica al problema della classificazione dei siti web. Con l’annuncio di oggi pare aprirsi una crepa in questa filosofia. Per la prima volta gli utenti potrebbero avere la possibilità di partecipare in maniera attiva alla selezione qualitativa dei risultati proposti da un motore da ricerca.\nUn sistema abusabile? Probabilmente è presto per preoccuparsi di questo ma c’è da augurarsi, se mai ci si arriverà, che l’implementazione finale tenga ben conto del rischio di abusi. Una azienda con pochi scrupoli potrebbe pensare di investire quattrini sonanti in una campagna di discredito nei confronti di un concorrente. Certo non sarebbe semplice né economico, ma pur sempre fattibile.\nChe ne pensate? Questa mi pare una innovazione interessante sia dal punto di vista pratico-funzionale che ‘sociale’, passatemi il termine. Voi cosa ne pensate?\nApprofondimenti Annuncio della nuova Estensione per Google Chrome Pagina ufficiale di Personal Blocklist Dettagli sul funzionamento dell’estensione su Search Engine Roundtable ","permalink":"https://nicolaiarocci.com/google-testa-il-feedback-utente-come-segnale-di-ranking/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eGoogle ha appena annunciato una estensione per \u003cstrong\u003e\u003ca href=\"http://www.google.com/chrome?hl=it\"\u003eChrome\u003c/a\u003e\u003c/strong\u003e che permette agli utenti del browser di escludere dai risultati delle ricerche i siti di scarsa qualità o poco interessanti.\u003c/p\u003e\n\u003cp\u003eEstensioni di questo tipo esistono da tempo ma questa si distingue per un motivo importante. Nel suo \u003ca href=\"http://googleblog.blogspot.com/2011/02/new-chrome-extension-block-sites-from.html\"\u003eannuncio\u003c/a\u003e \u003cstrong\u003eMatt Cutts\u003c/strong\u003e, responsabile Google per i motori di ricerca, afferma che i siti bloccati da \u003ca href=\"https://chrome.google.com/webstore/detail/nolijncfnkgaikbjbdaogikpmpbdcdef\"\u003e\u003cstrong\u003ePersonal Blocklist\u003c/strong\u003e\u003c/a\u003e (questo il nome dell’estensione) verranno registrati in un database. In futuro Google potrebbe escludere questi siti dai risultati organici delle ricerche:\u003c/p\u003e","title":"Google Testa Il Feedback Utente Come Segnale di Ranking"},{"content":"SourceKit è una applicazione per Google Chrome che permette di scrivere codice direttamente nel browser usando DropBox come disco dati/repository. Un TextMate in the cloud insomma.\nSe avete installato DropBox su ognuno dei vostri computer (un Mac a casa e un PC al lavoro per esempio) il risultato sarà quello di lavorare nel cloud mantenendo però copie locali, sincronizzate, dei vostri sorgenti. Potrete spostarvi da un computer all’altro e riprendere la scrittura del codice come se niente fosse. L’editor integrato è Mozilla Skywriter (ora Ace) e supporta parecchi linguaggi: C/C++, C#, Ruby, Python, PHP, HTML, JavaScript, Java.\nProprio l’altro giorno raccontando del progetto Orion Eclipse mi (e vi) chiedevo se il futuro del codice sorgente non sia online. SourceKit ci da la possibilità di provare subito “l’effetto che fa”, come diceva una vecchia pubblicità. Provare per credere!\n","permalink":"https://nicolaiarocci.com/sourcekit-chrome-dropbox/","summary":"\u003cp\u003e\u003ca href=\"https://chrome.google.com/webstore/detail/iieeldjdihkpoapgipfkeoddjckopgjg\"\u003e\u003cstrong\u003eSourceKit\u003c/strong\u003e\u003c/a\u003e è una applicazione per Google Chrome che permette di scrivere codice direttamente nel browser usando \u003ca href=\"https://www.dropbox.com/\"\u003eDropBox\u003c/a\u003e come disco dati/repository. Un \u003ca href=\"http://macromates.com/\"\u003eTextMate\u003c/a\u003e \u003cem\u003ein the cloud\u003c/em\u003e insomma.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"SourceKit – Scrivere codice in Google Chrome e salvarlo su DropBox"},{"content":"Oggi Google ha Oggi Google ha che presto il servizio Google Shopping sarà attivato in Italia. Si tratta di un motore specializzato nella ricerca delle migliori occasioni di acquisto. Basta farsi un giro sulla versione inglese del servizio, già operativa da qualche tempo, per rendersi conto che questo strumento ha serie possibilità di cambiare radicalmente il modo di vendere e fare acquisti online.\nGià dalla home page è evidente come in Google si siano ingegnati per offrire una\nesperienza di ricerca del tutto simile a quella classica alla quale gli utenti sono abituati (verrebbe da dire condizionati) da tempo. L’integrazione è tale che basta un click per spostarsi dalla ricerca in Google Shopping a quella in Google Classico.\nIl visitatore può ordinare o filtrare i risultati in base al prezzo, oppure può confrontare le offerte che i diversi commercianti propongono per lo stesso prodotto. E’ presente anche un carrello della spesa nel quale inserire i prodotti e le offerte più interessanti.\nCosa ci guadagna il commerciante? Una volta compiuta la scelta l’utente viene indirizzato sul sito del commerciante. E’ dunque il commerciante stesso a realizzare direttamente la vendita**.**\nIl servizio è gratuito e non sembra che Google sia interessata a provvigioni o voglia applicare tariffe per l’iscrizione al catalogo (verificherò con calma nelle prossime ore). Un dettaglio da considerare con attenzione: il visitatore che arriva sul nostro sito via Google Shopping è fortemente motivato all’acquisto: conosce il prezzo e ha scelto di sua iniziativa di venire a trovarci. Tocca a noi giocarcela bene offrendogli una ottima esperienza di acquisto!\nCome ci guadagna Google? Innanzi tutto grazie alla integrazione (già annunciata) con AdWords. Le confezioni dei prodotti appariranno anche nella ricerca classica, integrate negli annunci AdWords. C’è poi Checkout, il servizio Google per i pagamenti online. Non è un caso che il primo filtro che appare in Google Shopping sia proprio la selezione dei soli prodotti acquistabili via Checkout.\nC’è infine il fattore strategico. Se il servizio decollerà Google diventerà uno strumento indispensabile per mettere in contatto venditori e acquirenti. In futuro sarà molto difficile rinunciarvi, qualunque saranno le condizioni o i servizi (a pagamento?) che Google vorrà veicolare via Google Shopping.\nCominciare subito Benché il servizio non sia ancora aperto al pubblico è già possibile registrarsi a Google Merchant Center, il sito per commercianti sul quale registrare i propri prodotti. Il sistema è basato su feeds ed è piuttosto sofisticato (ma non troppo complicato), il che testimonia l’interesse di Google per l’intero progetto.\n","permalink":"https://nicolaiarocci.com/google-shopping-e-imminente-il-lancio-italiano/","summary":"\u003cp\u003eOggi Google ha \u003ca href=\"http://googlemerchantblog.blogspot.com/2011/02/google-merchant-center-launches-in.html\"\u003eOggi Google ha\u003c/a\u003e che presto il servizio \u003cstrong\u003e\u003ca href=\"http://www.google.com/products\"\u003eGoogle Shopping\u003c/a\u003e\u003c/strong\u003e sarà attivato in Italia. Si tratta di un motore specializzato nella ricerca delle migliori occasioni di acquisto. Basta farsi un giro sulla \u003ca href=\"http://www.google.com/products\"\u003eversione inglese del servizio\u003c/a\u003e, già operativa da qualche tempo, per rendersi conto che questo strumento ha serie possibilità di cambiare radicalmente il modo di vendere e fare acquisti online.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Google Shopping, è imminente il lancio italiano"},{"content":"Stack Overflow è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera minera di informazioni preziose e meriterebbe maggiore attenzione…\nGli eBooks di Stack Overflow Recentemente Greg Hewkill ha annunciato la creazione di uno script open source che genera un eBook per ognuno dei 20 tag più popolari di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria collana Stack Overflow che propone il concentrato dei migliori contenuti del sito. Basta scorrere i titoli (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:\nJAVA (26M) C# (24M), C++ (21M), C (11M) NET (21M) PYTHON (20M), DJANGO (1.6M) JAVASCRIPT (15M) PHP (9.6M) IPHONE (7.3M) HTML (6.0M), HTML 5 (3.0M) CSS (5.7M) JQUERY (5.5M) ASP.NET (4.8M) DATABASE (4.8M) RUBY (3.1M), RUBY ON RAILS (1.9M) ANDROID (2.7M) MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M) AJAX (2.1M) COCOA (1.5M), OBJECTIVE-C (3.1M) VB.NET (1.5M) SILVERLIGHT (1.1M) FLASH (509K) Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è Mobipocket, compatibile con [Stack Overflow è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera minera di informazioni preziose e meriterebbe maggiore attenzione…\nGli eBooks di Stack Overflow Recentemente Greg Hewkill ha annunciato la creazione di uno script open source che genera un eBook per ognuno dei 20 tag più popolari di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria collana Stack Overflow che propone il concentrato dei migliori contenuti del sito. Basta scorrere i titoli (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:\nJAVA (26M) C# (24M), C++ (21M), C (11M) NET (21M) PYTHON (20M), DJANGO (1.6M) JAVASCRIPT (15M) PHP (9.6M) IPHONE (7.3M) HTML (6.0M), HTML 5 (3.0M) CSS (5.7M) JQUERY (5.5M) ASP.NET (4.8M) DATABASE (4.8M) RUBY (3.1M), RUBY ON RAILS (1.9M) ANDROID (2.7M) MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M) AJAX (2.1M) COCOA (1.5M), OBJECTIVE-C (3.1M) VB.NET (1.5M) SILVERLIGHT (1.1M) FLASH (509K) Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è Mobipocket, compatibile con]7 e credo con altri lettori di eBook. Ricordo che è possibile leggere i libri per Kindle con l’applicazione gratuita disponibile per PC, Mac, [Stack Overflow è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera minera di informazioni preziose e meriterebbe maggiore attenzione…\nGli eBooks di Stack Overflow Recentemente Greg Hewkill ha annunciato la creazione di uno script open source che genera un eBook per ognuno dei 20 tag più popolari di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria collana Stack Overflow che propone il concentrato dei migliori contenuti del sito. Basta scorrere i titoli (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:\nJAVA (26M) C# (24M), C++ (21M), C (11M) NET (21M) PYTHON (20M), DJANGO (1.6M) JAVASCRIPT (15M) PHP (9.6M) IPHONE (7.3M) HTML (6.0M), HTML 5 (3.0M) CSS (5.7M) JQUERY (5.5M) ASP.NET (4.8M) DATABASE (4.8M) RUBY (3.1M), RUBY ON RAILS (1.9M) ANDROID (2.7M) MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M) AJAX (2.1M) COCOA (1.5M), OBJECTIVE-C (3.1M) VB.NET (1.5M) SILVERLIGHT (1.1M) FLASH (509K) Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è Mobipocket, compatibile con [Stack Overflow è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera minera di informazioni preziose e meriterebbe maggiore attenzione…\nGli eBooks di Stack Overflow Recentemente Greg Hewkill ha annunciato la creazione di uno script open source che genera un eBook per ognuno dei 20 tag più popolari di Stack Overflow. Ogni libro contiene le domande (e risposte) più votate nella sua categoria. Il risultato è una vera e propria collana Stack Overflow che propone il concentrato dei migliori contenuti del sito. Basta scorrere i titoli (tag) per rendersi conto che ce n’è davvero per tutti i gusti. Ecco una lista parziale:\nJAVA (26M) C# (24M), C++ (21M), C (11M) NET (21M) PYTHON (20M), DJANGO (1.6M) JAVASCRIPT (15M) PHP (9.6M) IPHONE (7.3M) HTML (6.0M), HTML 5 (3.0M) CSS (5.7M) JQUERY (5.5M) ASP.NET (4.8M) DATABASE (4.8M) RUBY (3.1M), RUBY ON RAILS (1.9M) ANDROID (2.7M) MY SQL (2.5M), ORACLE (662K), SQL SERVER (2.8M), SQL (5.1M) AJAX (2.1M) COCOA (1.5M), OBJECTIVE-C (3.1M) VB.NET (1.5M) SILVERLIGHT (1.1M) FLASH (509K) Alcuni sono di dimensioni notevoli il che ne fa ideali letture da divano! Il formato usato per confezionare gli eBook è Mobipocket, compatibile con]7 e credo con altri lettori di eBook. Ricordo che è possibile leggere i libri per Kindle con l’applicazione gratuita disponibile per PC, Mac,]10 e Android.\nBuona lettura!\n","permalink":"https://nicolaiarocci.com/il-meglio-di-stack-overflow-una-collana-di-ebook-gratuiti/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003ca href=\"http://stackoverflow.com/\"\u003e\u003cstrong\u003eStack Overflow\u003c/strong\u003e\u003c/a\u003e è la risorsa per programmatori più famosa e apprezzata della Rete. Purtroppo domande e risposte pubblicate sul sito si succedono a un ritmo tale che è impossibile seguire gli aggiornamenti in tempo reale. Per questo motivo la gran parte degli utenti (sottoscritto incluso!) ricorre a Stack Overflow solo al momento del bisogno, quando è necessario trovare in fretta la soluzione a un problema critico. E’ un peccato perchè Stack Overflow è una vera \u003cstrong\u003eminera di informazioni\u003c/strong\u003e \u003cstrong\u003epreziose\u003c/strong\u003e e  meriterebbe maggiore attenzione…\u003c/p\u003e","title":"Il meglio di Stack Overflow in una collana di eBook gratuiti"},{"content":"Gli ambienti di sviluppo (IDE) online sono una delle opportunità più originali che il cloud computing mette a disposizione dei programmatori web. In generale si tratta di editor di codice, debugger e strumenti per il controllo di versione da usare nel browser web senza bisogno di installare alcun software sul client. Per il momento le soluzioni disponibili offrono funzionalità limitate che tuttavia lasciano intravedere le possibilità che questi strumenti metteranno a nostra disposizione.\nIl Progetto Orion Semplici editor di codice sorgente sono disponibili online già da tempo, ma progetti come Orion portano il concetto di programmazione online a un livello superiore. Annunciato pochi giorni fa dal team di sviluppo di Eclipse, una IDE Open Source molto diffusa e apprezzata, il progetto Orion è qualcosa di nuovo:\nE’ una piattaforma di sviluppo aperta focalizzata totalmente allo sviluppo per il web, dentro il web. I tools sono scritti in JavaScript e girano nel browser. A differenza di altri tentativi di realizzare strumenti di sviluppo integrati nel browser, Orion non è una IDE che gira in una singola scheda del browser. I links funzionano e possono essere condivisi. Puoi aprire files in schede diverse e grande cura è stata messa nel fornire una ottima web experience durante lo sviluppo del codice\n\u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Codice JavaScript sviluppato direttamente in Google Chrome - Progetto Orion/Eclipse \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;p\u0026gt; Orion supporta JavaScript e presto funzionerà anche con PHP, HTML, CSS e Java. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; Cloud9 e gli altri \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img class=\u0026quot;alignleft\u0026quot; title=\u0026quot;Cloud9 IDE\u0026quot; src=\u0026quot;images/2011/01/cloud9ide.png?resize=147%2C150\u0026quot; alt=\u0026quot;Cloud9 IDE\u0026quot; data-recalc-dims=\u0026quot;1\u0026quot; /\u0026gt;Anche \u0026lt;strong\u0026gt;Mozilla\u0026lt;/strong\u0026gt; lavora da tempo (2008) a qualcosa di simile. \u0026lt;a href=\u0026quot;http://mozillalabs.com/skywriter/\u0026quot;\u0026gt;Skywriter\u0026lt;/a\u0026gt;, semplice editor online ora integrato in \u0026lt;a href=\u0026quot;http://ace.ajax.org/\u0026quot;\u0026gt;Ace\u0026lt;/a\u0026gt;, è alla base della piattaforma \u0026lt;a style=\u0026quot;font-weight: bold;\u0026quot; href=\u0026quot;http://cloud9ide.com/\u0026quot;\u0026gt;Cloud9 IDE\u0026lt;/a\u0026gt;. Attualmente in beta, Cloud9 è una IDE JavaScript integrata in Google Chrome che promette prestazioni uguali a quelle offerte da editor e IDE tradizionali, integrazione tra codice sorgente locale e remoto, debugging e deployment integrati. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Altro brillante esempio è \u0026lt;strong\u0026gt;\u0026lt;a href=\u0026quot;http://www.coderun.com/\u0026quot;\u0026gt;CodeRun\u0026lt;/a\u0026gt;\u0026lt;/strong\u0026gt;, IDE online già funzionante e gratuita dedicata soprattutto a sviluppatori ASP.NET, Silverlight e WPF. Il mondo IDE insomma è in gran fermento. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; Vantaggi e svantaggi di sviluppare nel cloud \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Immaginate un \u0026lt;a href=\u0026quot;http://docs.google.com/\u0026quot;\u0026gt;Google Documents\u0026lt;/a\u0026gt; per programmatori. Oggi possiamo creare online fogli di calcolo, testi e presentazioni; domani potremo sviluppare i nostri programmi nel browser. Ma quali sono i vantaggi e gli svantaggi di affidarsi a un ambiente di sviluppo online? Gli stessi offerti da un ambiente di produttività come Google Documents. \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt; Accessibilità \u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt; Possiamo accedere al nostro ambiente di lavoro da qualunque località nel mondo. Bastano un accesso internet e un browser per metterci al lavoro. Siamo a Bangkok e abbiamo un paio di ore a disposizione? Entriamo in un internet cafe e pochi minuti dopo stiamo scrivendo codice o revisionando il lavoro dei colleghi. Il che ci porta al prossimo punto. \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt; Collaborazione e condivisione semplificate \u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt; Nei progetti più importanti è spesso necessario installare strumenti di gestione e controllo dei team di sviluppo. Il codice sorgente memorizzato su un server remoto e accessibile a chiunque rende collaborazione e condivisione del codice più semplice. Tutte le cloud IDE promettono il supporto per team di sviluppo. \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt; Indipendenza dalla piattaforma hardware \u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt; Con le cloud IDE scriviamo codice in un web browser. Compilazione, linking e debugging sono processi svolti su una macchina remota che (si suppone) offrirà prestazioni adeguate al compito. Trovarsi momentaneamente su un computer poco performante non sarà un problema. Sviluppare su computers diversi (Mac a casa e PC in ufficio, per esempio) non comporterà differenze sostanziali. \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt; Riservatezza \u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt; Il nostro codice sarà memorizzato su un dispositivo sul quale non potremo esercitare un controllo assoluto. Difficilmente avremo garanzia di totale riservatezza. Applicazioni particolarmente delicate non potranno probabilmente essere sviluppate \u0026lt;em\u0026gt;sulle nuovole \u0026lt;/em\u0026gt;anche se servizi di successo come \u0026lt;strong\u0026gt;\u0026lt;a href=\u0026quot;https://github.com/\u0026quot;\u0026gt;GitHub\u0026lt;/a\u0026gt; \u0026lt;/strong\u0026gt;offrono supporto a progetti open source e privati garantendo a questi ultimi la riservatezza necessaria. \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt; Sicurezza \u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt; Che succede se il mio codice sorgente viene perduto in seguito a un guasto hardware del sistema remoto che lo ospita? L\u0026amp;#8217;affidabilità è senz\u0026amp;#8217;altro un aspetto delicato e costituisce uno dei deterrenti all\u0026amp;#8217;adozione dei sistemi di cloud computing in generale. Affidare i nostri codici a terzi non ci impedirebbe di conservarne copie locali. Come già successo per i sistemi di \u0026lt;a href=\u0026quot;http://it.wikipedia.org/wiki/Cloud-storage\u0026quot;\u0026gt;cloud storage\u0026lt;/a\u0026gt;, i servizi di cloud development dovranno offrire elevati standard di sicurezza e affidabilità. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt; Conclusioni \u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Lo sviluppo di applicazioni \u0026lt;em\u0026gt;sulle nuvole\u0026lt;/em\u0026gt; è senz\u0026amp;#8217;altro una prospettiva affascinante che presto sarà di attualità. Non sono poche le perplessità degli sviluppatori, soprattutto negli ambienti \u0026lt;em\u0026gt;enterprise\u0026lt;/em\u0026gt; o nei settori nei quali la riservatezza è un elemento determinante. Le applicazioni web saranno le prime implementate con queste tecnologie, per le altre bisognerà probabilmente attendere a lungo. \u0026lt;/p\u0026gt; \u0026lt;h4\u0026gt; Approfondimenti \u0026lt;/h4\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;http://dev.eclipse.org/blogs/mike/2011/01/11/introducing-orion/\u0026quot;\u0026gt;Introducing Orion\u0026lt;/a\u0026gt;, di Mike Milinkovich \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;http://borisoneclipse.blogspot.com/2011/01/orion.html\u0026quot;\u0026gt;Orion\u0026lt;/a\u0026gt;, di Boris Bukowski \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;http://jaxenter.com/eclipse-orion-the-new-ide-paradigm-33431.html\u0026quot;\u0026gt;Eclipse Orion: The New IDE Paradigm\u0026lt;/a\u0026gt;, intervista a B. Bukowski \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;http://www.i-programmer.info/news/90-tools/1872-mozilla-and-eclipse-take-programming-into-the-cloud.html\u0026quot;\u0026gt;Mozilla and Eclipse take programming into the cloud\u0026lt;/a\u0026gt;, di Mike James \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;http://dotnet.dzone.com/articles/online-ides-%E2%80%93-perspectives\u0026quot;\u0026gt;Online IDEs – perspectives?\u0026lt;/a\u0026gt; Di Den Delimarsky \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; ","permalink":"https://nicolaiarocci.com/il-futuro-del-codici-sorgente-e-online/","summary":"\u003cp\u003eGli ambienti di sviluppo (IDE) online sono una delle opportunità più originali che il \u003ca href=\"http://it.wikipedia.org/wiki/Cloud_computing\"\u003ecloud computing\u003c/a\u003e mette a disposizione dei programmatori web. In generale si tratta di editor di codice, debugger e strumenti per il controllo di versione da usare nel browser web senza bisogno di installare alcun software sul client. Per il momento le soluzioni disponibili offrono funzionalità limitate che tuttavia lasciano intravedere le possibilità che questi strumenti metteranno a nostra disposizione.\u003c/p\u003e\n\u003ch2 id=\"il-progetto-orion\"\u003eIl Progetto Orion\u003c/h2\u003e\n\u003cp\u003eSemplici editor di codice sorgente sono disponibili online già da tempo, ma progetti come \u003cstrong\u003eOrion\u003c/strong\u003e portano il concetto di programmazione online a un livello superiore. \u003ca href=\"http://dev.eclipse.org/blogs/mike/2011/01/11/introducing-orion/\"\u003eAnnunciato pochi giorni fa\u003c/a\u003e dal team di sviluppo di \u003cstrong\u003eEclipse\u003c/strong\u003e, una IDE Open Source molto diffusa e apprezzata, il progetto Orion è qualcosa di nuovo:\u003c/p\u003e","title":"Il futuro del codice sorgente è online?"},{"content":"In questa bella intervista Gaspar Torriero discute con Massimo Mantellini dell’importanza della banda larga simmetrica. Secondo Torriero ci troviamo ancora nel medioevo della Rete e la simmetria delle connessioni sarà la chiave che aprirà la porta a un futuro in gran parte ancora inimmaginabile. Dieci minuti ben spesi:\n","permalink":"https://nicolaiarocci.com/la-banda-larga-simmetrica-portera-internet-fuori-dal-medioevo/","summary":"\u003cp\u003eIn questa bella intervista \u003cstrong\u003e\u003ca href=\"http://www.gaspartorriero.it/\"\u003eGaspar Torriero\u003c/a\u003e\u003c/strong\u003e discute con \u003ca href=\"http://eraclito.telecomitaliahub.it/2011/01/tempo-stimato-25-anni/\"\u003eMassimo Mantellini\u003c/a\u003e dell’importanza della \u003cstrong\u003ebanda larga simmetrica\u003c/strong\u003e. Secondo Torriero ci troviamo ancora nel medioevo della Rete e la simmetria delle connessioni sarà la chiave che aprirà la porta a un futuro in gran parte ancora inimmaginabile. Dieci minuti ben spesi:\u003c/p\u003e","title":"La banda larga simmetrica porterà Internet fuori dal medioevo"},{"content":"****Introdotta dallo slogan Siamo Uomini Non Macchine, Humans TXT è una iniziativa che consente di conoscere gli autori di un sito web. Per ragioni di immagine i committenti sono spesso riluttanti a consentire che sulle loro homepage appaiano i nomi degli autori. Non sempre è evidente chi ha sviluppato un sito, cosa certo non gradita all’autore che avrebbe tutto il diritto (e l’interesse) di firmare le proprie opere.\nCosa è Humans.txt? Un semplice file di testo che contiene informazioni sulle persone che hanno contribuito alla costruzione del sito. Il file non è intrusivo e non causa decadimento delle prestazioni perché collocato all’esterno della gerarchia del sito vero e proprio. Viene salvato nella web root, proprio là dove di solito risiede il robots.txt. Se consentito dal committente si potrebbe aggiungere un riferimento nella homepage:\nNel file si può indicare più di un nome: il programmatore, il designer, il copywriter, il web master, il SEO/SEM, eventuali dediche. Le possibilità sono tante quante sono le persone che normalmente intervengono nella creazione di un sito. Potremmo immaginare humans.txt come l’equivalente della sigla di una trasmissione televisiva, oppure di un film.\nAlla ricerca di uno standard Gli autori dell’iniziativa propongono delle linee guida per la compilazione del file humans.txt e si dicono pronti ad accettare suggerimenti da chiunque. L’idea di standardizzare il contenuto del file è senz’altro valida perché consentirebbe, tra le altre cose, la creazione di tools di ricerca e certificazione. Pensate per esempio a una estensione del browser che consenta di vedere i credits del sito che stiamo visitando. Ci sono parecchie possibilità di applicazione da esplorare.\nUna iniziativa superflua? Lo standard HTML contempla già un tag Meta Name per l’autore. Si tratta di un elemento opzionale e non indicizzato dai motori di ricerca. Il problema con questo tag è che il committente potrebbe non gradirlo. Lo standard prevede di indicare un solo autore mentre, come abbiamo visto, in humans.txt possiamo indicare più persone. Le due soluzioni possono coesistere, dando spazio a soluzioni interessanti: un’agenzia potrebbe inserire il proprio nome nel meta tag ed elencare i membri del team in humans.txt. La discussione comunque è piuttosto accesa. C’è chi ritiene superflua l’iniziativa. Ci sono i soliti complottisti che vedono dietro a tutto questo chissà quale oscura manovra a fin di lucro e c’è infine chi ci vuol credere davvero sostenendo i ragazzi spagnoli che hanno messo in piedi il progetto.\nComincia subito Niente impedisce di aderire all’iniziativa già da ora. Deposita il tuo humans.txt nella root del tuo sito e sei a bordo. E’ anche possibile inviare il proprio file humans.txt agli autori dell’iniziativa i quali sostengono di voler compilare una lista globale che, stranamente, al momento non è consultabile. Ho chiesto loro come mai. La riposta è stata we’re looking to create something “different” to show humans. Qualcosa bolle in pentola.\n","permalink":"https://nicolaiarocci.com/humans-txt-il-robots-txt-per-gli-esseri-umani/","summary":"\u003cp\u003e**\u003c!-- raw HTML omitted --\u003e**Introdotta dallo slogan \u003cem\u003eSiamo Uomini Non Macchine\u003c/em\u003e, \u003c!-- raw HTML omitted --\u003eHumans TXT\u003c!-- raw HTML omitted --\u003e è una iniziativa che consente di conoscere gli autori di un sito web. Per ragioni di immagine i committenti sono spesso \u003c!-- raw HTML omitted --\u003eriluttanti\u003c!-- raw HTML omitted --\u003e a consentire che sulle loro homepage appaiano i nomi degli autori. Non sempre è evidente chi ha sviluppato un sito, cosa certo non gradita all’autore che avrebbe tutto il diritto (e l’interesse) di \u003cstrong\u003efirmare\u003c/strong\u003e le proprie opere.\u003c/p\u003e","title":"Humans TXT – Il robots.txt per gli esseri umani"},{"content":"I giorni 11 e 12 marzo parteciperò a BE-Wizard 2011, evento SEO e Web Marketing dal programma molto ricco e interessante. Tra i relatori celebrità internazionali come Rand Fishkin (SEOmoz), Avinash Kaushik (Google), Marcus Tandler \u0026amp; Nils Döerje (Tandler \u0026amp; Döerje Partners) e Tom Critchlow (Distilled). Chi lavora nell’ambito SEO/SEM riconoscerà senz’altro questi nomi, Fishkin e Kaushik sono stelle di prima grandezza (di Kaushik raccomando senz’altro Web Analytics 2.0, uscito recentemente anche in italiano).\nIl programma Il programma prevede le conferenze dei Big Speakers nella prima giornata e gli approfondimenti tecnici (E-Commerce o Turismo) nella seconda. Per quest’ultima è già disponibile l’elenco degli argomenti trattati mentre per la prima bisognerà attendere ancora qualche giorno. Qui riporto il programma della sessione E-Commerce, quella a cui parteciperò io:\nIntroduzione agli strumenti per la promozione online E-commerce e diritto E-commerce con eBay e altri marketplaces Social Networks \u0026amp; Web Analytics 2.0 Case History Keyword Advertising Intervista/Testimonianza Case History e-mail marketing Case history SEO da “oltreoceano” Strategie SEO e SEM Incontriamoci! Questi eventi in genere sono ottime occasioni per fare nuove conoscenze e scambiarsi opinioni ed esperienze. Se qualcuno dei lettori di questo sito prevede di partecipare me lo faccia sapere, magari organizziamo due chiacchiere davanti a un caffè o un aperitivo!\nPotrebbe sembrare il contrario, ma vi assicuro che non sono coinvolto in alcun modo nella organizzazione o promozione di questo evento.\n","permalink":"https://nicolaiarocci.com/be-wizard-2011-porta-in-italia-i-guru-di-seo-e-web-marketing/","summary":"\u003cp\u003e\u003ca href=\"http://www.be-wizard.com\"\u003e\u003c!-- raw HTML omitted --\u003e\u003c/a\u003eI giorni 11 e 12 marzo parteciperò a \u003c!-- raw HTML omitted --\u003eBE-Wizard 2011\u003c!-- raw HTML omitted --\u003e, evento SEO e Web Marketing dal programma molto ricco e interessante. Tra i relatori celebrità internazionali come \u003ca href=\"http://www.seomoz.org/team/randfish\"\u003eRand Fishkin\u003c/a\u003e (SEOmoz), \u003ca href=\"http://www.kaushik.net/avinash/about\"\u003eAvinash Kaushik\u003c/a\u003e (Google), \u003ca href=\"http://www.tandlerdoerjepartner.com/\"\u003eMarcus Tandler \u0026amp; Nils Döerje\u003c/a\u003e (Tandler \u0026amp; Döerje Partners) e \u003ca href=\"http://www.distilled.co.uk/company/people/tom-critchlow.html\"\u003eTom Critchlow\u003c/a\u003e (Distilled). Chi lavora nell’ambito SEO/SEM riconoscerà senz’altro questi nomi, Fishkin e Kaushik sono stelle di prima grandezza (di Kaushik raccomando senz’altro \u003ca href=\"http://www.webanalytics20.com/\"\u003eWeb Analytics 2.0\u003c/a\u003e, uscito recentemente anche \u003ca href=\"http://www.amazon.it/Analytics-Misurare-successo-nellera-Internet/dp/882034498X/ref=sr_1_2?ie=UTF8\u0026amp;qid=1295446745\u0026amp;sr=8-2\"\u003ein italiano\u003c/a\u003e).\u003c/p\u003e","title":"BE-Wizard 2011 porta in Italia i guru di SEO e Web Marketing"},{"content":" Nel web marketing il conversion rate è la percentuale di visitatori unici che hanno effettuato l’operazione desiderata visitando il sito. L’azione desiderata potrebbe essere condurre vendite, effettuare acquisti, osservare una pagina chiave del sito, o altre azioni misurabili (fonte: wikipedia)\nE’ possibile aumentare del 250% il conversione rate grazie a una sola, banale modifica al sito? I signori di Kajabi sostengono di esserci riusciti nel corso di un esperimento durato una settimana. La loro home page è organizzata in modo da convogliare l’attenzione del visitatore su un unico, grande pulsante che invita il visitatore a consultare le tariffe del servizio offerto in abbonamento. Lasciando invariato il resto della pagina hanno ritoccato il contenuto del pulsante, registrando poi il numero di click ottenuti in un dato periodo di tempo. Il ciclo è stato ripetuto quattro volte, ogni volta con un testo diverso. Ecco come è andata:\nL’importanza del giusto messaggio Un pò di prudenza non guasta ","permalink":"https://nicolaiarocci.com/come-aumentare-del-250-la-conversion-rate-del-tuo-sito/","summary":"\u003cblockquote\u003e\n\u003cp\u003eNel web marketing il \u003cstrong\u003e\u003ca href=\"http://en.wikipedia.org/wiki/Conversion_rate\"\u003econversion rate\u003c/a\u003e\u003c/strong\u003e è la percentuale di visitatori unici che hanno effettuato l’operazione desiderata visitando il sito. L’azione desiderata potrebbe essere condurre vendite, effettuare acquisti, osservare una pagina chiave del sito, o altre azioni misurabili (fonte: \u003cem\u003ewikipedia\u003c/em\u003e)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eE’ possibile \u003cstrong\u003eaumentare del 250% il conversione rate\u003c/strong\u003e grazie a una sola, banale modifica al sito? I signori di \u003ca href=\"http://www.kajabiapp.com/\"\u003eKajabi\u003c/a\u003e sostengono di esserci riusciti nel corso di un esperimento durato una settimana. La loro home page è organizzata in modo da convogliare l’attenzione del visitatore su un unico, grande pulsante che invita il visitatore a consultare le tariffe del servizio offerto in abbonamento. Lasciando invariato il resto della pagina hanno ritoccato il contenuto del pulsante, registrando poi il numero di click ottenuti in un dato periodo di tempo. Il ciclo è stato ripetuto quattro volte, ogni volta con un testo diverso. Ecco come è andata:\u003c/p\u003e","title":"Come aumentare del 250% la conversion rate del tuo sito"},{"content":"Quattro anni fa Eric Meyer pubblicò la prima versione del suo CSS Reset. Concepito come un prototipo da condividere con altri sviluppatori dediti alla creazione di uno standard, il modulo riscosse subito grande successo diffondendosi rapidamente. In poche settimane venne adottato, spesso inconsapevolmente, da decine di migliaia di programmatori e designer web. Oggi gran parte dei siti web nel mondo includono nel loro codice almeno una traccia di quello che è universalmente noto come Eric Meyer Reset.\nUna evoluzione continua I piccoli problemi e le nuove incompatibilità che inevitabilmente accompagnano ogni aggiornamento dei browser esistenti, nonché le uscite di quelli nuovi (Google Chrome su tutti) costringono spesso a rivedere fogli di stile e codice JavaScript. Così nel tempo altri programmatori hanno dato il loro contribuito proponendo variazioni e aggiornamenti al tema originale. Ci sono poi le nuove tecnologie che si affacciano sulla scena; una delle revisoni più famose del Eric Mayer Reset è infatti l’HTML5 Reset Stylesheet.\nEric Meyer Reset versione 2011 Ed ecco che a sopresa lo stesso Meyer torna sulla scena proponendo l’ultima incarnazione del suo CSS Reset. Questo aggiornamento prende spunto dall’originale ma tiene conto anche del lavoro svolto nel frattempo dalla comunità, a partire proprio dal HTML5 Reset. Ecco il nuovo codice:\n/* http://meyerweb.com/eric/tools/css/reset/ v2.0b1 | 201101 NOTE: WORK IN PROGRESS USE WITH CAUTION AND TEST WITH ABANDON */ html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; outline: 0; font-size: 100%; font: inherit; vertical-align: baseline; } /* HTML5 display-role reset for older browsers */ article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; } body { line-height: 1; } ol, ul { list-style: none; } blockquote, q { quotes: none; } blockquote:before, blockquote:after, q:before, q:after { content: ''; content: none; } /* remember to define visible focus styles! :focus { outline: ?????; } */ /* remember to highlight inserts somehow! */ ins { text-decoration: none; } del { text-decoration: line-through; } table { border-collapse: collapse; border-spacing: 0; } Come annotato a caratteri cubitali nelle note iniziali ci troviamo di fronte a un lavoro non ancora definitivo. Sarà mia cura segnalare eventuali aggiornamenti, tuttavia una prima occhiata al codice fa pensare che questa prima stesura sia già valida.\nNe vale la pena? C’è un discussione in corso da tempo tra chi sostiene che tutto sommato il CSS Reset non sia necessario e chi, al contrario, lo difende a spada stratta. Non risolve certo tutti i problemi di compatibilità tra browsers ma senz’altro CSS Reset contribuisce a ridurne sensibilmente il numero. Per approfondire l’argomento puoi cominciare dando una occhiata a Should You Reset Your CSS? (Six Revisions) e leggendo le opinioni degli utenti di Stack Overflow.\n","permalink":"https://nicolaiarocci.com/eric-meyer-aggiorna-il-suo-famoso-css-reset/","summary":"\u003cp\u003eQuattro anni fa Eric Meyer pubblicò la prima versione del suo CSS\nReset. Concepito come un prototipo da condividere con altri\nsviluppatori dediti alla creazione di uno standard, il modulo riscosse subito\ngrande successo diffondendosi rapidamente. In poche settimane venne adottato,\nspesso inconsapevolmente, da decine di migliaia di programmatori e designer\nweb. Oggi gran parte dei siti web nel mondo includono nel loro codice almeno\nuna traccia di quello che è universalmente noto come Eric Meyer\nReset.\u003c/p\u003e","title":"Eric Meyer aggiorna il suo famoso CSS Reset"},{"content":"Python è il Linguaggio di Programmazione del 2010. Il riconoscimento viene assegnato da TIOBE al linguaggio di programmazione che ha conquistato più quote di mercato nel corso dell’anno. La crescita di Python è stata +1.81% da gennaio 2010, di poco superiore al risultato di Objective-C (+1.63%), secondo classificato. Objective-C è il linguaggio usato nello sviluppo di applicazioni iPhone e IPad; è andato molto bene nella prima parte dell’anno ma ha perso quote negli ultimi mesi.\nNon solo web e scripting TIOBE sottolinea come in questi anni Python sia diventato il linguaggio standard per lo scripting, sostituendo di fatto Perl. Da questo ambito tutto sommato ristretto negli ultimi anni Python si è diffuso in molti altri campi, primo fra tutti il web, dove ha riscosso grande successo anche grazie al framework Django. Python è facile da imparare e molte università lo stanno adottando come linguaggio principale per l’insegnamento della programmazione. Tra i grandi nomi che sviluppano in Python ricordo Google, YouTube, il gioco multiplayer EVE Online, la NASA.\nIl TIOBE Index come strumento strategico Il TIOBE Programming Community index è un indicatore annuale della popolarità dei linguaggi di programmazione. La classifica è calcolata tenendo conto anche dei giudizi espressi da ingegneri e sviluppatori di chiara fama, oltre che tracciando i risultati di corsi di addestramento tenuti in tutto il mondo. I risultati forniti dai motori di ricerca più importanti (Google, MSN, Yahoo!, Wikipedia e YouTube) vengono a loro volta inclusi nell’elaborazione della classifica.\nTIOBE non è un indice che tenta di individuare il migliore linguaggio di programmazione, serve piuttosto a indicare quali sono le tendenze in corso a livello planetario. Si tratta di una valida risorsa per verificare l’attualità delle proprie competenze e per pianificare strategicamente i prossimi linguaggi di programmazione su cui investire. Come spunto di riflessione consiglio caldamente la lettura del celebre Paradosso di Python, formulato da Paul Graham nell’ormai lontano 2004. Forse i tempi stanno cambiando?\nL’ultimo decennio: chi sale e chi scende \u0026lt;p class=\u0026quot;wp-caption-text\u0026quot;\u0026gt; Andamento dell'indice TIOBE nell'ultimo decennio (2000-2010) \u0026lt;/p\u0026gt; ","permalink":"https://nicolaiarocci.com/python-vince-il-tiobe-programming-language-award-2010/","summary":"\u003cp\u003e\u003cstrong\u003e\u003c!-- raw HTML omitted --\u003ePython\u003c/strong\u003e è il \u003cstrong\u003e\u003ca href=\"http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\"\u003eLinguaggio di Programmazione del 2010\u003c/a\u003e\u003c/strong\u003e. Il riconoscimento viene assegnato da \u003ca href=\"http://www.tiobe.com/\"\u003eTIOBE\u003c/a\u003e al linguaggio di programmazione che ha conquistato più quote di mercato nel corso dell’anno. La crescita di Python è stata +1.81% da gennaio 2010, di poco superiore al risultato  di Objective-C (+1.63%), secondo classificato. Objective-C è il linguaggio usato nello sviluppo di applicazioni iPhone e IPad; è andato molto bene nella prima parte dell’anno ma ha perso quote negli ultimi mesi.\u003c/p\u003e","title":"Python vince il TIOBE Programming Language Award 2010"},{"content":"Proprio ieri in Adobe Flash è una Pessima Idea concludevo sostenendo che l’adozione dei nuovi standard HTML5 e CSS3 sarà molto più rapida di quanto non si immagini. Nemmeno ventiquattro ore dopo ecco la notizia che oltre il 50% degli utenti web supporta già il formato video HTML5. La fonte dei dati è StatCounter, ancora oggi una delle piattaforme più usate al mondo per tracciare la navigazione sui siti web.\nHTML5 in rapida diffusione ","permalink":"https://nicolaiarocci.com/oltre-il-50-degli-utenti-web-ora-supporta-il-formato-video-html5/","summary":"\u003cp\u003eProprio ieri in \u003ca href=\"http://nicolaiarocci.com/flash-adobe-e-una-pessima-idea/\"\u003eAdobe Flash è una Pessima Idea\u003c/a\u003e concludevo sostenendo che l’adozione dei nuovi standard HTML5 e CSS3 sarà molto più rapida di quanto non si immagini. Nemmeno ventiquattro ore dopo ecco la notizia che \u003ca href=\"http://videojs.com/2011/01/html5-video-statistics/\"\u003e\u003cstrong\u003eoltre il 50% degli utenti web supporta già il formato video HTML5\u003c/strong\u003e\u003c/a\u003e. La fonte dei dati è \u003ca href=\"http://gs.statcounter.com/#browser_version-ww-daily-20101201-20101231\"\u003eStatCounter\u003c/a\u003e, ancora oggi una delle piattaforme più usate al mondo per tracciare la navigazione sui siti web.\u003c/p\u003e","title":"Oltre il 50% degli utenti web ora supporta il formato video HTML5"},{"content":"E’ incredibile la quantità di siti che ancora oggi vengono sviluppati con Flash. Il fenomeno colpisce soprattutto i siti-vetrina: negozi, attività commerciali, ristoranti, artigiani. Basta farsi un giro sui siti di venditori di mobili, per esempio, per godersi il trionfo della ‘multimedia platform‘ di Adobe. Bisogna prenderne atto: nel 2011 migliaia di aziende italiane di ogni dimensione affidano la loro identità web ad Adobe Flash. Consulenti e agenzie continuano a produrre siti con tecnologie assimilate anni fa. Reticenti all’aggiornamento delle proprie competenze, si accontentano del loro confortante orticello che, tutto sommato, assicura lo stipendio.\nEppure ci sono tante buone ragioni per non ricorrere a Flash:\nNon è sicuro. Probabilmente Flash è l’unico prodotto che fa concorrenza a Microsoft Windows in quanto a numero di security fixes. Non per niente è stato definito il nuovo Windows Vista E’ una tecnologia obsoleta, che si affida pesantemente ai plugin di terze parti (vedi alla voce sicurezza) Rende lenta l’apertura delle pagine web, a meno che non si intervenga con ottimizzazioni ad-hoc Consuma molta, troppa memoria Richiede un forte impegno della CPU Sui dispositivi portatili consuma velocemente la batteria Non è supportato sui dispositivi iOS/Apple (iPhone, iPad) Gira comunque male su buona parte degli altri dispositivi portatili, SmartPhones soprattutto Ha seri problemi di compatibilità e prestazioni su piattaforme Mac/OSX Molti utenti e (soprattutto) aziende bloccano Flash sui loro browsers proprio a causa dei problemi di sicurezza, stabilità e prestazioni I contenuti Flash non sono facili da archiviare. Gli utenti medi hanno grosse difficoltà a salvare copie locali delle pagine. I servizi tipo Internet Archive non riescono a memorizzare il sito Flash è il nemico numero uno dei motori di ricerca. Google, Bing e gli altri hanno da sempre grosse difficoltà ad indicizzarne i contenuti Flash rende problematica, quando non impossibile, l’ottimizzazione ai fini del posizionamento sui motori di ricerca (SEO) E’ un sistema proprietario chiuso E’ vero che ricorrendo a ottimizzazioni e tools dedicati alcune (poche) di queste limitazioni possono essere aggirate. Le prossime release di Flash promettono sviluppi interessanti, tra i quali ottimizzazioni per i dispositivi mobili e riduzione del peso dell’intera infrastruttura.\nConsidera le alternative Non sono necessarie soluzioni esoteriche. Troppo spesso si ricorre a Flash per produrre effetti, transizioni e animazioni realizzabili anche con strumenti consolidati, leggeri e SEO-friendly quali JavaScript, HTML e CSS. In una parola, AJAX. Cose ormai scontate. O forse no, a giudicare da quel che ancora oggi si pubblica in rete. A ben guardare la battaglia tra Apple e Adobe, quella culminata con la [E’ incredibile la quantità di siti che ancora oggi vengono sviluppati con Flash. Il fenomeno colpisce soprattutto i siti-vetrina: negozi, attività commerciali, ristoranti, artigiani. Basta farsi un giro sui siti di venditori di mobili, per esempio, per godersi il trionfo della ‘multimedia platform‘ di Adobe. Bisogna prenderne atto: nel 2011 migliaia di aziende italiane di ogni dimensione affidano la loro identità web ad Adobe Flash. Consulenti e agenzie continuano a produrre siti con tecnologie assimilate anni fa. Reticenti all’aggiornamento delle proprie competenze, si accontentano del loro confortante orticello che, tutto sommato, assicura lo stipendio.\nEppure ci sono tante buone ragioni per non ricorrere a Flash:\nNon è sicuro. Probabilmente Flash è l’unico prodotto che fa concorrenza a Microsoft Windows in quanto a numero di security fixes. Non per niente è stato definito il nuovo Windows Vista E’ una tecnologia obsoleta, che si affida pesantemente ai plugin di terze parti (vedi alla voce sicurezza) Rende lenta l’apertura delle pagine web, a meno che non si intervenga con ottimizzazioni ad-hoc Consuma molta, troppa memoria Richiede un forte impegno della CPU Sui dispositivi portatili consuma velocemente la batteria Non è supportato sui dispositivi iOS/Apple (iPhone, iPad) Gira comunque male su buona parte degli altri dispositivi portatili, SmartPhones soprattutto Ha seri problemi di compatibilità e prestazioni su piattaforme Mac/OSX Molti utenti e (soprattutto) aziende bloccano Flash sui loro browsers proprio a causa dei problemi di sicurezza, stabilità e prestazioni I contenuti Flash non sono facili da archiviare. Gli utenti medi hanno grosse difficoltà a salvare copie locali delle pagine. I servizi tipo Internet Archive non riescono a memorizzare il sito Flash è il nemico numero uno dei motori di ricerca. Google, Bing e gli altri hanno da sempre grosse difficoltà ad indicizzarne i contenuti Flash rende problematica, quando non impossibile, l’ottimizzazione ai fini del posizionamento sui motori di ricerca (SEO) E’ un sistema proprietario chiuso E’ vero che ricorrendo a ottimizzazioni e tools dedicati alcune (poche) di queste limitazioni possono essere aggirate. Le prossime release di Flash promettono sviluppi interessanti, tra i quali ottimizzazioni per i dispositivi mobili e riduzione del peso dell’intera infrastruttura.\nConsidera le alternative Non sono necessarie soluzioni esoteriche. Troppo spesso si ricorre a Flash per produrre effetti, transizioni e animazioni realizzabili anche con strumenti consolidati, leggeri e SEO-friendly quali JavaScript, HTML e CSS. In una parola, AJAX. Cose ormai scontate. O forse no, a giudicare da quel che ancora oggi si pubblica in rete. A ben guardare la battaglia tra Apple e Adobe, quella culminata con la]5 con la quale Steve Jobs in persona spiegava i motivi della rinuncia di Apple alla tecnologia Flash, è cosa recente.\nInvestire nel futuro Le versioni più aggiornate dei browsers moderni (Firefox, Chorme, Safari, Opera e l’ormai imminente Internet Explorer 9) supportano ampiamente i nuovi standard HTML5 e CSS3. C’è chi ritiene che la loro certificazione sia troppo lontana e chi al contrario li ha adottati con entusiasmo. Una cosa è certa: questi sono gli standard del futuro. La rete si sta preparando da tempo ed è ricca di risorse e demo interessanti:\nThe Wilderness Downtown, splendida demo delle capacità di HTML5 10 Cool and Useful HTML 5 Tutorials 23 Essential HTML 5 Resources HTML5 Demos and Examples HTML5 Gallery Da un punto di vista professionale vale senz’altro la pena investire fin da ora tempo e risorse nello studio di HTML5 e CSS3. L’avvento di Internet Explorer 9 aumenterà rapidamente il numero di navigatori HTML5-enabled; tanto che l’implementazione di siti di massa con queste tecnologie sarà possibile ben prima di quanto non si immagini.","permalink":"https://nicolaiarocci.com/flash-adobe-e-una-pessima-idea/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eE’ incredibile la quantità di siti che ancora oggi vengono sviluppati con Flash. Il fenomeno colpisce soprattutto i siti-vetrina: negozi, attività commerciali, ristoranti, artigiani. Basta farsi un giro sui siti di venditori di mobili, per esempio, per godersi il trionfo della ‘\u003ca href=\"http://en.wikipedia.org/wiki/Adobe_Flash\"\u003emultimedia platform\u003c/a\u003e‘ di Adobe. Bisogna prenderne atto: nel 2011 migliaia di aziende italiane di ogni dimensione affidano la loro identità web ad Adobe Flash. Consulenti e agenzie continuano a produrre siti con tecnologie assimilate anni fa. Reticenti all’aggiornamento delle proprie competenze, si accontentano del loro confortante orticello che, tutto sommato, assicura lo stipendio.\u003c/p\u003e","title":"Adobe Flash è una Pessima Idea"},{"content":"Qualche giorno ReadWriteWeb ha chiesto ai suoi lettori quali sono i linguaggi di programmazione che pensano di studiare nel 2011. La selezione è piuttosto ampia e include buona parte i linguaggi attorno ai quali c’è fermento questi mesi (tra gli altri Clojure, Go, Erlang, Haskell). Ci si rivolge a programmatori esperti che hanno già maturato una certa esperienza, probabilmente per questo motivo sono esclusi alcuni grandi classici come il linguaggio C (è presente Java).\nQuali sono finora i linguaggi più gettonati?\nPython (14.5%) Ruby (13.8%) Node.js (9.53%) ECMAScript (JavaScript, ActionScript) (8.15%) Scala (8.01%) Python al momento si gode il primo posto anche se Ruby gli soffia sul collo e non sembra intenzionato a mollare l’osso. Al terzo posto, distanziato, l’interessantissimo progetto Node.js. Curiosa la scelta di includerlo nella selezione dato che non è un linguaggio di programmazione in senso stretto. JavaScript si piazza appena fuori dal podio mentre al quinto posto troviamo il primo dei new kids on the block, Scala.\nLinguaggi script alla ribalta E’ presto per trarre conclusioni (il questionario è online da pochi giorni e il sondaggio è ancora in corso) ma balza all’occhio come nelle prime quattro posizioni ci siano linguaggi script non compilati, a conferma di quella che sembra essere la tendenza degli ultimi anni, almeno nel contesto delle startup web e dei giovani programmatori web-oriented che costituisce in buona parte il pubblico di riferimento di un sito come ReadWriteWeb.\nJavaScript è più importante di quanto si pensi Uniti, Node.js e JavaScript balzano in vetta alla classifica. Il linguaggio JavaScript è sottovalutato da molti sviluppatori che si limitano a incollare brevi snippets per la manipolazione del DOM o la convalida di campi di input, ma le esigenze di interattività e reattività indurranno a spostare l’implementazione dal server al client rendendo la conoscenza approfondita del linguaggio JavaScript sempre più determinante.\nPresto dedicherò una serie di articoli a Python e proporrò alcuni approfondimenti su JavaScript. Rimani sintonizzato!\n","permalink":"https://nicolaiarocci.com/python-e-il-linguaggio-del-2011/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003eQualche giorno \u003ca href=\"http://www.readwriteweb.com/hack/2010/12/hacker-poll-programming-languages-2011.php\"\u003eReadWriteWeb\u003c/a\u003e ha chiesto ai suoi lettori quali sono i linguaggi di programmazione che pensano di studiare nel 2011. La selezione è piuttosto ampia e include buona parte i linguaggi attorno ai quali c’è fermento questi mesi (tra gli altri \u003ca href=\"http://clojure.org/\"\u003eClojure\u003c/a\u003e, \u003ca href=\"http://golang.org/\"\u003eGo\u003c/a\u003e, \u003ca href=\"http://www.erlang.org/\"\u003eErlang\u003c/a\u003e, \u003ca href=\"http://www.haskell.org/haskellwiki/Haskell\"\u003eHaskell\u003c/a\u003e). Ci si rivolge a programmatori esperti che hanno già maturato una certa esperienza, probabilmente per questo motivo sono esclusi alcuni grandi classici come il linguaggio C (è presente Java).\u003c/p\u003e","title":"E’ Python il linguaggio del 2011"},{"content":"Una delle applicazioni su cui sto lavorando in questo periodo manda decine di emails al giorno, ognuna contenente almeno un paio di links (URL). Questi link sono molto lunghi perché oltre all’indirizzo della pagina da aprire contengono una o più query strings. In generale, per tante buone ragioni, le URL lunghe non sono mai una buona idea; ancor meno lo sono se devono comparire in un messaggio email. Gli algoritmi di word wrapping dei client di posta elettronica vanno in crisi quando sono costretti a inserire un ritorno di carrello nel bel mezzo della URL. Come biasimarli?\nCi sono poi certi sistemi di web mail (quello di Libero, per non far nomi) che semplicemente non sono capaci di riprodurre correttamente un link o se lo fanno non attivano il link per ragioni di sicurezza, lasciando così al destinatario della mail il compito di copiare e incollare l’intera URL nel browser. Operazione non sempre banale per l’utente medio, soprattutto quando (guarda caso!) il testo da copiare e incollare è lunghissimo.\nSi potrebbe risolvere banalmente ricorrendo agli anchor tag HTML ma nel mio caso questa strada non è praticabile: i messaggi devono essere in puro testo. Non solo, questa soluzione non risolverebbe comunque il problema dei web mail client che non si fidano dei miei messaggi. Creare a priori URL brevi non è una opzione per ragioni di legacy (il sito non l’ho creato io!). Come fare allora?\nChiedere aiuto a un servizio URL Shortener Gli URL shortener sono servizi molto usati in ambito social networking e non solo. Data una certa URL di qualunque lunghezza ne restituiscono una equivalente molto più breve. Pioniere in questo campo è stato TinyURL ma oggigiorno il servizio più diffuso e conosciuto è senz’altro Bit.ly, il quale ha l’indubbio vantaggio di offrire una REST API ricca, robusta e ben documentata. Questa libreria gratuita consente ai programmatori indipendenti (noi) l’implementazione di servizi di URL shortening nelle proprie applicazioni.\nEcco dunque ShortenUrl, una semplice funzione ASP.NET che restituisce una URL breve a partire da una URL di qualunque lunghezza passata come parametro. Nel caso la chiamata alla API fallisca la funzione restituirà semplicemente una stringa vuota.\nLa gran parte del lavoro è fatto da una sola linea di codice (ok, avrei potuto suddividerla in due o tre linee per amor di chiarezza, te lo concedo). La richiesta REST al servizio è eseguita da una istanza della classe HttpWebRequest. Il metodo Shorten può restituire risultati in formato JSON, XML o puro testo. Per semplicità ho scelto il formato testo. A seconda delle necessità potresti ricorrere al bellissimo formato JSON o al logorroico XML, la documentazione ufficiale contiene esempi molto chiari anche per questi formati.\nSe non disponi di un account Bit.ly dovrai registrarti (è gratis). Una volta creato l’account potrai recuperare facilmente la tua API Key personale, indispensabile per poter effettuare chiamate ai metodi della libreria.\n","permalink":"https://nicolaiarocci.com/accorciare-url-usando-bit-ly-via-asp-net/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eUna delle applicazioni su cui sto lavorando in questo periodo manda decine di emails al giorno, ognuna contenente almeno un paio di links (URL). Questi link sono molto lunghi perché oltre all’indirizzo della pagina da aprire contengono una o più \u003ca href=\"http://en.wikipedia.org/wiki/Query_string\"\u003equery strings\u003c/a\u003e. In generale, per tante buone ragioni, le URL lunghe non sono mai una buona idea; ancor meno lo sono se  devono comparire in un messaggio email. Gli algoritmi di \u003ca href=\"http://en.wikipedia.org/wiki/Word_wrap\"\u003eword wrapping\u003c/a\u003e dei client di posta elettronica vanno in crisi quando sono costretti a inserire un ritorno di carrello nel bel mezzo della URL. Come biasimarli?\u003c/p\u003e","title":"Come accorciare links e URL usando le API di Bit.ly via ASP.NET"},{"content":"Un articolo sul Somasegar’s Weblog annuncia oggi il rilascio imminente di un nuovo modello di programmazione asincrona per C# and VB:\nToday, we are unveiling significant language and framework enhancements in C# and Visual Basic that enable developers to harness asynchrony, letting them retain the control flow from their synchronous code while developing responsive user interfaces and scalable web applications with greater ease. This CTP delivers a lightweight asynchronous development experience as close to the standard synchronous paradigms as possible, while providing an easy on-ramp to the world of concurrency\nLo stesso Somasegar riconosce che finora sviluppare applicazioni asincrone complesse con la piattaforma .NET non è stato facile. Tempo fa l’ho sperimentato in prima persona. Lavoravo su Amica Prodigy Backup, una applicazione di backup remoto.\nIl programma invia files di grandi dimensioni al servizio di cloud storage S3 aggiornando l’interfaccia utente con lo stato del trasferimento e consentendo nel frattempo di operare liberamente con l’interfaccia. Devo ammettere che si è trattata di una sfida molto accattivante. Lavoravo per la prima volta su sistemi cloud e c’era molto da imparare. La parte più difficile fu naturalmente la gestione dei processi asincroni sul client, che era una applicazione WinForm scritta su .NET Framework.\nUna rapida occhiata al codice di esempio presente nell’articolo di Somasegar è meglio di mille parole. ‘The Old Way’ vs ‘The New Way’ ha un vincitore evidente, ed è la New Way. Mi piace molto il concetto della nuova keyword Await, è una soluzione così elegante! Come sempre in questi casi occorrerà scendere nei dettagli per verificare l’affidabilità di questa nuova soluzione.\nLa CTP è già disponibile per il download, attualmente solo per le versioni inglesi di Visual Studio 2010.\n","permalink":"https://nicolaiarocci.com/programmazione-asincrona/","summary":"\u003cp\u003eUn articolo sul \u003c!-- raw HTML omitted --\u003eSomasegar’s Weblog\u003c!-- raw HTML omitted --\u003e annuncia oggi il rilascio imminente di un nuovo modello di programmazione asincrona per C# and VB:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eToday, we are unveiling significant language and framework enhancements in C# and Visual Basic that enable developers to harness asynchrony, letting them retain the control flow from their synchronous code while developing responsive user interfaces and scalable web applications with greater ease.   This CTP delivers a lightweight asynchronous development experience as close to the standard synchronous paradigms as possible, while providing an easy on-ramp to the world of concurrency\u003c/p\u003e","title":"Programmazione Asincrona per C# e VB"},{"content":"La ASP.NET Developer Guidance Map è una eccellente risorsa sia per il programmatore alle prime armi che per il veterano. Fornisce una ottima selezione di risorse web catalogate nelle seguenti categorie: Primi Passi, Architettura e Design, Codice di Esempio, Come Fare, Filmati, Addestramento.\nPeccato sia disponibile solo in formato PDF, qualcuno dovrebbe approntare una pagina wiki o qualcosa di simile che riproduca questi contenuti.\n","permalink":"https://nicolaiarocci.com/guida-di-riferimento-per-asp-net/","summary":"\u003cp\u003eLa  \u003c!-- raw HTML omitted --\u003eASP.NET Developer Guidance Map\u003c!-- raw HTML omitted --\u003e è una eccellente risorsa sia per il programmatore alle prime armi che per il veterano. Fornisce una ottima selezione di  risorse web catalogate nelle seguenti categorie: Primi Passi, Architettura e Design, Codice di Esempio, Come Fare, Filmati, Addestramento.\u003c/p\u003e\n\u003cp\u003ePeccato sia disponibile solo in formato PDF, qualcuno dovrebbe approntare una pagina wiki o qualcosa di simile che riproduca questi contenuti.\u003c/p\u003e","title":"Una ottima guida di riferimento per lo sviluppatore ASP.NET"}]